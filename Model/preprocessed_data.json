{"id":{"0":2696,"1":1,"2":2,"3":4,"4":6,"5":7,"6":9,"7":10,"8":11,"9":12,"10":13,"11":14,"12":15,"13":16,"14":17,"15":18,"16":19,"17":20,"18":21,"19":22,"20":23,"21":24,"22":25,"23":26,"24":27,"25":28,"26":29,"27":30,"28":31,"29":32,"30":33,"31":34,"32":35,"33":36,"34":37,"35":38,"36":39,"37":40,"38":41,"39":42,"40":43,"41":44,"42":45,"43":46,"44":47,"45":48,"46":49,"47":50,"48":51,"49":52,"50":53,"51":54,"52":55,"53":56,"54":57,"55":58,"56":60,"57":61,"58":62,"59":63,"60":64,"61":65,"62":67,"63":68,"64":69,"65":70,"66":71,"67":72,"68":74,"69":75,"70":76,"71":77,"72":78,"73":79,"74":80,"75":81,"76":82,"77":83,"78":84,"79":85,"80":86,"81":87,"82":88,"83":89,"84":90,"85":91,"86":92,"87":94,"88":95,"89":96,"90":97,"91":98,"92":99,"93":100,"94":102,"95":103,"96":104,"97":105,"98":106,"99":108,"100":109,"101":110,"102":111,"103":112,"104":113,"105":114,"106":115,"107":116,"108":117,"109":118,"110":119,"111":120,"112":121,"113":122,"114":123,"115":124,"116":125,"117":126,"118":127,"119":128,"120":129,"121":130,"122":131,"123":133,"124":134,"125":135,"126":136,"127":137,"128":138,"129":139,"130":140,"131":141,"132":142,"133":143,"134":144,"135":145,"136":146,"137":147,"138":148,"139":149,"140":150,"141":151,"142":152,"143":153,"144":154,"145":155,"146":160,"147":162,"148":164,"149":166,"150":167,"151":168,"152":169,"153":171,"154":172,"155":174,"156":175,"157":176,"158":177,"159":178,"160":179,"161":180,"162":181,"163":182,"164":183,"165":184,"166":185,"167":187,"168":188,"169":189,"170":191,"171":192,"172":193,"173":194,"174":195,"175":196,"176":197,"177":198,"178":199,"179":200,"180":201,"181":202,"182":203,"183":204,"184":205,"185":206,"186":207,"187":208,"188":209,"189":210,"190":211,"191":212,"192":213,"193":214,"194":215,"195":216,"196":217,"197":218,"198":219,"199":220,"200":221,"201":222,"202":225,"203":226,"204":227,"205":228,"206":229,"207":230,"208":231,"209":232,"210":233,"211":234,"212":238,"213":240,"214":241,"215":242,"216":257,"217":258,"218":260,"219":262,"220":264,"221":268,"222":273,"223":274,"224":275,"225":278,"226":279,"227":282,"228":283,"229":284,"230":287,"231":289,"232":290,"233":292,"234":295,"235":297,"236":299,"237":300,"238":301,"239":304,"240":306,"241":307,"242":309,"243":310,"244":312,"245":315,"246":316,"247":318,"248":319,"249":321,"250":322,"251":324,"252":326,"253":327,"254":328,"255":329,"256":330,"257":331,"258":332,"259":334,"260":335,"261":336,"262":337,"263":338,"264":341,"265":342,"266":343,"267":344,"268":345,"269":349,"270":350,"271":352,"272":354,"273":355,"274":357,"275":363,"276":365,"277":367,"278":368,"279":371,"280":372,"281":373,"282":374,"283":375,"284":376,"285":377,"286":380,"287":381,"288":382,"289":383,"290":384,"291":385,"292":386,"293":387,"294":388,"295":389,"296":390,"297":391,"298":392,"299":394,"300":395,"301":396,"302":397,"303":398,"304":399,"305":400,"306":401,"307":403,"308":404,"309":405,"310":406,"311":407,"312":409,"313":410,"314":412,"315":413,"316":414,"317":415,"318":416,"319":417,"320":419,"321":423,"322":424,"323":427,"324":429,"325":432,"326":433,"327":434,"328":435,"329":436,"330":437,"331":438,"332":440,"333":441,"334":442,"335":443,"336":445,"337":446,"338":447,"339":448,"340":450,"341":451,"342":452,"343":453,"344":454,"345":456,"346":457,"347":458,"348":459,"349":460,"350":461,"351":462,"352":463,"353":464,"354":466,"355":468,"356":470,"357":472,"358":473,"359":474,"360":475,"361":476,"362":477,"363":478,"364":479,"365":480,"366":481,"367":482,"368":483,"369":485,"370":486,"371":488,"372":491,"373":492,"374":493,"375":494,"376":495,"377":496,"378":497,"379":498,"380":500,"381":502,"382":503,"383":504,"384":506,"385":507,"386":508,"387":509,"388":511,"389":513,"390":514,"391":515,"392":516,"393":517,"394":518,"395":519,"396":520,"397":521,"398":522,"399":523,"400":524,"401":525,"402":528,"403":529,"404":530,"405":532,"406":535,"407":537,"408":538,"409":539,"410":541,"411":542,"412":543,"413":546,"414":547,"415":550,"416":551,"417":552,"418":553,"419":554,"420":556,"421":557,"422":558,"423":559,"424":560,"425":561,"426":563,"427":564,"428":566,"429":567,"430":570,"431":572,"432":575,"433":576,"434":577,"435":581,"436":583,"437":584,"438":585,"439":586,"440":587,"441":589,"442":590,"443":591,"444":592,"445":593,"446":594,"447":595,"448":596,"449":598,"450":599,"451":600,"452":601,"453":602,"454":605,"455":606,"456":607,"457":608,"458":609,"459":610,"460":611,"461":617,"462":619,"463":620,"464":621,"465":622,"466":623,"467":624,"468":626,"469":627,"470":628,"471":629,"472":630,"473":632,"474":633,"475":636,"476":637,"477":638,"478":639,"479":640,"480":641,"481":643,"482":645,"483":646,"484":647,"485":648,"486":649,"487":650,"488":653,"489":654,"490":655,"491":657,"492":658,"493":659,"494":661,"495":662,"496":664,"497":665,"498":667,"499":668,"500":669,"501":671,"502":672,"503":673,"504":674,"505":675,"506":676,"507":677,"508":679,"509":680,"510":682,"511":684,"512":685,"513":686,"514":687,"515":688,"516":689,"517":690,"518":691,"519":693,"520":695,"521":696,"522":697,"523":698,"524":699,"525":700,"526":701,"527":703,"528":704,"529":705,"530":706,"531":707,"532":709,"533":710,"534":712,"535":713,"536":714,"537":715,"538":717,"539":718,"540":719,"541":720,"542":721,"543":722,"544":724,"545":725,"546":726,"547":728,"548":729,"549":730,"550":731,"551":733,"552":735,"553":736,"554":738,"555":739,"556":740,"557":741,"558":743,"559":744,"560":747,"561":748,"562":749,"563":752,"564":753,"565":754,"566":756,"567":757,"568":761,"569":763,"570":764,"571":765,"572":766,"573":767,"574":768,"575":769,"576":770,"577":771,"578":773,"579":775,"580":777,"581":778,"582":779,"583":780,"584":781,"585":782,"586":783,"587":784,"588":785,"589":786,"590":787,"591":788,"592":789,"593":790,"594":791,"595":792,"596":793,"597":794,"598":795,"599":796,"600":797,"601":798,"602":799,"603":801,"604":802,"605":803,"606":804,"607":806,"608":807,"609":808,"610":809,"611":810,"612":811,"613":812,"614":813,"615":814,"616":815,"617":816,"618":817,"619":818,"620":819,"621":820,"622":821,"623":822,"624":823,"625":824,"626":825,"627":827,"628":828,"629":829,"630":830,"631":831,"632":832,"633":833,"634":834,"635":835,"636":836,"637":837,"638":838,"639":840,"640":842,"641":843,"642":844,"643":845,"644":846,"645":847,"646":848,"647":849,"648":850,"649":851,"650":852,"651":853,"652":854,"653":855,"654":856,"655":857,"656":858,"657":859,"658":860,"659":861,"660":862,"661":863,"662":864,"663":865,"664":866,"665":867,"666":869,"667":870,"668":872,"669":873,"670":874,"671":875,"672":876,"673":877,"674":878,"675":879,"676":880,"677":881,"678":882,"679":883,"680":884,"681":885,"682":886,"683":888,"684":889,"685":890,"686":891,"687":892,"688":893,"689":894,"690":895,"691":896,"692":898,"693":899,"694":900,"695":901,"696":902,"697":903,"698":904,"699":905,"700":906,"701":907,"702":908,"703":910,"704":911,"705":912,"706":913,"707":914,"708":915,"709":916,"710":917,"711":918,"712":920,"713":921,"714":922,"715":923,"716":924,"717":925,"718":926,"719":927,"720":928,"721":929,"722":930,"723":931,"724":932,"725":933,"726":934,"727":935,"728":936,"729":937,"730":938,"731":939,"732":940,"733":941,"734":942,"735":943,"736":944,"737":945,"738":946,"739":947,"740":948,"741":949,"742":950,"743":951,"744":953,"745":956,"746":957,"747":958,"748":959,"749":961,"750":962,"751":963,"752":964,"753":965,"754":966,"755":967,"756":968,"757":969,"758":970,"759":971,"760":972,"761":973,"762":974,"763":975,"764":977,"765":978,"766":979,"767":980,"768":981,"769":982,"770":983,"771":984,"772":985,"773":988,"774":989,"775":990,"776":991,"777":992,"778":993,"779":994,"780":995,"781":996,"782":997,"783":998,"784":1000,"785":1001,"786":1002,"787":1003,"788":1004,"789":1005,"790":1006,"791":1007,"792":1008,"793":1009,"794":1010,"795":1011,"796":1012,"797":1013,"798":1014,"799":1015,"800":1016,"801":1017,"802":1018,"803":1019,"804":1020,"805":1021,"806":1022,"807":1023,"808":1024,"809":1025,"810":1026,"811":1027,"812":1028,"813":1029,"814":1030,"815":1031,"816":1032,"817":1033,"818":1034,"819":1035,"820":1036,"821":1037,"822":1038,"823":1039,"824":1040,"825":1041,"826":1042,"827":1043,"828":1044,"829":1045,"830":1046,"831":1047,"832":1048,"833":1049,"834":1050,"835":1052,"836":1053,"837":1054,"838":1061,"839":1068,"840":1070,"841":1071,"842":1072,"843":1073,"844":1074,"845":1078,"846":1079,"847":1080,"848":1081,"849":1084,"850":1089,"851":1090,"852":1091,"853":1092,"854":1093,"855":1094,"856":1095,"857":1096,"858":1103,"859":1104,"860":1105,"861":1106,"862":1108,"863":1109,"864":1110,"865":1111,"866":1114,"867":1116,"868":1117,"869":1122,"870":1123,"871":1124,"872":1125,"873":1128,"874":1129,"875":1130,"876":1131,"877":1137,"878":1138,"879":1139,"880":1140,"881":1141,"882":1143,"883":1144,"884":1145,"885":1146,"886":1147,"887":1148,"888":1154,"889":1155,"890":1157,"891":1158,"892":1160,"893":1161,"894":1163,"895":1164,"896":1169,"897":1170,"898":1171,"899":1175,"900":1177,"901":1178,"902":1179,"903":1184,"904":1185,"905":1186,"906":1187,"907":1189,"908":1191,"909":1193,"910":1195,"911":1200,"912":1201,"913":1202,"914":1203,"915":1204,"916":1206,"917":1207,"918":1208,"919":1209,"920":1210,"921":1211,"922":1217,"923":1218,"924":1219,"925":1220,"926":1221,"927":1222,"928":1223,"929":1224,"930":1226,"931":1227,"932":1232,"933":1233,"934":1234,"935":1237,"936":1238,"937":1239,"938":1240,"939":1247,"940":1248,"941":1249,"942":1250,"943":1251,"944":1252,"945":1253,"946":1254,"947":1255,"948":1260,"949":1261,"950":1262,"951":1263,"952":1266,"953":1267,"954":1268,"955":1269,"956":1275,"957":1277,"958":1278,"959":1280,"960":1281,"961":1282,"962":1284,"963":1286,"964":1287,"965":1288,"966":1289,"967":1290,"968":1291,"969":1292,"970":1293,"971":1295,"972":1296,"973":1297,"974":1298,"975":1299,"976":1300,"977":1301,"978":1302,"979":1304,"980":1305,"981":1306,"982":1307,"983":1309,"984":1310,"985":1311,"986":1312,"987":1313,"988":1314,"989":1315,"990":1316,"991":1317,"992":1318,"993":1319,"994":1321,"995":1323,"996":1324,"997":1325,"998":1326,"999":1327,"1000":1328,"1001":1329,"1002":1330,"1003":1331,"1004":1332,"1005":1333,"1006":1334,"1007":1335,"1008":1337,"1009":1338,"1010":1339,"1011":1340,"1012":1341,"1013":1342,"1014":1343,"1015":1344,"1016":1345,"1017":1346,"1018":1347,"1019":1348,"1020":1349,"1021":1351,"1022":1352,"1023":1353,"1024":1354,"1025":1356,"1026":1358,"1027":1359,"1028":1360,"1029":1361,"1030":1362,"1031":1363,"1032":1366,"1033":1367,"1034":1368,"1035":1370,"1036":1371,"1037":1372,"1038":1373,"1039":1374,"1040":1375,"1041":1376,"1042":1377,"1043":1378,"1044":1379,"1045":1380,"1046":1381,"1047":1385,"1048":1386,"1049":1387,"1050":1388,"1051":1389,"1052":1390,"1053":1391,"1054":1392,"1055":1393,"1056":1394,"1057":1395,"1058":1396,"1059":1397,"1060":1401,"1061":1402,"1062":1403,"1063":1405,"1064":1406,"1065":1407,"1066":1408,"1067":1409,"1068":1411,"1069":1413,"1070":1414,"1071":1415,"1072":1416,"1073":1417,"1074":1418,"1075":1419,"1076":1420,"1077":1423,"1078":1424,"1079":1425,"1080":1431,"1081":1432,"1082":1433,"1083":1434,"1084":1436,"1085":1437,"1086":1438,"1087":1439,"1088":1441,"1089":1442,"1090":1443,"1091":1444,"1092":1447,"1093":1448,"1094":1449,"1095":1450,"1096":1453,"1097":1455,"1098":1456,"1099":1457,"1100":1458,"1101":1460,"1102":1461,"1103":1464,"1104":1465,"1105":1466,"1106":1467,"1107":1470,"1108":1471,"1109":1472,"1110":1473,"1111":1475,"1112":1476,"1113":1477,"1114":1480,"1115":1481,"1116":1482,"1117":1483,"1118":1484,"1119":1486,"1120":1487,"1121":1488,"1122":1489,"1123":1491,"1124":1492,"1125":1493,"1126":1494,"1127":1496,"1128":1497,"1129":1498,"1130":1499,"1131":1503,"1132":1504,"1133":1505,"1134":1507,"1135":1508,"1136":1509,"1137":1510,"1138":1512,"1139":1513,"1140":1514,"1141":1515,"1142":1517,"1143":1518,"1144":1519,"1145":1520,"1146":1521,"1147":1523,"1148":1524,"1149":1525,"1150":1526,"1151":1527,"1152":1528,"1153":1529,"1154":1530,"1155":1531,"1156":1534,"1157":1535,"1158":1536,"1159":1537,"1160":1539,"1161":1540,"1162":1541,"1163":1542,"1164":1544,"1165":1545,"1166":1546,"1167":1547,"1168":1550,"1169":1552,"1170":1553,"1171":1557,"1172":1559,"1173":1560,"1174":1561,"1175":1562,"1176":1563,"1177":1566,"1178":1567,"1179":1568,"1180":1569,"1181":1572,"1182":1573,"1183":1574,"1184":1575,"1185":1576,"1186":1577,"1187":1578,"1188":1579,"1189":1581,"1190":1582,"1191":1583,"1192":1584,"1193":1587,"1194":1588,"1195":1589,"1196":1590,"1197":1591,"1198":1592,"1199":1593,"1200":1594,"1201":1595,"1202":1598,"1203":1599,"1204":1600,"1205":1601,"1206":1603,"1207":1604,"1208":1605,"1209":1606,"1210":1608,"1211":1609,"1212":1610,"1213":1611,"1214":1614,"1215":1615,"1216":1616,"1217":1617,"1218":1619,"1219":1620,"1220":1621,"1221":1622,"1222":1624,"1223":1625,"1224":1626,"1225":1629,"1226":1630,"1227":1631,"1228":1632,"1229":1633,"1230":1636,"1231":1637,"1232":1638,"1233":1640,"1234":1641,"1235":1642,"1236":1643,"1237":1646,"1238":1647,"1239":1649,"1240":1652,"1241":1653,"1242":1654,"1243":1655,"1244":1656,"1245":1657,"1246":1658,"1247":1659,"1248":1661,"1249":1662,"1250":1663,"1251":1664,"1252":1665,"1253":1667,"1254":1668,"1255":1669,"1256":1670,"1257":1671,"1258":1672,"1259":1673,"1260":1674,"1261":1675,"1262":1678,"1263":1679,"1264":1680,"1265":1681,"1266":1683,"1267":1684,"1268":1685,"1269":1686,"1270":1687,"1271":1688,"1272":1689,"1273":1690,"1274":1691,"1275":1693,"1276":1694,"1277":1695,"1278":1696,"1279":1700,"1280":1701,"1281":1702,"1282":1703,"1283":1704,"1284":1705,"1285":1706,"1286":1707,"1287":1710,"1288":1711,"1289":1712,"1290":1713,"1291":1716,"1292":1717,"1293":1718,"1294":1719,"1295":1721,"1296":1722,"1297":1723,"1298":1725,"1299":1726,"1300":1727,"1301":1728,"1302":1729,"1303":1731,"1304":1732,"1305":1733,"1306":1734,"1307":1735,"1308":1736,"1309":1737,"1310":1738,"1311":1739,"1312":1741,"1313":1742,"1314":1743,"1315":1744,"1316":1745,"1317":1748,"1318":1749,"1319":1750,"1320":1752,"1321":1753,"1322":1754,"1323":1755,"1324":1757,"1325":1758,"1326":1759,"1327":1761,"1328":1763,"1329":1764,"1330":1765,"1331":1766,"1332":1768,"1333":1769,"1334":1770,"1335":1771,"1336":1773,"1337":1774,"1338":1775,"1339":1776,"1340":1779,"1341":1780,"1342":1782,"1343":1785,"1344":1786,"1345":1787,"1346":1789,"1347":1790,"1348":1791,"1349":1792,"1350":1793,"1351":1795,"1352":1796,"1353":1797,"1354":1798,"1355":1799,"1356":1800,"1357":1802,"1358":1806,"1359":1807,"1360":1808,"1361":1812,"1362":1813,"1363":1814,"1364":1815,"1365":1816,"1366":1817,"1367":1818,"1368":1819,"1369":1822,"1370":1823,"1371":1824,"1372":1825,"1373":1827,"1374":1828,"1375":1829,"1376":1830,"1377":1832,"1378":1833,"1379":1834,"1380":1835,"1381":1837,"1382":1838,"1383":1839,"1384":1840,"1385":1844,"1386":1845,"1387":1846,"1388":1847,"1389":1848,"1390":1849,"1391":1850,"1392":1851,"1393":1854,"1394":1855,"1395":1856,"1396":1857,"1397":1859,"1398":1860,"1399":1862,"1400":1863,"1401":1864,"1402":1865,"1403":1866,"1404":1869,"1405":1870,"1406":1871,"1407":1872,"1408":1873,"1409":1876,"1410":1877,"1411":1878,"1412":1879,"1413":1880,"1414":1881,"1415":1882,"1416":1883,"1417":1884,"1418":1886,"1419":1887,"1420":1888,"1421":1889,"1422":1893,"1423":1894,"1424":1895,"1425":1896,"1426":1897,"1427":1899,"1428":1900,"1429":1901,"1430":1903,"1431":1904,"1432":1905,"1433":1906,"1434":1907,"1435":1909,"1436":1910,"1437":1911,"1438":1912,"1439":1913,"1440":1914,"1441":1916,"1442":1920,"1443":1921,"1444":1922,"1445":1923,"1446":1925,"1447":1926,"1448":1928,"1449":1929,"1450":1930,"1451":1931,"1452":1934,"1453":1935,"1454":1936,"1455":1937,"1456":1938,"1457":1941,"1458":1942,"1459":1943,"1460":1944,"1461":1945,"1462":1946,"1463":1947,"1464":1948,"1465":1954,"1466":1955,"1467":1957,"1468":1958,"1469":1959,"1470":1960,"1471":1961,"1472":1962,"1473":1963,"1474":1964,"1475":1965,"1476":1967,"1477":1968,"1478":1969,"1479":1970,"1480":1971,"1481":1974,"1482":1976,"1483":1977,"1484":1978,"1485":1979,"1486":1980,"1487":1981,"1488":1982,"1489":1984,"1490":1985,"1491":1986,"1492":1987,"1493":1991,"1494":1992,"1495":1993,"1496":1994,"1497":1995,"1498":1996,"1499":1997,"1500":1998,"1501":2000,"1502":2002,"1503":2003,"1504":2006,"1505":2007,"1506":2009,"1507":2011,"1508":2012,"1509":2013,"1510":2014,"1511":2016,"1512":2017,"1513":2018,"1514":2019,"1515":2023,"1516":2024,"1517":2025,"1518":2027,"1519":2028,"1520":2029,"1521":2030,"1522":2032,"1523":2034,"1524":2037,"1525":2038,"1526":2039,"1527":2040,"1528":2042,"1529":2043,"1530":2044,"1531":2045,"1532":2047,"1533":2048,"1534":2049,"1535":2050,"1536":2053,"1537":2054,"1538":2055,"1539":2056,"1540":2057,"1541":2058,"1542":2059,"1543":2060,"1544":2062,"1545":2063,"1546":2064,"1547":2065,"1548":2068,"1549":2069,"1550":2070,"1551":2071,"1552":2073,"1553":2074,"1554":2075,"1555":2076,"1556":2078,"1557":2079,"1558":2080,"1559":2081,"1560":2085,"1561":2086,"1562":2087,"1563":2088,"1564":2089,"1565":2091,"1566":2092,"1567":2094,"1568":2095,"1569":2096,"1570":2097,"1571":2099,"1572":2100,"1573":2101,"1574":2102,"1575":2103,"1576":2104,"1577":2105,"1578":2106,"1579":2108,"1580":2109,"1581":2110,"1582":2111,"1583":2114,"1584":2115,"1585":2116,"1586":2117,"1587":2119,"1588":2120,"1589":2121,"1590":2122,"1591":2124,"1592":2125,"1593":2126,"1594":2127,"1595":2129,"1596":2130,"1597":2131,"1598":2132,"1599":2133,"1600":2134,"1601":2135,"1602":2138,"1603":2139,"1604":2141,"1605":2144,"1606":2145,"1607":2146,"1608":2147,"1609":2148,"1610":2149,"1611":2150,"1612":2154,"1613":2155,"1614":2156,"1615":2157,"1616":2160,"1617":2161,"1618":2162,"1619":2163,"1620":2164,"1621":2165,"1622":2166,"1623":2167,"1624":2169,"1625":2170,"1626":2171,"1627":2176,"1628":2177,"1629":2178,"1630":2179,"1631":2180,"1632":2181,"1633":2182,"1634":2183,"1635":2185,"1636":2186,"1637":2187,"1638":2188,"1639":2190,"1640":2191,"1641":2192,"1642":2193,"1643":2194,"1644":2196,"1645":2197,"1646":2200,"1647":2201,"1648":2202,"1649":2203,"1650":2206,"1651":2207,"1652":2208,"1653":2209,"1654":2210,"1655":2211,"1656":2212,"1657":2213,"1658":2215,"1659":2217,"1660":2218,"1661":2220,"1662":2222,"1663":2223,"1664":2224,"1665":2225,"1666":2226,"1667":2227,"1668":2231,"1669":2232,"1670":2233,"1671":2234,"1672":2235,"1673":2236,"1674":2239,"1675":2240,"1676":2241,"1677":2242,"1678":2243,"1679":2244,"1680":2245,"1681":2246,"1682":2248,"1683":2249,"1684":2250,"1685":2251,"1686":2255,"1687":2256,"1688":2257,"1689":2258,"1690":2259,"1691":2260,"1692":2261,"1693":2262,"1694":2264,"1695":2266,"1696":2267,"1697":2269,"1698":2271,"1699":2272,"1700":2273,"1701":2274,"1702":2275,"1703":2276,"1704":2279,"1705":2280,"1706":2281,"1707":2283,"1708":2284,"1709":2285,"1710":2286,"1711":2287,"1712":2288,"1713":2289,"1714":2290,"1715":2294,"1716":2295,"1717":2296,"1718":2299,"1719":2300,"1720":2302,"1721":2303,"1722":2304,"1723":2305,"1724":2306,"1725":2310,"1726":2311,"1727":2312,"1728":2315,"1729":2317,"1730":2318,"1731":2319,"1732":2320,"1733":2321,"1734":2322,"1735":2325,"1736":2327,"1737":2328,"1738":2331,"1739":2332,"1740":2333,"1741":2334,"1742":2335,"1743":2336,"1744":2337,"1745":2338,"1746":2341,"1747":2342,"1748":2344,"1749":2347,"1750":2348,"1751":2349,"1752":2350,"1753":2352,"1754":2353,"1755":2354,"1756":2356,"1757":2357,"1758":2358,"1759":2359,"1760":2360,"1761":2363,"1762":2364,"1763":2365,"1764":2367,"1765":2368,"1766":2369,"1767":2370,"1768":2373,"1769":2374,"1770":2375,"1771":2376,"1772":2379,"1773":2380,"1774":2381,"1775":2383,"1776":2384,"1777":2385,"1778":2386,"1779":2389,"1780":2390,"1781":2391,"1782":2392,"1783":2395,"1784":2396,"1785":2397,"1786":2398,"1787":2399,"1788":2400,"1789":2402,"1790":2405,"1791":2406,"1792":2407,"1793":2409,"1794":2410,"1795":2411,"1796":2412,"1797":2413,"1798":2414,"1799":2415,"1800":2416,"1801":2418,"1802":2419,"1803":2420,"1804":2421,"1805":2423,"1806":2424,"1807":2425,"1808":2426,"1809":2427,"1810":2428,"1811":2429,"1812":2430,"1813":2432,"1814":2433,"1815":2434,"1816":2435,"1817":2438,"1818":2439,"1819":2440,"1820":2441,"1821":2442,"1822":2443,"1823":2444,"1824":2446,"1825":2447,"1826":2448,"1827":2449,"1828":2451,"1829":2452,"1830":2453,"1831":2454,"1832":2455,"1833":2456,"1834":2457,"1835":2458,"1836":2460,"1837":2461,"1838":2462,"1839":2463,"1840":2465,"1841":2466,"1842":2467,"1843":2469,"1844":2470,"1845":2471,"1846":2472,"1847":2475,"1848":2476,"1849":2477,"1850":2478,"1851":2481,"1852":2482,"1853":2484,"1854":2485,"1855":2486,"1856":2487,"1857":2488,"1858":2490,"1859":2491,"1860":2493,"1861":2496,"1862":2497,"1863":2498,"1864":2499,"1865":2500,"1866":2501,"1867":2502,"1868":2503,"1869":2506,"1870":2507,"1871":2508,"1872":2509,"1873":2511,"1874":2512,"1875":2513,"1876":2514,"1877":2515,"1878":2516,"1879":2517,"1880":2518,"1881":2520,"1882":2521,"1883":2522,"1884":2523,"1885":2525,"1886":2526,"1887":2527,"1888":2528,"1889":2529,"1890":2530,"1891":2531,"1892":2532,"1893":2535,"1894":2536,"1895":2537,"1896":2538,"1897":2540,"1898":2541,"1899":2542,"1900":2543,"1901":2544,"1902":2545,"1903":2546,"1904":2547,"1905":2549,"1906":2550,"1907":2551,"1908":2552,"1909":2553,"1910":2554,"1911":2555,"1912":2556,"1913":2558,"1914":2559,"1915":2560,"1916":2561,"1917":2562,"1918":2563,"1919":2564,"1920":2565,"1921":2566,"1922":2567,"1923":2568,"1924":2569,"1925":2570,"1926":2571,"1927":2572,"1928":2573,"1929":2574,"1930":2575,"1931":2576,"1932":2577,"1933":2578,"1934":2579,"1935":2580,"1936":2581,"1937":2582,"1938":2583,"1939":2584,"1940":2585,"1941":2586,"1942":2587,"1943":2588,"1944":2589,"1945":2591,"1946":2592,"1947":2593,"1948":2594,"1949":2595,"1950":2596,"1951":2597,"1952":2600,"1953":2602,"1954":2603,"1955":2605,"1956":2608,"1957":2609,"1958":2610,"1959":2611,"1960":2612,"1961":2615,"1962":2617,"1963":2618,"1964":2619,"1965":2620,"1966":2621,"1967":2622,"1968":2623,"1969":2624,"1970":2625,"1971":2626,"1972":2627,"1973":2629,"1974":2630,"1975":2631,"1976":2634,"1977":2635,"1978":2637,"1979":2639,"1980":2640,"1981":2641,"1982":2642,"1983":2643,"1984":2644,"1985":2645,"1986":2646,"1987":2648,"1988":2650,"1989":2651,"1990":2652,"1991":2653,"1992":2654,"1993":2656,"1994":2657,"1995":2658,"1996":2659,"1997":2660,"1998":2661,"1999":2662,"2000":2663,"2001":2665,"2002":2666,"2003":2667,"2004":2670,"2005":2671,"2006":2672,"2007":2673,"2008":2678,"2009":2679,"2010":2680,"2011":2681,"2012":2682,"2013":2683,"2014":2684,"2015":2685,"2016":2693,"2017":2694,"2018":2695,"2019":2696,"2020":2697,"2021":2698,"2022":2699,"2023":2703,"2024":2704,"2025":2705,"2026":2706,"2027":2707,"2028":2708,"2029":2710,"2030":2711,"2031":2712,"2032":2713,"2033":2715,"2034":2716,"2035":2717,"2036":2718,"2037":2719,"2038":2721,"2039":2722,"2040":2723,"2041":2724,"2042":2725,"2043":2726,"2044":2727,"2045":2729,"2046":2730,"2047":2731,"2048":2732,"2049":2733,"2050":2735,"2051":2736,"2052":2739,"2053":2740,"2054":2741,"2055":2744,"2056":2745,"2057":2746,"2058":2747,"2059":2748,"2060":2749,"2061":2750,"2062":2751,"2063":2760,"2064":2761,"2065":2762,"2066":2765,"2067":2766,"2068":2767,"2069":2768,"2070":2769,"2071":2770,"2072":2771,"2073":2778,"2074":2779,"2075":2780,"2076":2781,"2077":2784,"2078":2785,"2079":2786,"2080":2787,"2081":2788,"2082":2789,"2083":2790,"2084":2791,"2085":2798,"2086":2799,"2087":2800,"2088":2801,"2089":2806,"2090":2807,"2091":2808,"2092":2809,"2093":2810,"2094":2811,"2095":2812,"2096":2813,"2097":2815,"2098":2816,"2099":2817,"2100":2818,"2101":2824,"2102":2825,"2103":2826,"2104":2827,"2105":2828,"2106":2829,"2107":2830,"2108":2831,"2109":2833,"2110":2834,"2111":2835,"2112":2836,"2113":2839,"2114":2840,"2115":2841,"2116":2842,"2117":2843,"2118":2845,"2119":2846,"2120":2848,"2121":2849,"2122":2850,"2123":2851,"2124":2855,"2125":2856,"2126":2857,"2127":2860,"2128":2861,"2129":2862,"2130":2864,"2131":2865,"2132":2866,"2133":2867,"2134":2869,"2135":2870,"2136":2871,"2137":2872,"2138":2873,"2139":2874,"2140":2875,"2141":2876,"2142":2877,"2143":2878,"2144":2879,"2145":2880,"2146":2881,"2147":2882,"2148":2883,"2149":2884,"2150":2885,"2151":2886,"2152":2887,"2153":2888,"2154":2889,"2155":2890,"2156":2891,"2157":2894,"2158":2895,"2159":2897,"2160":2899,"2161":2900,"2162":2901,"2163":2902,"2164":2903,"2165":2904,"2166":2905,"2167":2906,"2168":2908,"2169":2910,"2170":2911,"2171":2913,"2172":2914,"2173":2915,"2174":2916,"2175":2919,"2176":2920,"2177":2923,"2178":2924,"2179":2925,"2180":2926,"2181":2928,"2182":2929,"2183":2930,"2184":2931,"2185":2932,"2186":2933,"2187":2934,"2188":2935,"2189":2937,"2190":2938,"2191":2939,"2192":2940,"2193":2942,"2194":2943,"2195":2944,"2196":2945,"2197":2946,"2198":2947,"2199":2948,"2200":2949,"2201":2951,"2202":2952,"2203":2953,"2204":2954,"2205":2956,"2206":2957,"2207":2958,"2208":2959,"2209":2960,"2210":2961,"2211":2962,"2212":2963,"2213":2965,"2214":2966,"2215":2967,"2216":2970,"2217":2971,"2218":2972,"2219":2973,"2220":2975,"2221":2976,"2222":2977,"2223":2980,"2224":2981,"2225":2982,"2226":2983,"2227":2997,"2228":2998,"2229":2999,"2230":3000,"2231":3001,"2232":3002,"2233":3003,"2234":3005,"2235":3006,"2236":3007,"2237":3008,"2238":3010,"2239":3011,"2240":3012,"2241":3013,"2242":3014,"2243":3015,"2244":3016,"2245":3017,"2246":3019,"2247":3021,"2248":3022,"2249":3024,"2250":3025,"2251":3026,"2252":3027,"2253":3028,"2254":3029,"2255":3030,"2256":3033,"2257":3034,"2258":3035,"2259":3038,"2260":3039,"2261":3040,"2262":3041,"2263":3042,"2264":3043,"2265":3044,"2266":3046,"2267":3047,"2268":3048,"2269":3049,"2270":3065,"2271":3066,"2272":3067,"2273":3068,"2274":3069,"2275":3072,"2276":3074,"2277":3076,"2278":3077,"2279":3079,"2280":3080,"2281":3081,"2282":3082,"2283":3083,"2284":3084,"2285":3085,"2286":3086,"2287":3090,"2288":3091,"2289":3092,"2290":3093,"2291":3095,"2292":3096,"2293":3097,"2294":3098,"2295":3099,"2296":3100,"2297":3101,"2298":3102,"2299":3105,"2300":3106,"2301":3107,"2302":3108,"2303":3110,"2304":3111,"2305":3112,"2306":3113,"2307":3114,"2308":3115,"2309":3116,"2310":3117,"2311":3120,"2312":3121,"2313":3122,"2314":3123,"2315":3127,"2316":3128,"2317":3129,"2318":3130,"2319":3131,"2320":3132,"2321":3133,"2322":3134,"2323":3136,"2324":3137,"2325":3138,"2326":3139,"2327":3142,"2328":3143,"2329":3144,"2330":3145,"2331":3146,"2332":3148,"2333":3149,"2334":3151,"2335":3152,"2336":3153,"2337":3154,"2338":3158,"2339":3159,"2340":3160,"2341":3161,"2342":3162,"2343":3163,"2344":3164,"2345":3165,"2346":3168,"2347":3169,"2348":3170,"2349":3174,"2350":3175,"2351":3176,"2352":3177,"2353":3178,"2354":3179,"2355":3180,"2356":3181,"2357":3184,"2358":3185,"2359":3186,"2360":3187,"2361":3190,"2362":3191,"2363":3192,"2364":3193,"2365":3194,"2366":3195,"2367":3196,"2368":3197,"2369":3200,"2370":3202,"2371":3206,"2372":3207,"2373":3208,"2374":3209,"2375":3210,"2376":3211,"2377":3212,"2378":3213,"2379":3216,"2380":3217,"2381":3218,"2382":3219,"2383":3220,"2384":3222,"2385":3224,"2386":3226,"2387":3227,"2388":3228,"2389":3229,"2390":3232,"2391":3233,"2392":3234,"2393":3235,"2394":3238,"2395":3239,"2396":3240,"2397":3241,"2398":3242,"2399":3243,"2400":3244,"2401":3245,"2402":3248,"2403":3249,"2404":3250,"2405":3251,"2406":3254,"2407":3255,"2408":3256,"2409":3257,"2410":3258,"2411":3259,"2412":3260,"2413":3261,"2414":3264,"2415":3265,"2416":3266,"2417":3267,"2418":3270,"2419":3271,"2420":3272,"2421":3273,"2422":3274,"2423":3275,"2424":3276,"2425":3277,"2426":3280},"name":{"0":"Minimum String Length After Removing Substrings","1":"Two Sum","2":"Add Two Numbers","3":"Median of Two Sorted Arrays","4":"Zigzag Conversion","5":"Reverse Integer","6":"Palindrome Number","7":"Regular Expression Matching","8":"Container With Most Water","9":"Integer to Roman","10":"Roman to Integer","11":"Longest Common Prefix","12":"3Sum","13":"3Sum Closest","14":"Letter Combinations of a Phone Number","15":"4Sum","16":"Remove Nth Node From End of List","17":"Valid Parentheses","18":"Merge Two Sorted Lists","19":"Generate Parentheses","20":"Merge k Sorted Lists","21":"Swap Nodes in Pairs","22":"Reverse Nodes in k-Group","23":"Remove Duplicates from Sorted Array","24":"Remove Element","25":"Find the Index of the First Occurrence in a String","26":"Divide Two Integers","27":"Substring with Concatenation of All Words","28":"Next Permutation","29":"Longest Valid Parentheses","30":"Search in Rotated Sorted Array","31":"Find First and Last Position of Element in Sorted Array","32":"Search Insert Position","33":"Valid Sudoku","34":"Sudoku Solver","35":"Count and Say","36":"Combination Sum","37":"Combination Sum II","38":"First Missing Positive","39":"Trapping Rain Water","40":"Multiply Strings","41":"Wildcard Matching","42":"Jump Game II","43":"Permutations","44":"Permutations II","45":"Rotate Image","46":"Group Anagrams","47":"Pow(x, n)","48":"N-Queens","49":"N-Queens II","50":"Maximum Subarray","51":"Spiral Matrix","52":"Jump Game","53":"Merge Intervals","54":"Insert Interval","55":"Length of Last Word","56":"Permutation Sequence","57":"Rotate List","58":"Unique Paths","59":"Unique Paths II","60":"Minimum Path Sum","61":"Valid Number","62":"Add Binary","63":"Text Justification","64":"Sqrt(x)","65":"Climbing Stairs","66":"Simplify Path","67":"Edit Distance","68":"Search a 2D Matrix","69":"Sort Colors","70":"Minimum Window Substring","71":"Combinations","72":"Subsets","73":"Word Search","74":"Remove Duplicates from Sorted Array II","75":"Search in Rotated Sorted Array II","76":"Remove Duplicates from Sorted List II","77":"Remove Duplicates from Sorted List","78":"Largest Rectangle in Histogram","79":"Maximal Rectangle","80":"Partition List","81":"Scramble String","82":"Merge Sorted Array","83":"Gray Code","84":"Subsets II","85":"Decode Ways","86":"Reverse Linked List II","87":"Binary Tree Inorder Traversal","88":"Unique Binary Search Trees II","89":"Unique Binary Search Trees","90":"Interleaving String","91":"Validate Binary Search Tree","92":"Recover Binary Search Tree","93":"Same Tree","94":"Binary Tree Level Order Traversal","95":"Binary Tree Zigzag Level Order Traversal","96":"Maximum Depth of Binary Tree","97":"Construct Binary Tree from Preorder and Inorder Traversal","98":"Construct Binary Tree from Inorder and Postorder Traversal","99":"Convert Sorted Array to Binary Search Tree","100":"Convert Sorted List to Binary Search Tree","101":"Balanced Binary Tree","102":"Minimum Depth of Binary Tree","103":"Path Sum","104":"Path Sum II","105":"Flatten Binary Tree to Linked List","106":"Distinct Subsequences","107":"Populating Next Right Pointers in Each Node","108":"Populating Next Right Pointers in Each Node II","109":"Pascal's Triangle","110":"Pascal's Triangle II","111":"Triangle","112":"Best Time to Buy and Sell Stock","113":"Best Time to Buy and Sell Stock II","114":"Best Time to Buy and Sell Stock III","115":"Binary Tree Maximum Path Sum","116":"Valid Palindrome","117":"Word Ladder II","118":"Word Ladder","119":"Longest Consecutive Sequence","120":"Sum Root to Leaf Numbers","121":"Surrounded Regions","122":"Palindrome Partitioning","123":"Clone Graph","124":"Gas Station","125":"Candy","126":"Single Number","127":"Single Number II","128":"Copy List with Random Pointer","129":"Word Break","130":"Word Break II","131":"Linked List Cycle","132":"Linked List Cycle II","133":"Reorder List","134":"Binary Tree Preorder Traversal","135":"Binary Tree Postorder Traversal","136":"LRU Cache","137":"Insertion Sort List","138":"Sort List","139":"Max Points on a Line","140":"Evaluate Reverse Polish Notation","141":"Reverse Words in a String","142":"Maximum Product Subarray","143":"Find Minimum in Rotated Sorted Array","144":"Find Minimum in Rotated Sorted Array II","145":"Min Stack","146":"Intersection of Two Linked Lists","147":"Find Peak Element","148":"Maximum Gap","149":"Fraction to Recurring Decimal","150":"Two Sum II - Input Array Is Sorted","151":"Excel Sheet Column Title","152":"Majority Element","153":"Excel Sheet Column Number","154":"Factorial Trailing Zeroes","155":"Dungeon Game","156":"Combine Two Tables","157":"Second Highest Salary","158":"Nth Highest Salary","159":"Rank Scores","160":"Largest Number","161":"Consecutive Numbers","162":"Employees Earning More Than Their Managers","163":"Duplicate Emails","164":"Customers Who Never Order","165":"Department Highest Salary","166":"Department Top Three Salaries","167":"Repeated DNA Sequences","168":"Best Time to Buy and Sell Stock IV","169":"Rotate Array","170":"Number of 1 Bits","171":"Word Frequency","172":"Valid Phone Numbers","173":"Transpose File","174":"Tenth Line","175":"Delete Duplicate Emails","176":"Rising Temperature","177":"House Robber","178":"Binary Tree Right Side View","179":"Number of Islands","180":"Bitwise AND of Numbers Range","181":"Happy Number","182":"Remove Linked List Elements","183":"Count Primes","184":"Isomorphic Strings","185":"Reverse Linked List","186":"Course Schedule","187":"Implement Trie (Prefix Tree)","188":"Minimum Size Subarray Sum","189":"Course Schedule II","190":"Design Add and Search Words Data Structure","191":"Word Search II","192":"House Robber II","193":"Shortest Palindrome","194":"Kth Largest Element in an Array","195":"Combination Sum III","196":"Contains Duplicate","197":"The Skyline Problem","198":"Contains Duplicate II","199":"Contains Duplicate III","200":"Maximal Square","201":"Count Complete Tree Nodes","202":"Implement Stack using Queues","203":"Invert Binary Tree","204":"Basic Calculator II","205":"Summary Ranges","206":"Majority Element II","207":"Kth Smallest Element in a BST","208":"Power of Two","209":"Implement Queue using Stacks","210":"Number of Digit One","211":"Palindrome Linked List","212":"Product of Array Except Self","213":"Search a 2D Matrix II","214":"Different Ways to Add Parentheses","215":"Valid Anagram","216":"Binary Tree Paths","217":"Add Digits","218":"Single Number III","219":"Trips and Users","220":"Ugly Number II","221":"Missing Number","222":"Integer to English Words","223":"H-Index","224":"H-Index II","225":"First Bad Version","226":"Perfect Squares","227":"Expression Add Operators","228":"Move Zeroes","229":"Peeking Iterator","230":"Find the Duplicate Number","231":"Game of Life","232":"Word Pattern","233":"Nim Game","234":"Find Median from Data Stream","235":"Serialize and Deserialize Binary Tree","236":"Bulls and Cows","237":"Longest Increasing Subsequence","238":"Remove Invalid Parentheses","239":"Range Sum Query 2D - Immutable","240":"Additive Number","241":"Range Sum Query - Mutable","242":"Best Time to Buy and Sell Stock with Cooldown","243":"Minimum Height Trees","244":"Burst Balloons","245":"Count of Smaller Numbers After Self","246":"Remove Duplicate Letters","247":"Maximum Product of Word Lengths","248":"Bulb Switcher","249":"Create Maximum Number","250":"Coin Change","251":"Wiggle Sort II","252":"Power of Three","253":"Count of Range Sum","254":"Odd Even Linked List","255":"Longest Increasing Path in a Matrix","256":"Patching Array","257":"Verify Preorder Serialization of a Binary Tree","258":"Reconstruct Itinerary","259":"Increasing Triplet Subsequence","260":"Self Crossing","261":"Palindrome Pairs","262":"House Robber III","263":"Counting Bits","264":"Flatten Nested List Iterator","265":"Power of Four","266":"Integer Break","267":"Reverse String","268":"Reverse Vowels of a String","269":"Intersection of Two Arrays","270":"Intersection of Two Arrays II","271":"Data Stream as Disjoint Intervals","272":"Russian Doll Envelopes","273":"Design Twitter","274":"Count Numbers with Unique Digits","275":"Max Sum of Rectangle No Larger Than K","276":"Water and Jug Problem","277":"Valid Perfect Square","278":"Largest Divisible Subset","279":"Sum of Two Integers","280":"Super Pow","281":"Find K Pairs with Smallest Sums","282":"Guess Number Higher or Lower","283":"Guess Number Higher or Lower II","284":"Wiggle Subsequence","285":"Combination Sum IV","286":"Insert Delete GetRandom O(1)","287":"Insert Delete GetRandom O(1) - Duplicates allowed","288":"Linked List Random Node","289":"Ransom Note","290":"Shuffle an Array","291":"Mini Parser","292":"Lexicographical Numbers","293":"First Unique Character in a String","294":"Longest Absolute File Path","295":"Find the Difference","296":"Elimination Game","297":"Perfect Rectangle","298":"Is Subsequence","299":"Decode String","300":"Longest Substring with At Least K Repeating Characters","301":"Rotate Function","302":"Integer Replacement","303":"Random Pick Index","304":"Evaluate Division","305":"Nth Digit","306":"Binary Watch","307":"Frog Jump","308":"Sum of Left Leaves","309":"Convert a Number to Hexadecimal","310":"Queue Reconstruction by Height","311":"Trapping Rain Water II","312":"Longest Palindrome","313":"Split Array Largest Sum","314":"Fizz Buzz","315":"Arithmetic Slices","316":"Third Maximum Number","317":"Add Strings","318":"Partition Equal Subset Sum","319":"Pacific Atlantic Water Flow","320":"Battleships in a Board","321":"Reconstruct Original Digits from English","322":"Longest Repeating Character Replacement","323":"Construct Quad Tree","324":"N-ary Tree Level Order Traversal","325":"All O`one Data Structure","326":"Minimum Genetic Mutation","327":"Number of Segments in a String","328":"Non-overlapping Intervals","329":"Find Right Interval","330":"Path Sum III","331":"Find All Anagrams in a String","332":"K-th Smallest in Lexicographical Order","333":"Arranging Coins","334":"Find All Duplicates in an Array","335":"String Compression","336":"Add Two Numbers II","337":"Arithmetic Slices II - Subsequence","338":"Number of Boomerangs","339":"Find All Numbers Disappeared in an Array","340":"Delete Node in a BST","341":"Sort Characters By Frequency","342":"Minimum Number of Arrows to Burst Balloons","343":"Minimum Moves to Equal Array Elements","344":"4Sum II","345":"132 Pattern","346":"Circular Array Loop","347":"Poor Pigs","348":"Repeated Substring Pattern","349":"LFU Cache","350":"Hamming Distance","351":"Minimum Moves to Equal Array Elements II","352":"Island Perimeter","353":"Can I Win","354":"Count The Repetitions","355":"Validate IP Address","356":"Implement Rand10() Using Rand7()","357":"Concatenated Words","358":"Matchsticks to Square","359":"Ones and Zeroes","360":"Heaters","361":"Number Complement","362":"Total Hamming Distance","363":"Generate Random Point in a Circle","364":"Largest Palindrome Product","365":"Sliding Window Median","366":"Magical String","367":"License Key Formatting","368":"Smallest Good Base","369":"Max Consecutive Ones","370":"Predict the Winner","371":"Zuma Game","372":"Non-decreasing Subsequences","373":"Construct the Rectangle","374":"Reverse Pairs","375":"Target Sum","376":"Teemo Attacking","377":"Next Greater Element I","378":"Random Point in Non-overlapping Rectangles","379":"Diagonal Traverse","380":"Keyboard Row","381":"IPO","382":"Next Greater Element II","383":"Base 7","384":"Relative Ranks","385":"Perfect Number","386":"Most Frequent Subtree Sum","387":"Fibonacci Number","388":"Game Play Analysis I","389":"Find Bottom Left Tree Value","390":"Freedom Trail","391":"Find Largest Value in Each Tree Row","392":"Longest Palindromic Subsequence","393":"Super Washing Machines","394":"Coin Change II","395":"Random Flip Matrix","396":"Detect Capital","397":"Longest Uncommon Subsequence I","398":"Longest Uncommon Subsequence II","399":"Continuous Subarray Sum","400":"Longest Word in Dictionary through Deleting","401":"Contiguous Array","402":"Random Pick with Weight","403":"Minesweeper","404":"Minimum Absolute Difference in BST","405":"K-diff Pairs in an Array","406":"Encode and Decode TinyURL","407":"Complex Number Multiplication","408":"Convert BST to Greater Tree","409":"Minimum Time Difference","410":"Reverse String II","411":"01 Matrix","412":"Diameter of Binary Tree","413":"Remove Boxes","414":"Number of Provinces","415":"Game Play Analysis IV","416":"Student Attendance Record I","417":"Student Attendance Record II","418":"Optimal Division","419":"Brick Wall","420":"Next Greater Element III","421":"Reverse Words in a String III","422":"Logical OR of Two Binary Grids Represented as Quad-Trees","423":"Maximum Depth of N-ary Tree","424":"Subarray Sum Equals K","425":"Array Partition","426":"Binary Tree Tilt","427":"Find the Closest Palindrome","428":"Reshape the Matrix","429":"Permutation in String","430":"Managers with at Least 5 Direct Reports","431":"Subtree of Another Tree","432":"Distribute Candies","433":"Out of Boundary Paths","434":"Employee Bonus","435":"Shortest Unsorted Continuous Subarray","436":"Delete Operation for Two Strings","437":"Find Customer Referee","438":"Investments in 2016","439":"Customer Placing the Largest Number of Orders","440":"Erect the Fence","441":"N-ary Tree Preorder Traversal","442":"N-ary Tree Postorder Traversal","443":"Tag Validator","444":"Fraction Addition and Subtraction","445":"Valid Square","446":"Longest Harmonious Subsequence","447":"Big Countries","448":"Classes More Than 5 Students","449":"Range Addition II","450":"Minimum Index Sum of Two Lists","451":"Non-negative Integers without Consecutive Ones","452":"Human Traffic of Stadium","453":"Friend Requests II: Who Has the Most Friends","454":"Can Place Flowers","455":"Construct String from Binary Tree","456":"Sales Person","457":"Tree Node","458":"Find Duplicate File in System","459":"Triangle Judgement","460":"Valid Triangle Number","461":"Merge Two Binary Trees","462":"Biggest Single Number","463":"Not Boring Movies","464":"Task Scheduler","465":"Design Circular Queue","466":"Add One Row to Tree","467":"Maximum Distance in Arrays","468":"Exchange Seats","469":"Swap Salary","470":"Maximum Product of Three Numbers","471":"K Inverse Pairs Array","472":"Course Schedule III","473":"Smallest Range Covering Elements from K Lists","474":"Sum of Square Numbers","475":"Exclusive Time of Functions","476":"Average of Levels in Binary Tree","477":"Shopping Offers","478":"Decode Ways II","479":"Solve the Equation","480":"Design Circular Deque","481":"Maximum Average Subarray I","482":"Set Mismatch","483":"Maximum Length of Pair Chain","484":"Palindromic Substrings","485":"Replace Words","486":"Dota2 Senate","487":"2 Keys Keyboard","488":"Two Sum IV - Input is a BST","489":"Maximum Binary Tree","490":"Print Binary Tree","491":"Robot Return to Origin","492":"Find K Closest Elements","493":"Split Array into Consecutive Subsequences","494":"Image Smoother","495":"Maximum Width of Binary Tree","496":"Strange Printer","497":"Non-decreasing Array","498":"Beautiful Arrangement II","499":"Kth Smallest Number in Multiplication Table","500":"Trim a Binary Search Tree","501":"Second Minimum Node In a Binary Tree","502":"Bulb Switcher II","503":"Number of Longest Increasing Subsequence","504":"Longest Continuous Increasing Subsequence","505":"Cut Off Trees for Golf Event","506":"Implement Magic Dictionary","507":"Map Sum Pairs","508":"24 Game","509":"Valid Palindrome II","510":"Baseball Game","511":"Redundant Connection","512":"Redundant Connection II","513":"Repeated String Match","514":"Longest Univalue Path","515":"Knight Probability in Chessboard","516":"Maximum Sum of 3 Non-Overlapping Subarrays","517":"Employee Importance","518":"Stickers to Spell Word","519":"Binary Number with Alternating Bits","520":"Max Area of Island","521":"Count Binary Substrings","522":"Degree of an Array","523":"Partition to K Equal Sum Subsets","524":"Falling Squares","525":"Search in a Binary Search Tree","526":"Insert into a Binary Search Tree","527":"Kth Largest Element in a Stream","528":"Binary Search","529":"Design HashSet","530":"Design HashMap","531":"Design Linked List","532":"To Lower Case","533":"Random Pick with Blacklist","534":"Minimum ASCII Delete Sum for Two Strings","535":"Subarray Product Less Than K","536":"Best Time to Buy and Sell Stock with Transaction Fee","537":"Range Module","538":"1-bit and 2-bit Characters","539":"Maximum Length of Repeated Subarray","540":"Find K-th Smallest Pair Distance","541":"Longest Word in Dictionary","542":"Accounts Merge","543":"Remove Comments","544":"Find Pivot Index","545":"Split Linked List in Parts","546":"Number of Atoms","547":"Self Dividing Numbers","548":"My Calendar I","549":"Count Different Palindromic Subsequences","550":"My Calendar II","551":"Flood Fill","552":"Asteroid Collision","553":"Parse Lisp Expression","554":"Monotone Increasing Digits","555":"Daily Temperatures","556":"Delete and Earn","557":"Cherry Pickup","558":"Network Delay Time","559":"Find Smallest Letter Greater Than Target","560":"Largest Number At Least Twice of Others","561":"Shortest Completing Word","562":"Contain Virus","563":"Open the Lock","564":"Cracking the Safe","565":"Reach a Number","566":"Pyramid Transition Matrix","567":"Set Intersection Size At Least Two","568":"Special Binary String","569":"Partition Labels","570":"Largest Plus Sign","571":"Couples Holding Hands","572":"Toeplitz Matrix","573":"Reorganize String","574":"Max Chunks To Make Sorted II","575":"Max Chunks To Make Sorted","576":"Basic Calculator IV","577":"Jewels and Stones","578":"Sliding Puzzle","579":"Global and Local Inversions","580":"Swap Adjacent in LR String","581":"Swim in Rising Water","582":"K-th Symbol in Grammar","583":"Reaching Points","584":"Rabbits in Forest","585":"Transform to Chessboard","586":"Minimum Distance Between BST Nodes","587":"Letter Case Permutation","588":"Is Graph Bipartite?","589":"K-th Smallest Prime Fraction","590":"Cheapest Flights Within K Stops","591":"Rotated Digits","592":"Escape The Ghosts","593":"Domino and Tromino Tiling","594":"Custom Sort String","595":"Number of Matching Subsequences","596":"Preimage Size of Factorial Zeroes Function","597":"Valid Tic-Tac-Toe State","598":"Number of Subarrays with Bounded Maximum","599":"Rotate String","600":"All Paths From Source to Target","601":"Smallest Rotation with Highest Score","602":"Champagne Tower","603":"Minimum Swaps To Make Sequences Increasing","604":"Find Eventual Safe States","605":"Bricks Falling When Hit","606":"Unique Morse Code Words","607":"Number of Lines To Write String","608":"Max Increase to Keep City Skyline","609":"Soup Servings","610":"Expressive Words","611":"Chalkboard XOR Game","612":"Subdomain Visit Count","613":"Largest Triangle Area","614":"Largest Sum of Averages","615":"Binary Tree Pruning","616":"Bus Routes","617":"Ambiguous Coordinates","618":"Linked List Components","619":"Race Car","620":"Most Common Word","621":"Short Encoding of Words","622":"Shortest Distance to a Character","623":"Card Flipping Game","624":"Binary Trees With Factors","625":"Goat Latin","626":"Friends Of Appropriate Ages","627":"Making A Large Island","628":"Count Unique Characters of All Substrings of a Given String","629":"Consecutive Numbers Sum","630":"Positions of Large Groups","631":"Masking Personal Information","632":"Flipping an Image","633":"Find And Replace in String","634":"Sum of Distances in Tree","635":"Image Overlap","636":"Rectangle Overlap","637":"New 21 Game","638":"Push Dominoes","639":"Magic Squares In Grid","640":"Split Array into Fibonacci Sequence","641":"Guess the Word","642":"Backspace String Compare","643":"Longest Mountain in Array","644":"Hand of Straights","645":"Shortest Path Visiting All Nodes","646":"Shifting Letters","647":"Maximize Distance to Closest Person","648":"Rectangle Area II","649":"Loud and Rich","650":"Peak Index in a Mountain Array","651":"Car Fleet","652":"K-Similar Strings","653":"Exam Room","654":"Score of Parentheses","655":"Minimum Cost to Hire K Workers","656":"Mirror Reflection","657":"Buddy Strings","658":"Lemonade Change","659":"Score After Flipping Matrix","660":"Shortest Subarray with Sum at Least K","661":"All Nodes Distance K in Binary Tree","662":"Shortest Path to Get All Keys","663":"Smallest Subtree with all the Deepest Nodes","664":"Prime Palindrome","665":"Transpose Matrix","666":"Reordered Power of 2","667":"Advantage Shuffle","668":"Leaf-Similar Trees","669":"Length of Longest Fibonacci Subsequence","670":"Walking Robot Simulation","671":"Koko Eating Bananas","672":"Middle of the Linked List","673":"Stone Game","674":"Nth Magical Number","675":"Profitable Schemes","676":"Decoded String at Index","677":"Boats to Save People","678":"Reachable Nodes In Subdivided Graph","679":"Projection Area of 3D Shapes","680":"Uncommon Words from Two Sentences","681":"Spiral Matrix III","682":"Possible Bipartition","683":"Fair Candy Swap","684":"Construct Binary Tree from Preorder and Postorder Traversal","685":"Find and Replace Pattern","686":"Sum of Subsequence Widths","687":"Surface Area of 3D Shapes","688":"Groups of Special-Equivalent Strings","689":"All Possible Full Binary Trees","690":"Maximum Frequency Stack","691":"Monotonic Array","692":"Bitwise ORs of Subarrays","693":"Orderly Queue","694":"RLE Iterator","695":"Online Stock Span","696":"Numbers At Most N Given Digit Set","697":"Valid Permutations for DI Sequence","698":"Fruit Into Baskets","699":"Sort Array By Parity","700":"Super Palindromes","701":"Sum of Subarray Minimums","702":"Smallest Range I","703":"Smallest Range II","704":"Online Election","705":"Sort an Array","706":"Cat and Mouse","707":"X of a Kind in a Deck of Cards","708":"Partition Array into Disjoint Intervals","709":"Word Subsets","710":"Reverse Only Letters","711":"Maximum Sum Circular Subarray","712":"Number of Music Playlists","713":"Minimum Add to Make Parentheses Valid","714":"Sort Array By Parity II","715":"3Sum With Multiplicity","716":"Minimize Malware Spread","717":"Long Pressed Name","718":"Flip String to Monotone Increasing","719":"Three Equal Parts","720":"Minimize Malware Spread II","721":"Unique Email Addresses","722":"Binary Subarrays With Sum","723":"Minimum Falling Path Sum","724":"Beautiful Array","725":"Number of Recent Calls","726":"Shortest Bridge","727":"Knight Dialer","728":"Stamping The Sequence","729":"Reorder Data in Log Files","730":"Range Sum of BST","731":"Minimum Area Rectangle","732":"Distinct Subsequences II","733":"Valid Mountain Array","734":"DI String Match","735":"Find the Shortest Superstring","736":"Delete Columns to Make Sorted","737":"Minimum Increment to Make Array Unique","738":"Validate Stack Sequences","739":"Most Stones Removed with Same Row or Column","740":"Bag of Tokens","741":"Largest Time for Given Digits","742":"Reveal Cards In Increasing Order","743":"Flip Equivalent Binary Trees","744":"Verifying an Alien Dictionary","745":"Tallest Billboard","746":"Prison Cells After N Days","747":"Check Completeness of a Binary Tree","748":"Regions Cut By Slashes","749":"N-Repeated Element in Size 2N Array","750":"Maximum Width Ramp","751":"Minimum Area Rectangle II","752":"Least Operators to Express Number","753":"Univalued Binary Tree","754":"Vowel Spellchecker","755":"Numbers With Same Consecutive Differences","756":"Binary Tree Cameras","757":"Pancake Sorting","758":"Powerful Integers","759":"Flip Binary Tree To Match Preorder Traversal","760":"Equal Rational Numbers","761":"K Closest Points to Origin","762":"Subarray Sums Divisible by K","763":"Odd Even Jump","764":"Squares of a Sorted Array","765":"Longest Turbulent Subarray","766":"Distribute Coins in Binary Tree","767":"Unique Paths III","768":"Time Based Key-Value Store","769":"Triples with Bitwise AND Equal To Zero","770":"Minimum Cost For Tickets","771":"String Without AAA or BBB","772":"Sum of Even Numbers After Queries","773":"Smallest String Starting From Leaf","774":"Add to Array-Form of Integer","775":"Satisfiability of Equality Equations","776":"Broken Calculator","777":"Subarrays with K Different Integers","778":"Cousins in Binary Tree","779":"Rotting Oranges","780":"Minimum Number of K Consecutive Bit Flips","781":"Number of Squareful Arrays","782":"Find the Town Judge","783":"Maximum Binary Tree II","784":"Minimum Cost to Merge Stones","785":"Grid Illumination","786":"Find Common Characters","787":"Check If Word Is Valid After Substitutions","788":"Max Consecutive Ones III","789":"Maximize Sum Of Array After K Negations","790":"Clumsy Factorial","791":"Minimum Domino Rotations For Equal Row","792":"Construct Binary Search Tree from Preorder Traversal","793":"Complement of Base 10 Integer","794":"Pairs of Songs With Total Durations Divisible by 60","795":"Capacity To Ship Packages Within D Days","796":"Numbers With Repeated Digits","797":"Partition Array Into Three Parts With Equal Sum","798":"Best Sightseeing Pair","799":"Smallest Integer Divisible by K","800":"Binary String With Substrings Representing 1 To N","801":"Convert to Base -2","802":"Binary Prefix Divisible By 5","803":"Next Greater Node In Linked List","804":"Number of Enclaves","805":"Remove Outermost Parentheses","806":"Sum of Root To Leaf Binary Numbers","807":"Camelcase Matching","808":"Video Stitching","809":"Divisor Game","810":"Maximum Difference Between Node and Ancestor","811":"Longest Arithmetic Subsequence","812":"Recover a Tree From Preorder Traversal","813":"Two City Scheduling","814":"Matrix Cells in Distance Order","815":"Maximum Sum of Two Non-Overlapping Subarrays","816":"Stream of Characters","817":"Moving Stones Until Consecutive","818":"Coloring A Border","819":"Uncrossed Lines","820":"Escape a Large Maze","821":"Valid Boomerang","822":"Binary Search Tree to Greater Sum Tree","823":"Minimum Score Triangulation of Polygon","824":"Moving Stones Until Consecutive II","825":"Robot Bounded In Circle","826":"Flower Planting With No Adjacent","827":"Partition Array for Maximum Sum","828":"Longest Duplicate Substring","829":"Customers Who Bought All Products","830":"Last Stone Weight","831":"Remove All Adjacent Duplicates In String","832":"Longest String Chain","833":"Last Stone Weight II","834":"Actors and Directors Who Cooperated At Least Three Times","835":"Grumpy Bookstore Owner","836":"Previous Permutation With One Swap","837":"Distant Barcodes","838":"Lexicographically Smallest Equivalent String","839":"Product Sales Analysis I","840":"Product Sales Analysis III","841":"Greatest Common Divisor of Strings","842":"Flip Columns For Maximum Number of Equal Rows","843":"Adding Two Negabinary Numbers","844":"Number of Submatrices That Sum to Target","845":"Occurrences After Bigram","846":"Letter Tile Possibilities","847":"Insufficient Nodes in Root to Leaf Paths","848":"Smallest Subsequence of Distinct Characters","849":"Sales Analysis III","850":"Duplicate Zeros","851":"Largest Values From Labels","852":"Shortest Path in Binary Matrix","853":"Shortest Common Supersequence","854":"Statistics from a Large Sample","855":"Car Pooling","856":"Find in Mountain Array","857":"Brace Expansion II","858":"Distribute Candies to People","859":"Path In Zigzag Labelled Binary Tree","860":"Filling Bookcase Shelves","861":"Parsing A Boolean Expression","862":"Defanging an IP Address","863":"Corporate Flight Bookings","864":"Delete Nodes And Return Forest","865":"Maximum Nesting Depth of Two Valid Parentheses Strings","866":"Print in Order","867":"Print Zero Even Odd","868":"Building H2O","869":"Relative Sort Array","870":"Lowest Common Ancestor of Deepest Leaves","871":"Longest Well-Performing Interval","872":"Smallest Sufficient Team","873":"Number of Equivalent Domino Pairs","874":"Shortest Path with Alternating Colors","875":"Minimum Cost Tree From Leaf Values","876":"Maximum of Absolute Value Expression","877":"N-th Tribonacci Number","878":"Alphabet Board Path","879":"Largest 1-Bordered Square","880":"Stone Game II","881":"User Activity for the Past 30 Days I","882":"Longest Common Subsequence","883":"Decrease Elements To Make Array Zigzag","884":"Binary Tree Coloring Game","885":"Snapshot Array","886":"Longest Chunked Palindrome Decomposition","887":"Article Views I","888":"Day of the Year","889":"Number of Dice Rolls With Target Sum","890":"Online Majority Element In Subarray","891":"Market Analysis I","892":"Find Words That Can Be Formed by Characters","893":"Maximum Level Sum of a Binary Tree","894":"Last Substring in Lexicographical Order","895":"Product Price at a Given Date","896":"Invalid Transactions","897":"Compare Strings by Frequency of the Smallest Character","898":"Remove Zero Sum Consecutive Nodes from Linked List","899":"Prime Arrangements","900":"Can Make Palindrome from Substring","901":"Number of Valid Words for Each Puzzle","902":"Reformat Department Table","903":"Distance Between Bus Stops","904":"Day of the Week","905":"Maximum Subarray Sum with One Deletion","906":"Make Array Strictly Increasing","907":"Maximum Number of Balloons","908":"K-Concatenation Maximum Sum","909":"Monthly Transactions I","910":"Fizz Buzz Multithreaded","911":"Minimum Absolute Difference","912":"Ugly Number III","913":"Smallest String With Swaps","914":"Sort Items by Groups Respecting Dependencies","915":"Last Person to Fit in the Bus","916":"Design Skiplist","917":"Unique Number of Occurrences","918":"Get Equal Substrings Within Budget","919":"Remove All Adjacent Duplicates in String II","920":"Minimum Moves to Reach Target with Rotations","921":"Queries Quality and Percentage","922":"Minimum Cost to Move Chips to The Same Position","923":"Longest Arithmetic Subsequence of Given Difference","924":"Path with Maximum Gold","925":"Count Vowels Permutation","926":"Split a String in Balanced Strings","927":"Queens That Can Attack the King","928":"Dice Roll Simulation","929":"Maximum Equal Frequency","930":"The Dining Philosophers","931":"Airplane Seat Assignment Probability","932":"Check If It Is a Straight Line","933":"Remove Sub-Folders from the Filesystem","934":"Replace the Substring for Balanced String","935":"Find Positive Integer Solution for a Given Equation","936":"Circular Permutation in Binary Representation","937":"Maximum Length of a Concatenated String with Unique Characters","938":"Tiling a Rectangle with the Fewest Squares","939":"Minimum Swaps to Make Strings Equal","940":"Count Number of Nice Subarrays","941":"Minimum Remove to Make Valid Parentheses","942":"Check If It Is a Good Array","943":"Average Selling Price","944":"Cells with Odd Values in a Matrix","945":"Reconstruct a 2-Row Binary Matrix","946":"Number of Closed Islands","947":"Maximum Score Words Formed by Letters","948":"Shift 2D Grid","949":"Find Elements in a Contaminated Binary Tree","950":"Greatest Sum Divisible by Three","951":"Minimum Moves to Move a Box to Their Target Location","952":"Minimum Time Visiting All Points","953":"Count Servers that Communicate","954":"Search Suggestions System","955":"Number of Ways to Stay in the Same Place After Some Steps","956":"Find Winner on a Tic Tac Toe Game","957":"Count Square Submatrices with All Ones","958":"Palindrome Partitioning III","959":"Students and Examinations","960":"Subtract the Product and Sum of Digits of an Integer","961":"Group the People Given the Group Size They Belong To","962":"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","963":"Iterator for Combination","964":"Element Appearing More Than 25% In Sorted Array","965":"Remove Covered Intervals","966":"Minimum Falling Path Sum II","967":"Convert Binary Number in a Linked List to Integer","968":"Sequential Digits","969":"Maximum Side Length of a Square with Sum Less than or Equal to Threshold","970":"Shortest Path in a Grid with Obstacles Elimination","971":"Find Numbers with Even Number of Digits","972":"Divide Array in Sets of K Consecutive Numbers","973":"Maximum Number of Occurrences of a Substring","974":"Maximum Candies You Can Get from Boxes","975":"Replace Elements with Greatest Element on Right Side","976":"Sum of Mutated Array Closest to Target","977":"Number of Paths with Max Score","978":"Deepest Leaves Sum","979":"Find N Unique Integers Sum up to Zero","980":"All Elements in Two Binary Search Trees","981":"Jump Game III","982":"Verbal Arithmetic Puzzle","983":"Decrypt String from Alphabet to Integer Mapping","984":"XOR Queries of a Subarray","985":"Get Watched Videos by Your Friends","986":"Minimum Insertion Steps to Make a String Palindrome","987":"Decompress Run-Length Encoded List","988":"Matrix Block Sum","989":"Sum of Nodes with Even-Valued Grandparent","990":"Distinct Echo Substrings","991":"Convert Integer to the Sum of Two No-Zero Integers","992":"Minimum Flips to Make a OR b Equal to c","993":"Number of Operations to Make Network Connected","994":"Restaurant Growth","995":"Maximum 69 Number","996":"Print Words Vertically","997":"Delete Leaves With a Given Value","998":"Minimum Number of Taps to Open to Water a Garden","999":"List the Products Ordered in a Period","1000":"Break a Palindrome","1001":"Sort the Matrix Diagonally","1002":"Reverse Subarray To Maximize Array Value","1003":"Rank Transform of an Array","1004":"Remove Palindromic Subsequences","1005":"Filter Restaurants by Vegan-Friendly, Price and Distance","1006":"Find the City With the Smallest Number of Neighbors at a Threshold Distance","1007":"Minimum Difficulty of a Job Schedule","1008":"The K Weakest Rows in a Matrix","1009":"Reduce Array Size to The Half","1010":"Maximum Product of Splitted Binary Tree","1011":"Jump Game V","1012":"Movie Rating","1013":"Number of Steps to Reduce a Number to Zero","1014":"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold","1015":"Angle Between Hands of a Clock","1016":"Jump Game IV","1017":"Check If N and Its Double Exist","1018":"Minimum Number of Steps to Make Two Strings Anagram","1019":"Tweet Counts Per Frequency","1020":"Maximum Students Taking Exam","1021":"Count Negative Numbers in a Sorted Matrix","1022":"Product of the Last K Numbers","1023":"Maximum Number of Events That Can Be Attended","1024":"Construct Target Array With Multiple Sums","1025":"Sort Integers by The Number of 1 Bits","1026":"Number of Substrings Containing All Three Characters","1027":"Count All Valid Pickup and Delivery Options","1028":"Number of Days Between Two Dates","1029":"Validate Binary Tree Nodes","1030":"Closest Divisors","1031":"Largest Multiple of Three","1032":"Rank Teams by Votes","1033":"Linked List in Binary Tree","1034":"Minimum Cost to Make at Least One Valid Path in a Grid","1035":"Increasing Decreasing String","1036":"Find the Longest Substring Containing Vowels in Even Counts","1037":"Longest ZigZag Path in a Binary Tree","1038":"Maximum Sum BST in Binary Tree","1039":"Generate a String With Characters That Have Odd Counts","1040":"Number of Times Binary String Is Prefix-Aligned","1041":"Time Needed to Inform All Employees","1042":"Frog Position After T Seconds","1043":"Replace Employee ID With The Unique Identifier","1044":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","1045":"Lucky Numbers in a Matrix","1046":"Design a Stack With Increment Operation","1047":"Find the Distance Value Between Two Arrays","1048":"Cinema Seat Allocation","1049":"Sort Integers by The Power Value","1050":"Pizza With 3n Slices","1051":"Create Target Array in the Given Order","1052":"Four Divisors","1053":"Check if There is a Valid Path in a Grid","1054":"Longest Happy Prefix","1055":"Capital Gain\/Loss","1056":"Find Lucky Integer in an Array","1057":"Count Number of Teams","1058":"Design Underground System","1059":"Find All Good Strings","1060":"Circle and Rectangle Overlapping","1061":"Reducing Dishes","1062":"Minimum Subsequence in Non-Increasing Order","1063":"Longest Happy String","1064":"Stone Game III","1065":"Top Travellers","1066":"String Matching in an Array","1067":"Queries on a Permutation With Key","1068":"Number of Ways to Paint N \u00d7 3 Grid","1069":"Minimum Value to Get Positive Step by Step Sum","1070":"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K","1071":"The k-th Lexicographical String of All Happy Strings of Length n","1072":"Restore The Array","1073":"Reformat The String","1074":"Display Table of Food Orders in a Restaurant","1075":"Minimum Number of Frogs Croaking","1076":"Build Array Where You Can Find The Maximum Exactly K Comparisons","1077":"Maximum Points You Can Obtain from Cards","1078":"Diagonal Traverse II","1079":"Constrained Subsequence Sum","1080":"Kids With the Greatest Number of Candies","1081":"Max Difference You Can Get From Changing an Integer","1082":"Check If a String Can Break Another String","1083":"Number of Ways to Wear Different Hats to Each Other","1084":"Destination City","1085":"Check If All 1's Are at Least Length K Places Away","1086":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","1087":"Find the Kth Smallest Sum of a Matrix With Sorted Rows","1088":"Build an Array With Stack Operations","1089":"Count Triplets That Can Form Two Arrays of Equal XOR","1090":"Minimum Time to Collect All Apples in a Tree","1091":"Number of Ways of Cutting a Pizza","1092":"Simplified Fractions","1093":"Count Good Nodes in Binary Tree","1094":"Form Largest Integer With Digits That Add up to Target","1095":"Number of Students Doing Homework at a Given Time","1096":"Maximum Number of Darts Inside of a Circular Dartboard","1097":"Check If a Word Occurs As a Prefix of Any Word in a Sentence","1098":"Maximum Number of Vowels in a Substring of Given Length","1099":"Pseudo-Palindromic Paths in a Binary Tree","1100":"Max Dot Product of Two Subsequences","1101":"Make Two Arrays Equal by Reversing Subarrays","1102":"Check If a String Contains All Binary Codes of Size K","1103":"Maximum Product of Two Elements in an Array","1104":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","1105":"Reorder Routes to Make All Paths Lead to the City Zero","1106":"Probability of a Two Boxes Having The Same Number of Distinct Balls","1107":"Shuffle the Array","1108":"The k Strongest Values in an Array","1109":"Design Browser History","1110":"Paint House III","1111":"Final Prices With a Special Discount in a Shop","1112":"Subrectangle Queries","1113":"Find Two Non-overlapping Sub-arrays Each With Target Sum","1114":"Running Sum of 1d Array","1115":"Least Number of Unique Integers after K Removals","1116":"Minimum Number of Days to Make m Bouquets","1117":"Kth Ancestor of a Tree Node","1118":"Group Sold Products By The Date","1119":"XOR Operation in an Array","1120":"Making File Names Unique","1121":"Avoid Flood in The City","1122":"Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree","1123":"Average Salary Excluding the Minimum and Maximum Salary","1124":"The kth Factor of n","1125":"Longest Subarray of 1's After Deleting One Element","1126":"Parallel Courses II","1127":"Path Crossing","1128":"Check If Array Pairs Are Divisible by k","1129":"Number of Subsequences That Satisfy the Given Sum Condition","1130":"Max Value of Equation","1131":"Last Moment Before All Ants Fall Out of a Plank","1132":"Count Submatrices With All Ones","1133":"Minimum Possible Integer After at Most K Adjacent Swaps On Digits","1134":"Reformat Date","1135":"Range Sum of Sorted Subarray Sums","1136":"Minimum Difference Between Largest and Smallest Value in Three Moves","1137":"Stone Game IV","1138":"Number of Good Pairs","1139":"Number of Substrings With Only 1s","1140":"Path with Maximum Probability","1141":"Best Position for a Service Centre","1142":"Find Users With Valid E-Mails","1143":"Water Bottles","1144":"Number of Nodes in the Sub-Tree With the Same Label","1145":"Maximum Number of Non-Overlapping Substrings","1146":"Find a Value of a Mysterious Function Closest to Target","1147":"Count Odd Numbers in an Interval Range","1148":"Number of Sub-arrays With Odd Sum","1149":"Number of Good Ways to Split a String","1150":"Minimum Number of Increments on Subarrays to Form a Target Array","1151":"Patients With a Condition","1152":"Shuffle String","1153":"Minimum Suffix Flips","1154":"Number of Good Leaf Nodes Pairs","1155":"String Compression II","1156":"Count Good Triplets","1157":"Find the Winner of an Array Game","1158":"Minimum Swaps to Arrange a Binary Grid","1159":"Get the Maximum Score","1160":"Kth Missing Positive Number","1161":"Can Convert String in K Moves","1162":"Minimum Insertions to Balance a Parentheses String","1163":"Find Longest Awesome Substring","1164":"Make The String Great","1165":"Find Kth Bit in Nth Binary String","1166":"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","1167":"Minimum Cost to Cut a Stick","1168":"Three Consecutive Odds","1169":"Magnetic Force Between Two Balls","1170":"Minimum Number of Days to Eat N Oranges","1171":"Minimum Number of Vertices to Reach All Nodes","1172":"Detect Cycles in 2D Grid","1173":"Most Visited Sector in a Circular Track","1174":"Maximum Number of Coins You Can Get","1175":"Find Latest Group of Size M","1176":"Stone Game V","1177":"Detect Pattern of Length M Repeated K or More Times","1178":"Maximum Length of Subarray With Positive Product","1179":"Minimum Number of Days to Disconnect Island","1180":"Number of Ways to Reorder Array to Get Same BST","1181":"Matrix Diagonal Sum","1182":"Number of Ways to Split a String","1183":"Shortest Subarray to be Removed to Make Array Sorted","1184":"Count All Possible Routes","1185":"Replace All ?'s to Avoid Consecutive Repeating Characters","1186":"Number of Ways Where Square of Number Is Equal to Product of Two Numbers","1187":"Minimum Time to Make Rope Colorful","1188":"Remove Max Number of Edges to Keep Graph Fully Traversable","1189":"Customer Who Visited but Did Not Make Any Transactions","1190":"Special Positions in a Binary Matrix","1191":"Count Unhappy Friends","1192":"Min Cost to Connect All Points","1193":"Bank Account Summary II","1194":"Sum of All Odd Length Subarrays","1195":"Maximum Sum Obtained of Any Permutation","1196":"Make Sum Divisible by P","1197":"Strange Printer II","1198":"Rearrange Spaces Between Words","1199":"Split a String Into the Max Number of Unique Substrings","1200":"Maximum Non Negative Product in a Matrix","1201":"Minimum Cost to Connect Two Groups of Points","1202":"Crawler Log Folder","1203":"Maximum Profit of Operating a Centennial Wheel","1204":"Throne Inheritance","1205":"Maximum Number of Achievable Transfer Requests","1206":"Design Parking System","1207":"Alert Using Same Key-Card Three or More Times in a One Hour Period","1208":"Find Valid Matrix Given Row and Column Sums","1209":"Find Servers That Handled Most Number of Requests","1210":"Special Array With X Elements Greater Than or Equal X","1211":"Even Odd Tree","1212":"Maximum Number of Visible Points","1213":"Minimum One Bit Operations to Make Integers Zero","1214":"Maximum Nesting Depth of the Parentheses","1215":"Maximal Network Rank","1216":"Split Two Strings to Make Palindrome","1217":"Count Subtrees With Max Distance Between Cities","1218":"Mean of Array After Removing Some Elements","1219":"Coordinate With Maximum Network Quality","1220":"Number of Sets of K Non-Overlapping Line Segments","1221":"Fancy Sequence","1222":"Largest Substring Between Two Equal Characters","1223":"Lexicographically Smallest String After Applying Operations","1224":"Best Team With No Conflicts","1225":"Slowest Key","1226":"Arithmetic Subarrays","1227":"Path With Minimum Effort","1228":"Rank Transform of a Matrix","1229":"Percentage of Users Attended a Contest","1230":"Sort Array by Increasing Frequency","1231":"Widest Vertical Area Between Two Points Containing No Points","1232":"Count Substrings That Differ by One Character","1233":"Check Array Formation Through Concatenation","1234":"Count Sorted Vowel Strings","1235":"Furthest Building You Can Reach","1236":"Kth Smallest Instructions","1237":"Get Maximum in Generated Array","1238":"Minimum Deletions to Make Character Frequencies Unique","1239":"Create Sorted Array through Instructions","1240":"Defuse the Bomb","1241":"Minimum Deletions to Make String Balanced","1242":"Minimum Jumps to Reach Home","1243":"Distribute Repeating Integers","1244":"Design an Ordered Stream","1245":"Determine if Two Strings Are Close","1246":"Minimum Operations to Reduce X to Zero","1247":"Maximize Grid Happiness","1248":"Average Time of Process per Machine","1249":"Check If Two String Arrays are Equivalent","1250":"Smallest String With A Given Numeric Value","1251":"Ways to Make a Fair Array","1252":"Minimum Initial Energy to Finish Tasks","1253":"Fix Names in a Table","1254":"Maximum Repeating Substring","1255":"Merge In Between Linked Lists","1256":"Design Front Middle Back Queue","1257":"Minimum Number of Removals to Make Mountain Array","1258":"Richest Customer Wealth","1259":"Find the Most Competitive Subsequence","1260":"Minimum Moves to Make Array Complementary","1261":"Minimize Deviation in Array","1262":"Goal Parser Interpretation","1263":"Max Number of K-Sum Pairs","1264":"Concatenation of Consecutive Binary Numbers","1265":"Minimum Incompatibility","1266":"Invalid Tweets","1267":"Count the Number of Consistent Strings","1268":"Sum of Absolute Differences in a Sorted Array","1269":"Stone Game VI","1270":"Delivering Boxes from Storage to Ports","1271":"Count of Matches in Tournament","1272":"Partitioning Into Minimum Number Of Deci-Binary Numbers","1273":"Stone Game VII","1274":"Maximum Height by Stacking Cuboids","1275":"Daily Leads and Partners","1276":"Reformat Phone Number","1277":"Maximum Erasure Value","1278":"Jump Game VI","1279":"Number of Students Unable to Eat Lunch","1280":"Average Waiting Time","1281":"Maximum Binary String After Change","1282":"Minimum Adjacent Swaps for K Consecutive Ones","1283":"Determine if String Halves Are Alike","1284":"Maximum Number of Eaten Apples","1285":"Where Will the Ball Fall","1286":"Maximum XOR With an Element From Array","1287":"Maximum Units on a Truck","1288":"Count Good Meals","1289":"Ways to Split Array Into Three Subarrays","1290":"Minimum Operations to Make a Subsequence","1291":"Calculate Money in Leetcode Bank","1292":"Maximum Score From Removing Substrings","1293":"Construct the Lexicographically Largest Valid Sequence","1294":"Number Of Ways To Reconstruct A Tree","1295":"Swapping Nodes in a Linked List","1296":"Minimize Hamming Distance After Swap Operations","1297":"Find Minimum Time to Finish All Jobs","1298":"Number Of Rectangles That Can Form The Largest Square","1299":"Tuple with Same Product","1300":"Largest Submatrix With Rearrangements","1301":"Cat and Mouse II","1302":"Find Followers Count","1303":"The Number of Employees Which Report to Each Employee","1304":"Find the Highest Altitude","1305":"Minimum Number of People to Teach","1306":"Decode XORed Permutation","1307":"Count Ways to Make Array With Product","1308":"Latest Time by Replacing Hidden Digits","1309":"Change Minimum Characters to Satisfy One of Three Conditions","1310":"Find Kth Largest XOR Coordinate Value","1311":"Building Boxes","1312":"Find Total Time Spent by Each Employee","1313":"Maximum Number of Balls in a Box","1314":"Restore the Array From Adjacent Pairs","1315":"Can You Eat Your Favorite Candy on Your Favorite Day?","1316":"Palindrome Partitioning IV","1317":"Sum of Unique Elements","1318":"Maximum Absolute Sum of Any Subarray","1319":"Minimum Length of String After Deleting Similar Ends","1320":"Check if Array Is Sorted and Rotated","1321":"Maximum Score From Removing Stones","1322":"Largest Merge Of Two Strings","1323":"Closest Subsequence Sum","1324":"Recyclable and Low Fat Products","1325":"Minimum Changes To Make Alternating Binary String","1326":"Count Number of Homogenous Substrings","1327":"Minimum Degree of a Connected Trio in a Graph","1328":"Longest Nice Substring","1329":"Form Array by Concatenating Subarrays of Another Array","1330":"Map of Highest Peak","1331":"Tree of Coprimes","1332":"Merge Strings Alternately","1333":"Minimum Number of Operations to Move All Balls to Each Box","1334":"Maximum Score from Performing Multiplication Operations","1335":"Maximize Palindrome Length From Subsequences","1336":"Count Items Matching a Rule","1337":"Closest Dessert Cost","1338":"Equal Sum Arrays With Minimum Number of Operations","1339":"Car Fleet II","1340":"Find Nearest Point That Has the Same X or Y Coordinate","1341":"Check if Number is a Sum of Powers of Three","1342":"Count Pairs Of Nodes","1343":"Minimum Elements to Add to Form a Given Sum","1344":"Number of Restricted Paths From First to Last Node","1345":"Make the XOR of All Segments Equal to Zero","1346":"Primary Department for Each Employee","1347":"Check if One String Swap Can Make Strings Equal","1348":"Find Center of Star Graph","1349":"Maximum Average Pass Ratio","1350":"Maximum Score of a Good Subarray","1351":"Rearrange Products Table","1352":"Second Largest Digit in a String","1353":"Design Authentication Manager","1354":"Maximum Number of Consecutive Values You Can Make","1355":"Maximize Score After N Operations","1356":"Maximum Ascending Subarray Sum","1357":"Maximum Value at a Given Index in a Bounded Array","1358":"Minimum Number of Operations to Reinitialize a Permutation","1359":"Evaluate the Bracket Pairs of a String","1360":"Maximize Number of Nice Divisors","1361":"Determine Color of a Chessboard Square","1362":"Sentence Similarity III","1363":"Count Nice Pairs in an Array","1364":"Maximum Number of Groups Getting Fresh Donuts","1365":"Truncate Sentence","1366":"Finding the Users Active Minutes","1367":"Minimum Absolute Sum Difference","1368":"Number of Different Subsequences GCDs","1369":"Sign of the Product of an Array","1370":"Find the Winner of the Circular Game","1371":"Minimum Sideway Jumps","1372":"Finding MK Average","1373":"Minimum Operations to Make the Array Increasing","1374":"Queries on Number of Points Inside a Circle","1375":"Maximum XOR for Each Query","1376":"Minimum Number of Operations to Make String Sorted","1377":"Check if the Sentence Is Pangram","1378":"Maximum Ice Cream Bars","1379":"Single-Threaded CPU","1380":"Find XOR Sum of All Pairs Bitwise AND","1381":"Sum of Digits in Base K","1382":"Frequency of the Most Frequent Element","1383":"Longest Substring Of All Vowels in Order","1384":"Maximum Building Height","1385":"Replace All Digits with Characters","1386":"Seat Reservation Manager","1387":"Maximum Element After Decreasing and Rearranging","1388":"Closest Room","1389":"Minimum Distance to the Target Element","1390":"Splitting a String Into Descending Consecutive Values","1391":"Minimum Adjacent Swaps to Reach the Kth Smallest Number","1392":"Minimum Interval to Include Each Query","1393":"Maximum Population Year","1394":"Maximum Distance Between a Pair of Values","1395":"Maximum Subarray Min-Product","1396":"Largest Color Value in a Directed Graph","1397":"Sorting the Sentence","1398":"Incremental Memory Leak","1399":"Sum of Floored Pairs","1400":"Sum of All Subset XOR Totals","1401":"Minimum Number of Swaps to Make the Binary String Alternating","1402":"Finding Pairs With a Certain Sum","1403":"Number of Ways to Rearrange Sticks With K Sticks Visible","1404":"Longer Contiguous Segments of Ones than Zeros","1405":"Minimum Speed to Arrive on Time","1406":"Jump Game VII","1407":"Stone Game VIII","1408":"Calculate Special Bonus","1409":"Substrings of Size Three with Distinct Characters","1410":"Minimize Maximum Pair Sum in Array","1411":"Get Biggest Three Rhombus Sums in a Grid","1412":"Minimum XOR Sum of Two Arrays","1413":"Check if Word Equals Summation of Two Words","1414":"Maximum Value after Insertion","1415":"Process Tasks Using Servers","1416":"Minimum Skips to Arrive at Meeting On Time","1417":"Egg Drop With 2 Eggs and N Floors","1418":"Determine Whether Matrix Can Be Obtained By Rotation","1419":"Reduction Operations to Make the Array Elements Equal","1420":"Minimum Number of Flips to Make the Binary String Alternating","1421":"Minimum Space Wasted From Packaging","1422":"Check if All the Integers in a Range Are Covered","1423":"Find the Student that Will Replace the Chalk","1424":"Largest Magic Square","1425":"Minimum Cost to Change the Final Value of Expression","1426":"Redistribute Characters to Make All Strings Equal","1427":"Merge Triplets to Form Target Triplet","1428":"The Earliest and Latest Rounds Where Players Compete","1429":"Find a Peak Element II","1430":"Largest Odd Number in String","1431":"The Number of Full Rounds You Have Played","1432":"Count Sub Islands","1433":"Minimum Absolute Difference Queries","1434":"Count Salary Categories","1435":"Remove One Element to Make the Array Strictly Increasing","1436":"Remove All Occurrences of a Substring","1437":"Maximum Alternating Subsequence Sum","1438":"Design Movie Rental System","1439":"Maximum Product Difference Between Two Pairs","1440":"Cyclically Rotating a Grid","1441":"Count Ways to Build Rooms in an Ant Colony","1442":"Build Array from Permutation","1443":"Eliminate Maximum Number of Monsters","1444":"Count Good Numbers","1445":"Longest Common Subpath","1446":"Count Square Sum Triples","1447":"Nearest Exit from Entrance in Maze","1448":"Minimum Cost to Reach Destination in Time","1449":"Concatenation of Array","1450":"Unique Length-3 Palindromic Subsequences","1451":"Painting a Grid With Three Different Colors","1452":"Confirmation Rate","1453":"Maximum Number of Words You Can Type","1454":"Add Minimum Number of Rungs","1455":"Maximum Number of Points with Cost","1456":"Maximum Genetic Difference Query","1457":"Check if All Characters Have Equal Number of Occurrences","1458":"The Number of the Smallest Unoccupied Chair","1459":"Describe the Painting","1460":"Number of Visible People in a Queue","1461":"Sum of Digits of String After Convert","1462":"Largest Number After Mutating Substring","1463":"Maximum Compatibility Score Sum","1464":"Delete Duplicate Folders in System","1465":"Minimum Garden Perimeter to Collect Enough Apples","1466":"Count Number of Special Subsequences","1467":"Delete Characters to Make Fancy String","1468":"Check if Move is Legal","1469":"Minimum Total Space Wasted With K Resizing Operations","1470":"Maximum Product of the Length of Two Palindromic Substrings","1471":"Check If String Is a Prefix of Array","1472":"Remove Stones to Minimize the Total","1473":"Minimum Number of Swaps to Make the String Balanced","1474":"Find the Longest Valid Obstacle Course at Each Position","1475":"Employees With Missing Information","1476":"Number of Strings That Appear as Substrings in Word","1477":"Array With Elements Not Equal to Average of Neighbors","1478":"Minimum Non-Zero Product of the Array Elements","1479":"Last Day Where You Can Still Cross","1480":"Find if Path Exists in Graph","1481":"Minimum Time to Type Word Using Special Typewriter","1482":"Number of Ways to Arrive at Destination","1483":"Number of Ways to Separate Numbers","1484":"Employees Whose Manager Left the Company","1485":"Find Greatest Common Divisor of Array","1486":"Find Unique Binary String","1487":"Minimize the Difference Between Target and Chosen Elements","1488":"Find Array Given Subset Sums","1489":"Minimum Difference Between Highest and Lowest of K Scores","1490":"Find the Kth Largest Integer in the Array","1491":"Minimum Number of Work Sessions to Finish the Tasks","1492":"Number of Unique Good Subsequences","1493":"Find the Middle Index in Array","1494":"Find All Groups of Farmland","1495":"Operations on Tree","1496":"The Number of Good Subsets","1497":"Count Special Quadruplets","1498":"The Number of Weak Characters in the Game","1499":"First Day Where You Have Been in All the Rooms","1500":"GCD Sort of an Array","1501":"Reverse Prefix of Word","1502":"Maximum Product of the Length of Two Palindromic Subsequences","1503":"Smallest Missing Genetic Value in Each Subtree","1504":"Count Number of Pairs With Absolute Difference K","1505":"Find Original Array From Doubled Array","1506":"Minimum Number of Operations to Make Array Continuous","1507":"Final Value of Variable After Performing Operations","1508":"Sum of Beauty in the Array","1509":"Detect Squares","1510":"Longest Subsequence Repeated k Times","1511":"Maximum Difference Between Increasing Elements","1512":"Grid Game","1513":"Check if Word Can Be Placed In Crossword","1514":"The Score of Students Solving Math Expression","1515":"Number of Pairs of Strings With Concatenation Equal to Target","1516":"Maximize the Confusion of an Exam","1517":"Maximum Number of Ways to Partition an Array","1518":"Minimum Moves to Convert String","1519":"Find Missing Observations","1520":"Stone Game IX","1521":"Smallest K-Length Subsequence With Occurrences of a Letter","1522":"Two Out of Three","1523":"Stock Price Fluctuation","1524":"Minimum Number of Moves to Seat Everyone","1525":"Remove Colored Pieces if Both Neighbors are the Same Color","1526":"The Time When the Network Becomes Idle","1527":"Kth Smallest Product of Two Sorted Arrays","1528":"Check if Numbers Are Ascending in a Sentence","1529":"Simple Bank System","1530":"Count Number of Maximum Bitwise-OR Subsets","1531":"Second Minimum Time to Reach Destination","1532":"Number of Valid Words in a Sentence","1533":"Next Greater Numerically Balanced Number","1534":"Count Nodes With the Highest Score","1535":"Parallel Courses III","1536":"Kth Distinct String in an Array","1537":"Two Best Non-Overlapping Events","1538":"Plates Between Candles","1539":"Number of Valid Move Combinations On Chessboard","1540":"Smallest Index With Equal Value","1541":"Find the Minimum and Maximum Number of Nodes Between Critical Points","1542":"Minimum Operations to Convert Number","1543":"Check if an Original String Exists Given Two Encoded Strings","1544":"Count Vowel Substrings of a String","1545":"Vowels of All Substrings","1546":"Minimized Maximum of Products Distributed to Any Store","1547":"Maximum Path Quality of a Graph","1548":"Check Whether Two Strings are Almost Equivalent","1549":"Walking Robot Simulation II","1550":"Most Beautiful Item for Each Query","1551":"Maximum Number of Tasks You Can Assign","1552":"Time Needed to Buy Tickets","1553":"Reverse Nodes in Even Length Groups","1554":"Decode the Slanted Ciphertext","1555":"Process Restricted Friend Requests","1556":"Two Furthest Houses With Different Colors","1557":"Watering Plants","1558":"Range Frequency Queries","1559":"Sum of k-Mirror Numbers","1560":"Count Common Words With One Occurrence","1561":"Minimum Number of Food Buckets to Feed the Hamsters","1562":"Minimum Cost Homecoming of a Robot in a Grid","1563":"Count Fertile Pyramids in a Land","1564":"Find Target Indices After Sorting Array","1565":"Removing Minimum and Maximum From Array","1566":"Find All People With Secret","1567":"Finding 3-Digit Even Numbers","1568":"Delete the Middle Node of a Linked List","1569":"Step-By-Step Directions From a Binary Tree Node to Another","1570":"Valid Arrangement of Pairs","1571":"Find Subsequence of Length K With the Largest Sum","1572":"Find Good Days to Rob the Bank","1573":"Detonate the Maximum Bombs","1574":"Sequentially Ordinal Rank Tracker","1575":"Rings and Rods","1576":"Sum of Subarray Ranges","1577":"Watering Plants II","1578":"Maximum Fruits Harvested After at Most K Steps","1579":"Find First Palindromic String in the Array","1580":"Adding Spaces to a String","1581":"Number of Smooth Descent Periods of a Stock","1582":"Minimum Operations to Make the Array K-Increasing","1583":"Maximum Number of Words Found in Sentences","1584":"Find All Possible Recipes from Given Supplies","1585":"Check if a Parentheses String Can Be Valid","1586":"Abbreviating the Product of a Range","1587":"A Number After a Double Reversal","1588":"Execution of All Suffix Instructions Staying in a Grid","1589":"Intervals Between Identical Elements","1590":"Recover the Original Array","1591":"Check if All A's Appears Before All B's","1592":"Number of Laser Beams in a Bank","1593":"Destroying Asteroids","1594":"Maximum Employees to Be Invited to a Meeting","1595":"Capitalize the Title","1596":"Maximum Twin Sum of a Linked List","1597":"Longest Palindrome by Concatenating Two Letter Words","1598":"Stamping the Grid","1599":"Check if Every Row and Column Contains All Numbers","1600":"Minimum Swaps to Group All 1's Together II","1601":"Count Words Obtained After Adding a Letter","1602":"Divide a String Into Groups of Size k","1603":"Minimum Moves to Reach Target Score","1604":"Maximum Running Time of N Computers","1605":"Minimum Cost of Buying Candies With Discount","1606":"Count the Hidden Sequences","1607":"K Highest Ranked Items Within a Price Range","1608":"Number of Ways to Divide a Long Corridor","1609":"Count Elements With Strictly Smaller and Greater Elements","1610":"Rearrange Array Elements by Sign","1611":"Find All Lonely Numbers in the Array","1612":"Keep Multiplying Found Values by Two","1613":"All Divisions With the Highest Score of a Binary Array","1614":"Find Substring With Given Hash Value","1615":"Groups of Strings","1616":"Minimum Sum of Four Digit Number After Splitting Digits","1617":"Partition Array According to Given Pivot","1618":"Minimum Cost to Set Cooking Time","1619":"Minimum Difference in Sums After Removal of Elements","1620":"Sort Even and Odd Indices Independently","1621":"Smallest Value of the Rearranged Number","1622":"Design Bitset","1623":"Minimum Time to Remove All Cars Containing Illegal Goods","1624":"Count Operations to Obtain Zero","1625":"Minimum Operations to Make the Array Alternating","1626":"Removing Minimum Number of Magic Beans","1627":"Count Equal and Divisible Pairs in an Array","1628":"Find Three Consecutive Integers That Sum to a Given Number","1629":"Maximum Split of Positive Even Integers","1630":"Count Good Triplets in an Array","1631":"Count Integers With Even Digit Sum","1632":"Merge Nodes in Between Zeros","1633":"Construct String With Repeat Limit","1634":"Count Array Pairs Divisible by K","1635":"Counting Words With a Given Prefix","1636":"Minimum Number of Steps to Make Two Strings Anagram II","1637":"Minimum Time to Complete Trips","1638":"Minimum Time to Finish the Race","1639":"Most Frequent Number Following Key In an Array","1640":"Sort the Jumbled Numbers","1641":"All Ancestors of a Node in a Directed Acyclic Graph","1642":"Minimum Number of Moves to Make Palindrome","1643":"Cells in a Range on an Excel Sheet","1644":"Create Binary Tree From Descriptions","1645":"Replace Non-Coprime Numbers in Array","1646":"Find All K-Distant Indices in an Array","1647":"Count Artifacts That Can Be Extracted","1648":"Maximize the Topmost Element After K Moves","1649":"Minimum Weighted Subgraph With the Required Paths","1650":"Divide Array Into Equal Pairs","1651":"Maximize Number of Subsequences in a String","1652":"Minimum Operations to Halve Array Sum","1653":"Minimum White Tiles After Covering With Carpets","1654":"Count Hills and Valleys in an Array","1655":"Count Collisions on a Road","1656":"Maximum Points in an Archery Competition","1657":"Longest Substring of One Repeating Character","1658":"Find the Difference of Two Arrays","1659":"Find Palindrome With Fixed Length","1660":"Maximum Value of K Coins From Piles","1661":"Minimum Bit Flips to Convert Number","1662":"Number of Ways to Select Buildings","1663":"Sum of Scores of Built Strings","1664":"Minimum Number of Operations to Convert Time","1665":"Find Players With Zero or One Losses","1666":"Maximum Candies Allocated to K Children","1667":"Encrypt and Decrypt Strings","1668":"Largest Number After Digit Swaps by Parity","1669":"Minimize Result by Adding Parentheses to Expression","1670":"Maximum Product After K Increments","1671":"Maximum Total Beauty of the Gardens","1672":"Add Two Integers","1673":"Root Equals Sum of Children","1674":"Find Closest Number to Zero","1675":"Number of Ways to Buy Pens and Pencils","1676":"Design an ATM Machine","1677":"Maximum Score of a Node Sequence","1678":"Calculate Digit Sum of a String","1679":"Minimum Rounds to Complete All Tasks","1680":"Maximum Trailing Zeros in a Cornered Path","1681":"Longest Path With Different Adjacent Characters","1682":"Intersection of Multiple Arrays","1683":"Count Lattice Points Inside a Circle","1684":"Count Number of Rectangles Containing Each Point","1685":"Number of Flowers in Full Bloom","1686":"Count Prefixes of a Given String","1687":"Minimum Average Difference","1688":"Count Unguarded Cells in the Grid","1689":"Escape the Spreading Fire","1690":"Remove Digit From Number to Maximize Result","1691":"Minimum Consecutive Cards to Pick Up","1692":"K Divisible Elements Subarrays","1693":"Total Appeal of A String","1694":"Largest 3-Same-Digit Number in String","1695":"Count Number of Texts","1696":"Check if There Is a Valid Parentheses String Path","1697":"Find the K-Beauty of a Number","1698":"Maximum White Tiles Covered by a Carpet","1699":"Substring With Largest Variance","1700":"Find Resultant Array After Removing Anagrams","1701":"Maximum Consecutive Floors Without Special Floors","1702":"Largest Combination With Bitwise AND Greater Than Zero","1703":"Count Integers in Intervals","1704":"Maximum Bags With Full Capacity of Rocks","1705":"Minimum Lines to Represent a Line Chart","1706":"Sum of Total Strength of Wizards","1707":"Check if Number Has Equal Digit Count and Digit Value","1708":"Sender With Largest Word Count","1709":"Maximum Total Importance of Roads","1710":"Booking Concert Tickets in Groups","1711":"Rearrange Characters to Make Target String","1712":"Apply Discount to Prices","1713":"Steps to Make Array Non-decreasing","1714":"Minimum Obstacle Removal to Reach Corner","1715":"Partition Array Such That Maximum Difference Is K","1716":"Replace Elements in an Array","1717":"Design a Text Editor","1718":"Strong Password Checker II","1719":"Successful Pairs of Spells and Potions","1720":"Count Subarrays With Score Less Than K","1721":"Calculate Amount Paid in Taxes","1722":"Minimum Path Cost in a Grid","1723":"Fair Distribution of Cookies","1724":"Naming a Company","1725":"Sum of Numbers With Units Digit K","1726":"Longest Binary Subsequence Less Than or Equal to K","1727":"Selling Pieces of Wood","1728":"Count Asterisks","1729":"Maximum XOR After Operations","1730":"Number of Distinct Roll Sequences","1731":"Check if Matrix Is X-Matrix","1732":"Count Number of Ways to Place Houses","1733":"Maximum Score Of Spliced Array","1734":"Minimum Score After Removals on a Tree","1735":"Decode the Message","1736":"Number of People Aware of a Secret","1737":"Number of Increasing Paths in a Grid","1738":"Evaluate Boolean Binary Tree","1739":"The Latest Time to Catch a Bus","1740":"Minimum Sum of Squared Difference","1741":"Subarray With Elements Greater Than Varying Threshold","1742":"Minimum Amount of Time to Fill Cups","1743":"Smallest Number in Infinite Set","1744":"Move Pieces to Obtain a String","1745":"Count the Number of Ideal Arrays","1746":"Maximum Number of Pairs in Array","1747":"Max Sum of a Pair With Equal Sum of Digits","1748":"Minimum Deletions to Make Array Divisible","1749":"Best Poker Hand","1750":"Number of Zero-Filled Subarrays","1751":"Design a Number Container System","1752":"Shortest Impossible Sequence of Rolls","1753":"Equal Row and Column Pairs","1754":"Design a Food Rating System","1755":"Number of Excellent Pairs","1756":"Number of Unique Subjects Taught by Each Teacher","1757":"Make Array Zero by Subtracting Equal Amounts","1758":"Maximum Number of Groups Entering a Competition","1759":"Find Closest Node to Given Two Nodes","1760":"Longest Cycle in a Graph","1761":"Merge Similar Items","1762":"Count Number of Bad Pairs","1763":"Task Scheduler II","1764":"Number of Arithmetic Triplets","1765":"Reachable Nodes With Restrictions","1766":"Check if There is a Valid Partition For The Array","1767":"Longest Ideal Subsequence","1768":"Largest Local Values in a Matrix","1769":"Node With Highest Edge Score","1770":"Construct Smallest Number From DI String","1771":"Count Special Integers","1772":"Minimum Recolors to Get K Consecutive Black Blocks","1773":"Time Needed to Rearrange a Binary String","1774":"Shifting Letters II","1775":"Minimum Hours of Training to Win a Competition","1776":"Largest Palindromic Number","1777":"Amount of Time for Binary Tree to Be Infected","1778":"Find the K-Sum of an Array","1779":"Longest Subsequence With Limited Sum","1780":"Removing Stars From a String","1781":"Minimum Amount of Time to Collect Garbage","1782":"Build a Matrix With Conditions","1783":"Find Subarrays With Equal Sum","1784":"Strictly Palindromic Number","1785":"Maximum Rows Covered by Columns","1786":"Maximum Number of Robots Within Budget","1787":"Check Distances Between Same Letters","1788":"Number of Ways to Reach a Position After Exactly k Steps","1789":"Meeting Rooms III","1790":"Optimal Partition of String","1791":"Divide Intervals Into Minimum Number of Groups","1792":"Longest Increasing Subsequence II","1793":"Count Days Spent Together","1794":"Maximum Matching of Players With Trainers","1795":"Smallest Subarrays With Maximum Bitwise OR","1796":"Minimum Money Required Before Transactions","1797":"Smallest Even Multiple","1798":"Length of the Longest Alphabetical Continuous Substring","1799":"Reverse Odd Levels of Binary Tree","1800":"Sum of Prefix Scores of Strings","1801":"Sort the People","1802":"Longest Subarray With Maximum Bitwise AND","1803":"Find All Good Indices","1804":"Number of Good Paths","1805":"Remove Letter To Equalize Frequency","1806":"Longest Uploaded Prefix","1807":"Bitwise XOR of All Pairings","1808":"Number of Pairs Satisfying Inequality","1809":"Number of Common Factors","1810":"Maximum Sum of an Hourglass","1811":"Minimize XOR","1812":"Maximum Deletions on a String","1813":"The Employee That Worked on the Longest Task","1814":"Find The Original Array of Prefix Xor","1815":"Using a Robot to Print the Lexicographically Smallest String","1816":"Paths in Matrix Whose Sum Is Divisible by K","1817":"Range Product Queries of Powers","1818":"Minimize Maximum of Array","1819":"Create Components With Same Value","1820":"Largest Positive Integer That Exists With Its Negative","1821":"Count Number of Distinct Integers After Reverse Operations","1822":"Sum of Number and Its Reverse","1823":"Count Subarrays With Fixed Bounds","1824":"Determine if Two Events Have Conflict","1825":"Number of Subarrays With GCD Equal to K","1826":"Minimum Cost to Make Array Equal","1827":"Minimum Number of Operations to Make Arrays Similar","1828":"Odd String Difference","1829":"Words Within Two Edits of Dictionary","1830":"Destroy Sequential Targets","1831":"Next Greater Element IV","1832":"Average Value of Even Numbers That Are Divisible by Three","1833":"Most Popular Video Creator","1834":"Minimum Addition to Make Integer Beautiful","1835":"Height of Binary Tree After Subtree Removal Queries","1836":"Apply Operations to an Array","1837":"Maximum Sum of Distinct Subarrays With Length K","1838":"Total Cost to Hire K Workers","1839":"Minimum Total Distance Traveled","1840":"Number of Distinct Averages","1841":"Count Ways To Build Good Strings","1842":"Most Profitable Path in a Tree","1843":"Convert the Temperature","1844":"Number of Subarrays With LCM Equal to K","1845":"Minimum Number of Operations to Sort a Binary Tree by Level","1846":"Maximum Number of Non-overlapping Palindrome Substrings","1847":"Number of Unequal Triplets in Array","1848":"Closest Nodes Queries in a Binary Search Tree","1849":"Minimum Fuel Cost to Report to the Capital","1850":"Number of Beautiful Partitions","1851":"Minimum Cuts to Divide a Circle","1852":"Difference Between Ones and Zeros in Row and Column","1853":"Count Palindromic Subsequences","1854":"Find the Pivot Integer","1855":"Append Characters to String to Make Subsequence","1856":"Remove Nodes From Linked List","1857":"Count Subarrays With Median K","1858":"Circular Sentence","1859":"Divide Players Into Teams of Equal Skill","1860":"Divide Nodes Into the Maximum Number of Groups","1861":"Maximum Value of a String in an Array","1862":"Maximum Star Sum of a Graph","1863":"Frog Jump II","1864":"Minimum Total Cost to Make Arrays Unequal","1865":"Delete Greatest Value in Each Row","1866":"Longest Square Streak in an Array","1867":"Design Memory Allocator","1868":"Maximum Number of Points From Grid Queries","1869":"Count Pairs Of Similar Strings","1870":"Smallest Value After Replacing With Sum of Prime Factors","1871":"Add Edges to Make Degrees of All Nodes Even","1872":"Cycle Length Queries in a Tree","1873":"Maximum Enemy Forts That Can Be Captured","1874":"Reward Top K Students","1875":"Minimize the Maximum of Two Arrays","1876":"Count Anagrams","1877":"Shortest Distance to Target String in a Circular Array","1878":"Take K of Each Character From Left and Right","1879":"Maximum Tastiness of Candy Basket","1880":"Number of Great Partitions","1881":"Count the Digits That Divide a Number","1882":"Distinct Prime Factors of Product of Array","1883":"Partition String Into Substrings With Values at Most K","1884":"Closest Prime Numbers in Range","1885":"Categorize Box According to Criteria","1886":"Find Consecutive Integers from a Data Stream","1887":"Find Xor-Beauty of Array","1888":"Maximize the Minimum Powered City","1889":"Maximum Count of Positive Integer and Negative Integer","1890":"Maximal Score After Applying K Operations","1891":"Make Number of Distinct Characters Equal","1892":"Time to Cross a Bridge","1893":"Difference Between Element Sum and Digit Sum of an Array","1894":"Increment Submatrices by One","1895":"Count the Number of Good Subarrays","1896":"Difference Between Maximum and Minimum Price Sum","1897":"Minimum Common Value","1898":"Minimum Operations to Make Array Equal II","1899":"Maximum Subsequence Score","1900":"Check if Point Is Reachable","1901":"Alternating Digit Sum","1902":"Sort the Students by Their Kth Score","1903":"Apply Bitwise Operations to Make Strings Equal","1904":"Minimum Cost to Split an Array","1905":"Count Distinct Numbers on Board","1906":"Count Collisions of Monkeys on a Polygon","1907":"Put Marbles in Bags","1908":"Count Increasing Quadruplets","1909":"Separate the Digits in an Array","1910":"Maximum Number of Integers to Choose From a Range I","1911":"Maximize Win From Two Segments","1912":"Disconnect Path in a Binary Matrix by at Most One Flip","1913":"Take Gifts From the Richest Pile","1914":"Count Vowel Strings in Ranges","1915":"House Robber IV","1916":"Rearranging Fruits","1917":"Find the Array Concatenation Value","1918":"Count the Number of Fair Pairs","1919":"Substring XOR Queries","1920":"Subsequence With the Minimum Score","1921":"Maximum Difference by Remapping a Digit","1922":"Minimum Score by Changing Two Elements","1923":"Minimum Impossible OR","1924":"Handling Sum Queries After Update","1925":"Merge Two 2D Arrays by Summing Values","1926":"Minimum Operations to Reduce an Integer to 0","1927":"Count the Number of Square-Free Subsets","1928":"Find the String with LCP","1929":"Left and Right Sum Differences","1930":"Find the Divisibility Array of a String","1931":"Find the Maximum Number of Marked Indices","1932":"Minimum Time to Visit a Cell In a Grid","1933":"Split With Minimum Sum","1934":"Count Total Number of Colored Cells","1935":"Count Ways to Group Overlapping Ranges","1936":"Count Number of Possible Root Nodes","1937":"Pass the Pillow","1938":"Kth Largest Sum in a Binary Tree","1939":"Split the Array to Make Coprime Products","1940":"Number of Ways to Earn Points","1941":"Count the Number of Vowel Strings in Range","1942":"Rearrange Array to Maximize Prefix Score","1943":"Count the Number of Beautiful Subarrays","1944":"Minimum Time to Complete All Tasks","1945":"Distribute Money to Maximum Children","1946":"Maximize Greatness of an Array","1947":"Find Score of an Array After Marking All Elements","1948":"Minimum Time to Repair Cars","1949":"Number of Even and Odd Bits","1950":"Check Knight Tour Configuration","1951":"The Number of Beautiful Subsets","1952":"K Items With the Maximum Sum","1953":"Minimum Operations to Make All Array Elements Equal","1954":"Collect Coins in a Tree","1955":"Form Smallest Number From Two Digit Arrays","1956":"Shortest Cycle in a Graph","1957":"Find the Longest Balanced Substring of a Binary String","1958":"Convert an Array Into a 2D Array With Conditions","1959":"Mice and Cheese","1960":"Minimum Reverse Operations","1961":"Sum of Distances","1962":"Minimum Number of Visited Cells in a Grid","1963":"Check if Object Instance of Class","1964":"Array Prototype Last","1965":"Counter","1966":"Sleep","1967":"Cache With Time Limit","1968":"Memoize","1969":"Snail Traversal","1970":"Flatten Deeply Nested Array","1971":"Array Reduce Transformation","1972":"Debounce","1973":"Function Composition","1974":"Memoize II","1975":"Group By","1976":"Filter Elements from Array","1977":"Apply Transform Over Each Element in Array","1978":"Promise Time Limit","1979":"Find the Width of Columns of a Grid","1980":"Find the Score of All Prefixes of an Array","1981":"Cousins in Binary Tree II","1982":"Design Graph With Shortest Path Calculator","1983":"Row With Maximum Ones","1984":"Find the Maximum Divisibility Score","1985":"Minimum Additions to Make Valid String","1986":"Minimize the Total Price of the Trips","1987":"Generate Fibonacci Sequence","1988":"Design Cancellable Function","1989":"Calculate Delayed Arrival Time","1990":"Sum Multiples","1991":"Sliding Subarray Beauty","1992":"Minimum Number of Operations to Make All Array Elements Equal to 1","1993":"Maximum Sum With Exactly K Elements","1994":"Find the Prefix Common Array of Two Arrays","1995":"Maximum Number of Fish in a Grid","1996":"Make Array Empty","1997":"Determine the Winner of a Bowling Game","1998":"First Completely Painted Row or Column","1999":"Minimum Cost of a Path With Special Roads","2000":"Lexicographically Smallest Beautiful String","2001":"Counter II","2002":"Allow One Function Call","2003":"Create Hello World Function","2004":"Find the Distinct Difference Array","2005":"Frequency Tracker","2006":"Number of Adjacent Elements With the Same Color","2007":"Make Costs of Paths Equal in a Binary Tree","2008":"Number of Senior Citizens","2009":"Sum in a Matrix","2010":"Maximum OR","2011":"Power of Heroes","2012":"Find the Losers of the Circular Game","2013":"Neighboring Bitwise XOR","2014":"Maximum Number of Moves in a Grid","2015":"Count the Number of Complete Components","2016":"Call Function with Custom Context","2017":"Event Emitter","2018":"Array Wrapper","2019":"Minimum String Length After Removing Substrings","2020":"Lexicographically Smallest Palindrome","2021":"Find the Punishment Number of an Integer","2022":"Modify Graph Edge Weights","2023":"Return Length of Arguments Passed","2024":"To Be Or Not To Be","2025":"Compact Object","2026":"Buy Two Chocolates","2027":"Extra Characters in a String","2028":"Maximum Strength of a Group","2029":"Remove Trailing Zeros From a String","2030":"Difference of Number of Distinct Values on Diagonals","2031":"Minimum Cost to Make All Characters Equal","2032":"Maximum Strictly Increasing Cells in a Matrix","2033":"Timeout Cancellation","2034":"Minimize String Length","2035":"Semi-Ordered Permutation","2036":"Sum of Matrix After Queries","2037":"Count of Integers","2038":"Execute Asynchronous Functions in Parallel","2039":"Join Two Arrays by ID","2040":"Add Two Promises","2041":"Sort By","2042":"Interval Cancellation","2043":"Calculator with Method Chaining","2044":"Is Object Empty","2045":"Check if The Number is Fascinating","2046":"Find the Longest Semi-Repetitive Substring","2047":"Movement of Robots","2048":"Find a Good Subset of the Matrix","2049":"Neither Minimum nor Maximum","2050":"Collecting Chocolates","2051":"Maximum Sum Queries","2052":"Total Distance Traveled","2053":"Find the Value of the Partition","2054":"Special Permutations","2055":"Find Maximum Number of String Pairs","2056":"Construct the Longest New String","2057":"Decremental String Concatenation","2058":"Count Zero Request Servers","2059":"Number of Beautiful Pairs","2060":"Minimum Operations to Make the Integer Zero","2061":"Ways to Split Array Into Good Subarrays","2062":"Robot Collisions","2063":"Longest Even Odd Subarray With Threshold","2064":"Prime Pairs With Target Sum","2065":"Continuous Subarrays","2066":"Longest Alternating Subarray","2067":"Relocate Marbles","2068":"Partition String Into Minimum Beautiful Substrings","2069":"Number of Black Blocks","2070":"Find the Maximum Achievable Number","2071":"Maximum Number of Jumps to Reach the Last Index","2072":"Longest Non-decreasing Subarray From Two Arrays","2073":"Sum of Squares of Special Elements","2074":"Maximum Beauty of an Array After Applying Operation","2075":"Minimum Index of a Valid Split","2076":"Length of the Longest Valid Substring","2077":"Check if Array is Good","2078":"Sort Vowels in a String","2079":"Visit Array Positions to Maximize Score","2080":"Ways to Express an Integer as Sum of Powers","2081":"Split Strings by Separator","2082":"Largest Element in an Array after Merge Operations","2083":"Maximum Number of Groups With Increasing Length","2084":"Count Paths That Can Form a Palindrome in a Tree","2085":"Number of Employees Who Met the Target","2086":"Count Complete Subarrays in an Array","2087":"Shortest String That Contains Three Strings","2088":"Count Stepping Numbers in Range","2089":"Account Balance After Rounded Purchase","2090":"Insert Greatest Common Divisors in Linked List","2091":"Minimum Seconds to Equalize a Circular Array","2092":"Minimum Time to Make Array Sum At Most x","2093":"Faulty Keyboard","2094":"Check if it is Possible to Split Array","2095":"Find the Safest Path in a Grid","2096":"Maximum Elegance of a K-Length Subsequence","2097":"Max Pair Sum in an Array","2098":"Double a Number Represented as a Linked List","2099":"Minimum Absolute Difference Between Elements With Constraint","2100":"Apply Operations to Maximize Score","2101":"Count Pairs Whose Sum is Less than Target","2102":"Make String a Subsequence Using Cyclic Increments","2103":"Sorting Three Groups","2104":"Number of Beautiful Integers in the Range","2105":"Check if a String Is an Acronym of Words","2106":"Determine the Minimum Sum of a k-avoiding Array","2107":"Maximize the Profit as the Salesman","2108":"Find the Longest Equal Subarray","2109":"Furthest Point From Origin","2110":"Find the Minimum Possible Sum of a Beautiful Array","2111":"Minimum Operations to Form Subsequence With Target Sum","2112":"Maximize Value of Function in a Ball Passing Game","2113":"Check if Strings Can be Made Equal With Operations I","2114":"Check if Strings Can be Made Equal With Operations II","2115":"Maximum Sum of Almost Unique Subarray","2116":"Count K-Subsequences of a String With Maximum Beauty","2117":"Count Symmetric Integers","2118":"Count of Interesting Subarrays","2119":"Minimum Edge Weight Equilibrium Queries in a Tree","2120":"Points That Intersect With Cars","2121":"Determine if a Cell Is Reachable at a Given Time","2122":"Minimum Moves to Spread Stones Over Grid","2123":"String Transformation","2124":"Minimum Right Shifts to Sort the Array","2125":"Minimum Array Length After Pair Removals","2126":"Count Pairs of Points With Distance k","2127":"Happy Students","2128":"Maximum Number of Alloys","2129":"Maximum Element-Sum of a Complete Subset of Indices","2130":"Maximum Odd Binary Number","2131":"Beautiful Towers I","2132":"Beautiful Towers II","2133":"Count Valid Paths in a Tree","2134":"Minimum Operations to Collect Elements","2135":"Minimum Number of Operations to Make Array Empty","2136":"Split Array Into Maximum Number of Subarrays","2137":"Maximum Number of K-Divisible Components","2138":"Maximum Value of an Ordered Triplet I","2139":"Maximum Value of an Ordered Triplet II","2140":"Minimum Size Subarray in Infinite Array","2141":"Count Visited Nodes in a Directed Graph","2142":"Create a DataFrame from List","2143":"Get the Size of a DataFrame","2144":"Display the First Three Rows","2145":"Select Data","2146":"Create a New Column","2147":"Drop Duplicate Rows","2148":"Drop Missing Data","2149":"Modify Columns","2150":"Rename Columns","2151":"Change Data Type","2152":"Fill Missing Data","2153":"Reshape Data: Concatenate","2154":"Reshape Data: Pivot","2155":"Reshape Data: Melt","2156":"Method Chaining","2157":"Divisible and Non-divisible Sums Difference","2158":"Minimum Processing Time","2159":"Apply Operations on Array to Maximize Sum of Squares","2160":"Last Visited Integers","2161":"Longest Unequal Adjacent Groups Subsequence I","2162":"Longest Unequal Adjacent Groups Subsequence II","2163":"Count of Sub-Multisets With Bounded Sum","2164":"Find Indices With Index and Value Difference I","2165":"Shortest and Lexicographically Smallest Beautiful String","2166":"Find Indices With Index and Value Difference II","2167":"Construct Product Matrix","2168":"Minimum Sum of Mountain Triplets I","2169":"Minimum Number of Groups to Create a Valid Assignment","2170":"Minimum Changes to Make K Semi-palindromes","2171":"Subarrays Distinct Element Sum of Squares I","2172":"Minimum Number of Changes to Make Binary String Beautiful","2173":"Length of the Longest Subsequence That Sums to Target","2174":"Subarrays Distinct Element Sum of Squares II","2175":"Minimum Increment Operations to Make Array Beautiful","2176":"Maximum Points After Collecting Coins From All Nodes","2177":"Find Champion I","2178":"Find Champion II","2179":"Maximum Score After Applying Operations on a Tree","2180":"Maximum Balanced Subsequence Sum","2181":"Distribute Candies Among Children I","2182":"Distribute Candies Among Children II","2183":"Number of Strings Which Can Be Rearranged to Contain Substring","2184":"Maximum Spending After Buying Items","2185":"Maximum Strong Pair XOR I","2186":"High-Access Employees","2187":"Minimum Operations to Maximize Last Elements in Arrays","2188":"Maximum Strong Pair XOR II","2189":"Make Three Strings Equal","2190":"Separate Black and White Balls","2191":"Maximum Xor Product","2192":"Find Building Where Alice and Bob Can Meet","2193":"Find Words Containing Character","2194":"Maximize Area of Square Hole in Grid","2195":"Minimum Number of Coins for Fruits","2196":"Find Maximum Non-decreasing Array Length","2197":"Matrix Similarity After Cyclic Shifts","2198":"Count Beautiful Substrings I","2199":"Make Lexicographically Smallest Array by Swapping Elements","2200":"Count Beautiful Substrings II","2201":"Find the Peaks","2202":"Minimum Number of Coins to be Added","2203":"Count Complete Substrings","2204":"Count the Number of Infection Sequences","2205":"Find Common Elements Between Two Arrays","2206":"Remove Adjacent Almost-Equal Characters","2207":"Length of Longest Subarray With at Most K Frequency","2208":"Number of Possible Sets of Closing Branches","2209":"Count Tested Devices After Test Operations","2210":"Double Modular Exponentiation","2211":"Count Subarrays Where Max Element Appears at Least K Times","2212":"Count the Number of Good Partitions","2213":"Find Missing and Repeated Values","2214":"Divide Array Into Arrays With Max Difference","2215":"Minimum Cost to Make Array Equalindromic","2216":"Count the Number of Incremovable Subarrays I","2217":"Find Polygon With the Largest Perimeter","2218":"Count the Number of Incremovable Subarrays II","2219":"Find Number of Coins to Place in Tree Nodes","2220":"Maximum Square Area by Removing Fences From a Field","2221":"Minimum Cost to Convert String I","2222":"Minimum Cost to Convert String II","2223":"Check if Bitwise OR Has Trailing Zeros","2224":"Find Longest Special Substring That Occurs Thrice I","2225":"Find Longest Special Substring That Occurs Thrice II","2226":"Palindrome Rearrangement Queries","2227":"Minimum Number of Operations to Make Array XOR Equal to K","2228":"Minimum Number of Operations to Make X and Y Equal","2229":"Count the Number of Powerful Integers","2230":"Maximum Area of Longest Diagonal Rectangle","2231":"Minimum Moves to Capture The Queen","2232":"Maximum Size of a Set After Removals","2233":"Maximize the Number of Partitions After Operations","2234":"Count Elements With Maximum Frequency","2235":"Find Beautiful Indices in the Given Array I","2236":"Maximum Number That Sum of the Prices Is Less Than or Equal to K","2237":"Find Beautiful Indices in the Given Array II","2238":"Divide an Array Into Subarrays With Minimum Cost I","2239":"Find if Array Can Be Sorted","2240":"Minimize Length of Array Using Operations","2241":"Divide an Array Into Subarrays With Minimum Cost II","2242":"Minimum Number of Pushes to Type Word I","2243":"Count the Number of Houses at a Certain Distance I","2244":"Minimum Number of Pushes to Type Word II","2245":"Count the Number of Houses at a Certain Distance II","2246":"Number of Changing Keys","2247":"Alice and Bob Playing Flower Game","2248":"Minimize OR of Remaining Elements Using Operations","2249":"Type of Triangle","2250":"Find the Number of Ways to Place People I","2251":"Maximum Good Subarray Sum","2252":"Find the Number of Ways to Place People II","2253":"Ant on the Boundary","2254":"Minimum Time to Revert Word to Initial State I","2255":"Find the Grid of Region Average","2256":"Modify the Matrix","2257":"Number of Subarrays That Match a Pattern I","2258":"Maximum Palindromes After Operations","2259":"Maximum Number of Operations With the Same Score I","2260":"Apply Operations to Make String Empty","2261":"Maximum Number of Operations With the Same Score II","2262":"Maximize Consecutive Elements in an Array After Modification","2263":"Count Prefix and Suffix Pairs I","2264":"Find the Length of the Longest Common Prefix","2265":"Most Frequent Prime","2266":"Split the Array","2267":"Find the Largest Area of Square Inside Two Rectangles","2268":"Earliest Second to Mark Indices I","2269":"Earliest Second to Mark Indices II","2270":"Minimum Operations to Exceed Threshold Value I","2271":"Minimum Operations to Exceed Threshold Value II","2272":"Count Pairs of Connectable Servers in a Weighted Tree Network","2273":"Find the Maximum Sum of Node Values","2274":"Distribute Elements Into Two Arrays I","2275":"Distribute Elements Into Two Arrays II","2276":"Apple Redistribution into Boxes","2277":"Shortest Uncommon Substring in an Array","2278":"Maximum Strength of K Disjoint Subarrays","2279":"Find the Sum of Encrypted Integers","2280":"Mark Elements on Array by Performing Queries","2281":"Replace Question Marks in String to Minimize Its Value","2282":"Find the Sum of the Power of All Subsequences","2283":"Existence of a Substring in a String and Its Reverse","2284":"Count Substrings Starting and Ending with Given Character","2285":"Minimum Deletions to Make String K-Special","2286":"Minimum Moves to Pick K Ones","2287":"Maximum Length Substring With Two Occurrences","2288":"Apply Operations to Make Sum of Array Greater Than or Equal to k","2289":"Most Frequent IDs","2290":"Longest Common Suffix Queries","2291":"Shortest Subarray With OR at Least K I","2292":"Minimum Levels to Gain More Points","2293":"Shortest Subarray With OR at Least K II","2294":"Find the Sum of Subsequence Powers","2295":"Harshad Number","2296":"Water Bottles II","2297":"Count Alternating Subarrays","2298":"Minimize Manhattan Distances","2299":"Longest Strictly Increasing or Strictly Decreasing Subarray","2300":"Lexicographically Smallest String After Operations With Constraint","2301":"Minimum Operations to Make Median of Array Equal to K","2302":"Minimum Cost Walk in Weighted Graph","2303":"Score of a String","2304":"Minimum Rectangles to Cover Points","2305":"Minimum Time to Visit Disappearing Nodes","2306":"Find the Number of Subarrays Where Boundary Elements Are Maximum","2307":"Latest Time You Can Obtain After Replacing Characters","2308":"Maximum Prime Difference","2309":"Kth Smallest Amount With Single Denomination Combination","2310":"Minimum Sum of Values by Dividing Array","2311":"Count the Number of Special Characters I","2312":"Count the Number of Special Characters II","2313":"Minimum Number of Operations to Satisfy Conditions","2314":"Find Edges in Shortest Paths","2315":"Make a Square with the Same Color","2316":"Right Triangles","2317":"Find All Possible Stable Binary Arrays I","2318":"Find All Possible Stable Binary Arrays II","2319":"Find the Integer Added to Array I","2320":"Find the Integer Added to Array II","2321":"Minimum Array End","2322":"Find the Median of the Uniqueness Array","2323":"Valid Word","2324":"Minimum Number of Operations to Make Word K-Periodic","2325":"Minimum Length of Anagram Concatenation","2326":"Minimum Cost to Equalize Array","2327":"Check if Grid Satisfies Conditions","2328":"Maximum Points Inside the Square","2329":"Minimum Substring Partition of Equal Character Frequency","2330":"Find Products of Elements of Big Array","2331":"Permutation Difference between Two Strings","2332":"Maximum Difference Score in a Grid","2333":"Find the Minimum Cost Array Permutation","2334":"Special Array I","2335":"Special Array II","2336":"Sum of Digit Differences of All Pairs","2337":"Find Number of Ways to Reach the K-th Stair","2338":"Find the XOR of Numbers Which Appear Twice","2339":"Find Occurrences of an Element in an Array","2340":"Find the Number of Distinct Colors Among the Balls","2341":"Block Placement Queries","2342":"Find the Number of Good Pairs I","2343":"String Compression III","2344":"Find the Number of Good Pairs II","2345":"Maximum Sum of Subsequence With Non-adjacent Elements","2346":"Minimum Number of Chairs in a Waiting Room","2347":"Count Days Without Meetings","2348":"Lexicographically Minimum String After Removing Stars","2349":"Clear Digits","2350":"Find The First Player to win K Games in a Row","2351":"Find the Maximum Length of a Good Subsequence I","2352":"Find the Maximum Length of a Good Subsequence II","2353":"Find the Child Who Has the Ball After K Seconds","2354":"Find the N-th Value After K Seconds","2355":"Maximum Total Reward Using Operations I","2356":"Maximum Total Reward Using Operations II","2357":"Count Pairs That Form a Complete Day I","2358":"Count Pairs That Form a Complete Day II","2359":"Maximum Total Damage With Spell Casting","2360":"Peaks in Array","2361":"Find Minimum Operations to Make All Elements Divisible by Three","2362":"Minimum Operations to Make Binary Array Elements Equal to One I","2363":"Minimum Operations to Make Binary Array Elements Equal to One II","2364":"Count the Number of Inversions","2365":"Minimum Average of Smallest and Largest Elements","2366":"Find the Minimum Area to Cover All Ones I","2367":"Maximize Total Cost of Alternating Subarrays","2368":"Find the Minimum Area to Cover All Ones II","2369":"Maximum Height of a Triangle","2370":"Find the Maximum Length of Valid Subsequence II","2371":"Alternating Groups I","2372":"Maximum Points After Enemy Battles","2373":"Alternating Groups II","2374":"Number of Subarrays With AND Value of K","2375":"Find the Encrypted String","2376":"Generate Binary Strings Without Adjacent Zeros","2377":"Count Submatrices With Equal Frequency of X and Y","2378":"Construct String with Minimum Cost","2379":"Lexicographically Smallest String After a Swap","2380":"Delete Nodes From Linked List Present in Array","2381":"Minimum Cost for Cutting Cake I","2382":"Minimum Cost for Cutting Cake II","2383":"Odd and Even Transactions","2384":"Find the Winning Player in Coin Game","2385":"Minimum Array Changes to Make Differences Equal","2386":"Number of Bit Changes to Make Two Integers Equal","2387":"Vowels Game in a String","2388":"Maximum Number of Operations to Move Ones to the End","2389":"Minimum Operations to Make Array Equal to Target","2390":"Find if Digit Game Can Be Won","2391":"Find the Count of Numbers Which Are Not Special","2392":"Count the Number of Substrings With Dominant Ones","2393":"Check if the Rectangle Corner Is Reachable","2394":"Find the Number of Winning Players","2395":"Minimum Number of Flips to Make Binary Grid Palindromic I","2396":"Minimum Number of Flips to Make Binary Grid Palindromic II","2397":"Time Taken to Mark All Nodes","2398":"Design Neighbor Sum Service","2399":"Shortest Distance After Road Addition Queries I","2400":"Shortest Distance After Road Addition Queries II","2401":"Alternating Groups III","2402":"Snake in Matrix","2403":"Count the Number of Good Nodes","2404":"Find the Count of Monotonic Pairs I","2405":"Find the Count of Monotonic Pairs II","2406":"Find the Power of K-Size Subarrays I","2407":"Find the Power of K-Size Subarrays II","2408":"Maximum Value Sum by Placing Three Rooks I","2409":"Maximum Value Sum by Placing Three Rooks II","2410":"Count Substrings That Satisfy K-Constraint I","2411":"Maximum Energy Boost From Two Drinks","2412":"Find the Largest Palindrome Divisible by K","2413":"Count Substrings That Satisfy K-Constraint II","2414":"Final Array State After K Multiplication Operations I","2415":"Count Almost Equal Pairs I","2416":"Final Array State After K Multiplication Operations II","2417":"Count Almost Equal Pairs II","2418":"Find the Key of the Numbers","2419":"Hash Divided String","2420":"Find the Count of Good Integers","2421":"Minimum Amount of Damage Dealt to Bob","2422":"Check if Two Chessboard Squares Have the Same Color","2423":"K-th Nearest Obstacle Queries","2424":"Select Cells in Grid With Maximum Score","2425":"Maximum XOR Score Subarray Queries","2426":"Convert Date to Binary"},"text":{"0":"string consist uppercas english letter appli oper string oper remov occurr substr ab cd return minimum possibl length result string obtain note string concaten remov substr could produc new ab cd substr exampl input abfcacdb output explan follow oper remov substr abfcacdb fcacdb remov substr fcacdb fcab remov substr fcab fc result length string shown minimum length obtain exampl input acbbd output explan oper string length remain constraint slength consist uppercas english letter ","1":"array integ num integ target return indic number add target may assum input would exactli solut may use element twice return answer order exampl input num target output explan nums0 nums1 return exampl input num target output exampl input num target output constraint numslength numsi target valid answer exist followup come algorithm less time complex ","2":"nonempti link list repres nonneg integ digit store revers order node contain singl digit add number return sum link list may assum number contain lead except number exampl input l1 l2 output explan exampl input l1 l2 output exampl input l1 l2 output constraint number node link list rang nodev guarante list repres number lead zero ","3":"sort array nums1 nums2 size respect return median sort array overal run time complex olog exampl input nums1 nums2 output explan merg array median exampl input nums1 nums2 output explan merg array median constraint nums1length nums2length nums1i nums2i ","4":"string paypalishir written zigzag pattern number row like may want display pattern fix font better legibl read line line pahnaplsiigyir write code take string make convers number row string convertstr int numrow exampl input paypalishir numrow output pahnaplsiigyir exampl input paypalishir numrow output pinalsigyahrpi explan exampl input numrow output constraint slength consist english letter lowercas uppercas numrow ","5":"sign 32bit integ return digit revers revers caus valu go outsid sign 32bit integ rang return assum environ allow store 64bit integ sign unsign exampl input output exampl input output exampl input output constraint ","6":"integ return true palindrom fals otherwis exampl input output true explan read left right right left exampl input output fals explan left right read right left becom therefor palindrom exampl input output fals explan read right left therefor palindrom constraint could solv without convert integ string ","7":"input string pattern implement regular express match support match singl charact match preced element match cover entir input string partial exampl input output fals explan match entir string exampl input output true explan mean preced element therefor repeat becom exampl input ab output true explan mean charact constraint slength plength contain lowercas english letter contain lowercas english letter guarante appear charact previou valid charact match ","8":"integ array height length vertic line drawn endpoint ith line heighti find line togeth xaxi form contain contain contain water return maximum amount water contain store notic may slant contain exampl input height output explan vertic line repres array case max area water blue section contain contain exampl input height output constraint heightlength heighti ","9":"differ symbol repres roman numer follow valu symbol valu roman numer form append convers decim place valu highest lowest convert decim place valu roman numer follow rule valu start select symbol maxim valu subtract input append symbol result subtract valu convert remaind roman numer valu start use subtract form repres symbol subtract follow symbol exampl less iv less ix follow subtract form use iv ix xl xc cd power append consecut time repres multipl append multipl time need append symbol time use subtract form integ convert roman numer exampl input num output mmmdccxlix explan mmm dcc xl less ix less note less convers base decim place exampl input num output lviii explan viii exampl input num output mcmxciv explan xc iv constraint num ","10":"roman numer repres differ symbol symbol valu exampl written ii roman numer one ad togeth written xii simpli ii number written xxvii xx ii roman numer usual written largest smallest left right howev numer iiii instead number written iv subtract make principl appli number written ix instanc subtract use place make place make place make roman numer convert integ exampl input iii output explan iii exampl input lviii output explan iii exampl input mcmxciv output explan xc iv constraint slength contain charact guarante valid roman numer rang ","11":"write function find longest common prefix string amongst array string common prefix return empti string exampl input str flowerflowflight output fl exampl input str dogracecarcar output explan common prefix among input string constraint strslength strsilength strsi consist lowercas english letter ","12":"integ array num return triplet numsi numsj numsk numsi numsj numsk notic solut set must contain duplic triplet exampl input num output explan nums0 nums1 nums2 nums1 nums2 nums4 nums0 nums3 nums4 distinct triplet notic order output order triplet matter exampl input num output explan possibl triplet sum exampl input num output explan possibl triplet sum constraint numslength numsi ","13":"integ array num length integ target find integ num sum closest target return sum integ may assum input would exactli solut exampl input num target output explan sum closest target exampl input num target output explan sum closest target constraint numslength numsi target ","14":"string contain digit inclus return possibl letter combin number could repres return answer order map digit letter like telephon button note map letter exampl input digit output adaeafbdbebfcdcecf exampl input digit output exampl input digit output abc constraint digitslength digitsi digit rang ","15":"array num integ return array uniqu quadruplet numsa numsb numsc numsd distinct numsa numsb numsc numsd target may return answer order exampl input num target output exampl input num target output constraint numslength numsi target ","16":"head link list remov nth node end list return head exampl input head output exampl input head output exampl input head output constraint number node list nodev could pass ","17":"string contain charact determin input string valid input string valid open bracket must close type bracket open bracket must close correct order everi close bracket correspond open bracket type exampl input output true exampl input output true exampl input output fals exampl input output true constraint slength consist parenthes ","18":"head sort link list list1 list2 merg list sort list list made splice togeth node first list return head merg link list exampl input list1 list2 output exampl input list1 list2 output exampl input list1 list2 output constraint number node list rang nodev list1 list2 sort nondecreas order ","19":"pair parenthes write function gener combin wellform parenthes exampl input output exampl input output constraint ","20":"array linkedlist list linkedlist sort ascend order merg linkedlist sort linkedlist return exampl input list output explan linkedlist merg sort list exampl input list output exampl input list output constraint listslength listsilength listsij listsi sort ascend order sum listsilength exceed ","21":"link list swap everi adjac node return head must solv problem without modifi valu list node ie node may chang exampl input head output explan exampl input head output exampl input head output exampl input head output constraint number node list rang nodev ","22":"head link list revers node list time return modifi list posit integ less equal length link list number node multipl leftout node end remain may alter valu list node node may chang exampl input head output exampl input head output constraint number node list nodev followup solv problem extra memori space ","23":"integ array num sort nondecreas order remov duplic inplac uniqu element appear rel order element kept return number uniqu element num consid number uniqu element num get accept need follow thing chang array num first element num contain uniqu element order present num initi remain element num import well size num return custom judg judg test solut follow code int num input array int expectednum expect answer correct length int removeduplicatesnum call implement assert expectednumslength int assert numsi expectednumsi assert pass solut accept exampl input num output num explan function return first element num respect matter leav beyond return henc underscor exampl input num output num explan function return first element num respect matter leav beyond return henc underscor constraint numslength numsi num sort nondecreas order ","24":"integ array num integ val remov occurr val num inplac order element may chang return number element num equal val consid number element num equal val get accept need follow thing chang array num first element num contain element equal val remain element num import well size num return custom judg judg test solut follow code int num input array int val valu remov int expectednum expect answer correct length sort valu equal val int removeelementnum val call implement assert expectednumslength sortnum sort first element num int actuallength assert numsi expectednumsi assert pass solut accept exampl input num val output num explan function return first element num matter leav beyond return henc underscor exampl input num val output num explan function return first element num contain note element return order matter leav beyond return henc underscor constraint numslength numsi val ","25":"string needl haystack return index first occurr needl haystack needl part haystack exampl input haystack sadbutsad needl sad output explan sad occur index first occurr index return exampl input haystack leetcod needl leeto output explan leeto occur leetcod return constraint haystacklength needlelength haystack needl lowercas english charact ","26":"integ dividend divisor divid integ without use multipl divis mod oper integ divis truncat toward mean lose fraction part exampl would truncat would truncat return quotient divid dividend divisor note assum deal environ could store integ within 32bit sign integ rang \u2212231 problem quotient strictli greater return quotient strictli less return exampl input dividend divisor output explan truncat exampl input dividend divisor output explan truncat constraint dividend divisor divisor ","27":"string array string word string word length concaten string string exactli contain string permut word concaten exampl word abcdef abcdef abefcd cdabef cdefab efabcd efcdab concaten string acdbef concaten string concaten permut word return array start indic concaten substr return answer order exampl input barfoothefoobarman word foobar output explan substr start barfoo concaten barfoo permut word substr start foobar concaten foobar permut word exampl input wordgoodgoodgoodbestword word wordgoodbestword output explan concaten substr exampl input barfoofoobarthefoobarman word barfooth output explan substr start foobarth concaten foobarth substr start barthefoo concaten barthefoo substr start thefoobar concaten thefoobar constraint slength wordslength wordsilength wordsi lowercas english letter ","28":"permut array integ arrang member sequenc linear order exampl arr follow permut arr next permut array integ next lexicograph greater permut integ formal permut array sort contain accord lexicograph order next permut array permut follow sort contain arrang possibl array must rearrang lowest possibl order ie sort ascend order exampl next permut arr similarli next permut arr next permut arr lexicograph larger rearrang array integ num find next permut num replac must place use constant extra memori exampl input num output exampl input num output exampl input num output constraint numslength numsi ","29":"string contain charact return length longest valid wellform parenthes substr exampl input output explan longest valid parenthes substr exampl input output explan longest valid parenthes substr exampl input output constraint slength si ","30":"integ array num sort ascend order distinct valu prior pass function num possibl rotat unknown pivot index numslength result array numsk numsk1 numsn1 nums0 nums1 numsk1 0index exampl might rotat pivot index becom array num possibl rotat integ target return index target num num must write algorithm olog runtim complex exampl input num target output exampl input num target output exampl input num target output constraint numslength numsi valu num uniqu num ascend array possibl rotat target ","31":"array integ num sort nondecreas order find start end posit target valu target found array return must write algorithm olog runtim complex exampl input num target output exampl input num target output exampl input num target output constraint numslength numsi num nondecreas array target ","32":"sort array distinct integ target valu return index target found return index would insert order must write algorithm olog runtim complex exampl input num target output exampl input num target output exampl input num target output constraint numslength numsi num contain distinct valu sort ascend order target ","33":"determin sudoku board valid fill cell need valid accord follow rule row must contain digit without repetit column must contain digit without repetit subbox grid must contain digit without repetit note sudoku board partial fill could valid necessarili solvabl fill cell need valid accord mention rule exampl input board output true exampl input board output fals explan exampl except top left corner modifi sinc top left 3x3 subbox invalid constraint boardlength boardilength boardij digit ","34":"write program solv sudoku puzzl fill empti cell sudoku solut must satisfi follow rule digit must occur exactli row digit must occur exactli column digit must occur exactli 3x3 subbox grid charact indic empti cell exampl input board output explan input board shown valid solut shown constraint boardlength boardilength boardij digit guarante input board solut ","35":"countandsay sequenc sequenc digit string defin recurs formula countandsay1 countandsayn runlength encod countandsayn runlength encod rle string compress method work replac consecut ident charact repeat time concaten charact number mark count charact length run exampl compress string replac replac replac replac thu compress string becom posit integ return nth element countandsay sequenc exampl input output explan countandsay1 countandsay2 rle countandsay3 rle countandsay4 rle exampl input output explan base case constraint could solv iter ","36":"array distinct integ candid target integ target return list uniqu combin candid chosen number sum target may return combin order number may chosen candid unlimit number time combin uniqu frequenc least chosen number differ test case gener number uniqu combin sum target less combin input exampl input candid target output explan candid note use multipl time candid combin exampl input candid target output exampl input candid target output constraint candidateslength candidatesi element candid distinct target ","37":"collect candid number candid target number target find uniqu combin candid candid number sum target number candid may use combin note solut set must contain duplic combin exampl input candid target output exampl input candid target output constraint candidateslength candidatesi target ","38":"unsort integ array num return smallest posit integ present num must implement algorithm run time use auxiliari space exampl input num output explan number rang array exampl input num output explan array miss exampl input num output explan smallest posit integ miss constraint numslength numsi ","39":"nonneg integ repres elev map width bar comput much water trap rain exampl input height output explan elev map black section repres array case unit rain water blue section trap exampl input height output constraint heightlength heighti ","40":"nonneg integ num1 num2 repres string return product num1 num2 also repres string note must use builtin biginteg librari convert input integ directli exampl input num1 num2 output exampl input num1 num2 output constraint num1length num2length num1 num2 digit num1 num2 contain lead except number ","41":"input string pattern implement wildcard pattern match support match singl charact match sequenc charact includ empti sequenc match cover entir input string partial exampl input output fals explan match entir string exampl input output true explan match sequenc exampl input cb output fals explan match second letter match constraint slength plength contain lowercas english letter contain lowercas english letter ","42":"0index array integ num length initi posit nums0 element numsi repres maximum length forward jump index word numsi jump numsi numsi return minimum number jump reach numsn test case gener reach numsn exampl input num output explan minimum number jump reach last index jump step index step last index exampl input num output constraint numslength numsi guarante reach numsn ","43":"array num distinct integ return possibl permut return answer order exampl input num output exampl input num output exampl input num output constraint numslength numsi integ num uniqu ","44":"collect number num might contain duplic return possibl uniqu permut order exampl input num output exampl input num output constraint numslength numsi ","45":"2d matrix repres imag rotat imag degre clockwis rotat imag inplac mean modifi input 2d matrix directli alloc anoth 2d matrix rotat exampl input matrix output exampl input matrix output constraint matrixlength matrixilength matrixij ","46":"array string str group anagram togeth return answer order exampl input str eatteatanatenatbat output batnattanateeattea explan string str rearrang form bat string nat tan anagram rearrang form string ate eat tea anagram rearrang form exampl input str output exampl input str output constraint strslength strsilength strsi consist lowercas english letter ","47":"implement powx calcul rais power ie exampl input output exampl input output exampl input output explan constraint integ either ","48":"nqueen puzzl problem place queen chessboard queen attack integ return distinct solut nqueen puzzl may return answer order solut contain distinct board configur nqueen placement indic queen empti space respect exampl input output qqqqqqqq explan exist distinct solut 4queen puzzl shown exampl input output constraint ","49":"nqueen puzzl problem place queen chessboard queen attack integ return number distinct solut nqueen puzzl exampl input output explan distinct solut 4queen puzzl shown exampl input output constraint ","50":"integ array num find subarray largest sum return sum exampl input num output explan subarray largest sum exampl input num output explan subarray largest sum exampl input num output explan subarray largest sum constraint numslength numsi figur solut tri code anoth solut use divid conquer approach subtl ","51":"matrix return element matrix spiral order exampl input matrix output exampl input matrix output constraint matrixlength matrixilength matrixij ","52":"integ array num initi posit array first index element array repres maximum jump length posit return true reach last index fals otherwis exampl input num output true explan jump step index step last index exampl input num output fals explan alway arriv index matter maximum jump length make imposs reach last index constraint numslength numsi ","53":"array interv intervalsi starti endi merg overlap interv return array nonoverlap interv cover interv input exampl input interv output explan sinc interv overlap merg exampl input interv output explan interv consid overlap constraint intervalslength intervalsilength starti endi ","54":"array nonoverlap interv interv intervalsi starti endi repres start end ith interv interv sort ascend order starti also interv newinterv start end repres start end anoth interv insert newinterv interv interv still sort ascend order starti interv still overlap interv merg overlap interv necessari return interv insert note dont need modifi interv inplac make new array return exampl input interv newinterv output exampl input interv newinterv output explan new interv overlap constraint intervalslength intervalsilength starti endi interv sort starti ascend order newintervallength start end ","55":"string consist word space return length last word string word maxim substr consist nonspac charact exampl input hello world output explan last word world length exampl input fli moon output explan last word moon length exampl input luffi still joyboy output explan last word joyboy length constraint slength consist english letter space least word ","56":"set contain total uniqu permut list label permut order get follow sequenc return kth permut sequenc exampl input output exampl input output exampl input output constraint ","57":"head link list rotat list right place exampl input head output exampl input head output constraint number node list rang nodev ","58":"robot grid robot initi locat topleft corner ie grid00 robot tri move bottomright corner ie gridm robot move either right point time integ return number possibl uniqu path robot take reach bottomright corner test case gener answer less equal exampl input output exampl input output explan topleft corner total way reach bottomright corner right right right constraint ","59":"integ array grid robot initi locat topleft corner ie grid00 robot tri move bottomright corner ie gridm robot move either right point time obstacl space mark respect grid path robot take includ squar obstacl return number possibl uniqu path robot take reach bottomright corner testcas gener answer less equal exampl input obstaclegrid output explan obstacl middl 3x3 grid way reach bottomright corner right right right right exampl input obstaclegrid output constraint obstaclegridlength obstaclegridilength obstaclegridij ","60":"grid fill nonneg number find path top left bottom right minim sum number along path note move either right point time exampl input grid output explan path minim sum exampl input grid output constraint gridlength gridilength gridij ","61":"string return whether valid number exampl follow valid number 2e10 90e3 3e7 6e1 535e93 123456e789 follow valid number abc e3 99e25 95a54e53 formal valid number defin use follow definit integ number follow option expon decim number follow option expon integ number defin option sign follow digit decim number defin option sign follow follow definit digit follow dot digit follow dot follow digit dot follow digit expon defin expon notat e e follow integ number digit defin digit exampl input output true exampl input e output fals exampl input output fals constraint slength consist english letter uppercas lowercas digit plu minu dot ","62":"binari string return sum binari string exampl input output exampl input output constraint alength blength charact string contain lead zero except ","63":"array string word width maxwidth format text line exactli maxwidth charact fulli left right justifi pack word greedi approach pack mani word line pad extra space necessari line exactli maxwidth charact extra space word distribut evenli possibl number space line divid evenli word empti slot left assign space slot right last line text leftjustifi extra space insert word note word defin charact sequenc consist nonspac charact word length guarante greater exceed maxwidth input array word contain least word exampl input word exampl text justif maxwidth output exampl text justif exampl input word whatmustbeacknowledgmentshallb maxwidth output must acknowledg shall explan note last line shall instead shall last line must leftjustifi instead fullyjustifi note second line also leftjustifi contain word exampl input word scienceiswhatweunderstandwellenoughtoexplaintoacomputerartiseverythingelsewedo maxwidth output scienc understand well enough explain comput art everyth els constraint wordslength wordsilength wordsi consist english letter symbol maxwidth wordsilength maxwidth ","64":"nonneg integ return squar root round nearest integ return integ nonneg well must use builtin expon function oper exampl use powx python exampl input output explan squar root return exampl input output explan squar root sinc round nearest integ return constraint ","65":"climb staircas take step reach top time either climb step mani distinct way climb top exampl input output explan way climb top step step step exampl input output explan way climb top step step step step step step step constraint ","66":"absolut path unixstyl file system alway begin slash task transform absolut path simplifi canon path rule unixstyl file system follow singl period repres current directori doubl period repres previouspar directori multipl consecut slash treat singl slash sequenc period match rule treat valid directori file name exampl valid directori file name simplifi canon path rule path must start singl slash directori within path must separ exactli slash path must end slash unless root directori path must singl doubl period use denot current parent directori return simplifi canon path exampl input path home output home explan trail slash remov exampl input path homefoo output homefoo explan multipl consecut slash replac singl exampl input path homeuserdocumentspictur output homeuserpictur explan doubl period refer directori level parent directori exampl input path output explan go level root directori possibl exampl input path abcd output explan valid name directori problem constraint pathlength path consist english letter digit period slash path valid absolut unix path ","67":"string word1 word2 return minimum number oper requir convert word1 word2 follow oper permit word insert charact delet charact replac charact exampl input word1 hors word2 ro output explan hors rors replac rors rose remov rose ro remov e exampl input word1 intent word2 execut output explan intent inent remov inent enent replac e enent exent replac exent exect replac exect execut insert u constraint word1length word2length word1 word2 lowercas english letter ","68":"integ matrix matrix follow properti row sort nondecreas order first integ row greater last integ previou row integ target return true target matrix fals otherwis must write solut ologm time complex exampl input matrix target output true exampl input matrix target output fals constraint matrixlength matrixilength matrixij target ","69":"array num object color red white blue sort inplac object color adjac color order red white blue use integ repres color red white blue respect must solv problem without use librari sort function exampl input num output exampl input num output constraint numslength numsi either could come onepass algorithm use constant extra space ","70":"string length respect return minimum window substr everi charact includ duplic includ window substr return empti string testcas gener answer uniqu exampl input adobecodebanc abc output banc explan minimum window substr banc includ string exampl input output explan entir string minimum window exampl input output explan must includ window sinc largest window return empti string constraint slength tlength uppercas lowercas english letter could find algorithm run om time ","71":"integ return possibl combin number chosen rang may return answer order exampl input output explan choos total combin note combin unord ie consid combin exampl input output explan choos total combin constraint ","72":"integ array num uniqu element return possibl subset power set solut set must contain duplic subset return solut order exampl input num output exampl input num output constraint numslength numsi number num uniqu ","73":"grid charact board string word return true word exist grid word construct letter sequenti adjac cell adjac cell horizont vertic neighbor letter cell may use exampl input board abcesfcsade word abc output true exampl input board abcesfcsade word see output true exampl input board abcesfcsade word abcb output fals constraint boardlength boardilength wordlength board word consist lowercas uppercas english letter could use search prune make solut faster larger board ","74":"integ array num sort nondecreas order remov duplic inplac uniqu element appear twice rel order element kept sinc imposs chang length array languag must instead result place first part array num formal element remov duplic first element num hold final result matter leav beyond first element return place final result first slot num alloc extra space anoth array must modifi input array inplac extra memori custom judg judg test solut follow code int num input array int expectednum expect answer correct length int removeduplicatesnum call implement assert expectednumslength int assert numsi expectednumsi assert pass solut accept exampl input num output num explan function return first element num respect matter leav beyond return henc underscor exampl input num output num explan function return first element num respect matter leav beyond return henc underscor constraint numslength numsi num sort nondecreas order ","75":"integ array num sort nondecreas order necessarili distinct valu pass function num rotat unknown pivot index numslength result array numsk numsk1 numsn1 nums0 nums1 numsk1 0index exampl might rotat pivot index becom array num rotat integ target return true target num fals num must decreas overal oper step much possibl exampl input num target output true exampl input num target output fals constraint numslength numsi num guarante rotat pivot target problem similar search rotat sort array num may contain duplic would affect runtim complex ","76":"head sort link list delet node duplic number leav distinct number origin list return link list sort well exampl input head output exampl input head output constraint number node list rang nodev list guarante sort ascend order ","77":"head sort link list delet duplic element appear return link list sort well exampl input head output exampl input head output constraint number node list rang nodev list guarante sort ascend order ","78":"array integ height repres histogram bar height width bar return area largest rectangl histogram exampl input height output explan histogram width bar largest rectangl shown red area area unit exampl input height output constraint heightslength heightsi ","79":"","80":"head link list valu partit node less come node greater equal preserv origin rel order node partit exampl input head output exampl input head output constraint number node list rang nodev ","81":"scrambl string get string use follow algorithm length string stop length string follow split string nonempti substr random index ie string divid randomli decid swap substr keep order ie step may becom appli step recurs substr string length return true scrambl string otherwis return fals exampl input great rgeat output true explan possibl scenario appli great great divid random index great great random decis swap substr keep order great gr eat appli algorithm recurs substr divid random index gr eat eat random decis swap first substr keep second substr order eat e appli algorithm recurs divid e e random decis keep substr order algorithm stop result string rgeat possibl scenario led scrambl return true exampl input abcd caebd output fals exampl input output true constraint s1length s2length s1length lowercas english letter ","82":"integ array nums1 nums2 sort nondecreas order integ repres number element nums1 nums2 respect merg nums1 nums2 singl array sort nondecreas order final sort array return function instead store insid array nums1 accommod nums1 length first element denot element merg last element set ignor nums2 length exampl input nums1 nums2 output explan array merg result merg underlin element come nums1 exampl input nums1 nums2 output explan array merg result merg exampl input nums1 nums2 output explan array merg result merg note element nums1 ensur merg result fit nums1 constraint nums1length nums2length nums1i nums2j come algorithm run om time ","83":"nbit gray code sequenc sequenc integ everi integ inclus rang first integ integ appear sequenc binari represent everi pair adjac integ differ exactli bit binari represent first last integ differ exactli bit integ return valid nbit gray code sequenc exampl input output explan binari represent differ bit differ bit differ bit differ bit also valid gray code sequenc whose binari represent differ bit differ bit differ bit differ bit exampl input output constraint ","84":"integ array num may contain duplic return possibl subset power set solut set must contain duplic subset return solut order exampl input num output exampl input num output constraint numslength numsi ","85":"intercept secret messag encod string number messag decod via follow map howev decod messag realiz mani differ way decod messag code contain code exampl decod aajf group kjf group group invalid valid code valid note may string imposs decod string contain digit return number way decod entir string decod valid way return test case gener answer fit 32bit integ exampl input output explan could decod ab exampl input output explan could decod bbf exampl input output explan map lead differ case string valid encod return constraint slength contain digit may contain lead zero ","86":"head singli link list integ left right left right revers node list posit left posit right return revers list exampl input head left right output exampl input head left right output constraint number node list nodev left right could pass ","87":"root binari tree return inord travers node valu exampl input root 1null23 output explan exampl input root 12345null8nullnull679 output explan exampl input root output exampl input root output constraint number node tree rang nodev recurs solut trivial could iter ","88":"integ return structur uniqu bst binari search tree exactli node uniqu valu return answer order exampl input output 1null2null31null3221331nullnull232null1 exampl input output constraint ","89":"integ return number structur uniqu bst binari search tree exactli node uniqu valu exampl input output exampl input output constraint ","90":"string find whether form interleav interleav string configur divid substr respect interleav note concaten string exampl input aabcc dbbca aadbbcbcac output true explan way obtain split dbbc interleav split get dbbc aadbbcbcac sinc obtain interleav return true exampl input aabcc dbbca aadbbbaccc output fals explan notic imposs interleav string obtain exampl input output true constraint s1length s2length s3length lowercas english letter could solv use os2length addit memori space ","91":"root binari tree determin valid binari search tree valid defin follow left subtre node contain node key less node key right subtre node contain node key greater node key left right subtre must also binari search tree exampl input root output true exampl input root 514nullnull36 output fals explan root node valu right child valu constraint number node tree rang nodev ","92":"root binari search tree valu exactli node tree swap mistak recov tree without chang structur exampl input root 13nullnull2 output 31nullnull2 explan left child swap make valid exampl input root 314nullnull2 output 214nullnull3 explan right subtre swap make valid constraint number node tree rang nodev solut use space pretti straightforward could devis constant space solut ","93":"root binari tree write function check binari tree consid structur ident node valu exampl input output true exampl input 1null2 output fals exampl input output fals constraint number node tree rang nodev ","94":"root binari tree return level order travers node valu ie left right level level exampl input root 3920nullnull157 output exampl input root output exampl input root output constraint number node tree rang nodev ","95":"root binari tree return zigzag level order travers node valu ie left right right left next level altern exampl input root 3920nullnull157 output exampl input root output exampl input root output constraint number node tree rang nodev ","96":"root binari tree return maximum depth binari tree maximum depth number node along longest path root node farthest leaf node exampl input root 3920nullnull157 output exampl input root 1null2 output constraint number node tree rang nodev ","97":"integ array preorder inord preorder preorder travers binari tree inord inord travers tree construct return binari tree exampl input preorder inord output 3920nullnull157 exampl input preorder inord output constraint preorderlength inorderlength preorderlength preorderi inorderi preorder inord uniqu valu valu inord also appear preorder preorder guarante preorder travers tree inord guarante inord travers tree ","98":"integ array inord postord inord inord travers binari tree postord postord travers tree construct return binari tree exampl input inord postord output 3920nullnull157 exampl input inord postord output constraint inorderlength postorderlength inorderlength inorderi postorderi inord postord uniqu valu valu postord also appear inord inord guarante inord travers tree postord guarante postord travers tree ","99":"integ array num element sort ascend order convert heightbalanc binari search tree exampl input num output 03910null5 explan 0105null3null9 also accept exampl input num output explan 1null3 heightbalanc bst constraint numslength numsi num sort strictli increas order ","100":"head singli link list element sort ascend order convert heightbalanc binari search tree exampl input head output 03910null5 explan possibl answer 03910null5 repres shown height balanc exampl input head output constraint number node head rang nodev ","101":"binari tree determin heightbalanc exampl input root 3920nullnull157 output true exampl input root 12233nullnull44 output fals exampl input root output true constraint number node tree rang nodev ","102":"binari tree find minimum depth minimum depth number node along shortest path root node nearest leaf node note leaf node children exampl input root 3920nullnull157 output exampl input root 2null3null4null5null6 output constraint number node tree rang nodev ","103":"root binari tree integ targetsum return true tree roottoleaf path ad valu along path equal targetsum leaf node children exampl input root 54811null13472nullnullnull1 targetsum output true explan roottoleaf path target sum shown exampl input root targetsum output fals explan roottoleaf path tree sum sum roottoleaf path sum exampl input root targetsum output fals explan sinc tree empti roottoleaf path constraint number node tree rang nodev targetsum ","104":"root binari tree integ targetsum return roottoleaf path sum node valu path equal targetsum path return list node valu node refer roottoleaf path path start root end leaf node leaf node children exampl input root 54811null13472nullnull51 targetsum output explan path whose sum equal targetsum exampl input root targetsum output exampl input root targetsum output constraint number node tree rang nodev targetsum ","105":"root binari tree flatten tree link list link list use treenod class right child pointer point next node list left child pointer alway null link list order preorder travers binari tree exampl input root 12534null6 output 1null2null3null4null5null6 exampl input root output exampl input root output constraint number node tree rang nodev flatten tree inplac extra space ","106":"string return number distinct subsequ equal test case gener answer fit 32bit sign integ exampl input rabbbit rabbit output explan shown way gener rabbit rabbbit rabbbit rabbbit exampl input babgbag bag output explan shown way gener bag babgbag babgbag babgbag babgbag babgbag constraint slength tlength english letter ","107":"perfect binari tree leav level everi parent children binari tree follow definit struct node int val node left node right node next popul next pointer point next right node next right node next pointer set null initi next pointer set null exampl input root output explan perfect binari tree figur function popul next pointer point next right node like figur serial output level order connect next pointer signifi end level exampl input root output constraint number node tree rang nodev followup may use constant extra space recurs approach fine may assum implicit stack space count extra space problem ","108":"binari tree struct node int val node left node right node next popul next pointer point next right node next right node next pointer set null initi next pointer set null exampl input root 12345null7 output explan binari tree figur function popul next pointer point next right node like figur serial output level order connect next pointer signifi end level exampl input root output constraint number node tree rang nodev followup may use constant extra space recurs approach fine may assum implicit stack space count extra space problem ","109":"integ numrow return first numrow pascal triangl pascal triangl number sum number directli shown exampl input numrow output exampl input numrow output constraint numrow ","110":"integ rowindex return rowindexth 0index row pascal triangl pascal triangl number sum number directli shown exampl input rowindex output exampl input rowindex output exampl input rowindex output constraint rowindex could optim algorithm use orowindex extra space ","111":"triangl array return minimum path sum top bottom step may move adjac number row formal index current row may move either index index next row exampl input triangl output explan triangl look like minimum path sum top bottom underlin exampl input triangl output constraint trianglelength triangle0length triangleilength trianglei 1length triangleij could use extra space total number row triangl ","112":"array price pricesi price stock ith day want maxim profit choos singl day buy stock choos differ day futur sell stock return maximum profit achiev transact achiev profit return exampl input price output explan buy day price sell day price profit note buy day sell day allow must buy sell exampl input price output explan case transact done max profit constraint priceslength pricesi ","113":"integ array price pricesi price stock ith day day may decid buy andor sell stock hold share stock time howev buy immedi sell day find return maximum profit achiev exampl input price output explan buy day price sell day price profit buy day price sell day price profit total profit exampl input price output explan buy day price sell day price profit total profit exampl input price output explan way make posit profit never buy stock achiev maximum profit constraint priceslength pricesi ","114":"array price pricesi price stock ith day find maximum profit achiev may complet transact note may engag multipl transact simultan ie must sell stock buy exampl input price output explan buy day price sell day price profit buy day price sell day price profit exampl input price output explan buy day price sell day price profit note buy day buy day sell later engag multipl transact time must sell buy exampl input price output explan case transact done ie max profit constraint priceslength pricesi ","115":"path binari tree sequenc node pair adjac node sequenc edg connect node appear sequenc note path need pass root path sum path sum node valu path root binari tree return maximum path sum nonempti path exampl input root output explan optim path path sum exampl input root 10920nullnull157 output explan optim path path sum constraint number node tree rang nodev ","116":"phrase palindrom convert uppercas letter lowercas letter remov nonalphanumer charact read forward backward alphanumer charact includ letter number string return true palindrom fals otherwis exampl input man plan canal panama output true explan amanaplanacanalpanama palindrom exampl input race car output fals explan raceacar palindrom exampl input output true explan empti string remov nonalphanumer charact sinc empti string read forward backward palindrom constraint slength consist printabl ascii charact ","117":"transform sequenc word beginword word endword use dictionari wordlist sequenc word beginword everi adjac pair word differ singl letter everi si wordlist note beginword need wordlist endword word beginword endword dictionari wordlist return shortest transform sequenc beginword endword empti list sequenc exist sequenc return list word beginword exampl input beginword hit endword cog wordlist hotdotdoglotlogcog output hithotdotdogcoghithotlotlogcog explan shortest transform sequenc hit hot dot dog cog hit hot lot log cog exampl input beginword hit endword cog wordlist hotdotdoglotlog output explan endword cog wordlist therefor valid transform sequenc constraint beginwordlength endwordlength beginwordlength wordlistlength wordlistilength beginwordlength beginword endword wordlisti lowercas english letter beginword endword word wordlist uniqu sum shortest transform sequenc exceed ","118":"transform sequenc word beginword word endword use dictionari wordlist sequenc word beginword everi adjac pair word differ singl letter everi si wordlist note beginword need wordlist endword word beginword endword dictionari wordlist return number word shortest transform sequenc beginword endword sequenc exist exampl input beginword hit endword cog wordlist hotdotdoglotlogcog output explan shortest transform sequenc hit hot dot dog cog word long exampl input beginword hit endword cog wordlist hotdotdoglotlog output explan endword cog wordlist therefor valid transform sequenc constraint beginwordlength endwordlength beginwordlength wordlistlength wordlistilength beginwordlength beginword endword wordlisti lowercas english letter beginword endword word wordlist uniqu ","119":"unsort array integ num return length longest consecut element sequenc must write algorithm run time exampl input num output explan longest consecut element sequenc therefor length exampl input num output constraint numslength numsi ","120":"root binari tree contain digit roottoleaf path tree repres number exampl roottoleaf path repres number return total sum roottoleaf number test case gener answer fit 32bit integ leaf node node children exampl input root output explan roottoleaf path repres number roottoleaf path repres number therefor sum exampl input root output explan roottoleaf path repres number roottoleaf path repres number roottoleaf path repres number therefor sum constraint number node tree rang nodev depth tree exceed ","121":"matrix board contain letter captur region surround connect cell connect adjac cell horizont vertic region form region connect everi cell surround region surround cell connect region cell none region cell edg board surround region captur replac os input matrix board exampl input board xxxxxooxxxoxxoxx output xxxxxxxxxxxxxoxx explan diagram bottom region captur edg board surround exampl input board output constraint boardlength boardilength boardij ","122":"string partit everi substr partit palindrom return possibl palindrom partit exampl input aab output aabaab exampl input output constraint slength contain lowercas english letter ","123":"refer node connect undirect graph return deep copi clone graph node graph contain valu int list listnod neighbor class node public int val public listnod neighbor test case format simplic node valu node index 1index exampl first node val second node val graph repres test case use adjac list adjac list collect unord list use repres finit graph list describ set neighbor node graph node alway first node val must return copi node refer clone graph exampl input adjlist output explan node graph 1st node val neighbor node val 4th node val node val neighbor 1st node val 3rd node val 3rd node val neighbor node val 4th node val 4th node val neighbor 1st node val 3rd node val exampl input adjlist output explan note input contain empti list graph consist node val neighbor exampl input adjlist output explan empti graph node constraint number node graph rang nodev nodev uniqu node repeat edg selfloop graph graph connect node visit start node ","124":"ga station along circular rout amount ga ith station gasi car unlimit ga tank cost costi ga travel ith station next 1th station begin journey empti tank ga station integ array ga cost return start ga station index travel around circuit clockwis direct otherwis return exist solut guarante uniqu exampl input ga cost output explan start station index fill unit ga tank travel station tank travel station tank travel station tank travel station tank travel station cost ga enough travel back station therefor return start index exampl input ga cost output explan cant start station enough ga travel next station let start station fill unit ga tank travel station tank travel station tank travel back station requir unit ga therefor cant travel around circuit matter start constraint gaslength costlength gasi costi ","125":"children stand line child assign rate valu integ array rate give candi children subject follow requir child must least candi children higher rate get candi neighbor return minimum number candi need distribut candi children exampl input rate output explan alloc first second third child candi respect exampl input rate output explan alloc first second third child candi respect third child get candi satisfi condit constraint ratingslength ratingsi ","126":"nonempti array integ num everi element appear twice except find singl must implement solut linear runtim complex use constant extra space exampl input num output exampl input num output exampl input num output constraint numslength numsi element array appear twice except element appear ","127":"integ array num everi element appear time except appear exactli find singl element return must implement solut linear runtim complex use constant extra space exampl input num output exampl input num output constraint numslength numsi element num appear exactli time except element appear ","128":"link list length node contain addit random pointer could point node list null construct deep copi list deep copi exactli brand new node new node valu set valu correspond origin node next random pointer new node point new node copi list pointer origin list copi list repres list state none pointer new list point node origin list exampl node origin list xrandom correspond node copi list xrandom return head copi link list link list repres inputoutput list node node repres pair val randomindex val integ repres nodev randomindex index node rang random pointer point null point node code head origin link list exampl input head 7null13011410210 output 7null13011410210 exampl input head output exampl input head 3null303nul output 3null303nul constraint nodev noderandom null point node link list ","129":"string dictionari string worddict return true segment spacesepar sequenc dictionari word note word dictionari may reus multipl time segment exampl input leetcod worddict leetcod output true explan return true leetcod segment leet code exampl input applepenappl worddict applepen output true explan return true applepenappl segment appl pen appl note allow reus dictionari word exampl input catsandog worddict catsdogsandandcat output fals constraint slength worddictlength worddictilength worddicti lowercas english letter string worddict uniqu ","130":"string dictionari string worddict add space construct sentenc word valid dictionari word return possibl sentenc order note word dictionari may reus multipl time segment exampl input catsanddog worddict catcatsandsanddog output cat dogcat sand dog exampl input pineapplepenappl worddict applepenapplepenpinepineappl output pine appl pen applepineappl pen applepin applepen appl explan note allow reus dictionari word exampl input catsandog worddict catsdogsandandcat output constraint slength worddictlength worddictilength worddicti lowercas english letter string worddict uniqu input gener way length answer doesnt exceed ","131":"head head link list determin link list cycl cycl link list node list reach continu follow next pointer intern po use denot index node tail next pointer connect note po pass paramet return true cycl link list otherwis return fals exampl input head po output true explan cycl link list tail connect 1st node 0index exampl input head po output true explan cycl link list tail connect 0th node exampl input head po output fals explan cycl link list constraint number node list rang nodev po valid index linkedlist solv use ie constant memori ","132":"head link list return node cycl begin cycl return null cycl link list node list reach continu follow next pointer intern po use denot index node tail next pointer connect 0index cycl note po pass paramet modifi link list exampl input head po output tail connect node index explan cycl link list tail connect second node exampl input head po output tail connect node index explan cycl link list tail connect first node exampl input head po output cycl explan cycl link list constraint number node list rang nodev po valid index linkedlist solv use ie constant memori ","133":"head singli linkedlist list repres l0 l1 reorder list follow form l0 l1 l2 may modifi valu list node node may chang exampl input head output exampl input head output constraint number node list rang nodev ","134":"root binari tree return preorder travers node valu exampl input root 1null23 output explan exampl input root 12345null8nullnull679 output explan exampl input root output exampl input root output constraint number node tree rang nodev recurs solut trivial could iter ","135":"root binari tree return postord travers node valu exampl input root 1null23 output explan exampl input root 12345null8nullnull679 output explan exampl input root output exampl input root output constraint number node tree rang nodev recurs solut trivial could iter ","136":"design data structur follow constraint least recent use lru cach implement lrucach class lrucacheint capac initi lru cach posit size capac int getint key return valu key key exist otherwis return void putint key int valu updat valu key key exist otherwis add keyvalu pair cach number key exce capac oper evict least recent use key function get put must run averag time complex exampl input lrucach put put get put get put get get get output null null null null null explan lrucach lrucach new lrucache2 lrucacheput1 cach lrucacheput2 cach lrucacheget1 return lrucacheput3 lru key evict key cach lrucacheget2 return found lrucacheput4 lru key evict key cach lrucacheget1 return found lrucacheget3 return lrucacheget4 return constraint capac key valu call made get put ","137":"head singli link list sort list use insert sort return sort list head step insert sort algorithm insert sort iter consum input element repetit grow sort output list iter insert sort remov element input data find locat belong within sort list insert repeat input element remain follow graphic exampl insert sort algorithm partial sort list black initi contain first element list element red remov input data insert inplac sort list iter exampl input head output exampl input head output constraint number node list rang nodev ","138":"head link list return list sort ascend order exampl input head output exampl input head output exampl input head output constraint number node list rang nodev sort link list logn time memori ie constant space ","139":"array point pointsi xi yi repres point xy plane return maximum number point lie straight line exampl input point output exampl input point output constraint pointslength pointsilength xi yi point uniqu ","140":"array string token repres arithmet express revers polish notat evalu express return integ repres valu express note valid oper operand may integ anoth express divis integ alway truncat toward divis input repres valid arithmet express revers polish notat answer intermedi calcul repres 32bit integ exampl input token output explan exampl input token output explan exampl input token output explan constraint tokenslength tokensi either oper integ rang ","141":"input string revers order word word defin sequenc nonspac charact word separ least space return string word revers order concaten singl space note may contain lead trail space multipl space word return string singl space separ word includ extra space exampl input sky blue output blue sky exampl input hello world output world hello explan revers string contain lead trail space exampl input good exampl output exampl good explan need reduc multipl space word singl space revers string constraint slength contain english letter uppercas lowercas digit space least word followup string data type mutabl languag solv inplac extra space ","142":"integ array num find subarray largest product return product test case gener answer fit 32bit integ exampl input num output explan largest product exampl input num output explan result subarray constraint numslength numsi product subarray num guarante fit 32bit integ ","143":"suppos array length sort ascend order rotat time exampl array num might becom rotat time rotat time notic rotat array time result array sort rotat array num uniqu element return minimum element array must write algorithm run olog time exampl input num output explan origin array rotat time exampl input num output explan origin array rotat time exampl input num output explan origin array rotat time constraint numslength numsi integ num uniqu num sort rotat time ","144":"suppos array length sort ascend order rotat time exampl array num might becom rotat time rotat time notic rotat array time result array sort rotat array num may contain duplic return minimum element array must decreas overal oper step much possibl exampl input num output exampl input num output constraint numslength numsi num sort rotat time problem similar find minimum rotat sort array num may contain duplic would affect runtim complex ","145":"design stack support push pop top retriev minimum element constant time implement minstack class minstack initi stack object void pushint val push element val onto stack void pop remov element top stack int top get top element stack int getmin retriev minimum element stack must implement solut time complex function exampl input minstackpushpushpushgetminpoptopgetmin output nullnullnullnull3null02 explan minstack minstack new minstack minstackpush2 minstackpush0 minstackpush3 minstackgetmin return minstackpop minstacktop return minstackgetmin return constraint val method pop top getmin oper alway call nonempti stack call made push pop top getmin ","146":"head singli linkedlist heada headb return node list intersect link list intersect return null exampl follow link list begin intersect node c1 test case gener cycl anywher entir link structur note link list must retain origin structur function return custom judg input judg follow program input intersectv valu node intersect occur intersect node lista first link list listb second link list skipa number node skip ahead lista start head get intersect node skipb number node skip ahead listb start head get intersect node judg creat link structur base input pass head heada headb program correctli return intersect node solut accept exampl input intersectv lista listb skipa skipb output intersect explan intersect node valu note must list intersect head read head read node intersect node node intersect node note intersect node valu node valu node 3rd node differ node refer word point differ locat memori node valu 3rd node 4th node point locat memori exampl input intersectv lista listb skipa skipb output intersect explan intersect node valu note must list intersect head read head read node intersect node node intersect node exampl input intersectv lista listb skipa skipb output intersect explan head read head read sinc list intersect intersectv must skipa skipb arbitrari valu explan list intersect return null constraint number node lista number node listb nodev skipa skipb intersectv lista listb intersect intersectv listaskipa listbskipb lista listb intersect could write solut run om time use memori ","147":"peak element element strictli greater neighbor 0index integ array num find peak element return index array contain multipl peak return index peak may imagin nums1 numsn word element alway consid strictli greater neighbor outsid array must write algorithm run olog time exampl input num output explan peak element function return index number exampl input num output explan function return either index number peak element index number peak element constraint numslength numsi numsi numsi valid ","148":"integ array num return maximum differ success element sort form array contain less element return must write algorithm run linear time use linear extra space exampl input num output explan sort form array either maximum differ exampl input num output explan array contain less element therefor return constraint numslength numsi ","149":"integ repres numer denomin fraction return fraction string format fraction part repeat enclos repeat part parenthes multipl answer possibl return guarante length answer string less input exampl input numer denomin output exampl input numer denomin output exampl input numer denomin output constraint numer denomin denomin ","150":"1index array integ number alreadi sort nondecreas order find number add specif target number let number numbersindex1 numbersindex2 index1 index2 numberslength return indic number index1 index2 ad integ array index1 index2 length test gener exactli solut may use element twice solut must use constant extra space exampl input number target output explan sum therefor index1 index2 return exampl input number target output explan sum therefor index1 index2 return exampl input number target output explan sum therefor index1 index2 return constraint numberslength numbersi number sort nondecreas order target test gener exactli solut ","151":"integ columnnumb return correspond column titl appear excel sheet exampl ab exampl input columnnumb output exampl input columnnumb output ab exampl input columnnumb output constraint columnnumb ","152":"array num size return major element major element element appear time may assum major element alway exist array exampl input num output exampl input num output constraint numslength numsi followup could solv problem linear time space ","153":"string columntitl repres column titl appear excel sheet return correspond column number exampl ab exampl input columntitl output exampl input columntitl ab output exampl input columntitl output constraint columntitlelength columntitl consist uppercas english letter columntitl rang fxshrxw ","154":"integ return number trail zero note exampl input output explan trail exampl input output explan trail exampl input output constraint could write solut work logarithm time complex ","155":"demon captur princess imprison bottomright corner dungeon dungeon consist room laid 2d grid valiant knight initi posit topleft room must fight way dungeon rescu princess knight initi health point repres posit integ point health point drop die immedi room guard demon repres neg integ knight lose health upon enter room room either empti repres contain magic orb increas knight health repres posit integ reach princess quickli possibl knight decid move rightward downward step return knight minimum initi health rescu princess note room contain threat powerup even first room knight enter bottomright room princess imprison exampl input dungeon output explan initi health knight must least follow optim path right right exampl input dungeon output constraint dungeonlength dungeonilength dungeonij ","156":"sql schema panda schema ","157":"sql schema panda schema ","158":"sql schema panda schema ","159":"sql schema panda schema ","160":"list nonneg integ num arrang form largest number return sinc result may larg need return string instead integ exampl input num output exampl input num output constraint numslength numsi ","161":"sql schema panda schema ","162":"sql schema panda schema ","163":"sql schema panda schema ","164":"sql schema panda schema ","165":"sql schema panda schema ","166":"sql schema panda schema ","167":"dna sequenc compos seri nucleotid abbrevi exampl acgaattccg dna sequenc studi dna use identifi repeat sequenc within dna string repres dna sequenc return 10letterlong sequenc substr occur dna molecul may return answer order exampl input aaaaacccccaaaaaccccccaaaaagggttt output aaaaaccccccccccaaaaa exampl input aaaaaaaaaaaaa output aaaaaaaaaa constraint slength si either ","168":"integ array price pricesi price stock ith day integ find maximum profit achiev may complet transact ie may buy time sell time note may engag multipl transact simultan ie must sell stock buy exampl input price output explan buy day price sell day price profit exampl input price output explan buy day price sell day price profit buy day price sell day price profit constraint priceslength pricesi ","169":"integ array num rotat array right step nonneg exampl input num output explan rotat step right rotat step right rotat step right exampl input num output explan rotat step right rotat step right constraint numslength numsi tri come mani solut least differ way solv problem could inplac extra space ","170":"write function take binari represent posit integ return number set bit also known ham weight exampl input output explan input binari string total set bit exampl input output explan input binari string total set bit exampl input output explan input binari string total thirti set bit constraint function call mani time would optim ","171":"write bash script calcul frequenc word text file wordstxt simplic sake may assum wordstxt contain lowercas charact space charact word must lowercas charact word separ whitespac charact exampl assum wordstxt follow content day sunni sunni script output follow sort descend frequenc sunni day note dont worri handl tie guarante word frequenc count uniqu could write onelin use unix pipe ","172":"text file filetxt contain list phone number per line write onelin bash script print valid phone number may assum valid phone number must appear follow format xxxxxxx xxxxxxxxxx mean digit may also assum line text file must contain lead trail white space exampl assum filetxt follow content script output follow valid phone number ","173":"text file filetxt transpos content may assum row number column field separ charact exampl filetxt follow content name age alic ryan output follow name alic ryan age ","174":"text file filetxt print line file exampl assum filetxt follow content line line line line line line line line line line script output tenth line line note file contain less line output there least differ solut tri explor possibl ","175":"sql schema panda schema ","176":"sql schema panda schema ","177":"profession robber plan rob hous along street hous certain amount money stash constraint stop rob adjac hous secur system connect automat contact polic adjac hous broken night integ array num repres amount money hous return maximum amount money rob tonight without alert polic exampl input num output explan rob hous money rob hous money total amount rob exampl input num output explan rob hous money rob hous money rob hous money total amount rob constraint numslength numsi ","178":"root binari tree imagin stand right side return valu node see order top bottom exampl input root 123null5null4 output exampl input root 1null3 output exampl input root output constraint number node tree rang nodev ","179":"2d binari grid grid repres map land water return number island island surround water form connect adjac land horizont vertic may assum edg grid surround water exampl input grid output exampl input grid output constraint gridlength gridilength gridij ","180":"integ left right repres rang left right return bitwis number rang inclus exampl input left right output exampl input left right output exampl input left right output constraint left right ","181":"write algorithm determin number happi happi number number defin follow process start posit integ replac number sum squar digit repeat process number equal stay loop endlessli cycl includ number process end happi return true happi number fals exampl input output true explan exampl input output fals constraint ","182":"head link list integ val remov node link list nodev val return new head exampl input head val output exampl input head val output exampl input head val output constraint number node list rang nodev val ","183":"integ return number prime number strictli less exampl input output explan prime number less exampl input output exampl input output constraint ","184":"string determin isomorph string isomorph charact replac get occurr charact must replac anoth charact preserv order charact charact may map charact charact may map exampl input egg add output true explan string made ident map e map exampl input foo bar output fals explan string made ident need map exampl input paper titl output true constraint slength tlength slength valid ascii charact ","185":"head singli link list revers list return revers list exampl input head output exampl input head output exampl input head output constraint number node list rang nodev link list revers either iter recurs could implement ","186":"total numcours cours take label numcours array prerequisit prerequisitesi ai bi indic must take cours bi first want take cours ai exampl pair indic take cours first take cours return true finish cours otherwis return fals exampl input numcours prerequisit output true explan total cours take take cours finish cours possibl exampl input numcours prerequisit output fals explan total cours take take cours finish cours take cours also finish cours imposs constraint numcours prerequisiteslength prerequisitesilength ai bi numcours pair prerequisitesi uniqu ","187":"trie pronounc tri prefix tree tree data structur use effici store retriev key dataset string variou applic data structur autocomplet spellcheck implement trie class trie initi trie object void insertstr word insert string word trie boolean searchstr word return true string word trie ie insert fals otherwis boolean startswithstr prefix return true previous insert string word prefix prefix fals otherwis exampl input trie insert search search startswith insert search appl appl app app app app output null null true fals true null true explan trie trie new trie trieinsertappl triesearchappl return true triesearchapp return fals triestartswithapp return true trieinsertapp triesearchapp return true constraint wordlength prefixlength word prefix lowercas english letter call total made insert search startswith ","188":"array posit integ num posit integ target return minim length subarray whose sum greater equal target subarray return instead exampl input target num output explan subarray minim length problem constraint exampl input target num output exampl input target num output constraint target numslength numsi figur solut tri code anoth solut time complex logn ","189":"total numcours cours take label numcours array prerequisit prerequisitesi ai bi indic must take cours bi first want take cours ai exampl pair indic take cours first take cours return order cours take finish cours mani valid answer return imposs finish cours return empti array exampl input numcours prerequisit output explan total cours take take cours finish cours correct cours order exampl input numcours prerequisit output explan total cours take take cours finish cours cours taken finish cours correct cours order anoth correct order exampl input numcours prerequisit output constraint numcours prerequisiteslength numcours numcours prerequisitesilength ai bi numcours ai bi pair ai bi distinct ","190":"design data structur support ad new word find string match previous ad string implement worddictionari class worddictionari initi object void addwordword add word data structur match later bool searchword return true string data structur match word fals otherwis word may contain dot dot match letter exampl input worddictionaryaddwordaddwordaddwordsearchsearchsearchsearch baddadmadpadbadadb output nullnullnullnullfalsetruetruetru explan worddictionari worddictionari new worddictionari worddictionaryaddwordbad worddictionaryaddworddad worddictionaryaddwordmad worddictionarysearchpad return fals worddictionarysearchbad return true worddictionarysearchad return true worddictionarysearchb return true constraint wordlength word addword consist lowercas english letter word search lowercas english letter dot word search queri call made addword search ","191":"board charact list string word return word board word must construct letter sequenti adjac cell adjac cell horizont vertic neighbor letter cell may use word exampl input board oaanetaeihkriflv word oathpeaeatrain output eatoath exampl input board abcd word abcb output constraint boardlength boardilength boardij lowercas english letter wordslength wordsilength wordsi consist lowercas english letter string word uniqu ","192":"profession robber plan rob hous along street hous certain amount money stash hous place arrang circl mean first hous neighbor last meanwhil adjac hous secur system connect automat contact polic adjac hous broken night integ array num repres amount money hous return maximum amount money rob tonight without alert polic exampl input num output explan rob hous money rob hous money adjac hous exampl input num output explan rob hous money rob hous money total amount rob exampl input num output constraint numslength numsi ","193":"string convert palindrom ad charact front return shortest palindrom find perform transform exampl input aacecaaa output aaacecaaa exampl input abcd output dcbabcd constraint slength consist lowercas english letter ","194":"integ array num integ return kth largest element array note kth largest element sort order kth distinct element solv without sort exampl input num output exampl input num output constraint numslength numsi ","195":"find valid combin number sum follow condit true number use number use return list possibl valid combin list must contain combin twice combin may return order exampl input output explan valid combin exampl input output explan valid combin exampl input output explan valid combin use differ number rang smallest sum get sinc valid combin constraint ","196":"integ array num return true valu appear least twice array return fals everi element distinct exampl input num output true explan element occur indic exampl input num output fals explan element distinct exampl input num output true constraint numslength numsi ","197":"citi skylin outer contour silhouett form build citi view distanc locat height build return skylin form build collect geometr inform build array build buildingsi lefti righti heighti lefti coordin left edg ith build righti coordin right edg ith build heighti height ith build may assum build perfect rectangl ground absolut flat surfac height skylin repres list key point sort xcoordin form x1y1x2y2 key point left endpoint horizont segment skylin except last point list alway ycoordin use mark skylin termin rightmost build end ground leftmost rightmost build part skylin contour note must consecut horizont line equal height output skylin instanc accept line height merg final output exampl input build output explan figur show build input figur show skylin form build red point figur repres key point output list exampl input build output constraint buildingslength lefti righti heighti build sort lefti nondecreas order ","198":"integ array num integ return true distinct indic array numsi numsj absi exampl input num output true exampl input num output true exampl input num output fals constraint numslength numsi ","199":"integ array num integ indexdiff valuediff find pair indic absi indexdiff absnumsi numsj valuediff return true pair exist fals otherwis exampl input num indexdiff valuediff output true explan choos satisfi condit absi indexdiff abs0 absnumsi numsj valuediff abs1 exampl input num indexdiff valuediff output fals explan tri possibl pair satisfi condit return fals constraint numslength numsi indexdiff numslength valuediff ","200":"binari matrix fill find largest squar contain return area exampl input matrix output exampl input matrix output exampl input matrix output constraint matrixlength matrixilength matrixij ","201":"root complet binari tree return number node tree accord wikipedia everi level except possibl last complet fill complet binari tree node last level far left possibl 2h node inclus last level design algorithm run less time complex exampl input root output exampl input root output exampl input root output constraint number node tree rang nodev tree guarante complet ","202":"implement lastinfirstout lifo stack use queue implement stack support function normal stack push top pop empti implement mystack class void pushint push element top stack int pop remov element top stack return int top return element top stack boolean empti return true stack empti fals otherwis note must use standard oper queue mean push back peekpop front size empti oper valid depend languag queue may support nativ may simul queue use list dequ doubleend queue long use queue standard oper exampl input mystack push push top pop empti output null null null fals explan mystack mystack new mystack mystackpush1 mystackpush2 mystacktop return mystackpop return mystackempti return fals constraint call made push pop top empti call pop top valid followup implement stack use queue ","203":"root binari tree invert tree return root exampl input root output exampl input root output exampl input root output constraint number node tree rang nodev ","204":"string repres express evalu express return valu integ divis truncat toward may assum express alway valid intermedi result rang note allow use builtin function evalu string mathemat express eval exampl input output exampl input output exampl input output constraint slength consist integ oper separ number space repres valid express integ express nonneg integ rang answer guarante fit 32bit integ ","205":"sort uniqu integ array num rang ab set integ inclus return smallest sort list rang cover number array exactli element num cover exactli rang integ rang num rang ab list output ab exampl input num output explan rang exampl input num output explan rang constraint numslength numsi valu num uniqu num sort ascend order ","206":"integ array size find element appear time exampl input num output exampl input num output exampl input num output constraint numslength numsi could solv problem linear time space ","207":"root binari search tree integ return kth smallest valu 1index valu node tree exampl input root 314null2 output exampl input root 53624nullnull1 output constraint number node tree nodev modifi often ie insert delet oper need find kth smallest frequent would optim ","208":"integ return true power otherwis return fals integ power exist integ 2x exampl input output true explan exampl input output true explan exampl input output fals constraint could solv without loopsrecurs ","209":"implement first first fifo queue use stack implement queue support function normal queue push peek pop empti implement myqueu class void pushint push element back queue int pop remov element front queue return int peek return element front queue boolean empti return true queue empti fals otherwis note must use standard oper stack mean push top peekpop top size empti oper valid depend languag stack may support nativ may simul stack use list dequ doubleend queue long use stack standard oper exampl input myqueu push push peek pop empti output null null null fals explan myqueu myqueu new myqueu myqueuepush1 queue myqueuepush2 queue leftmost front queue myqueuepeek return myqueuepop return queue myqueueempti return fals constraint call made push pop peek empti call pop peek valid followup implement queue oper amort time complex word perform oper take overal time even oper may take longer ","210":"integ count total number digit appear nonneg integ less equal exampl input output exampl input output constraint ","211":"head singli link list return true palindrom fals otherwis exampl input head output true exampl input head output fals constraint number node list rang nodev could time space ","212":"integ array num return array answer answeri equal product element num except numsi product prefix suffix num guarante fit 32bit integ must write algorithm run time without use divis oper exampl input num output exampl input num output constraint numslength numsi product prefix suffix num guarante fit 32bit integ solv problem extra space complex output array count extra space space complex analysi ","213":"write effici algorithm search valu target integ matrix matrix matrix follow properti integ row sort ascend left right integ column sort ascend top bottom exampl input matrix target output true exampl input matrix target output fals constraint matrixlength matrixilength matrixij integ row sort ascend order integ column sort ascend order target ","214":"string express number oper return possibl result comput differ possibl way group number oper may return answer order test case gener output valu fit 32bit integ number differ result exceed exampl input express output explan exampl input express output explan constraint expressionlength express consist digit oper integ valu input express rang integ valu input express lead denot sign ","215":"string return true anagram fals otherwis exampl input anagram nagaram output true exampl input rat car output fals constraint slength tlength lowercas english letter input contain unicod charact would adapt solut case ","216":"root binari tree return roottoleaf path order leaf node children exampl input root 123null5 output exampl input root output constraint number node tree rang nodev ","217":"integ num repeatedli add digit result digit return exampl input num output explan process sinc digit return exampl input num output constraint num could without looprecurs runtim ","218":"integ array num exactli element appear element appear exactli twice find element appear return answer order must write algorithm run linear runtim complex use constant extra space exampl input num output explan also valid answer exampl input num output exampl input num output constraint numslength numsi integ num appear twice integ appear ","219":"sql schema panda schema ","220":"ugli number posit integ whose prime factor limit integ return nth ugli number exampl input output explan sequenc first ugli number exampl input output explan prime factor therefor prime factor limit constraint ","221":"array num contain distinct number rang return number rang miss array exampl input num output explan sinc number number rang miss number rang sinc appear num exampl input num output explan sinc number number rang miss number rang sinc appear num exampl input num output explan sinc number number rang miss number rang sinc appear num constraint numslength numsi number num uniqu could implement solut use extra space complex runtim complex ","222":"convert nonneg integ num english word represent exampl input num output hundr twenti exampl input num output twelv thousand hundr forti exampl input num output million hundr thirti thousand hundr sixti constraint num ","223":"array integ citat citationsi number citat research receiv ith paper return research hindex accord definit hindex wikipedia hindex defin maximum valu research publish least paper cite least time exampl input citat output explan mean research paper total receiv citat respect sinc research paper least citat remain citat hindex exampl input citat output constraint citationslength citationsi ","224":"array integ citat citationsi number citat research receiv ith paper citat sort ascend order return research hindex accord definit hindex wikipedia hindex defin maximum valu research publish least paper cite least time must write algorithm run logarithm time exampl input citat output explan mean research paper total receiv citat respect sinc research paper least citat remain citat hindex exampl input citat output constraint citationslength citationsi citat sort ascend order ","225":"product manag current lead team develop new product unfortun latest version product fail qualiti check sinc version develop base previou version version bad version also bad suppos version want find first bad caus follow one bad api bool isbadversionvers return whether version bad implement function find first bad version minim number call api exampl input bad output explan call isbadversion3 fals call isbadversion5 true call isbadversion4 true first bad version exampl input bad output constraint bad ","226":"integ return least number perfect squar number sum perfect squar integ squar integ word product integ exampl perfect squar exampl input output explan exampl input output explan constraint ","227":"string num contain digit integ target return possibl insert binari oper andor digit num result express evalu target valu note operand return express contain lead zero exampl input num target output explan evalu exampl input num target output explan evalu exampl input num target output explan express creat evalu constraint numlength num consist digit target ","228":"integ array num move end maintain rel order nonzero element note must inplac without make copi array exampl input num output exampl input num output constraint numslength numsi could minim total number oper done ","229":"design iter support peek oper exist iter addit next oper implement peekingiter class peekingiteratoriteratorint num initi object integ iter iter int next return next element array move pointer next element boolean return true still element array int peek return next element array without move pointer note languag may differ implement constructor iter support int next boolean function exampl input peekingiter next peek next next output null fals explan peekingiter peekingiter new peekingiterator1 peekingiteratornext return pointer move next element peekingiteratorpeek return pointer move peekingiteratornext return pointer move next element peekingiteratornext return pointer move next element peekingiteratorhasnext return fals constraint numslength numsi call next peek valid call made next peek would extend design gener work type integ ","230":"array integ num contain integ integ rang inclus repeat number num return repeat number must solv problem without modifi array num use constant extra space exampl input num output exampl input num output exampl input num output constraint numslength numsi integ num appear except precis integ appear time prove least duplic number must exist num solv problem linear runtim complex ","231":"accord wikipedia articl game life also known simpli life cellular automaton devis british mathematician john horton conway board made grid cell cell initi state live repres dead repres cell interact neighbor horizont vertic diagon use follow rule taken wikipedia articl live cell fewer live neighbor die caus underpopul live cell live neighbor live next gener live cell live neighbor die overpopul dead cell exactli live neighbor becom live cell reproduct next state creat appli rule simultan everi cell current state birth death occur simultan current state grid board return next state exampl input board output exampl input board output constraint boardlength boardilength boardij could solv inplac rememb board need updat simultan updat cell first use updat valu updat cell question repres board use 2d array principl board infinit would caus problem activ area encroach upon border array ie live cell reach border would address problem ","232":"pattern string find follow pattern mean full match biject letter pattern nonempti word specif letter pattern map exactli uniqu word uniqu word map exactli letter pattern letter map word word map letter exampl input pattern abba dog cat cat dog output true explan biject establish map dog map cat exampl input pattern abba dog cat cat fish output fals exampl input pattern aaaa dog cat cat dog output fals constraint patternlength pattern contain lowercas english letter slength contain lowercas english letter space contain lead trail space word separ singl space ","233":"play follow nim game friend initi heap stone tabl friend altern take turn go first turn person whose turn remov stone heap remov last stone winner number stone heap return true win game assum friend play optim otherwis return fals exampl input output fals explan possibl outcom remov stone friend remov stone includ last stone friend win remov stone friend remov stone includ last stone friend win remov stone friend remov last stone friend win outcom friend win exampl input output true exampl input output true constraint ","234":"median middl valu order integ list size list even middl valu median mean middl valu exampl arr median exampl arr median implement medianfind class medianfind initi medianfind object void addnumint num add integ num data stream data structur doubl findmedian return median element far answer within actual answer accept exampl input medianfind addnum addnum findmedian addnum findmedian output null null null null explan medianfind medianfind new medianfind medianfinderaddnum1 arr medianfinderaddnum2 arr medianfinderfindmedian return ie medianfinderaddnum3 arr1 medianfinderfindmedian return constraint num least element data structur call findmedian call made addnum findmedian integ number stream rang would optim solut integ number stream rang would optim solut ","235":"serial process convert data structur object sequenc bit store file memori buffer transmit across network connect link reconstruct later anoth comput environ design algorithm serial deseri binari tree restrict serializationdeseri algorithm work need ensur binari tree serial string string deseri origin tree structur clarif inputoutput format leetcod serial binari tree necessarili need format pleas creativ come differ approach exampl input root 123nullnull45 output 123nullnull45 exampl input root output constraint number node tree rang nodev ","236":"play bull cow game friend write secret number ask friend guess number friend make guess provid hint follow info number bull digit guess correct posit number cow digit guess secret number locat wrong posit specif nonbul digit guess could rearrang becom bull secret number secret friend guess guess return hint friend guess hint format xayb number bull number cow note secret guess may contain duplic digit exampl input secret guess output 1a3b explan bull connect cow underlin exampl input secret guess output 1a1b explan bull connect cow underlin note unmatch count cow sinc nonbul digit rearrang allow bull constraint secretlength guesslength secretlength guesslength secret guess digit ","237":"integ array num return length longest strictli increas subsequ exampl input num output explan longest increas subsequ therefor length exampl input num output exampl input num output constraint numslength numsi come algorithm run logn time complex ","238":"string contain parenthes letter remov minimum number invalid parenthes make input string valid return list uniqu string valid minimum number remov may return answer order exampl input output exampl input output exampl input output constraint slength consist lowercas english letter parenthes parenthes ","239":"2d matrix matrix handl multipl queri follow type calcul sum element matrix insid rectangl defin upper left corner row1 col1 lower right corner row2 col2 implement nummatrix class nummatrixint matrix initi object integ matrix matrix int sumregionint row1 int col1 int row2 int col2 return sum element matrix insid rectangl defin upper left corner row1 col1 lower right corner row2 col2 must design algorithm sumregion work time complex exampl input nummatrix sumregion sumregion sumregion output null explan nummatrix nummatrix new nummatrix3 nummatrixsumregion2 return ie sum red rectangl nummatrixsumregion1 return ie sum green rectangl nummatrixsumregion1 return ie sum blue rectangl constraint matrixlength matrixilength matrixij row1 row2 col1 col2 call made sumregion ","240":"addit number string whose digit form addit sequenc valid addit sequenc contain least number except first number subsequ number sequenc must sum preced string contain digit return true addit number fals otherwis note number addit sequenc lead zero sequenc invalid exampl input output true explan digit form addit sequenc exampl input output true explan addit sequenc constraint numlength num consist digit would handl overflow larg input integ ","241":"integ array num handl multipl queri follow type updat valu element num calcul sum element num indic left right inclus left right implement numarray class numarrayint num initi object integ array num void updateint index int val updat valu numsindex val int sumrangeint left int right return sum element num indic left right inclus ie numsleft numsleft numsright exampl input numarray sumrang updat sumrang output null null explan numarray numarray new numarray1 numarraysumrange0 return numarrayupdate1 num numarraysumrange0 return constraint numslength numsi index numslength val left right numslength call made updat sumrang ","242":"array price pricesi price stock ith day find maximum profit achiev may complet mani transact like ie buy sell share stock multipl time follow restrict sell stock buy stock next day ie cooldown day note may engag multipl transact simultan ie must sell stock buy exampl input price output explan transact buy sell cooldown buy sell exampl input price output constraint priceslength pricesi ","243":"tree undirect graph vertic connect exactli path word connect graph without simpl cycl tree tree node label array edg edgesi ai bi indic undirect edg node ai bi tree choos node tree root select node root result tree height among possibl root tree minimum height ie minh call minimum height tree mht return list mht root label return answer order height root tree number edg longest downward path root leaf exampl input edg output explan shown height tree root node label mht exampl input edg output constraint edgeslength ai bi ai bi pair ai bi distinct input guarante tree repeat edg ","244":"balloon index balloon paint number repres array num ask burst balloon burst ith balloon get numsi numsi numsi coin goe bound array treat balloon paint return maximum coin collect burst balloon wise exampl input num output explan num coin exampl input num output constraint numslength numsi ","245":"integ array num return integ array count countsi number smaller element right numsi exampl input num output explan right smaller element right smaller element right smaller element right smaller element exampl input num output exampl input num output constraint numslength numsi ","246":"string remov duplic letter everi letter appear must make sure result smallest lexicograph order among possibl result exampl input bcabc output abc exampl input cbacdcbc output constraint slength consist lowercas english letter note question httpsleetcodecomproblemssmallestsubsequenceofdistinctcharact ","247":"string array word return maximum valu lengthwordi lengthwordj word share common letter word exist return exampl input word abcwbazfoobarxtfnabcdef output explan word abcw xtfn exampl input word aababcdcdbcdabcd output explan word ab cd exampl input word aaaaaaaaaa output explan pair word constraint wordslength wordsilength wordsi consist lowercas english letter ","248":"bulb initi first turn bulb turn everi second bulb third round toggl everi third bulb turn turn ith round toggl everi bulb nth round toggl last bulb return number bulb round exampl input output explan first bulb first round bulb second round bulb third round bulb return bulb exampl input output exampl input output constraint ","249":"integ array nums1 nums2 length respect nums1 nums2 repres digit number also integ creat maximum number length digit number rel order digit array must preserv return array digit repres answer exampl input nums1 nums2 output exampl input nums1 nums2 output exampl input nums1 nums2 output constraint nums1length nums2length nums1i nums2i ","250":"integ array coin repres coin differ denomin integ amount repres total amount money return fewest number coin need make amount amount money made combin coin return may assum infinit number kind coin exampl input coin amount output explan exampl input coin amount output exampl input coin amount output constraint coinslength coinsi amount ","251":"integ array num reorder nums0 nums1 nums2 nums3 may assum input array alway valid answer exampl input num output explan also accept exampl input num output constraint numslength numsi guarante answer input num time andor inplac extra space ","252":"integ return true power otherwis return fals integ power exist integ 3x exampl input output true explan exampl input output fals explan 3x exampl input output fals explan 3x constraint could solv without loopsrecurs ","253":"integ array num integ lower upper return number rang sum lie lower upper inclus rang sum si defin sum element num indic inclus exampl input num lower upper output explan rang respect sum exampl input num lower upper output constraint numslength numsi lower upper answer guarante fit 32bit integ ","254":"head singli link list group node odd indic togeth follow node even indic return reorder list first node consid odd second node even note rel order insid even odd group remain input must solv problem extra space complex time complex exampl input head output exampl input head output constraint number node link list rang nodev ","255":"integ matrix return length longest increas path matrix cell either move direct left right may move diagon move outsid boundari ie wraparound allow exampl input matrix output explan longest increas path exampl input matrix output explan longest increas path move diagon allow exampl input matrix output constraint matrixlength matrixilength matrixij ","256":"sort integ array num integ addpatch element array number rang inclus form sum element array return minimum number patch requir exampl input num output explan combin num form possibl sum addpatch num combin possibl sum cover rang need patch exampl input num output explan patch exampl input num output constraint numslength numsi num sort ascend order ","257":"way serial binari tree use preorder travers encount nonnul node record node valu null node record use sentinel valu exampl binari tree serial string repres null node string commasepar valu preorder return true correct preorder travers serial binari tree guarante commasepar valu string must either integ charact repres null pointer may assum input format alway valid exampl could never contain consecut comma note allow reconstruct tree exampl input preorder output true exampl input preorder output fals exampl input preorder output fals constraint preorderlength preorder integ rang separ comma ","258":"list airlin ticket ticketsi toi repres departur arriv airport flight reconstruct itinerari order return ticket belong man depart jfk thu itinerari must begin jfk multipl valid itinerari return itinerari smallest lexic order read singl string exampl itinerari jfk lga smaller lexic order jfk lgb may assum ticket form least valid itinerari must use ticket exampl input ticket muclhrjfkmucsfosjclhrsfo output jfkmuclhrsfosjc exampl input ticket jfksfojfkatlsfoatlatljfkatlsfo output jfkatljfksfoatlsfo explan anoth possibl reconstruct jfksfoatljfkatlsfo larger lexic order constraint ticketslength ticketsilength fromilength toilength toi uppercas english letter toi ","259":"integ array num return true exist tripl indic numsi numsj numsk indic exist return fals exampl input num output true explan triplet valid exampl input num output fals explan triplet exist exampl input num output true explan triplet valid nums3 nums4 nums5 constraint numslength numsi could implement solut run time complex space complex ","260":"array integ distanc start point xy plane move distance0 meter north distance1 meter west distance2 meter south distance3 meter east word move direct chang counterclockwis return true path cross fals exampl input distanc output true explan path cross point exampl input distanc output fals explan path cross point exampl input distanc output true explan path cross point constraint distancelength distancei ","261":"0index array uniqu string word palindrom pair pair integ wordslength wordsi wordsj concaten string palindrom return array palindrom pair word must write algorithm osum wordsilength runtim complex exampl input word abcddcballsssssl output explan palindrom abcddcbadcbaabcdsllsllssssl exampl input word battabcat output explan palindrom battabtabbat exampl input word output explan palindrom constraint wordslength wordsilength wordsi consist lowercas english letter ","262":"thief found new place thieveri entranc area call root besid root hous parent hous tour smart thief realiz hous place form binari tree automat contact polic directlylink hous broken night root binari tree return maximum amount money thief rob without alert polic exampl input root 323null3null1 output explan maximum amount money thief rob exampl input root 34513null1 output explan maximum amount money thief rob constraint number node tree rang nodev ","263":"integ return array an length ansi number binari represent exampl input output explan exampl input output explan constraint easi come solut runtim log linear time possibl singl pass without use builtin function ie like builtinpopcount ","264":"nest list integ nestedlist element either integ list whose element may also integ list implement iter flatten implement nestediter class nestediteratorlistnestedinteg nestedlist initi iter nest list nestedlist int next return next integ nest list boolean return true still integ nest list fals otherwis code test follow pseudocod initi iter nestedlist re iteratorhasnext append iteratornext end re return re re match expect flatten list code judg correct exampl input nestedlist output explan call next repeatedli return fals order element return next exampl input nestedlist output explan call next repeatedli return fals order element return next constraint nestedlistlength valu integ nest list rang ","265":"integ return true power otherwis return fals integ power exist integ 4x exampl input output true exampl input output fals exampl input output true constraint could solv without loopsrecurs ","266":"integ break sum posit integ maxim product integ return maximum product get exampl input output explan exampl input output explan constraint ","267":"write function revers string input string array charact must modifi input array inplac extra memori exampl input hello output olleh exampl input hannah output hannah constraint slength si printabl ascii charact ","268":"string revers vowel string return vowel e u appear lower upper case exampl input icecream output acecreim explan vowel e e revers vowel becom acecreim exampl input leetcod output leotced constraint slength printabl ascii charact ","269":"integ array nums1 nums2 return array intersect element result must uniqu may return result order exampl input nums1 nums2 output exampl input nums1 nums2 output explan also accept constraint nums1length nums2length nums1i nums2i ","270":"integ array nums1 nums2 return array intersect element result must appear mani time show array may return result order exampl input nums1 nums2 output exampl input nums1 nums2 output explan also accept constraint nums1length nums2length nums1i nums2i array alreadi sort would optim algorithm nums1 size small compar nums2 size algorithm better element nums2 store disk memori limit load element memori ","271":"data stream input nonneg integ summar number seen far list disjoint interv implement summaryrang class summaryrang initi object empti stream void addnumint valu add integ valu stream int getinterv return summari integ stream current list disjoint interv starti endi answer sort starti exampl input summaryrang addnum getinterv addnum getinterv addnum getinterv addnum getinterv addnum getinterv output null null null null null null explan summaryrang summaryrang new summaryrang summaryrangesaddnum1 arr summaryrangesgetinterv return summaryrangesaddnum3 arr summaryrangesgetinterv return summaryrangesaddnum7 arr summaryrangesgetinterv return summaryrangesaddnum2 arr summaryrangesgetinterv return summaryrangesaddnum6 arr summaryrangesgetinterv return constraint valu call made addnum getinterv call made getinterv lot merg number disjoint interv small compar size data stream ","272":"2d array integ envelop envelopesi wi hi repres width height envelop envelop fit anoth width height envelop greater envelop width height return maximum number envelop russian doll ie put insid note rotat envelop exampl input envelop output explan maximum number envelop russian doll exampl input envelop output constraint envelopeslength envelopesilength wi hi ","273":"design simplifi version twitter user post tweet followunfollow anoth user abl see recent tweet user news feed implement twitter class twitter initi twitter object void posttweetint userid int tweetid compos new tweet id tweetid user userid call function made uniqu tweetid listinteg getnewsfeedint userid retriev recent tweet id user news feed item news feed must post user user follow user themself tweet must order recent least recent void followint followerid int followeeid user id followerid start follow user id followeeid void unfollowint followerid int followeeid user id followerid start unfollow user id followeeid exampl input twitter posttweet getnewsfe posttweet getnewsfe unfollow getnewsfe output null null null null null explan twitter twitter new twitter twitterposttweet1 user post new tweet id twittergetnewsfeed1 user news feed return list tweet id return twitterfollow1 user follow user twitterposttweet2 user post new tweet id twittergetnewsfeed1 user news feed return list tweet id tweet id preced tweet id post tweet id twitterunfollow1 user unfollow user twittergetnewsfeed1 user news feed return list tweet id sinc user longer follow user constraint userid followerid followeeid tweetid tweet uniqu id call made posttweet getnewsfe unfollow ","274":"integ return count number uniqu digit exampl input output explan answer total number rang exclud exampl input output constraint ","275":"matrix matrix integ return max sum rectangl matrix sum larger guarante rectangl sum larger exampl input matrix output explan sum blue rectangl max number larger exampl input matrix output constraint matrixlength matrixilength matrixij number row much larger number column ","276":"jug capac liter liter infinit water suppli return whether total amount water jug may reach target use follow oper fill either jug complet water complet empti either jug pour water jug anoth receiv jug full transfer jug empti exampl input target output true explan step reach total liter fill 5liter jug pour 5liter jug 3liter jug leav liter empti 3liter jug transfer liter 5liter jug 3liter jug fill 5liter jug pour 5liter jug 3liter jug 3liter jug full leav liter 5liter jug empti 3liter jug exactli liter 5liter jug refer die hard exampl exampl input target output fals exampl input target output true explan fill jug total amount water jug equal constraint target ","277":"posit integ num return true num perfect squar fals otherwis perfect squar integ squar integ word product integ must use builtin librari function sqrt exampl input num output true explan return true integ exampl input num output fals explan return fals integ constraint num ","278":"set distinct posit integ num return largest subset answer everi pair answeri answerj element subset satisfi answeri answerj answerj answeri multipl solut return exampl input num output explan also accept exampl input num output constraint numslength numsi integ num uniqu ","279":"integ return sum integ without use oper exampl input output exampl input output constraint ","280":"task calcul ab mod posit integ extrem larg posit integ form array exampl input output exampl input output exampl input output constraint blength bi contain lead zero ","281":"integ array nums1 nums2 sort nondecreas order integ defin pair u consist element first array element second array return pair uk vk smallest sum exampl input nums1 nums2 output explan first pair return sequenc exampl input nums1 nums2 output explan first pair return sequenc constraint nums1length nums2length nums1i nums2i nums1 nums2 sort nondecreas order nums1length nums2length ","282":"play guess game game follow pick number guess number pick everi time guess wrong tell whether number pick higher lower guess call predefin api int guessint num return possibl result guess higher number pick ie num pick guess lower number pick ie num pick guess equal number pick ie num pick return number pick exampl input pick output exampl input pick output exampl input pick output constraint pick ","283":"play guess game game work follow pick number guess number guess right number win game guess wrong number tell whether number pick higher lower continu guess everi time guess wrong number pay dollar run money lose game particular return minimum amount money need guarante win regardless number pick exampl input output explan win strategi follow rang guess number total otherwis pay number higher rang guess number total otherwis pay number higher must guess total number lower must guess total number lower rang guess number total otherwis pay number higher rang guess number total otherwis pay number higher must guess total number lower must guess total number lower rang guess number total otherwis pay number higher must guess total worst case scenario pay henc need guarante win exampl input output explan possibl number guess pay anyth exampl input output explan possibl number guess number total otherwis pay number higher must guess total worst case pay constraint ","284":"wiggl sequenc sequenc differ success number strictli altern posit neg first differ exist may either posit neg sequenc element sequenc nonequ element trivial wiggl sequenc exampl wiggl sequenc differ altern posit neg contrast wiggl sequenc first first differ posit second last differ subsequ obtain delet element possibl origin sequenc leav remain element origin order integ array num return length longest wiggl subsequ num exampl input num output explan entir sequenc wiggl sequenc differ exampl input num output explan sever subsequ achiev length differ exampl input num output constraint numslength numsi could solv time ","285":"array distinct integ num target integ target return number possibl combin add target test case gener answer fit 32bit integ exampl input num target output explan possibl combin way note differ sequenc count differ combin exampl input num target output constraint numslength numsi element num uniqu target neg number allow array chang problem limit need add question allow neg number ","286":"implement randomizedset class randomizedset initi randomizedset object bool insertint val insert item val set present return true item present fals otherwis bool removeint val remov item val set present return true item present fals otherwis int getrandom return random element current set element guarante least element exist method call element must probabl return must implement function class function work averag time complex exampl input randomizedset insert remov insert getrandom remov insert getrandom output null true fals true true fals explan randomizedset randomizedset new randomizedset randomizedsetinsert1 insert set return true insert success randomizedsetremove2 return fals exist set randomizedsetinsert2 insert set return true set contain randomizedsetgetrandom getrandom return either randomli randomizedsetremove1 remov set return true set contain randomizedsetinsert2 alreadi set return fals randomizedsetgetrandom sinc number set getrandom alway return constraint val call made insert remov getrandom least element data structur getrandom call ","287":"randomizedcollect data structur contain collect number possibl duplic ie multiset support insert remov specif element also report random element implement randomizedcollect class randomizedcollect initi empti randomizedcollect object bool insertint val insert item val multiset even item alreadi present return true item present fals otherwis bool removeint val remov item val multiset present return true item present fals otherwis note val multipl occurr multiset remov int getrandom return random element current multiset element probabl element return linearli relat number valu multiset contain must implement function class function work averag time complex note test case gener getrandom call least item randomizedcollect exampl input randomizedcollect insert insert insert getrandom remov getrandom output null true fals true true explan randomizedcollect randomizedcollect new randomizedcollect randomizedcollectioninsert1 return true sinc collect contain insert collect randomizedcollectioninsert1 return fals sinc collect contain insert anoth collect collect contain randomizedcollectioninsert2 return true sinc collect contain insert collect collect contain randomizedcollectiongetrandom getrandom return probabl return probabl randomizedcollectionremove1 return true sinc collect contain remov collect collect contain randomizedcollectiongetrandom getrandom return equal like constraint val call total made insert remov getrandom least element data structur getrandom call ","288":"singli link list return random node valu link list node must probabl chosen implement solut class solutionlistnod head initi object head singlylink list head int getrandom choos node randomli list return valu node list equal like chosen exampl input solut getrandom getrandom getrandom getrandom getrandom output null explan solut solut new solution1 solutiongetrandom return solutiongetrandom return solutiongetrandom return solutiongetrandom return solutiongetrandom return getrandom return either randomli element equal probabl return constraint number node link list rang nodev call made getrandom link list extrem larg length unknown could solv effici without use extra space ","289":"string ransomnot magazin return true ransomnot construct use letter magazin fals otherwis letter magazin use ransomnot exampl input ransomnot magazin output fals exampl input ransomnot magazin ab output fals exampl input ransomnot magazin aab output true constraint ransomnotelength magazinelength ransomnot magazin lowercas english letter ","290":"integ array num design algorithm randomli shuffl array permut array equal like result shuffl implement solut class solutionint num initi object integ array num int reset reset array origin configur return int shuffl return random shuffl array exampl input solut shuffl reset shuffl output null explan solut solut new solution1 solutionshuffl shuffl array return result permut must equal like return exampl return solutionreset reset array back origin configur return solutionshuffl return random shuffl array exampl return constraint numslength numsi element num uniqu call total made reset shuffl ","291":"string repres serial nest list implement parser deseri return deseri nestedinteg element either integ list whose element may also integ list exampl input output explan return nestedinteg object contain singl integ exampl input output explan return nestedinteg object contain nest list element integ contain valu nest list contain element integ contain valu ii nest list element integ contain valu constraint slength consist digit squar bracket neg sign comma serial valid nestedinteg valu input rang ","292":"integ return number rang sort lexicograph order must write algorithm run time use extra space exampl input output exampl input output constraint ","293":"string find first nonrep charact return index exist return exampl input leetcod output explan charact index first charact occur index exampl input loveleetcod output exampl input aabb output constraint slength consist lowercas english letter ","294":"suppos file system store file directori exampl system repres follow pictur dir directori root dir contain subdirectori subdir1 subdir2 subdir1 contain file file1ext subdirectori subsubdir1 subdir2 contain subdirectori subsubdir2 contain file file2ext text form look like repres tab charact dir subdir1 file1ext subsubdir1 subdir2 subsubdir2 file2ext write represent code look like dirntsubdir1nttfile1extnttsubsubdir1ntsubdir2nttsubsubdir2ntttfile2ext note newlin tab charact everi file directori uniqu absolut path file system order directori must open reach filedirectori concaten use exampl absolut path file2ext dirsubdir2subsubdir2file2ext directori name consist letter digit andor space file name form nameextens name extens letter digit andor space string input repres file system explain format return length longest absolut path file abstract file system file system return note testcas gener file system valid file directori name length exampl input input dirntsubdir1ntsubdir2nttfileext output explan file absolut path dirsubdir2fileext length exampl input input dirntsubdir1nttfile1extnttsubsubdir1ntsubdir2nttsubsubdir2ntttfile2ext output explan file dirsubdir1file1ext length dirsubdir2subsubdir2file2ext length return sinc longest absolut path file exampl input input output explan file singl directori name constraint inputlength input may contain lowercas uppercas english letter new line charact tab charact dot space digit file directori name posit length ","295":"string string gener random shuffl string add letter random posit return letter ad exampl input abcd abcd output e explan e letter ad exampl input output constraint slength tlength slength lowercas english letter ","296":"list arr integ rang sort strictli increas order appli follow algorithm arr start left right remov first number everi number afterward reach end list repeat previou step time right left remov rightmost number everi number remain number keep repeat step altern left right right left singl number remain integ return last number remain arr exampl input output explan arr arr arr arr exampl input output constraint ","297":"array rectangl rectanglesi xi yi ai bi repres axisalign rectangl bottomleft point rectangl xi yi topright point ai bi return true rectangl togeth form exact cover rectangular region exampl input rectangl output true explan rectangl togeth form exact cover rectangular region exampl input rectangl output fals explan gap rectangular region exampl input rectangl output fals explan rectangl overlap constraint rectangleslength rectanglesilength xi ai yi bi ","298":"string return true subsequ fals otherwis subsequ string new string form origin string delet none charact without disturb rel posit remain charact ie ace subsequ abcd aec exampl input abc ahbgdc output true exampl input axc ahbgdc output fals constraint slength tlength lowercas english letter suppos lot incom say want check see subsequ scenario would chang code ","299":"encod string return decod string encod rule kencodedstr encodedstr insid squar bracket repeat exactli time note guarante posit integ may assum input string alway valid extra white space squar bracket wellform etc furthermor may assum origin data contain digit digit repeat number exampl input like test case gener length output never exceed exampl input 3a2bc output aaabcbc exampl input 3a2c output accaccacc exampl input 2abc3cdef output abcabccdcdcdef constraint slength consist lowercas english letter digit squar bracket guarante valid input integ rang ","300":"string integ return length longest substr frequenc charact substr greater equal substr exist return exampl input aaabb output explan longest substr aaa repeat time exampl input ababbc output explan longest substr ababb repeat time repeat time constraint slength consist lowercas english letter ","301":"integ array num length assum arrk array obtain rotat num posit clockwis defin rotat function num fk arrk0 arrk1 arrkn return maximum valu f0 f1 fn1 test case gener answer fit 32bit integ exampl input num output explan f0 f1 f2 f3 maximum valu f0 f1 f2 f3 f3 exampl input num output constraint numslength numsi ","302":"posit integ appli follow oper even replac odd replac either return minimum number oper need becom exampl input output explan exampl input output explan exampl input output constraint ","303":"integ array num possibl duplic randomli output index target number assum target number must exist array implement solut class solutionint num initi object array num int pickint target pick random index num numsi target multipl valid index equal probabl return exampl input solut pick pick pick output null explan solut solut new solution1 solutionpick3 return either index randomli index equal probabl return solutionpick1 return sinc array nums0 equal solutionpick3 return either index randomli index equal probabl return constraint numslength numsi target integ num call made pick ","304":"array variabl pair equat array real number valu equationsi ai bi valuesi repres equat ai bi valuesi ai bi string repres singl variabl also queri queriesj cj repres jth queri must find answer cj return answer queri singl answer determin return note input alway valid may assum evalu queri result divis contradict note variabl occur list equat undefin answer determin exampl input equat abbc valu queri acbaaeaaxx output explan queri e return note undefin exampl input equat abbcbccd valu queri accbbccdcdbc output exampl input equat ab valu queri abbaacxi output constraint equationslength equationsilength ailength bilength valueslength equationslength valuesi querieslength queriesilength cjlength djlength ai bi cj lower case english letter digit ","305":"integ return nth digit infinit integ sequenc exampl input output exampl input output explan digit sequenc part number constraint ","306":"binari watch led top repres hour led bottom repres minut led repres least signific bit right exampl binari watch read integ turnedon repres number led current ignor return possibl time watch could repres may return answer order hour must contain lead exampl valid minut must digit may contain lead exampl valid exampl input turnedon output exampl input turnedon output constraint turnedon ","307":"frog cross river river divid number unit unit may may exist stone frog jump stone must jump water list stone posit unit sort ascend order determin frog cross river land last stone initi frog first stone assum first jump must unit frog last jump unit next jump must either unit frog jump forward direct exampl input stone output true explan frog jump last stone jump unit stone unit 3rd stone unit 4th stone unit 6th stone unit 7th stone unit 8th stone exampl input stone output fals explan way jump last stone gap 5th 6th stone larg constraint stoneslength stonesi stones0 stone sort strictli increas order ","308":"root binari tree return sum left leav leaf node children left leaf leaf left child anoth node exampl input root 3920nullnull157 output explan left leav binari tree valu respect exampl input root output constraint number node tree rang nodev ","309":"32bit integ num return string repres hexadecim represent neg integ complement method use letter answer string lowercas charact lead zero answer except note allow use builtin librari method directli solv problem exampl input num output exampl input num output ffffffff constraint num ","310":"array peopl peopl attribut peopl queue necessarili order peoplei hi ki repres ith person height hi exactli ki peopl front height greater equal hi reconstruct return queue repres input array peopl return queue format array queue queuej kj attribut jth person queue queue0 person front queue exampl input peopl output explan person height peopl taller height front person height peopl taller height front person height person taller height front person person height person taller height front person person height peopl taller height front peopl person height person taller height front person henc reconstruct queue exampl input peopl output constraint peoplelength hi ki peoplelength guarante queue reconstruct ","311":"integ matrix heightmap repres height unit cell 2d elev map return volum water trap rain exampl input heightmap output explan rain water trap block small pond unit trap total volum water trap exampl input heightmap output constraint heightmaplength heightmapilength heightmapij ","312":"string consist lowercas uppercas letter return length longest palindrom built letter letter case sensit exampl consid palindrom exampl input abccccdd output explan longest palindrom built dccaccd whose length exampl input output explan longest palindrom built whose length constraint slength consist lowercas andor uppercas english letter ","313":"integ array num integ split num nonempti subarray largest sum subarray minim return minim largest sum split subarray contigu part array exampl input num output explan way split num subarray best way split largest sum among subarray exampl input num output explan way split num subarray best way split largest sum among subarray constraint numslength numsi min50 numslength ","314":"integ return string array answer 1index answeri fizzbuzz divis answeri fizz divis answeri buzz divis answeri string none condit true exampl input output 12fizz exampl input output 12fizz4buzz exampl input output 12fizz4buzzfizz78fizzbuzz11fizz1314fizzbuzz constraint ","315":"integ array call arithmet consist least element differ consecut element exampl arithmet sequenc integ array num return number arithmet subarray num subarray contigu subsequ array exampl input num output explan arithmet slice num exampl input num output constraint numslength numsi ","316":"integ array num return third distinct maximum number array third maximum exist return maximum number exampl input num output explan first distinct maximum second distinct maximum third distinct maximum exampl input num output explan first distinct maximum second distinct maximum third distinct maximum exist maximum return instead exampl input num output explan first distinct maximum second distinct maximum count togeth sinc valu third distinct maximum constraint numslength numsi find solut ","317":"nonneg integ num1 num2 repres string return sum num1 num2 string must solv problem without use builtin librari handl larg integ biginteg must also convert input integ directli exampl input num1 num2 output exampl input num1 num2 output exampl input num1 num2 output constraint num1length num2length num1 num2 digit num1 num2 dont lead zero except ","318":"integ array num return true partit array subset sum element subset equal fals otherwis exampl input num output true explan array partit exampl input num output fals explan array partit equal sum subset constraint numslength numsi ","319":"rectangular island border pacif ocean atlant ocean pacif ocean touch island left top edg atlant ocean touch island right bottom edg island partit grid squar cell integ matrix height heightsrc repres height sea level cell coordin island receiv lot rain rain water flow neighbor cell directli north south east west neighbor cell height less equal current cell height water flow cell adjac ocean ocean return 2d list grid coordin result resulti ri ci denot rain water flow cell ri ci pacif atlant ocean exampl input height output explan follow cell flow pacif atlant ocean shown pacif ocean atlant ocean pacif ocean atlant ocean pacif ocean atlant ocean pacif ocean atlant ocean pacif ocean atlant ocean pacif ocean atlant ocean pacif ocean atlant ocean note possibl path cell flow pacif atlant ocean exampl input height output explan water flow cell pacif atlant ocean constraint heightslength heightsrlength heightsrc ","320":"matrix board cell battleship empti return number battleship board battleship place horizont vertic board word made shape row column row column size least horizont vertic cell separ battleship ie adjac battleship exampl input board xxxx output exampl input board output constraint boardlength boardilength boardij either could onepass use extra memori without modifi valu board ","321":"string contain outoford english represent digit return digit ascend order exampl input owoztneo output exampl input fviefuro output constraint slength si charact egfihonsrutwvxz guarante valid ","322":"string integ choos charact string chang uppercas english charact perform oper time return length longest substr contain letter get perform oper exampl input abab output explan replac vice versa exampl input aababba output explan replac middl form aabbbba substr bbbb longest repeat letter may exist way achiev answer constraint slength consist uppercas english letter slength ","323":"matrix grid want repres grid quadtre return root quadtre repres grid quadtre tree data structur intern node exactli children besid node attribut val true node repres grid fals node repres grid notic assign val true fals isleaf fals accept answer isleaf true node leaf node tree fals node children class node public boolean val public boolean isleaf public node topleft public node topright public node bottomleft public node bottomright construct quadtre twodimension area use follow step current grid valu ie set isleaf true set val valu grid set children null stop current grid differ valu set isleaf fals set val valu divid current grid subgrid shown photo recurs children proper subgrid want know quadtre refer wiki quadtre format dont need read section solv problem want understand output format output repres serial format quadtre use level order travers null signifi path termin node exist similar serial binari tree differ node repres list isleaf val valu isleaf val true repres list isleaf val valu isleaf val fals repres exampl input grid output explan explan exampl shown notic repres fals repres true photo repres quadtre exampl input grid output 0111011110nullnullnullnull10101111 explan valu grid divid grid subgrid topleft bottomleft bottomright valu topright differ valu divid subgrid valu explan shown photo constraint gridlength gridilength 2x ","324":"nari tree return level order travers node valu narytre input serial repres level order travers group children separ null valu see exampl exampl input root 1null324null56 output exampl input root 1null2345nullnull67null8null910nullnull11null12null13nullnull14 output constraint height nari tree less equal total number node ","325":"design data structur store string count abil return string minimum maximum count implement allon class allon initi object data structur incstr key increment count string key key exist data structur insert count decstr key decrement count string key count key decrement remov data structur guarante key exist data structur decrement getmaxkey return key maxim count element exist return empti string getminkey return key minimum count element exist return empti string note function must run averag time complex exampl input allon inc inc getmaxkey getminkey inc getmaxkey getminkey hello hello leet output null null null hello hello null hello leet explan allon allon new allon alloneinchello alloneinchello allonegetmaxkey return hello allonegetminkey return hello alloneincleet allonegetmaxkey return hello allonegetminkey return leet constraint keylength key consist lowercas english letter guarante call dec key exist data structur call made inc dec getmaxkey getminkey ","326":"gene string repres 8charact long string choic suppos need investig mutat gene string startgen gene string endgen mutat defin singl charact chang gene string exampl aaccggtt aaccggta mutat also gene bank bank record valid gene mutat gene must bank make valid gene string gene string startgen endgen gene bank bank return minimum number mutat need mutat startgen endgen mutat return note start point assum valid might includ bank exampl input startgen aaccggtt endgen aaccggta bank aaccggta output exampl input startgen aaccggtt endgen aaacggta bank aaccggtaaaccgctaaaacggta output constraint banklength startgenelength endgenelength bankilength startgen endgen banki charact ","327":"string return number segment string segment defin contigu sequenc nonspac charact exampl input hello name john output explan segment hello name john exampl input hello output constraint slength consist lowercas uppercas english letter digit follow charact space charact ","328":"array interv interv intervalsi starti endi return minimum number interv need remov make rest interv nonoverlap note interv touch point nonoverlap exampl nonoverlap exampl input interv output explan remov rest interv nonoverlap exampl input interv output explan need remov make rest interv nonoverlap exampl input interv output explan dont need remov interv sinc theyr alreadi nonoverlap constraint intervalslength intervalsilength starti endi ","329":"array interv intervalsi starti endi starti uniqu right interv interv interv startj endi startj minim note may equal return array right interv indic interv right interv exist interv put index exampl input interv output explan interv collect output exampl input interv output explan right interv right interv sinc start0 smallest start end1 right interv sinc start1 smallest start end2 exampl input interv output explan right interv right interv sinc start2 smallest start end1 constraint intervalslength intervalsilength starti endi start point interv uniqu ","330":"root binari tree integ targetsum return number path sum valu along path equal targetsum path need start end root leaf must go downward ie travel parent node child node exampl input root 105332null1132null1 targetsum output explan path sum shown exampl input root 54811null13472nullnull51 targetsum output constraint number node tree rang nodev targetsum ","331":"string return array start indic anagram may return answer order exampl input cbaebabacd abc output explan substr start index cba anagram abc substr start index bac anagram abc exampl input abab ab output explan substr start index ab anagram ab substr start index ba anagram ab substr start index ab anagram ab constraint slength plength lowercas english letter ","332":"integ return kth lexicograph smallest integ rang exampl input output explan lexicograph order second smallest number exampl input output constraint ","333":"coin want build staircas coin staircas consist row ith row exactli coin last row staircas may incomplet integ return number complet row staircas build exampl input output explan 3rd row incomplet return exampl input output explan 4th row incomplet return constraint ","334":"integ array num length integ num rang integ appear twice return array integ appear twice must write algorithm run time use constant auxiliari space exclud space need store output exampl input num output exampl input num output exampl input num output constraint numslength numsi element num appear twice ","335":"array charact char compress use follow algorithm begin empti string group consecut repeat charact char group length append charact otherwis append charact follow group length compress string return separ instead store input charact array char note group length longer split multipl charact char done modifi input array return new length array must write algorithm use constant extra space exampl input char aabbccc output return first charact input array a2b2c3 explan group ccc compress a2b2c3 exampl input char output return first charact input array explan group remain uncompress sinc singl charact exampl input char abbbbbbbbbbbb output return first charact input array ab12 explan group bbbbbbbbbbbb compress ab12 constraint charslength charsi lowercas english letter uppercas english letter digit symbol ","336":"nonempti link list repres nonneg integ signific digit come first node contain singl digit add number return sum link list may assum number contain lead except number exampl input l1 l2 output exampl input l1 l2 output exampl input l1 l2 output constraint number node link list rang nodev guarante list repres number lead zero could solv without revers input list ","337":"integ array num return number arithmet subsequ num sequenc number call arithmet consist least element differ consecut element exampl arithmet sequenc exampl arithmet sequenc subsequ array sequenc form remov element possibl none array exampl subsequ test case gener answer fit 32bit integ exampl input num output explan arithmet subsequ slice exampl input num output explan subsequ array arithmet constraint numslength numsi ","338":"point plane distinct pointsi xi yi boomerang tupl point distanc equal distanc order tupl matter return number boomerang exampl input point output explan boomerang exampl input point output exampl input point output constraint pointslength pointsilength xi yi point uniqu ","339":"array num integ numsi rang return array integ rang appear num exampl input num output exampl input num output constraint numslength numsi could without extra space runtim may assum return list count extra space ","340":"root node refer key delet node key return root node refer possibl updat basic delet divid stage search node remov node found delet node exampl input root 53624null7 key output 5462nullnull7 explan key delet find node valu delet valid answer 5462nullnull7 shown pleas notic anoth valid answer 526null4null7 also accept exampl input root 53624null7 key output 53624null7 explan tree contain node valu exampl input root key output constraint number node tree rang nodev node uniqu valu root valid binari search tree key could solv time complex oheight tree ","341":"string sort decreas order base frequenc charact frequenc charact number time appear string return sort string multipl answer return exampl input tree output eert explan e appear twice appear e must appear therefor eetr also valid answer exampl input cccaaa output aaaccc explan appear time cccaaa aaaccc valid answer note cacaca incorrect charact must togeth exampl input aabb output bbaa explan bbaa also valid answer aabb incorrect note treat differ charact constraint slength consist uppercas lowercas english letter digit ","342":"spheric balloon tape onto flat wall repres xyplan balloon repres 2d integ array point pointsi xstart xend denot balloon whose horizont diamet stretch xstart xend know exact ycoordin balloon arrow shot directli vertic posit ydirect differ point along xaxi balloon xstart xend burst arrow shot xstart xend limit number arrow shot shot arrow keep travel infinit burst balloon path array point return minimum number arrow must shot burst balloon exampl input point output explan balloon burst arrow shoot arrow burst balloon shoot arrow burst balloon exampl input point output explan arrow need shot balloon total arrow exampl input point output explan balloon burst arrow shoot arrow burst balloon shoot arrow burst balloon constraint pointslength pointsilength xstart xend ","343":"integ array num size return minimum number move requir make array element equal move increment element array exampl input num output explan move need rememb move increment element exampl input num output constraint numslength numslength numsi answer guarante fit 32bit integ ","344":"integ array nums1 nums2 nums3 nums4 length return number tupl nums1i nums2j nums3k nums4l exampl input nums1 nums2 nums3 nums4 output explan tupl nums10 nums20 nums30 nums41 nums11 nums21 nums30 nums40 exampl input nums1 nums2 nums3 nums4 output constraint nums1length nums2length nums3length nums4length nums1i nums2i nums3i nums4i ","345":"array integ num pattern subsequ integ numsi numsj numsk numsi numsk numsj return true pattern num otherwis return fals exampl input num output fals explan pattern sequenc exampl input num output true explan pattern sequenc exampl input num output true explan pattern sequenc constraint numslength numsi ","346":"play game involv circular array nonzero integ num numsi denot number indic forwardbackward must move locat index numsi posit move numsi step forward numsi neg move numsi step backward sinc array circular may assum move forward last element put first element move backward first element put last element cycl array consist sequenc indic seq length follow movement rule result repeat index sequenc seq0 seq1 seqk seq0 everi numsseqj either posit neg return true cycl num fals otherwis exampl input num output true explan graph show indic connect white node jump forward red jump backward see cycl node white jump direct exampl input num output fals explan graph show indic connect white node jump forward red jump backward cycl size return fals exampl input num output true explan graph show indic connect white node jump forward red jump backward see cycl size node jump forward node jump backward cycl see cycl node white jump direct constraint numslength numsi numsi could solv time complex extra space complex ","347":"bucket bucket liquid exactli bucket poison figur poison feed number poor pig liquid see whether die unfortun minutestotest minut determin bucket poison feed pig accord step choos live pig feed pig choos bucket feed pig consum chosen bucket simultan take time pig feed number bucket bucket fed number pig wait minutestodi minut may feed pig time minutestodi minut pass pig fed poison bucket die other surviv repeat process run time bucket minutestodi minutestotest return minimum number pig need figur bucket poison within allot time exampl input bucket minutestodi minutestotest output explan determin poison bucket follow time feed first pig bucket feed second pig bucket time possibl outcom first pig die bucket must poison second pig die bucket must poison pig die bucket must poison neither pig die bucket must poison exampl input bucket minutestodi minutestotest output explan determin poison bucket follow time feed first pig bucket feed second pig bucket time possibl outcom either pig die poison bucket fed neither pig die feed first pig bucket feed second pig bucket time pig must die poison bucket fed constraint bucket minutestodi minutestotest ","348":"string check construct take substr append multipl copi substr togeth exampl input abab output true explan substr ab twice exampl input aba output fals exampl input abcabcabcabc output true explan substr abc time substr abcabc twice constraint slength consist lowercas english letter ","349":"design implement data structur least frequent use lfu cach implement lfucach class lfucacheint capac initi object capac data structur int getint key get valu key key exist cach otherwis return void putint key int valu updat valu key present insert key alreadi present cach reach capac invalid remov least frequent use key insert new item problem tie ie key frequenc least recent use key would invalid determin least frequent use key use counter maintain key cach key smallest use counter least frequent use key key first insert cach use counter set due put oper use counter key cach increment either get put oper call function get put must run averag time complex exampl input lfucach put put get put get get put get get get output null null null null null explan use counter key cach show last use order tiebreak leftmost element recent lfucach lfu new lfucache2 lfuput1 cache1 cnt11 lfuput2 cache21 cnt21 cnt11 lfuget1 return cache12 cnt21 cnt12 lfuput3 lfu key cnt21 smallest invalid cache31 cnt31 cnt12 lfuget2 return found lfuget3 return cache31 cnt32 cnt12 lfuput4 cnt lru invalid cache43 cnt41 cnt32 lfuget1 return found lfuget3 return cache34 cnt41 cnt33 lfuget4 return cache43 cnt42 cnt33 constraint capac key valu call made get put ","350":"ham distanc integ number posit correspond bit differ integ return ham distanc exampl input output explan arrow point posit correspond bit differ exampl input output constraint note question minimum bit flip convert number ","351":"integ array num size return minimum number move requir make array element equal move increment decrement element array test case design answer fit 32bit integ exampl input num output explan move need rememb move increment decrement element exampl input num output constraint numslength numslength numsi ","352":"row col grid repres map gridij repres land gridij repres water grid cell connect horizontallyvert diagon grid complet surround water exactli island ie connect land cell island doesnt lake mean water insid isnt connect water around island cell squar side length grid rectangular width height dont exceed determin perimet island exampl input grid output explan perimet yellow stripe imag exampl input grid output exampl input grid output constraint row gridlength col gridilength row col gridij exactli island grid ","353":"game player take turn ad run total integ player first caus run total reach exceed win chang game player reus integ exampl player might take turn draw common pool number without replac reach total integ maxchoosableinteg desiredtot return true first player move forc win otherwis return fals assum player play optim exampl input maxchoosableinteg desiredtot output fals explan matter integ first player choos first player lose first player choos integ first player choos second player choos integ second player win choos get total desiredtot integ chosen first player second player alway win exampl input maxchoosableinteg desiredtot output true exampl input maxchoosableinteg desiredtot output true constraint maxchoosableinteg desiredtot ","354":"defin str string str consist string concaten time exampl str abc abcabcabc defin string obtain string remov charact becom exampl abc obtain abdbec base definit remov bold underlin charact string integ string str1 str2 return maximum integ str str2 obtain str1 exampl input acb ab output exampl input acb acb output constraint s1length s2length lowercas english letter ","355":"string queryip return ipv4 ip valid ipv4 address ipv6 ip valid ipv6 address neither ip correct ip type valid ipv4 address ip form x1x2x3x4 xi xi contain lead zero exampl valid ipv4 address invalid ipv4 address valid ipv6 address ip form x1x2x3x4x5x6x7x8 xilength xi hexadecim string may contain digit lowercas english letter uppercas english letter lead zero allow xi exampl 20010db885a3000000008a2e03707334 2001db885a3008a2e03707334 valid ipv6 address 20010db885a38a2e037j7334 020010db885a3000000008a2e03707334 invalid ipv6 address exampl input queryip output ipv4 explan valid ipv4 address return ipv4 exampl input queryip 20010db885a3008a2e03707334 output ipv6 explan valid ipv6 address return ipv6 exampl input queryip output neither explan neither ipv4 address ipv6 address constraint queryip consist english letter digit charact ","356":"api rand7 gener uniform random integ rang write function rand10 gener uniform random integ rang call api rand7 shouldnt call api pleas use languag builtin random api test case intern argument number time implement function rand10 call test note argument pass rand10 exampl input output exampl input output exampl input output constraint expect valu number call rand7 function could minim number call rand7 ","357":"array string word without duplic return concaten word list word concaten word defin string compris entir least shorter word necessarili distinct array exampl input word catcatscatsdogcatsdogdogcatsdoghippopotamusesratratcatdogcat output catsdogcatsdogcatsdogratcatdogcat explan catsdogcat concaten cat dog cat dogcatsdog concaten dog cat dog ratcatdogcat concaten rat cat dog cat exampl input word catdogcatdog output catdog constraint wordslength wordsilength wordsi consist lowercas english letter string word uniqu sumwordsilength ","358":"integ array matchstick matchsticksi length ith matchstick want use matchstick make squar break stick link matchstick must use exactli time return true make squar fals otherwis exampl input matchstick output true explan form squar length side squar came stick length exampl input matchstick output fals explan find way form squar matchstick constraint matchstickslength matchsticksi ","359":"array binari string str integ return size largest subset str subset set subset set element also element exampl input str output explan largest subset answer valid smaller subset includ invalid subset contain greater maximum exampl input str output explan largest subset answer constraint strslength strsilength strsi consist digit ","360":"winter come contest first job design standard heater fix warm radiu warm hous everi hous warm long hous within heater warm radiu rang posit hous heater horizont line return minimum radiu standard heater heater could cover hous notic heater radiu standard warm radiu exampl input hous heater output explan heater place posit use radiu standard hous warm exampl input hous heater output explan heater place posit need use radiu standard hous warm exampl input hous heater output constraint houseslength heaterslength housesi heatersi ","361":"complement integ integ get flip binari represent exampl integ binari complement integ integ num return complement exampl input num output explan binari represent lead bit complement need output exampl input num output explan binari represent lead bit complement need output constraint num note question httpsleetcodecomproblemscomplementofbase10integ ","362":"ham distanc integ number posit correspond bit differ integ array num return sum ham distanc pair integ num exampl input num output explan binari represent show bit relev case answer hammingdistance4 hammingdistance4 hammingdistance14 exampl input num output constraint numslength numsi answer input fit 32bit integ ","363":"radiu posit center circl implement function randpoint gener uniform random point insid circl implement solut class solutiondoubl radiu doubl xcenter doubl ycenter initi object radiu circl radiu posit center xcenter ycenter randpoint return random point insid circl point circumfer circl consid circl answer return array exampl input solut randpoint randpoint randpoint output null explan solut solut new solution10 solutionrandpoint return solutionrandpoint return solutionrandpoint return constraint radiu xcenter ycenter call made randpoint ","364":"integ return largest palindrom integ repres product ndigit integ sinc answer larg return modulo exampl input output explan exampl input output constraint ","365":"median middl valu order integ list size list even middl valu median mean middl valu exampl arr median exampl arr median integ array num integ slide window size move left array right see number window time slide window move right posit return median array window origin array answer within actual valu accept exampl input num output explan window posit median exampl input num output constraint numslength numsi ","366":"magic string consist obey follow rule string magic concaten number contigu occurr charact gener string first element 1221121221221121122\u2026\u2026 group consecut occurr group see occurr sequenc integ return number first number magic string exampl input output explan first element magic string contain return exampl input output constraint ","367":"licens key repres string consist alphanumer charact dash string separ group dash also integ want reformat string group contain exactli charact except first group could shorter still must contain least charact furthermor must dash insert group convert lowercas letter uppercas return reformat licens key exampl input 5f3z2e9w output 5f3z2e9w explan string split part part charact note extra dash need remov exampl input 25g3j output 25g3j explan string split part part charact except first part could shorter mention constraint slength consist english letter digit dash ","368":"integ repres string return smallest good base call good base digit base exampl input output explan base exampl input output explan base exampl input output explan base constraint integ rang contain lead zero ","369":"binari array num return maximum number consecut array exampl input num output explan first digit last digit consecut maximum number consecut exampl input num output constraint numslength numsi either ","370":"integ array num player play game array player player player player take turn player start first player start game score turn player take number either end array ie nums0 numsnumslength reduc size array player add chosen number score game end element array return true player win game score player equal player still winner also return true may assum player play optim exampl input num output fals explan initi player choos choos player choos player choos player left final score player player henc player never winner need return fals exampl input num output true explan player first choos player choos matter number player choos player choos final player score player need return true repres player1 win constraint numslength numsi ","371":"play variat game zuma variat zuma singl row color ball board ball color red yellow blue green white also sever color ball hand goal clear ball board turn pick ball hand insert ball row either end row group consecut ball color remov group ball board remov caus group color form continu remov group none left ball board win game repeat process either win ball hand string board repres row ball board string hand repres ball hand return minimum number ball insert clear ball board clear ball board use ball hand return exampl input board wrrbbw hand rb output explan imposs clear ball best insert board becom wrrrbbw wrrrbbw wbbw insert board becom wbbbw wbbbw still ball remain board ball insert exampl input board wwrrbbww hand wrbrw output explan make board empti insert board becom wwrrrbbww wwrrrbbww wwbbww insert board becom wwbbbww wwbbbww wwww empti ball hand need clear board exampl input board hand ggggg output explan make board empti insert board becom gg insert board becom ggg ggg empti ball hand need clear board constraint boardlength handlength board hand charact initi row ball board group consecut ball color ","372":"integ array num return differ possibl nondecreas subsequ array least element may return answer order exampl input num output exampl input num output constraint numslength numsi ","373":"web develop need know design web page size specif rectangular web page area job design rectangular web page whose length width satisfi follow requir area rectangular web page design must equal target area width larger length mean differ length width small possibl return array length width web page design sequenc exampl input area output explan target area possibl way construct accord requir illeg accord requir optim compar length width exampl input area output exampl input area output constraint area ","374":"integ array num return number revers pair array revers pair pair numslength numsi numsj exampl input num output explan revers pair nums1 nums4 nums3 nums4 exampl input num output explan revers pair nums1 nums4 nums2 nums4 nums3 nums4 constraint numslength numsi ","375":"integ array num integ target want build express num ad symbol integ num concaten integ exampl num add concaten build express return number differ express build evalu target exampl input num target output explan way assign symbol make sum num target exampl input num target output constraint numslength numsi sumnumsi target ","376":"hero teemo attack enemi ash poison attack teemo attack ash ash get poison exactli durat second formal attack second mean ash poison inclus time interv durat teemo attack poison effect end timer reset poison effect end durat second new attack nondecreas integ array timeseri timeseriesi denot teemo attack ash second timeseriesi integ durat return total number second ash poison exampl input timeseri durat output explan teemo attack ash go follow second teemo attack ash poison second second teemo attack ash poison second ash poison second second total exampl input timeseri durat output explan teemo attack ash go follow second teemo attack ash poison second second howev teemo attack reset poison timer ash poison second ash poison second second total constraint timeserieslength timeseriesi durat timeseri sort nondecreas order ","377":"next greater element element array first greater element right array distinct 0index integ array nums1 nums2 nums1 subset nums2 nums1length find index nums1i nums2j determin next greater element nums2j nums2 next greater element answer queri return array an length nums1length ansi next greater element describ exampl input nums1 nums2 output explan next greater element valu nums1 follow underlin nums2 next greater element answer underlin nums2 next greater element underlin nums2 next greater element answer exampl input nums1 nums2 output explan next greater element valu nums1 follow underlin nums2 next greater element underlin nums2 next greater element answer constraint nums1length nums2length nums1i nums2i integ nums1 nums2 uniqu integ nums1 also appear nums2 could find onums1length nums2length solut ","378":"array nonoverlap axisalign rectangl rect rectsi ai bi xi yi indic ai bi bottomleft corner point ith rectangl xi yi topright corner point ith rectangl design algorithm pick random integ point insid space cover rectangl point perimet rectangl includ space cover rectangl integ point insid space cover rectangl equal like return note integ point point integ coordin implement solut class solutionint rect initi object rectangl rect int pick return random integ point u insid space cover rectangl exampl input solut pick pick pick pick pick output null explan solut solut new solution2 solutionpick return solutionpick return solutionpick return solutionpick return solutionpick return constraint rectslength rectsilength ai xi bi yi xi ai yi bi rectangl overlap call made pick ","379":"matrix mat return array element array diagon order exampl input mat output exampl input mat output constraint matlength matilength matij ","380":"array string word return word type use letter alphabet row american keyboard like imag american keyboard first row consist charact qwertyuiop second row consist charact asdfghjkl third row consist charact zxcvbnm exampl input word helloalaskadadpeac output alaskadad exampl input word omk output exampl input word adsdfsfd output adsdfsfd constraint wordslength wordsilength wordsi consist english letter lowercas uppercas ","381":"suppos leetcod start ipo soon order sell good price share ventur capit leetcod would like work project increas capit ipo sinc limit resourc finish distinct project ipo help leetcod design best way maxim total capit finish distinct project project ith project pure profit profitsi minimum capit capitali need start initi capit finish project obtain pure profit profit ad total capit pick list distinct project project maxim final capit return final maxim capit answer guarante fit 32bit sign integ exampl input profit capit output explan sinc initi capit start project index finish obtain profit capit becom capit either start project index project index sinc choos project need finish project index get maximum capit therefor output final maxim capit exampl input profit capit output constraint profitslength capitallength profitsi capitali ","382":"circular integ array num ie next element numsnumslength nums0 return next greater number everi element num next greater number number first greater number traversingord next array mean could search circularli find next greater number doesnt exist return number exampl input num output explan first next greater number number cant find next greater number second next greater number need search circularli also exampl input num output constraint numslength numsi ","383":"integ num return string base represent exampl input num output exampl input num output constraint num ","384":"integ array score size scorei score ith athlet competit score guarante uniqu athlet place base score 1st place athlet highest score place athlet highest score placement athlet determin rank 1st place athlet rank gold medal place athlet rank silver medal 3rd place athlet rank bronz medal 4th place nth place athlet rank placement number ie xth place athlet rank return array answer size answeri rank ith athlet exampl input score output gold medalsilv medalbronz medal45 explan placement 1st 3rd 4th 5th exampl input score output gold medal5bronz medalsilv medal4 explan placement 1st 5th 3rd 4th constraint scorelength scorei valu score uniqu ","385":"perfect number posit integ equal sum posit divisor exclud number divisor integ integ divid evenli integ return true perfect number otherwis return fals exampl input num output true explan divisor exampl input num output fals constraint num ","386":"root binari tree return frequent subtre sum tie return valu highest frequenc order subtre sum node defin sum node valu form subtre root node includ node exampl input root output exampl input root output constraint number node tree rang nodev ","387":"fibonacci number commonli denot form sequenc call fibonacci sequenc number sum preced one start f0 f1 calcul exampl input output explan f2 f1 f0 exampl input output explan f3 f2 f1 exampl input output explan f4 f3 f2 constraint ","388":"sql schema panda schema ","389":"root binari tree return leftmost valu last row tree exampl input root output exampl input root 1234null56nullnull7 output constraint number node tree rang nodev ","390":"video game fallout quest road freedom requir player reach metal dial call freedom trail ring use dial spell specif keyword open door string ring repres code engrav outer ring anoth string key repres keyword need spell return minimum number step spell charact keyword initi first charact ring align direct spell charact key rotat ring clockwis anticlockwis make charact string key align direct press center button stage rotat ring spell key charact keyi rotat ring clockwis anticlockwis place count step final purpos rotat align ring charact direct charact must equal keyi charact keyi align direct press center button spell also count step press could begin spell next charact key next stage otherwis finish spell exampl input ring god key gd output explan first key charact sinc alreadi place need step spell charact second key charact need rotat ring god anticlockwis step make becom ddinggo also need step spell final output exampl input ring god key god output constraint ringlength keylength ring key lower case english letter guarante key could alway spell rotat ring ","391":"root binari tree return array largest valu row tree 0index exampl input root 13253null9 output exampl input root output constraint number node tree rang nodev ","392":"string find longest palindrom subsequ length subsequ sequenc deriv anoth sequenc delet element without chang order remain element exampl input bbbab output explan possibl longest palindrom subsequ bbbb exampl input cbbd output explan possibl longest palindrom subsequ constraint slength consist lowercas english letter ","393":"super wash machin line initi wash machin dress empti move could choos wash machin pass dress wash machin adjac wash machin time integ array machin repres number dress wash machin left right line return minimum number move make wash machin number dress possibl return exampl input machin output explan 1st move move 3rd move exampl input machin output explan 1st move move exampl input machin output explan imposs make wash machin number dress constraint machineslength machinesi ","394":"integ array coin repres coin differ denomin integ amount repres total amount money return number combin make amount amount money made combin coin return may assum infinit number kind coin answer guarante fit sign 32bit integ exampl input amount coin output explan way make amount exampl input amount coin output explan amount made coin exampl input amount coin output constraint coinslength coinsi valu coin uniqu amount ","395":"binari grid matrix valu set initi design algorithm randomli pick index matrixij flip indic matrixij equal like return optim algorithm minim number call made builtin random function languag optim time space complex implement solut class solutionint int initi object size binari matrix int flip return random index matrix matrixij flip void reset reset valu matrix exampl input solut flip flip flip reset flip output null null explan solut solut new solution3 solutionflip return equal like return solutionflip return sinc return solutionflip return base previous return indic return solutionreset valu reset return solutionflip return equal like return constraint least free cell call flip call made flip reset ","396":"defin usag capit word right follow case hold letter word capit like usa letter word capit like leetcod first letter word capit like googl string word return true usag capit right exampl input word usa output true exampl input word flag output fals constraint wordlength word consist lowercas uppercas english letter ","397":"string return length longest uncommon subsequ uncommon subsequ exist return uncommon subsequ string string subsequ exactli exampl input aba cdc output explan longest uncommon subsequ aba aba subsequ aba cdc note cdc also longest uncommon subsequ exampl input aaa bbb output explan longest uncommon subsequ aaa bbb exampl input aaa aaa output explan everi subsequ string also subsequ string similarli everi subsequ string also subsequ string answer would constraint alength blength lowercas english letter ","398":"array string str return length longest uncommon subsequ longest uncommon subsequ exist return uncommon subsequ array string string subsequ string other subsequ string string obtain delet number charact exampl abc subsequ aebdc delet underlin charact aebdc get abc subsequ aebdc includ aebdc aeb empti string exampl input str abacdcea output exampl input str aaaaaaaa output constraint strslength strsilength strsi consist lowercas english letter ","399":"integ array num integ return true num good subarray fals otherwis good subarray subarray length least sum element subarray multipl note subarray contigu part array integ multipl exist integ alway multipl exampl input num output true explan continu subarray size whose element sum exampl input num output true explan continu subarray size whose element sum multipl integ exampl input num output fals constraint numslength numsi sumnumsi ","400":"string string array dictionari return longest string dictionari form delet string charact possibl result return longest word smallest lexicograph order possibl result return empti string exampl input abpcplea dictionari aleapplemonkeyplea output appl exampl input abpcplea dictionari abc output constraint slength dictionarylength dictionaryilength dictionaryi lowercas english letter ","401":"binari array num return maximum length contigu subarray equal number exampl input num output explan longest contigu subarray equal number exampl input num output explan longest contigu subarray equal number constraint numslength numsi either ","402":"0index array posit integ wi describ weight ith index need implement function pickindex randomli pick index rang wlength inclus return probabl pick index wi sumw exampl probabl pick index ie probabl pick index ie exampl input solutionpickindex output null0 explan solut solut new solution1 solutionpickindex return option return sinc element exampl input solutionpickindexpickindexpickindexpickindexpickindex output null11110 explan solut solut new solution1 solutionpickindex return return second element index probabl solutionpickindex return solutionpickindex return solutionpickindex return solutionpickindex return return first element index probabl sinc random problem multipl answer allow follow output consid correct null11110 null11111 null11100 null11101 null10100 constraint wlength wi pickindex call time ","403":"let play minesweep game wikipedia onlin game char matrix board repres game board repres unrev mine e repres unrev empti squar repres reveal blank squar adjac mine ie left right diagon digit repres mani mine adjac reveal squar repres reveal mine also integ array click click clickr clickc repres next click posit among unrev squar e return board reveal posit accord follow rule mine reveal game chang empti squar e adjac mine reveal chang reveal blank adjac unrev squar reveal recurs empti squar e least adjac mine reveal chang digit repres number adjac mine return board squar reveal exampl input board eeeeeeemeeeeeeeeeee click output b1e1bb1m1bb111bbbbbb exampl input board b1e1bb1m1bb111bbbbbb click output b1e1bb1x1bb111bbbbbb constraint boardlength boardilength boardij either e digit clicklength clickr clickc boardclickrclickc either e ","404":"root binari search tree return minimum absolut differ valu differ node tree exampl input root output exampl input root 1048nullnull1249 output constraint number node tree rang nodev note question httpsleetcodecomproblemsminimumdistancebetweenbstnod ","405":"array integ num integ return number uniqu kdiff pair array kdiff pair integ pair numsi numsj follow true numslength numsi numsj notic val denot absolut valu val exampl input num output explan 2diff pair array although input return number uniqu pair exampl input num output explan 1diff pair array exampl input num output explan 0diff pair array constraint numslength numsi ","406":"note companion problem system design problem design tinyurl tinyurl url shorten servic enter url httpsleetcodecomproblemsdesigntinyurl return short url httptinyurlcom4e9iak design class encod url decod tini url restrict encodedecod algorithm work need ensur url encod tini url tini url decod origin url implement solut class solut initi object system string encodestr longurl return tini url longurl string decodestr shorturl return origin long url shorturl guarante shorturl encod object exampl input url httpsleetcodecomproblemsdesigntinyurl output httpsleetcodecomproblemsdesigntinyurl explan solut obj new solut string tini objencodeurl return encod tini url string an objdecodetini return origin url decod constraint urllength url gurante valid url ","407":"complex number repres string form realimaginaryi real real part integ rang imaginari imaginari part integ rang complex number num1 num2 string return string complex number repres multipl exampl input num1 num2 output explan need convert form exampl input num1 num2 output explan need convert form constraint num1 num2 valid complex number ","408":"root binari search tree convert greater tree everi key origin chang origin key plu sum key greater origin key remind binari search tree tree satisfi constraint left subtre node contain node key less node key right subtre node contain node key greater node key left right subtre must also binari search tree exampl input root 4160257nullnullnull3nullnullnull8 output 30362136352615nullnullnull33nullnullnull8 exampl input root 0null1 output 1null1 constraint number node tree rang nodev valu tree uniqu root guarante valid binari search tree note question httpsleetcodecomproblemsbinarysearchtreetogreatersumtre ","409":"list 24hour clock time point hhmm format return minimum minut differ timepoint list exampl input timepoint output exampl input timepoint output constraint timepointslength timepointsi format hhmm ","410":"string integ revers first charact everi 2k charact count start string fewer charact left revers less 2k greater equal charact revers first charact leav origin exampl input abcdefg output bacdfeg exampl input abcd output bacd constraint slength consist lowercas english letter ","411":"binari matrix mat return distanc nearest cell distanc adjac cell exampl input mat output exampl input mat output constraint matlength matilength matij either least mat ","412":"root binari tree return length diamet tree diamet binari tree length longest path node tree path may may pass root length path node repres number edg exampl input root output explan length path exampl input root output constraint number node tree rang nodev ","413":"sever box differ color repres differ posit number may experi sever round remov box box left time choos continu box color ie compos box remov get point return maximum point get exampl input box output explan point point point point exampl input box output exampl input box output constraint boxeslength boxesi ","414":"citi connect citi connect directli citi citi connect directli citi citi connect indirectli citi provinc group directli indirectli connect citi citi outsid group matrix isconnect isconnectedij ith citi jth citi directli connect isconnectedij otherwis return total number provinc exampl input isconnect output exampl input isconnect output constraint isconnectedlength isconnectedilength isconnectedij isconnectedii isconnectedij isconnectedji ","415":"sql schema panda schema ","416":"string repres attend record student charact signifi whether student absent late present day record contain follow charact absent late present student elig attend award meet follow criteria student absent strictli fewer day total student never late consecut day return true student elig attend award fals otherwis exampl input ppallp output true explan student fewer absenc never late consecut day exampl input ppalll output fals explan student late consecut day last day elig award constraint slength si either ","417":"attend record student repres string charact signifi whether student absent late present day record contain follow charact absent late present student elig attend award meet follow criteria student absent strictli fewer day total student never late consecut day integ return number possibl attend record length make student elig attend award answer may larg return modulo exampl input output explan record length elig award ap pa pl al la elig absenc need fewer exampl input output exampl input output constraint ","418":"integ array num adjac integ num perform float divis exampl num evalu express howev add number parenthesi posit chang prioriti oper want add parenthes valu express evalu maximum return correspond express maximum valu string format note express contain redund parenthesi exampl input num output explan howev bold parenthesi redund sinc influenc oper prioriti return case exampl input num output explan shown tri possibl get express evalu greater constraint numslength numsi optim divis input ","419":"rectangular brick wall front row brick ith row number brick height ie unit differ width total width row draw vertic line top bottom cross least brick line goe edg brick brick consid cross draw line along vertic edg wall case line obvious cross brick 2d array wall contain inform wall return minimum number cross brick draw vertic line exampl input wall output exampl input wall output constraint walllength wallilength sumwallilength sumwal row wallij ","420":"posit integ find smallest integ exactli digit exist integ greater valu posit integ exist return note return integ fit 32bit integ valid answer fit 32bit integ return exampl input output exampl input output constraint ","421":"string revers order charact word within sentenc still preserv whitespac initi word order exampl input let take leetcod contest output stel ekat edocteel tsetnoc exampl input ding output gnid constraint slength contain printabl ascii charact contain lead trail space least word word separ singl space ","422":"binari matrix matrix element either quadtree1 quadtree2 quadtree1 repres binari matrix quadtree2 repres anoth binari matrix return quadtre repres binari matrix result logic bitwis binari matrix repres quadtree1 quadtree2 notic assign valu node true fals isleaf fals accept answer quadtre tree data structur intern node exactli children besid node attribut val true node repres grid fals node repres grid isleaf true node leaf node tree fals node children class node public boolean val public boolean isleaf public node topleft public node topright public node bottomleft public node bottomright construct quadtre twodimension area use follow step current grid valu ie set isleaf true set val valu grid set children null stop current grid differ valu set isleaf fals set val valu divid current grid subgrid shown photo recurs children proper subgrid want know quadtre refer wiki quadtre format inputoutput repres serial format quadtre use level order travers null signifi path termin node exist similar serial binari tree differ node repres list isleaf val valu isleaf val true repres list isleaf val valu isleaf val fals repres exampl input quadtree1 quadtree2 0111011110nullnullnullnull10101111 output explan quadtree1 quadtree2 shown see binari matrix repres quadtre appli logic bitwis binari matric get binari matrix repres result quadtre notic binari matric shown illustr dont construct binari matrix get result tree exampl input quadtree1 quadtree2 output explan tree repres binari matrix size matrix contain result matrix size also constraint quadtree1 quadtree2 valid quadtre repres grid 2x ","423":"nari tree find maximum depth maximum depth number node along longest path root node farthest leaf node narytre input serial repres level order travers group children separ null valu see exampl exampl input root 1null324null56 output exampl input root 1null2345nullnull67null8null910nullnull11null12null13nullnull14 output constraint total number node rang depth nari tree less equal ","424":"array integ num integ return total number subarray whose sum equal subarray contigu nonempti sequenc element within array exampl input num output exampl input num output constraint numslength numsi ","425":"integ array num integ group integ pair sum minai bi maxim return maxim sum exampl input num output explan possibl pair ignor order element min1 min2 min1 min2 min1 min3 maximum possibl sum exampl input num output explan optim pair min2 min2 min6 constraint numslength numsi ","426":"root binari tree return sum everi tree node tilt tilt tree node absolut differ sum left subtre node valu right subtre node valu node left child sum left subtre node valu treat rule similar node right child exampl input root output explan tilt node children tilt node children tilt node left subtre left child sum right subtre right child sum sum everi tilt exampl input root 42935null7 output explan tilt node children tilt node children tilt node children tilt node left subtre left child sum right subtre right child sum tilt node left child sum right subtre right child sum tilt node left subtre valu sum right subtre valu sum sum everi tilt exampl input root output constraint number node tree rang nodev ","427":"string repres integ return closest integ includ palindrom tie return smaller closest defin absolut differ minim integ exampl input output exampl input output explan closest palindrom return smallest constraint nlength consist digit lead zero repres integ rang ","428":"matlab handi function call reshap reshap matrix new differ size keep origin data matrix mat integ repres number row number column want reshap matrix reshap matrix fill element origin matrix rowtravers order reshap oper paramet possibl legal output new reshap matrix otherwis output origin matrix exampl input mat output exampl input mat output constraint matlength matilength matij ","429":"string return true contain permut fals otherwis word return true s1 permut substr exampl input ab eidbaooo output true explan contain permut ba exampl input ab eidboaoo output fals constraint s1length s2length lowercas english letter ","430":"sql schema panda schema ","431":"root binari tree root subroot return true subtre root structur node valu subroot fals otherwis subtre binari tree tree tree consist node tree node descend tree tree could also consid subtre exampl input root subroot output true exampl input root 34512nullnullnullnull0 subroot output fals constraint number node root tree rang number node subroot tree rang rootval subrootv ","432":"alic candi ith candi type candytypei alic notic start gain weight visit doctor doctor advis alic eat candi alway even alic like candi much want eat maximum number differ type candi still follow doctor advic integ array candytyp length return maximum number differ type candi eat eat exampl input candytyp output explan alic eat candi sinc type eat type exampl input candytyp output explan alic eat candi whether eat type still eat differ type exampl input candytyp output explan alic eat candi even though eat candi type constraint candytypelength even candytypei ","433":"grid ball ball initi posit startrow startcolumn allow move ball adjac cell grid possibl grid cross grid boundari appli maxmov move ball integ maxmov startrow startcolumn return number path move ball grid boundari sinc answer larg return modulo exampl input maxmov startrow startcolumn output exampl input maxmov startrow startcolumn output constraint maxmov startrow startcolumn ","434":"sql schema panda schema ","435":"integ array num need find continu subarray sort subarray nondecreas order whole array sort nondecreas order return shortest subarray output length exampl input num output explan need sort ascend order make whole array sort ascend order exampl input num output exampl input num output constraint numslength numsi solv time complex ","436":"string word1 word2 return minimum number step requir make word1 word2 step delet exactli charact either string exampl input word1 sea word2 eat output explan need step make sea ea anoth step make eat ea exampl input word1 leetcod word2 etco output constraint word1length word2length word1 word2 lowercas english letter ","437":"sql schema panda schema ","438":"sql schema panda schema ","439":"sql schema panda schema ","440":"array tree treesi xi yi repres locat tree garden fenc entir garden use minimum length rope expens garden wellfenc tree enclos return coordin tree exactli locat fenc perimet may return answer order exampl input tree output explan tree perimet fenc except tree insid fenc exampl input tree output explan fenc form line pass tree constraint treeslength treesilength xi yi posit uniqu ","441":"root nari tree return preorder travers node valu narytre input serial repres level order travers group children separ null valu see exampl exampl input root 1null324null56 output exampl input root 1null2345nullnull67null8null910nullnull11null12null13nullnull14 output constraint number node tree rang nodev height nari tree less equal recurs solut trivial could iter ","442":"root nari tree return postord travers node valu narytre input serial repres level order travers group children separ null valu see exampl exampl input root 1null324null56 output exampl input root 1null2345nullnull67null8null910nullnull11null12null13nullnull14 output constraint number node tree rang nodev height nari tree less equal recurs solut trivial could iter ","443":"string repres code snippet implement tag valid pars code return whether valid code snippet valid follow rule hold code must wrap valid close tag otherwis code invalid close tag necessarili valid exactli follow format tagnametagcontenttagnam among tagnam start tag tagnam end tag tagnam start end tag close tag valid tagnam tagcont valid valid tagnam contain uppercas letter length rang otherwis tagnam invalid valid tagcont may contain valid close tag cdata charact see note1 except unmatch unmatch start end tag unmatch close tag invalid tagnam otherwis tagcont invalid start tag unmatch end tag exist tagnam vice versa howev also need consid issu unbalanc tag nest unmatch find subsequ find subsequ charact next pars tagnam necessarili valid cdata follow format cdatacdatacont rang cdatacont defin charact cdata first subsequ cdatacont may contain charact function cdata forbid valid pars cdatacont even charact pars tag matter valid invalid treat regular charact exampl input code divthi first line cdatadivdiv output true explan code wrap close tag div div tagnam valid tagcont consist charact cdata although cdatacont unmatch start tag invalid tagnam consid plain text pars tag tagcont valid code valid thu return true exampl input code div cdata cdatadivdiv output true explan first separ code starttagtagcontentendtag starttag div endtag div tagcont could also separ text1cdatatext2 text1 cdata cdata cdatadiv cdatacont div text2 reason starttag div rule reason cdata cdatadiv rule exampl input code output fals explan unbalanc close must unmatch vice versa constraint codelength code consist english letter digit ","444":"string express repres express fraction addit subtract return calcul result string format final result irreduc fraction final result integ chang format fraction denomin case convert exampl input express output exampl input express output exampl input express output constraint input string contain output fraction input output format \u00b1numeratordenomin first input fraction output posit omit input contain valid irreduc fraction numer denomin fraction alway rang denomin mean fraction actual integ fraction format defin number fraction rang numer denomin final result guarante valid rang 32bit int ","445":"coordin point 2d space p1 p2 p3 p4 return true point construct squar coordin point pi repres xi yi input order valid squar equal side posit length equal angl 90degre angl exampl input p1 p2 p3 p4 output true exampl input p1 p2 p3 p4 output fals exampl input p1 p2 p3 p4 output true constraint p1length p2length p3length p4length xi yi ","446":"defin harmoni array array differ maximum valu minimum valu exactli integ array num return length longest harmoni subsequ among possibl subsequ exampl input num output explan longest harmoni subsequ exampl input num output explan longest harmoni subsequ length exampl input num output explan harmon subsequ exist constraint numslength numsi ","447":"sql schema panda schema ","448":"sql schema panda schema ","449":"matrix initi array oper op opsi ai bi mean increment ai bi count return number maximum integ matrix perform oper exampl input op output explan maximum integ return exampl input op output exampl input op output constraint opslength opsilength ai bi ","450":"array string list1 list2 find common string least index sum common string string appear list1 list2 common string least index sum common string appear list1i list2j minimum valu among common string return common string least index sum return answer order exampl input list1 shoguntapioca expressburg kingkfc list2 piattith grill torrey pineshungri hunter steakhouseshogun output shogun explan common string shogun exampl input list1 shoguntapioca expressburg kingkfc list2 kfcshogunburg king output shogun explan common string least index sum shogun index sum exampl input list1 happysadgood list2 sadhappygood output sadhappi explan common string happi index sum sad index sum good index sum string least index sum sad happi constraint list1length list2length list1ilength list2ilength list1i list2i space english letter string list1 uniqu string list2 uniqu least common string list1 list2 ","451":"posit integ return number integ rang whose binari represent contain consecut one exampl input output explan nonneg integ correspond binari represent among integ disobey rule consecut one satisfi rule exampl input output exampl input output constraint ","452":"sql schema panda schema ","453":"sql schema panda schema ","454":"long flowerb plot plant howev flower plant adjac plot integ array flowerb contain mean empti mean empti integ return true new flower plant flowerb without violat noadjacentflow rule fals otherwis exampl input flowerb output true exampl input flowerb output fals constraint flowerbedlength flowerbedi adjac flower flowerb flowerbedlength ","455":"root node binari tree task creat string represent tree follow specif set format rule represent base preorder travers binari tree must adher follow guidelin node represent node tree repres integ valu parenthes children node least child either left right children repres insid parenthes specif node left child valu left child enclos parenthes immedi follow node valu node right child valu right child also enclos parenthes parenthes right child left child omit empti parenthes empti parenthes pair ie omit final string represent tree specif except node right child left child case must includ empti pair parenthes indic absenc left child ensur onetoon map string represent origin binari tree structur maintain summari empti parenthes pair omit node left child children howev node right child left child empti pair parenthes must preced represent right child reflect tree structur accur exampl input root output explan origin need need omit empti parenthesi pair exampl input root 123null4 output explan almost first exampl except necessari indic absenc left child presenc right child constraint number node tree rang nodev ","456":"sql schema panda schema ","457":"sql schema panda schema ","458":"list path directori info includ directori path file content directori return duplic file file system term path may return answer order group duplic file consist least file content singl directori info string input list follow format rootd1d2dm f1txtf1content f2txtf2content fntxtfncontent mean file f1txt f2txt fntxt content f1content f2content fncontent respect directori rootd1d2dm note mean directori root directori output list group duplic file path group contain file path file content file path string follow format directorypathfilenametxt exampl input path roota 1txtabcd 2txtefghrootc 3txtabcdrootcd 4txtefghroot 4txtefgh output roota2txtrootcd4txtroot4txtroota1txtrootc3txt exampl input path roota 1txtabcd 2txtefghrootc 3txtabcdrootcd 4txtefgh output roota2txtrootcd4txtroota1txtrootc3txt constraint pathslength pathsilength sumpathsilength pathsi english letter digit may assum file directori share name directori may assum directori info repres uniqu directori singl blank space separ directori path file info imagin real file system search file df bf file content larg gb level modifi solut read file 1kb time modifi solut time complex modifi solut timeconsum part memoryconsum part optim make sure duplic file find fals posit ","459":"sql schema panda schema ","460":"integ array num return number triplet chosen array make triangl take side length triangl exampl input num output explan valid combin use first use second exampl input num output constraint numslength numsi ","461":"binari tree root1 root2 imagin put cover node tree overlap other need merg tree new binari tree merg rule node overlap sum node valu new valu merg node otherwis null node use node new tree return merg tree note merg process must start root node tree exampl input root1 root2 213null4null7 output 34554null7 exampl input root1 root2 output constraint number node tree rang nodev ","462":"sql schema panda schema ","463":"sql schema panda schema ","464":"array cpu task label letter number cpu interv idl allow complet task task complet order there constraint gap least interv task label return minimum number cpu interv requir complet task exampl input task aaabbb output explan possibl sequenc idl idl complet task must wait interv appli task 3rd interv neither done idl 4th interv interv pass exampl input task acabdb output explan possibl sequenc cool interv repeat task task exampl input task aaa bbb output explan possibl sequenc idl idl idl idl type task need separ interv lead idl twice repetit task constraint taskslength tasksi uppercas english letter ","465":"design implement circular queue circular queue linear data structur oper perform base fifo first first principl last posit connect back first posit make circl also call ring buffer benefit circular queue make use space front queue normal queue queue becom full insert next element even space front queue use circular queue use space store new valu implement mycircularqueu class mycircularqueuek initi object size queue int front get front item queue queue empti return int rear get last item queue queue empti return boolean enqueueint valu insert element circular queue return true oper success boolean dequeu delet element circular queue return true oper success boolean isempti check whether circular queue empti boolean isful check whether circular queue full must solv problem without use builtin queue data structur program languag exampl input mycircularqueu enqueu enqueu enqueu enqueu rear isful dequeu enqueu rear output null true true true fals true true true explan mycircularqueu mycircularqueu new mycircularqueue3 mycircularqueueenqueue1 return true mycircularqueueenqueue2 return true mycircularqueueenqueue3 return true mycircularqueueenqueue4 return fals mycircularqueuerear return mycircularqueueisful return true mycircularqueuedequeu return true mycircularqueueenqueue4 return true mycircularqueuerear return constraint valu call made enqueu dequeu front rear isempti isful ","466":"root binari tree integ val depth add row node valu val depth depth note root node depth ad rule integ depth null tree node cur depth depth creat tree node valu val cur left subtre root right subtre root cur origin left subtre left subtre new left subtre root cur origin right subtre right subtre new right subtre root depth mean depth depth creat tree node valu val new root whole origin tree origin tree new root left subtre exampl input root val depth output 4112nullnull6315 exampl input root 42null31 val depth output 42null113nullnull1 constraint number node tree rang depth tree rang nodev val depth depth tree ","467":"array array sort ascend order pick integ differ array array pick calcul distanc defin distanc integ absolut differ return maximum distanc exampl input array output explan way reach maximum distanc pick first third array pick second array exampl input array output constraint arrayslength arraysilength arraysij arraysi sort ascend order integ array ","468":"sql schema panda schema ","469":"sql schema panda schema ","470":"integ array num find number whose product maximum return maximum product exampl input num output exampl input num output exampl input num output constraint numslength numsi ","471":"integ array num invers pair pair integ numslength numsi numsj integ return number differ array consist number exactli invers pair sinc answer huge return modulo exampl input output explan array consist number exactli invers pair exampl input output explan array exactli invers pair constraint ","472":"differ onlin cours number array cours coursesi durationi lastdayi indic ith cours taken continu durationi day must finish lastdayi start 1st day take cours simultan return maximum number cours take exampl input cours output explan total cours take cours first take 1st cours cost day finish 100th day readi take next cours 101st day second take 3rd cours cost day finish 1100th day readi take next cours 1101st day third take cours cost day finish 1300th day 4th cours taken sinc finish 3300th day exce close date exampl input cours output exampl input cours output constraint courseslength durationi lastdayi ","473":"list sort integ nondecreas order find smallest rang includ least number list defin rang smaller rang exampl input num output explan list rang list rang list rang exampl input num output constraint numslength numsilength numsij numsi sort nondecreas order ","474":"nonneg integ decid whether therer integ exampl input output true explan exampl input output fals constraint ","475":"singlethread cpu execut program contain function function uniqu id function call store call stack function call start id push onto stack function call end id pop stack function whose id top stack current function execut time function start end write log id whether start end timestamp list log logsi repres ith log messag format string functionidstart endtimestamp exampl 0start3 mean function call function id start begin timestamp 1end2 mean function call function id end end timestamp note function call multipl time possibl recurs function exclus time sum execut time function call program exampl function call twice call execut time unit anoth call execut time unit exclus time return exclus time function array valu ith index repres exclus time function id exampl input log 0start01start21end50end6 output explan function start begin time execut unit time reach end time function start begin time execut unit time end end time function resum execut begin time execut unit time function spend unit total time execut function spend unit total time execut exampl input log 0start00start20end50start60end60end7 output explan function start begin time execut unit time recurs call function recurs call start begin time execut unit time function initi call resum execut immedi call function recurs call start begin time execut unit time function initi call resum execut begin time execut unit time function spend unit total time execut exampl input log 0start00start20end51start61end60end7 output explan function start begin time execut unit time recurs call function recurs call start begin time execut unit time function initi call resum execut immedi call function function start begin time execut unit time end end time function resum execut begin time execut unit time function spend unit total time execut function spend unit total time execut constraint logslength functionid timestamp start event happen timestamp end event happen timestamp function end log start log ","476":"root binari tree return averag valu node level form array answer within actual answer accept exampl input root 3920nullnull157 output explan averag valu node level level level henc return exampl input root output constraint number node tree rang nodev ","477":"leetcod store item sell item price howev special offer special offer consist differ kind item sale price integ array price pricei price ith item integ array need needsi number piec ith item want buy also array special speciali size specialij number piec jth item ith offer specialin ie last integ array price ith offer return lowest price pay exactli certain item could make optim use special offer allow buy item want even would lower overal price could use special offer mani time want exampl input price special need output explan kind item price respect special offer pay 0b special offer pay 2b need buy 2b may pay 2b special offer exampl input price special need output explan price may pay 1b 2b 1c need buy 2b 1c may pay 1b special offer 1b 1c add item though 2b 1c constraint pricelength needslength pricei needsi speciallength specialilength specialij input gener least specialij nonzero ","478":"messag contain letter az encod number use follow map decod encod messag digit must group map back letter use revers map may multipl way exampl map aajf group kjf group note group invalid map sinc differ addit map encod messag may contain charact repres digit exclud exampl encod messag may repres encod messag decod equival decod encod messag repres string consist digit charact return number way decod sinc answer may larg return modulo exampl input output explan encod messag repres encod messag decod string e respect henc total way decod exampl input output explan encod messag repres encod messag encod messag way decod eg decod henc total way decod exampl input output explan encod messag repres encod messag way decod way henc total way decod constraint slength si digit ","479":"solv equat return valu form string xvalu equat contain oper variabl coeffici return solut solut equat infinit solut infinit solut equat exactli solut equat ensur valu integ exampl input equat x53x6x2 output x2 exampl input equat xx output infinit solut exampl input equat output x0 constraint equationlength equat exactli equat consist integ absolut valu rang without lead zero variabl input gener singl solut integ ","480":"design implement circular doubleend queue dequ implement mycirculardequ class mycirculardequeint initi dequ maximum size boolean insertfront add item front dequ return true oper success fals otherwis boolean insertlast add item rear dequ return true oper success fals otherwis boolean deletefront delet item front dequ return true oper success fals otherwis boolean deletelast delet item rear dequ return true oper success fals otherwis int getfront return front item dequ return dequ empti int getrear return last item dequ return dequ empti boolean isempti return true dequ empti fals otherwis boolean isful return true dequ full fals otherwis exampl input mycirculardequ insertlast insertlast insertfront insertfront getrear isful deletelast insertfront getfront output null true true true fals true true true explan mycirculardequ mycirculardequ new mycirculardeque3 mycirculardequeinsertlast1 return true mycirculardequeinsertlast2 return true mycirculardequeinsertfront3 return true mycirculardequeinsertfront4 return fals queue full mycirculardequegetrear return mycirculardequeisful return true mycirculardequedeletelast return true mycirculardequeinsertfront4 return true mycirculardequegetfront return constraint valu call made insertfront insertlast deletefront deletelast getfront getrear isempti isful ","481":"","482":"set integ origin contain number unfortun due error number got duplic anoth number set result repetit number loss anoth number integ array num repres data statu set error find number occur twice number miss return form array exampl input num output exampl input num output constraint numslength numsi ","483":"array pair pair pairsi lefti righti lefti righti pair p2 follow pair p1 chain pair form fashion return length longest chain form need use interv select pair order exampl input pair output explan longest chain exampl input pair output explan longest chain constraint pairslength lefti righti ","484":"string return number palindrom substr string palindrom read backward forward substr contigu sequenc charact within string exampl input abc output explan palindrom string exampl input aaa output explan palindrom string aaa constraint slength consist lowercas english letter ","485":"english concept call root follow word form anoth longer word let call word deriv exampl root help follow word ful form deriv help dictionari consist mani root sentenc consist word separ space replac deriv sentenc root form deriv replac root replac root shortest length return sentenc replac exampl input dictionari catbatrat sentenc cattl rattl batteri output cat rat bat exampl input dictionari abc sentenc aadsfasf absb bbab cadsfaf output constraint dictionarylength dictionaryilength dictionaryi consist lowercas letter sentencelength sentenc consist lowercas letter space number word sentenc rang length word sentenc rang everi consecut word sentenc separ exactli space sentenc lead trail space ","486":"world dota2 parti radiant dire dota2 senat consist senat come parti senat want decid chang dota2 game vote chang roundbas procedur round senat exercis right ban senat right senat make anoth senat lose right follow round announc victori senat found senat still right vote parti announc victori decid chang game string senat repres senat parti belong charact repres radiant parti dire parti senat size string roundbas procedur start first senat last senat order procedur last end vote senat lost right skip procedur suppos everi senat smart enough play best strategi parti predict parti final announc victori chang dota2 game output radiant dire exampl input senat rd output radiant explan first senat come radiant ban next senat right round second senat cant exercis right anymor sinc right ban round first senat announc victori sinc guy senat vote exampl input senat rdd output dire explan first senat come radiant ban next senat right round second senat cant exercis right anymor sinc right ban third senat come dire ban first senat right round round third senat announc victori sinc guy senat vote constraint senatelength senatei either ","487":"charact screen notepad perform oper notepad step copi copi charact present screen partial copi allow past past charact copi last time integ return minimum number oper get charact exactli time screen exampl input output explan initi charact step use copi oper step use past oper get step use past oper get aaa exampl input output constraint ","488":"root binari search tree integ return true exist element sum equal fals otherwis exampl input root 53624null7 output true exampl input root 53624null7 output fals constraint number node tree rang nodev root guarante valid binari search tree ","489":"integ array num duplic maximum binari tree built recurs num use follow algorithm creat root node whose valu maximum valu num recurs build left subtre subarray prefix left maximum valu recurs build right subtre subarray suffix right maximum valu return maximum binari tree built num exampl input num output 635null20nullnull1 explan recurs call largest valu left prefix right suffix largest valu left prefix right suffix empti array child largest valu left prefix right suffix empti array child element child node valu largest valu left prefix right suffix element child node valu empti array child exampl input num output 3null2null1 constraint numslength numsi integ num uniqu ","490":"root binari tree construct 0index string matrix re repres format layout tree format layout matrix construct use follow rule height tree height number row equal height number column equal 2height1 place root node middl top row formal locat res0n12 node place matrix posit resrc place left child resr1c2heightr1 right child resr1c2heightr1 continu process node tree place empti cell contain empti string return construct matrix re exampl input root output exampl input root 123null4 output constraint number node tree rang nodev depth tree rang ","491":"robot start posit origin 2d plane sequenc move judg robot end complet move string move repres move sequenc robot movesi repres ith move valid move right left u return true robot return origin finish move fals otherwis note way robot face irrelev alway make robot move right alway make move left etc also assum magnitud robot movement move exampl input move ud output true explan robot move move magnitud end origin start therefor return true exampl input move output fals explan robot move left twice end move left origin return fals origin end move constraint moveslength move contain charact u ","492":"sort integ array arr integ return closest integ array result also sort ascend order integ closer integ exampl input arr output exampl input arr output constraint arrlength arrlength arr sort ascend order arri ","493":"integ array num sort nondecreas order determin possibl split num subsequ follow condit true subsequ consecut increas sequenc ie integ exactli previou integ subsequ length return true split num accord condit fals otherwis subsequ array new array form origin array delet none element without disturb rel posit remain element ie subsequ exampl input num output true explan num split follow subsequ exampl input num output true explan num split follow subsequ exampl input num output fals explan imposs split num consecut increas subsequ length constraint numslength numsi num sort nondecreas order ","494":"imag smoother filter size appli cell imag round averag cell surround cell ie averag cell blue smoother surround cell cell present consid averag ie averag cell red smoother integ matrix img repres grayscal imag return imag appli smoother cell exampl input img output explan point floor34 floor075 point floor56 floor083333333 point floor89 floor088888889 exampl input img output explan point floor100200200504 floor1375 point floor200200502001001006 floor141666667 point floor502002002002001001001001009 floor138888889 constraint imglength imgilength imgij ","495":"root binari tree return maximum width tree maximum width tree maximum width among level width level defin length endnod leftmost rightmost nonnul node null node endnod would present complet binari tree extend level also count length calcul guarante answer rang 32bit sign integ exampl input root 13253null9 output explan maximum width exist third level length 53null9 exampl input root 1325nullnull96null7 output explan maximum width exist fourth level length 6nullnullnullnullnull7 exampl input root output explan maximum width exist second level length constraint number node tree rang nodev ","496":"strang printer follow special properti printer print sequenc charact time turn printer print new charact start end place cover origin exist charact string return minimum number turn printer need print exampl input aaabbb output explan print aaa first print bbb exampl input aba output explan print aaa first print second place string cover exist charact constraint slength consist lowercas english letter ","497":"array num integ task check could becom nondecreas modifi element defin array nondecreas numsi numsi hold everi 0base exampl input num output true explan could modifi first get nondecreas array exampl input num output fals explan get nondecreas array modifi element constraint numslength numsi ","498":"integ construct list answer contain differ posit integ rang obey follow requir suppos list answer list exactli distinct integ return list answer multipl valid answer return exampl input output explan differ posit integ rang exactli distinct integ exampl input output explan differ posit integ rang exactli distinct integ constraint ","499":"nearli everyon use multipl tabl multipl tabl size integ matrix mat matij 1index integ return kth smallest element multipl tabl exampl input output explan 5th smallest number exampl input output explan 6th smallest number constraint ","500":"root binari search tree lowest highest boundari low high trim tree element lie low high trim tree chang rel structur element remain tree ie node descend remain descend proven uniqu answer return root trim binari search tree note root may chang depend bound exampl input root low high output 1null2 exampl input root 304null2nullnull1 low high output 32null1 constraint number node tree rang nodev valu node tree uniqu root guarante valid binari search tree low high ","501":"nonempti special binari tree consist node nonneg valu node tree exactli subnod node subnod node valu smaller valu among subnod formal properti rootval minrootleftv rootrightv alway hold binari tree need output second minimum valu set made node valu whole tree second minimum valu exist output instead exampl input root 225nullnull57 output explan smallest valu second smallest valu exampl input root output explan smallest valu isnt second smallest valu constraint number node tree rang nodev rootval minrootleftv rootrightv intern node tree ","502":"room bulb label turn initi button wall button differ function button flip statu bulb button flip statu bulb even label ie button flip statu bulb odd label ie button flip statu bulb label 3k ie must make exactli press button press total press may pick button press integ press return number differ possibl status perform press button press exampl input press output explan statu press button press button exampl input press output explan statu press button press button press button exampl input press output explan statu press button press button press button press button constraint press ","503":"integ array num return number longest increas subsequ notic sequenc strictli increas exampl input num output explan longest increas subsequ exampl input num output explan length longest increas subsequ increas subsequ length output constraint numslength numsi answer guarante fit insid 32bit integ ","504":"unsort array integ num return length longest continu increas subsequ ie subarray subsequ must strictli increas continu increas subsequ defin indic numsl numsl numsr numsr numsi numsi exampl input num output explan longest continu increas subsequ length even though increas subsequ continu element separ element exampl input num output explan longest continu increas subsequ length note must strictli increas constraint numslength numsi ","505":"ask cut tree forest golf event forest repres matrix matrix mean cell walk repres empti cell walk number greater repres tree cell walk number tree height step walk direct north east south west stand cell tree choos whether cut must cut tree order shortest tallest cut tree valu cell becom empti cell start point return minimum step need walk cut tree cut tree return note input gener tree height least tree need cut exampl input forest output explan follow path allow cut tree shortest tallest step exampl input forest output explan tree bottom row access middl row block exampl input forest output explan path exampl cut tree note cut first tree make step constraint forestlength forestilength forestij height tree distinct ","506":"design data structur initi list differ word provid string determin chang exactli charact string match word data structur implement magicdictionari class magicdictionari initi object void builddictstr dictionari set data structur array distinct string dictionari bool searchstr searchword return true chang exactli charact searchword match string data structur otherwis return fals exampl input magicdictionari builddict search search search search hello leetcod hello hhllo hell leetcod output null null fals true fals fals explan magicdictionari magicdictionari new magicdictionari magicdictionarybuilddicthello leetcod magicdictionarysearchhello return fals magicdictionarysearchhhllo chang second e match hello return true magicdictionarysearchhel return fals magicdictionarysearchleetcod return fals constraint dictionarylength dictionaryilength dictionaryi consist lowercas english letter string dictionari distinct searchwordlength searchword consist lowercas english letter builddict call search call made search ","507":"design map allow follow map string key valu return sum valu key prefix equal string implement mapsum class mapsum initi mapsum object void insertstr key int val insert keyval pair map key alreadi exist origin keyvalu pair overridden new int sumstr prefix return sum pair valu whose key start prefix exampl input mapsum insert sum insert sum appl ap app ap output null null null explan mapsum mapsum new mapsum mapsuminsertappl mapsumsumap return appl mapsuminsertapp mapsumsumap return appl app constraint keylength prefixlength key prefix lowercas english letter val call made insert sum ","508":"integ array card length card contain number rang arrang number card mathemat express use oper parenthes get valu restrict follow rule divis oper repres real divis integ divis exampl everi oper done number particular use unari oper exampl card express allow concaten number togeth exampl card express valid return true get express evalu fals otherwis exampl input card output true explan exampl input card output fals constraint cardslength cardsi ","509":"string return true palindrom delet charact exampl input aba output true exampl input abca output true explan could delet charact exampl input abc output fals constraint slength consist lowercas english letter ","510":"keep score basebal game strang rule begin game start empti record list string oper operationsi ith oper must appli record follow integ record new score record new score sum previou score record new score doubl previou score invalid previou score remov record return sum score record appli oper test case gener answer intermedi calcul fit 32bit integ oper valid exampl input op 52cd output explan add record record add record record invalid remov previou score record add record record add record record total sum exampl input op 524cd9 output explan add record record add record record add record record invalid remov previou score record add record record add record record add record record add record record total sum exampl input op 1c output explan add record record invalid remov previou score record sinc record empti total sum constraint operationslength operationsi string repres integ rang oper alway least previou score record oper alway least previou score record ","511":"problem tree undirect graph connect cycl graph start tree node label addit edg ad ad edg differ vertic chosen edg alreadi exist graph repres array edg length edgesi ai bi indic edg node ai bi graph return edg remov result graph tree node multipl answer return answer occur last input exampl input edg output exampl input edg output constraint edgeslength edgesilength ai bi edgeslength ai bi repeat edg graph connect ","512":"problem root tree direct graph exactli node root node descend node plu everi node exactli parent except root node parent input direct graph start root tree node distinct valu addit direct edg ad ad edg differ vertic chosen edg alreadi exist result graph 2darray edg element edg pair ui vi repres direct edg connect node ui vi ui parent child vi return edg remov result graph root tree node multipl answer return answer occur last 2darray exampl input edg output exampl input edg output constraint edgeslength edgesilength ui vi ui vi ","513":"string return minimum number time repeat string string substr imposs substr repeat return notic string abc repeat time repeat time abc repeat time abcabc exampl input abcd cdabcdab output explan return repeat time abcdabcdabcd substr exampl input output constraint alength blength lowercas english letter ","514":"root binari tree return length longest path node path valu path may may pass root length path node repres number edg exampl input root 54511null5 output explan shown imag show longest path valu ie exampl input root 14544null5 output explan shown imag show longest path valu ie constraint number node tree rang nodev depth tree exceed ","515":"chessboard knight start cell row column attempt make exactli move row column 0index topleft cell bottomright cell chess knight possibl move make illustr move cell cardin direct cell orthogon direct time knight move choos possibl move uniformli random even piec would go chessboard move knight continu move made exactli move move chessboard return probabl knight remain board stop move exampl input row column output explan move keep knight board posit also move keep knight board total probabl knight stay board exampl input row column output constraint row column ","516":"integ array num integ find nonoverlap subarray length maximum sum return return result list indic repres start posit interv 0index multipl answer return lexicograph smallest exampl input num output explan subarray correspond start indic could also taken answer would lexicograph larger exampl input num output constraint numslength numsi floornumslength ","517":"data structur employe inform includ employe uniqu id import valu direct subordin id array employe employe employeesiid id ith employe employeesiimport import valu ith employe employeesisubordin list id direct subordin ith employe integ id repres employe id return total import valu employe direct indirect subordin exampl input employe id output explan employe import valu direct subordin employe employe import valu thu total import valu employe exampl input employe id output explan employe import valu direct subordin thu total import valu employe constraint employeeslength employeesiid employeesiid uniqu employeesiimport employe direct leader may sever subordin id employeesisubordin valid id ","518":"differ type sticker sticker lowercas english word would like spell string target cut individu letter collect sticker rearrang use sticker want infinit quantiti sticker return minimum number sticker need spell target task imposs return note test case word chosen randomli common us english word target chosen concaten random word exampl input sticker withexamplesci target thehat output explan use sticker exampl sticker cut rearrang letter sticker form target thehat also minimum number sticker necessari form target string exampl input sticker noticeposs target basicbas output explan form target basicbas cut letter sticker constraint stickerslength stickersilength targetlength stickersi target lowercas english letter ","519":"posit integ check whether altern bit name adjac bit alway differ valu exampl input output true explan binari represent exampl input output fals explan binari represent exampl input output fals explan binari represent constraint ","520":"binari matrix grid island group repres land connect 4direct horizont vertic may assum edg grid surround water area island number cell valu island return maximum area island grid island return exampl input grid output explan answer island must connect 4direct exampl input grid output constraint gridlength gridilength gridij either ","521":"binari string return number nonempti substr number substr group consecut substr occur multipl time count number time occur exampl input output explan substr equal number consecut notic substr repeat count number time occur also valid substr group togeth exampl input output explan substr equal number consecut constraint slength si either ","522":"nonempti array nonneg integ num degre array defin maximum frequenc element task find smallest possibl length contigu subarray num degre num exampl input num output explan input array degre element appear twice subarray degre shortest length return exampl input num output explan degre element repeat time shortest subarray therefor return constraint numslength numsi integ ","523":"integ array num integ return true possibl divid array nonempti subset whose sum equal exampl input num output true explan possibl divid subset equal sum exampl input num output fals constraint numslength numsi frequenc element rang ","524":"sever squar drop onto xaxi 2d plane 2d integ array posit positionsi lefti sidelengthi repres ith squar side length sidelengthi drop left edg align xcoordin lefti squar drop time height land squar fall downward neg direct either land top side anoth squar xaxi squar brush leftright side anoth squar count land land freez place move squar drop must record height current tallest stack squar return integ array an ansi repres height describ drop ith squar exampl input posit output explan first drop tallest stack squar height second drop tallest stack squar height third drop tallest stack still squar height thu return answer exampl input posit output explan first drop tallest stack squar height second drop tallest stack either squar squar height thu return answer note squar brush right side squar count land constraint positionslength lefti sidelengthi ","525":"root binari search tree integ val find node node valu equal val return subtre root node node exist return null exampl input root val output exampl input root val output constraint number node tree rang nodev root binari search tree val ","526":"root node binari search tree valu insert tree return root node insert guarante new valu exist origin notic may exist multipl valid way insert long tree remain insert return exampl input root val output explan anoth accept tree exampl input root val output 40206010305070nullnull25 exampl input root 42713nullnullnullnullnullnul val output constraint number node tree rang nodev valu nodev uniqu val guarante val exist origin ","527":"part univers admiss offic need keep track kth highest test score applic realtim help determin cutoff mark interview admiss dynam new applic submit score task implement class integ maintain stream test score continu return kth highest test score new score submit specif look kth highest score sort list score implement kthlargest class kthlargestint int num initi object integ stream test score num int addint val add new test score val stream return element repres kth largest element pool test score far exampl input kthlargest add add add add add output null explan kthlargest kthlargest new kthlargest3 kthlargestadd3 return kthlargestadd5 return kthlargestadd10 return kthlargestadd9 return kthlargestadd4 return exampl input kthlargest add add add add output null explan kthlargest kthlargest new kthlargest4 kthlargestadd2 return kthlargestadd10 return kthlargestadd9 return kthlargestadd9 return constraint numslength numslength numsi val call made add ","528":"array integ num sort ascend order integ target write function search target num target exist return index otherwis return must write algorithm olog runtim complex exampl input num target output explan exist num index exampl input num target output explan exist num return constraint numslength numsi target integ num uniqu num sort ascend order ","529":"design hashset without use builtin hash tabl librari implement myhashset class void addkey insert valu key hashset bool containskey return whether valu key exist hashset void removekey remov valu key hashset key exist hashset noth exampl input myhashset add add contain contain add contain remov contain output null null null true fals null true null fals explan myhashset myhashset new myhashset myhashsetadd1 set myhashsetadd2 set myhashsetcontains1 return true myhashsetcontains3 return fals found myhashsetadd2 set myhashsetcontains2 return true myhashsetremove2 set myhashsetcontains2 return fals alreadi remov constraint key call made add remov contain ","530":"design hashmap without use builtin hash tabl librari implement myhashmap class myhashmap initi object empti map void putint key int valu insert key valu pair hashmap key alreadi exist map updat correspond valu int getint key return valu specifi key map map contain map key void removekey remov key correspond valu map contain map key exampl input myhashmap put put get get put get remov get output null null null null null explan myhashmap myhashmap new myhashmap myhashmapput1 map myhashmapput2 map myhashmapget1 return map myhashmapget3 return ie found map myhashmapput2 map ie updat exist valu myhashmapget2 return map myhashmapremove2 remov map map myhashmapget2 return ie found map constraint key valu call made put get remov ","531":"design implement link list choos use singli doubli link list node singli link list attribut val next val valu current node next pointerrefer next node want use doubli link list need attribut prev indic previou node link list assum node link list 0index implement mylinkedlist class mylinkedlist initi mylinkedlist object int getint index get valu indexth node link list index invalid return void addatheadint val add node valu val first element link list insert new node first node link list void addattailint val append node valu val last element link list void addatindexint index int val add node valu val indexth node link list index equal length link list node append end link list index greater length node insert void deleteatindexint index delet indexth node link list index valid exampl input mylinkedlist addathead addattail addatindex get deleteatindex get output null null null null null explan mylinkedlist mylinkedlist new mylinkedlist mylinkedlistaddathead1 mylinkedlistaddattail3 mylinkedlistaddatindex1 link list becom mylinkedlistget1 return mylinkedlistdeleteatindex1 link list mylinkedlistget1 return constraint index val pleas use builtin linkedlist librari call made get addathead addattail addatindex deleteatindex ","532":"string return string replac everi uppercas letter lowercas letter exampl input hello output hello exampl input output exampl input love output love constraint slength consist printabl ascii charact ","533":"integ array uniqu integ blacklist design algorithm pick random integ rang blacklist integ mention rang blacklist equal like return optim algorithm minim number call builtin random function languag implement solut class solutionint int blacklist initi object integ blacklist integ blacklist int pick return random integ rang blacklist exampl input solut pick pick pick pick pick pick pick output null explan solut solut new solution7 solutionpick return integ ok note everi call pick must equal like return ie probabl solutionpick return solutionpick return solutionpick return solutionpick return solutionpick return solutionpick return constraint blacklistlength min105 blacklisti valu blacklist uniqu call made pick ","534":"string return lowest ascii sum delet charact make string equal exampl input sea eat output explan delet sea add ascii valu sum delet eat add sum end string equal minimum sum possibl achiev exampl input delet leet output explan delet dee delet turn string let add 100d 101e 101e sum delet e leet add 101e sum end string equal let answer instead turn string lee eet would get answer higher constraint s1length s2length lowercas english letter ","535":"array integ num integ return number contigu subarray product element subarray strictli less exampl input num output explan subarray product less note includ product strictli less exampl input num output constraint numslength numsi ","536":"array price pricesi price stock ith day integ fee repres transact fee find maximum profit achiev may complet mani transact like need pay transact fee transact note may engag multipl transact simultan ie must sell stock buy transact fee charg stock purchas sale exampl input price fee output explan maximum profit achiev buy prices0 sell prices3 buy prices4 sell prices5 total profit exampl input price fee output constraint priceslength pricesi fee ","537":"rang modul modul track rang number design data structur track rang repres halfopen interv queri halfopen interv left right denot real number left right implement rangemodul class rangemodul initi object data structur void addrangeint left int right add halfopen interv left right track everi real number interv ad interv partial overlap current track number add number interv left right alreadi track boolean queryrangeint left int right return true everi real number interv left right current track fals otherwis void removerangeint left int right stop track everi real number current track halfopen interv left right exampl input rangemodul addrang removerang queryrang queryrang queryrang output null null null true fals true explan rangemodul rangemodul new rangemodul rangemoduleaddrange10 rangemoduleremoverange14 rangemodulequeryrange10 return trueeveri number track rangemodulequeryrange13 return falsenumb like track rangemodulequeryrange16 return true number still track despit remov oper constraint left right call made addrang queryrang removerang ","538":"special charact first charact repres bit second charact repres bit binari array bit end return true last charact must onebit charact exampl input bit output true explan way decod twobit charact onebit charact last charact onebit charact exampl input bit output fals explan way decod twobit charact twobit charact last charact onebit charact constraint bitslength bitsi either ","539":"integ array nums1 nums2 return maximum length subarray appear array exampl input nums1 nums2 output explan repeat subarray maximum length exampl input nums1 nums2 output explan repeat subarray maximum length constraint nums1length nums2length nums1i nums2i ","540":"distanc pair integ defin absolut differ integ array num integ return kth smallest distanc among pair numsi numsj numslength exampl input num output explan pair 1st smallest distanc pair distanc exampl input num output exampl input num output constraint numslength numsi ","541":"array string word repres english dictionari return longest word word built charact time word word possibl answer return longest word smallest lexicograph order answer return empti string note word built left right addit charact ad end previou word exampl input word wwoworworlworld output world explan word world built charact time wo wor worl exampl input word abananaappapplapapplyappl output appl explan appli appl built word dictionari howev appl lexicograph smaller appli constraint wordslength wordsilength wordsi consist lowercas english letter ","542":"list account element accountsi list string first element accountsi0 name rest element email repres email account would like merg account account definit belong person common email account note even account name may belong differ peopl peopl could name person number account initi account definit name merg account return account follow format first element account name rest element email sort order account return order exampl input account johnjohnsmithmailcomjohnnewyorkmailcomjohnjohnsmithmailcomjohn00mailcommarymarymailcomjohnjohnnybravomailcom output johnjohn00mailcomjohnnewyorkmailcomjohnsmithmailcommarymarymailcomjohnjohnnybravomailcom explan first second john person common email johnsmithmailcom third john mari differ peopl none email address use account could return list order exampl answer mari marymailcom john johnnybravomailcom john john00mailcom johnnewyorkmailcom johnsmithmailcom would still accept exampl input account gabegabe0mcogabe3mcogabe1mcokevinkevin3mcokevin5mcokevin0mcoethanethan5mcoethan4mcoethan0mcohanzohanzo3mcohanzo1mcohanzo0mcofernfern5mcofern1mcofern0mco output ethanethan0mcoethan4mcoethan5mcogabegabe0mcogabe1mcogabe3mcohanzohanzo0mcohanzo1mcohanzo3mcokevinkevin0mcokevin3mcokevin5mcofernfern0mcofern1mcofern5mco constraint accountslength accountsilength accountsijlength accountsi0 consist english letter accountsij valid email ","543":"program remov comment program sourc array string sourc sourcei ith line sourc code repres result split origin sourc code string newlin charact type comment line comment block comment string denot line comment repres rest charact right line ignor string denot block comment repres charact next nonoverlap occurr ignor occurr happen read order line line left right clear string yet end block comment end would overlap begin first effect comment take preced other exampl string occur block comment ignor similarli string occur line block comment also ignor certain line code empti remov comment must output line string answer list nonempti control charact singl quot doubl quot charact exampl sourc string comment test case also noth els defin macro interfer comment guarante everi open block comment eventu close outsid line block comment alway start new comment final implicit newlin charact delet block comment pleas see exampl detail remov comment sourc code return sourc code format exampl input sourc test program int main variabl declar int test multilin comment test output int main int ca explan line line code visual test program int main variabl declar int test multilin comment test string denot block comment includ line line string denot line comment line line output code visual int main int exampl input sourc acom line morecommentb output ab explan origin sourc string acommentnlinenmorecommentb bold newlin charact delet implicit newlin charact delet leav string ab delimit newlin charact becom ab constraint sourcelength sourceilength sourcei consist printabl ascii charact everi open block comment eventu close singlequot doublequot input ","544":"array integ num calcul pivot index array pivot index index sum number strictli left index equal sum number strictli index right index left edg array left sum element left also appli right edg array return leftmost pivot index index exist return exampl input num output explan pivot index left sum nums0 nums1 nums2 right sum nums4 nums5 exampl input num output explan index satisfi condit problem statement exampl input num output explan pivot index left sum element left index right sum nums1 nums2 constraint numslength numsi note question httpsleetcodecomproblemsfindthemiddleindexinarray ","545":"head singli link list integ split link list consecut link list part length part equal possibl part size differ may lead part null part order occurr input list part occur earlier alway size greater equal part occur later return array part exampl input head output explan first element output0 output0v output0next null last element output4 null string represent listnod exampl input head output explan input split consecut part size differ earlier part larger size later part constraint number node list rang nodev ","546":"string formula repres chemic formula return count atom atom element alway start uppercas charact lowercas letter repres name digit repres element count may count greater count digit exampl h2o possibl imposs formula concaten togeth produc anoth formula exampl h2o2he3mg4 also formula formula place parenthes count option ad also formula exampl h2o23 formula return count element string follow form first name sort order follow count count follow second name sort order follow count count test case gener valu output fit 32bit integ exampl input formula h2o output h2o explan count element exampl input formula mgoh2 output h2mgo2 explan count element exampl input formula k4onso322 output k4n2o14s4 explan count element constraint formulalength formula consist english letter digit formula alway valid ","547":"selfdivid number number divis everi digit contain exampl selfdivid number selfdivid number allow contain digit integ left right return list selfdivid number rang left right inclus exampl input left right output exampl input left right output constraint left right ","548":"implement program use calendar add new event ad event caus doubl book doubl book happen event nonempti intersect ie moment common event event repres pair integ start end repres book halfopen interv start end rang real number start end implement mycalendar class mycalendar initi calendar object boolean bookint start int end return true event ad calendar success without caus doubl book otherwis return fals add event calendar exampl input mycalendar book book book output null true fals true explan mycalendar mycalendar new mycalendar mycalendarbook10 return true mycalendarbook15 return fals book time alreadi book anoth event mycalendarbook20 return true event book first event take everi time less includ constraint start end call made book ","549":"string return number differ nonempti palindrom subsequ sinc answer may larg return modulo subsequ string obtain delet charact string sequenc palindrom equal sequenc revers sequenc differ ai bi exampl input bccb output explan differ nonempti palindrom subsequ cc bcb bccb note bcb count even though occur twice exampl input abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba output explan differ nonempti palindrom subsequ modulo constraint slength si either ","550":"implement program use calendar add new event ad event caus tripl book tripl book happen event nonempti intersect ie moment common event event repres pair integ start end repres book halfopen interv start end rang real number start end implement mycalendartwo class mycalendartwo initi calendar object boolean bookint start int end return true event ad calendar success without caus tripl book otherwis return fals add event calendar exampl input mycalendartwo book book book book book book output null true true true fals true true explan mycalendartwo mycalendartwo new mycalendartwo mycalendartwobook10 return true event book mycalendartwobook50 return true event book mycalendartwobook10 return true event doubl book mycalendartwobook5 return fals event book would result tripl book mycalendartwobook5 return true event book use time alreadi doubl book mycalendartwobook25 return true event book time doubl book third event time singl book time doubl book second event constraint start end call made book ","551":"imag repres grid integ imag imageij repres pixel valu imag also integ color task perform flood fill imag start pixel imagesrsc perform flood fill begin start pixel chang color color perform process pixel directli adjac pixel share side origin pixel either horizont vertic share color start pixel keep repeat process check neighbor pixel updat pixel modifi color match origin color start pixel process stop adjac pixel origin color updat return modifi imag perform flood fill exampl input imag color output explan center imag posit ie red pixel pixel connect path color start pixel ie blue pixel color new color note bottom corner color horizont vertic connect start pixel exampl input imag color output explan start pixel alreadi color target color therefor chang made imag constraint imagelength imageilength imageij color ","552":"array asteroid integ repres asteroid row asteroid absolut valu repres size sign repres direct posit mean right neg mean left asteroid move speed find state asteroid collis asteroid meet smaller explod size explod asteroid move direct never meet exampl input asteroid output explan collid result never collid exampl input asteroid output explan collid explod exampl input asteroid output explan collid result collid result constraint asteroidslength asteroidsi asteroidsi ","553":"string express repres lisplik express return integ valu syntax express follow express either integ let express add express mult express assign variabl express alway evalu singl integ integ could posit neg let express take form let e1 e2 en expr let alway string let pair altern variabl express mean first variabl assign valu express e1 second variabl assign valu express e2 sequenti valu let express valu express expr add express take form add e1 e2 add alway string add alway express e1 e2 result addit evalu e1 evalu e2 mult express take form mult e1 e2 mult alway string mult alway express e1 e2 result multipl evalu e1 evalu e2 question use smaller subset variabl name variabl start lowercas letter lowercas letter digit addit conveni name add let mult protect never use variabl name final concept scope express variabl name evalu within context evalu innermost scope term parenthes check first valu variabl outer scope check sequenti guarante everi express legal pleas see exampl detail scope exampl input express let mult let add output explan express add check valu variabl check innermost scope outermost context variabl tri evalu sinc found first valu exampl input express let output explan assign let statement process sequenti exampl input express let add add output explan first add evalu assign second add evalu constraint expressionlength lead trail space express token separ singl space express answer intermedi calcul answer guarante fit 32bit integ express guarante legal evalu integ ","554":"integ monoton increas digit pair adjac digit satisfi integ return largest number less equal monoton increas digit exampl input output exampl input output exampl input output constraint ","555":"array integ temperatur repres daili temperatur return array answer answeri number day wait ith day get warmer temperatur futur day possibl keep answeri instead exampl input temperatur output exampl input temperatur output exampl input temperatur output constraint temperatureslength temperaturesi ","556":"integ array num want maxim number point get perform follow oper number time pick numsi delet earn numsi point afterward must delet everi element equal numsi everi element equal numsi return maximum number point earn appli oper number time exampl input num output explan perform follow oper delet earn point consequ also delet num delet earn point num earn total point exampl input num output explan perform follow oper delet earn point also delet num delet earn point num delet earn point num earn total point constraint numslength numsi ","557":"grid repres field cherri cell possibl integ mean cell empti pass mean cell contain cherri pick pass mean cell contain thorn block way return maximum number cherri collect follow rule start posit reach move right valid path cell cell valu reach return move left valid path cell pass path cell contain cherri pick cell becom empti cell valid path cherri collect exampl input grid output explan player start went right right reach cherri pick singl trip matrix becom player went left left return home pick cherri total number cherri pick maximum possibl exampl input grid output constraint gridlength gridilength gridij grid00 gridn ","558":"network node label also time list travel time direct edg timesi ui vi wi ui sourc node vi target node wi time take signal travel sourc target send signal node return minimum time take node receiv signal imposs node receiv signal return exampl input time output exampl input time output exampl input time output constraint timeslength timesilength ui vi ui vi wi pair ui vi uniqu ie multipl edg ","559":"array charact letter sort nondecreas order charact target least differ charact letter return smallest charact letter lexicograph greater target charact exist return first charact letter exampl input letter cfj target output explan smallest charact lexicograph greater letter exampl input letter cfj target output explan smallest charact lexicograph greater letter exampl input letter xxyy target output explan charact letter lexicograph greater return letters0 constraint letterslength lettersi lowercas english letter letter sort nondecreas order letter contain least differ charact target lowercas english letter ","560":"integ array num largest integ uniqu determin whether largest element array least twice much everi number array return index largest element return otherwis exampl input num output explan largest integ everi number array least twice big index valu return exampl input num output explan less twice valu return constraint numslength numsi largest element num uniqu ","561":"string licensepl array string word find shortest complet word word complet word word contain letter licensepl ignor number space licensepl treat letter case insensit letter appear licensepl must appear word number time exampl licensepl abc 12c contain letter ignor case twice possibl complet word abccdef caaacab cbca return shortest complet word word guarante answer exist multipl shortest complet word return first occur word exampl input licensepl pst word stepstepsstripesteppl output step explan licensepl contain letter ignor case step contain contain step contain charact stripe miss steppl miss sinc step word contain letter answer exampl input licensepl word lookspeststewshow output pest explan licensepl contain letter word contain among pest stew show shortest answer pest word appear earliest constraint licenseplatelength licensepl contain digit letter uppercas lowercas space wordslength wordsilength wordsi consist lower case english letter ","562":"viru spread rapidli task quarantin infect area instal wall world model binari grid isinfect isinfectedij repres uninfect cell isinfectedij repres cell contamin viru wall wall instal 4direct adjac cell share boundari everi night viru spread neighbor cell direct unless block wall resourc limit day instal wall around region ie affect area continu block infect cell threaten uninfect cell follow night never tie return number wall use quarantin infect region world becom fulli infect return number wall use exampl input isinfect output explan contamin region first day add wall quarantin viral region left board viru spread second day add wall quarantin viral region right viru fulli contain exampl input isinfect output explan even though cell save wall built notic wall built share boundari differ cell exampl input isinfect output explan region left build new wall constraint isinfectedlength isinfectedilength isinfectedij either alway contigu viral region throughout describ process infect strictli uncontamin squar next round ","563":"lock front circular wheel wheel slot wheel rotat freeli wrap around exampl turn move consist turn wheel slot lock initi start string repres state wheel list deadend dead end mean lock display code wheel lock stop turn unabl open target repres valu wheel unlock lock return minimum total number turn requir open lock imposs exampl input deadend target output explan sequenc valid move would note sequenc like would invalid wheel lock becom stuck display becom dead end exampl input deadend target output explan turn last wheel revers move exampl input deadend target output explan reach target without get stuck constraint deadendslength deadendsilength targetlength target list deadend target deadendsi digit ","564":"safe protect password password sequenc digit digit rang safe peculiar way check password enter sequenc check recent digit enter time type digit exampl correct password enter type recent digit incorrect type recent digit incorrect type recent digit incorrect type recent digit incorrect type recent digit incorrect type recent digit correct safe unlock return string minimum length unlock safe point enter exampl input output explan password singl digit enter digit would also unlock safe exampl input output explan possibl password type start 4th digit type start 1st digit type start 3rd digit type start digit thu unlock safe would also unlock safe constraint ","565":"stand posit infinit number line destin posit target make number move nummov move either go left right ith move start nummov take step chosen direct integ target return minimum number move requir ie minimum nummov reach destin exampl input target output explan 1st move step step move step step 3rd move step step exampl input target output explan 1st move step step move step step constraint target target ","566":"stack block form pyramid block color repres singl letter row block contain less block row beneath center top make pyramid aesthet pleas specif triangular pattern allow triangular pattern consist singl block stack top block pattern list threelett string allow first charact pattern repres left right bottom block respect third charact top block exampl abc repres triangular pattern block stack top left right block note differ bac left bottom right bottom start bottom row block bottom singl string must use base pyramid bottom allow return true build pyramid way top everi triangular pattern pyramid allow fals otherwis exampl input bottom bcd allow bcccdeceafff output true explan allow triangular pattern shown right start bottom level build ce level build level triangular pattern pyramid bcc cde cea allow exampl input bottom aaaa allow aabaacbcdbbedef output fals explan allow triangular pattern shown right start bottom level multipl way build level tri possibilit get alway stuck build level constraint bottomlength allowedlength allowedilength letter input string set e valu allow uniqu ","567":"2d integ array interv intervalsi starti endi repres integ starti endi inclus contain set array num interv interv least integ num exampl interv contain set return minimum possibl size contain set exampl input interv output explan let num shown contain array size exampl input interv output explan let num shown contain array size exampl input interv output explan let num shown contain array size constraint intervalslength intervalsilength starti endi ","568":"special binari string binari string follow properti number equal number everi prefix binari string least mani special binari string move consist choos consecut nonempti special substr swap string consecut last charact first string exactli index first charact second string return lexicograph largest result string possibl appli mention oper string exampl input output explan string occur swap lexicograph largest string possibl number swap exampl input output constraint slength si either special binari string ","569":"string want partit string mani part possibl letter appear part note partit done concaten part order result string return list integ repres size part exampl input ababcbacadefegdehijhklij output explan partit ababcbaca defegd hijhklij partit letter appear part partit like ababcbacadefegd hijhklij incorrect split less part exampl input eccbbbbdec output constraint slength consist lowercas english letter ","570":"integ binari grid grid valu initi except indic array mine ith element array mine defin minesi xi yi gridxiyi return order largest axisalign plu sign contain grid none return axisalign plu sign order center gridrc along arm length go left right made note could beyond arm plu sign relev area plu sign check exampl input mine output explan grid largest plu sign order shown exampl input mine output explan plu sign return constraint mineslength xi yi pair xi yi uniqu ","571":"coupl sit seat arrang row want hold hand peopl seat repres integ array row rowi id person sit ith seat coupl number order first coupl second coupl last coupl return minimum number swap everi coupl sit side side swap consist choos peopl stand switch seat exampl input row output explan need swap second row1 third row2 person exampl input row output explan coupl alreadi seat side side constraint rowlength even rowi element row uniqu ","572":"matrix return true matrix toeplitz otherwis return fals matrix toeplitz everi diagon topleft bottomright element exampl input matrix output true explan grid diagon diagon element answer true exampl input matrix output fals explan diagon differ element constraint matrixlength matrixilength matrixij matrix store disk memori limit load row matrix memori matrix larg load partial row memori ","573":"string rearrang charact adjac charact return possibl rearrang return possibl exampl input aab output aba exampl input aaab output constraint slength consist lowercas english letter ","574":"integ array arr split arr number chunk ie partit individu sort chunk concaten result equal sort array return largest number chunk make sort array exampl input arr output explan split chunk return requir result exampl split result isnt sort exampl input arr output explan split chunk howev split highest number chunk possibl constraint arrlength arri ","575":"integ array arr length repres permut integ rang split arr number chunk ie partit individu sort chunk concaten result equal sort array return largest number chunk make sort array exampl input arr output explan split chunk return requir result exampl split result isnt sort exampl input arr output explan split chunk howev split highest number chunk possibl constraint arrlength arri element arr uniqu ","576":"express express e evalu map e term evalvar e evalint return list token repres simplifi express 1a14 express altern chunk symbol space separ chunk symbol chunk either express parenthes variabl nonneg integ variabl string lowercas letter includ digit note variabl multipl letter note variabl never lead coeffici unari oper like 2x express evalu usual order bracket first multipl addit subtract exampl express answer format output follow term free variabl nonzero coeffici write free variabl within term sort order lexicograph exampl would never write term like bac abc term degre equal number free variabl multipli count multipl write largest degre term answer first break tie lexicograph order ignor lead coeffici term exampl aabc degre lead coeffici term place directli left asterisk separ variabl exist lead coeffici still print exampl wellformat answer 2aaa 3aab 3bb 5c term includ constant term coeffici includ exampl express output note may assum express alway valid intermedi result rang exampl input express e evalvar e evalint output 1a14 exampl input express e temperatur pressur evalvar e temperatur evalint output 1pressure5 exampl input express e e evalvar evalint output 1ee64 constraint expressionlength express consist lowercas english letter digit express contain lead trail space token express separ singl space evalvarslength evalvarsilength evalvarsi consist lowercas english letter evalintslength evalvarslength evalintsi ","577":"your string jewel repres type stone jewel stone repres stone charact stone type stone want know mani stone also jewel letter case sensit consid differ type stone exampl input jewel stone aaabbbb output exampl input jewel stone zz output constraint jewelslength stoneslength jewel stone english letter charact jewel uniqu ","578":"board tile label empti squar repres move consist choos 4direct adjac number swap state board solv board puzzl board board return least number move requir state board solv imposs state board solv return exampl input board output explan swap move exampl input board output explan number move make board solv exampl input board output explan smallest number move solv board exampl path move move move move move move constraint boardlength boardilength boardij valu boardij uniqu ","579":"integ array num length repres permut integ rang number global invers number differ pair numsi numsj number local invers number indic numsi numsi return true number global invers equal number local invers exampl input num output true explan global invers local invers exampl input num output fals explan global invers local invers constraint numslength numsi integ num uniqu num permut number rang ","580":"string compos charact like rxxlrxrxl move consist either replac occurr xl lx replac occurr start string start end string end return true exist sequenc move transform start end exampl input start rxxlrxrxl end xrlxxrrlx output true explan transform start end follow step rxxlrxrxl xrxlrxrxl xrlxrxrxl xrlxxrrxl xrlxxrrlx exampl input start end output fals constraint startlength startlength endlength start end charact ","581":"integ matrix grid valu gridij repres elev point rain start fall time depth water everywher swim squar anoth 4direct adjac squar elev squar individu swim infinit distanc time cours must stay within boundari grid swim return least time reach bottom right squar start top left squar exampl input grid output explan time grid locat go anywher els 4direct adjac neighbor higher elev reach point time depth water swim anywher insid grid exampl input grid output explan final rout shown need wait time connect constraint gridlength gridilength gridij valu gridij uniqu ","582":"build tabl row 1index start write 1st row everi subsequ row look previou row replac occurr occurr exampl 1st row row 3rd row integ return kth 1index symbol nth row tabl row exampl input output explan row exampl input output explan row row exampl input output explan row row constraint ","583":"integ sy ty return true possibl convert point sy point ty oper fals otherwis allow oper point convert either exampl input sy ty output true explan seri move transform start point target exampl input sy ty output fals exampl input sy ty output true constraint sy ty ","584":"forest unknown number rabbit ask rabbit mani rabbit color collect answer integ array answer answersi answer ith rabbit array answer return minimum number rabbit could forest exampl input answer output explan rabbit answer could color say red rabbit answer cant red answer would inconsist say rabbit answer blue blue rabbit forest didnt answer array smallest possibl number rabbit forest therefor answer plu didnt exampl input answer output constraint answerslength answersi ","585":"binari grid board move swap row column return minimum number move transform board chessboard board task imposs return chessboard board board 4direct adjac exampl input board output explan potenti sequenc move shown first move swap first second column second move swap second third row exampl input board output explan also note board top left corner also valid chessboard exampl input board output explan matter sequenc move make end valid chessboard constraint boardlength boardilength boardij either ","586":"root binari search tree return minimum differ valu differ node tree exampl input root output exampl input root 1048nullnull1249 output constraint number node tree rang nodev note question httpsleetcodecomproblemsminimumabsolutedifferenceinbst ","587":"string transform everi letter individu lowercas uppercas creat anoth string return list possibl string could creat return output order exampl input a1b2 output a1b2a1b2a1b2a1b2 exampl input 3z4 output 3z43z4 constraint slength consist lowercas english letter uppercas english letter digit ","588":"undirect graph node node number 2d array graph graphu array node node u adjac formal graphu undirect edg node u node graph follow properti selfedg graphu contain u parallel edg graphu contain duplic valu graphu u graphv graph undirect graph may connect mean may node u path graph bipartit node partit independ set everi edg graph connect node set node set return true bipartit exampl input graph output fals explan way partit node independ set everi edg connect node node exampl input graph output true explan partit node set constraint graphlength graphulength graphui graphu contain u valu graphu uniqu graphu contain graphv contain u ","589":"sort integ array arr contain prime number integ arr uniqu also integ everi arrlength consid fraction arri arrj return kth smallest fraction consid return answer array integ size answer0 arri answer1 arrj exampl input arr output explan fraction consid sort order third fraction exampl input arr output constraint arrlength arri arr0 arri prime number number arr uniqu sort strictli increas order arrlength arrlength solv problem better complex ","590":"citi connect number flight array flight flightsi toi pricei indic flight citi citi toi cost pricei also integ src dst return cheapest price src dst stop rout return exampl input flight src dst output explan graph shown optim path stop citi mark red cost note path citi cheaper invalid use stop exampl input flight src dst output explan graph shown optim path stop citi mark red cost exampl input flight src dst output explan graph shown optim path stop citi mark red cost constraint flightslength flightsilength toi toi pricei multipl flight citi src dst src dst ","591":"integ good rotat digit individu degre get valid number differ digit must rotat choos leav alon number valid digit remain digit rotat exampl rotat rotat case rotat differ direct word get mirror rotat rest number rotat number becom invalid integ return number good integ rang exampl input output explan good number rang note good number sinc remain unchang rotat exampl input output exampl input output constraint ","592":"play simplifi pacman game infinit 2d grid start point destin point target xtarget ytarget tri get sever ghost map start posit 2d array ghost ghostsi xi yi repres start posit ith ghost input integr coordin turn ghost may independ choos either move unit cardin direct north east south west stay still action happen simultan escap reach target ghost reach reach squar includ target time ghost count escap return true possibl escap regardless ghost move otherwis return fals exampl input ghost target output true explan reach destin turn ghost locat catch exampl input ghost target output fals explan need reach destin ghost lie destin exampl input ghost target output fals explan ghost reach target time constraint ghostslength ghostsilength xi yi multipl ghost locat targetlength xtarget ytarget ","593":"type tile domino shape tromino shape may rotat shape integ return number way tile board sinc answer may larg return modulo tile everi squar must cover tile tile differ 4direct adjac cell board exactli tile squar occupi tile exampl input output explan differ way show exampl input output constraint ","594":"string order charact order uniqu sort custom order previous permut charact match order order sort specif charact occur charact order occur permut string return permut satisfi properti exampl input order cba abcd output cbad explan appear order order sinc appear order posit return string dcba cdba cbda also valid output exampl input order bcafg abcd output bcad explan charact order dictat order charact charact appear order posit flexibl follow order appear order arrang place posit sinc order output bcad correctli follow rule arrang like dbca bcda would also valid long maintain order constraint orderlength slength order lowercas english letter charact order uniqu ","595":"string array string word return number wordsi subsequ subsequ string new string gener origin string charact none delet without chang rel order remain charact exampl ace subsequ abcd exampl input abcd word abbacdac output explan string word subsequ ace exampl input dsahjpjauf word ahjpjaujaahbwzgqnuktnmlanowax output constraint slength wordslength wordsilength wordsi lowercas english letter ","596":"let fx number zero end recal convent exampl f3 zero end zero end integ return number nonneg integ properti fx exampl input output explan end zero exampl input output explan end zero exampl input output constraint ","597":"tictacto board string array board return true possibl reach board posit cours valid tictacto game board array consist charact charact repres empti squar rule tictacto player take turn place charact empti squar first player alway place charact second player alway place charact charact alway place empti squar never fill one game end nonempti charact fill row column diagon game also end squar nonempti move play game exampl input board output fals explan first player alway play exampl input board xox output fals explan player take turn make move exampl input board xoxo oxox output true constraint boardlength boardilength boardij either ","598":"integ array num integ left right return number contigu nonempti subarray valu maximum array element subarray rang left right test case gener answer fit 32bit integ exampl input num left right output explan subarray meet requir exampl input num left right output constraint numslength numsi left right ","599":"string goal return true becom goal number shift shift consist move leftmost charact rightmost posit exampl abcd bcdea shift exampl input abcd goal cdeab output true exampl input abcd goal abc output fals constraint slength goallength goal lowercas english letter ","600":"direct acycl graph dag node label find possibl path node node return order graph follow graphi list node visit node ie direct edg node node graphij exampl input graph output explan path exampl input graph output constraint graphlength graphij graphij ie selfloop element graphi uniqu input graph guarante dag ","601":"array num rotat nonneg integ array becom numsk numsk numsnumslength nums0 nums1 numsk1 afterward entri less equal index worth point exampl num rotat becom worth point point point point point point return rotat index correspond highest score achiev rotat num multipl answer return smallest index exampl input num output explan score list num score num score num score num score num score choos highest score exampl input num output explan num alway point matter shift choos smallest constraint numslength numsi numslength ","602":"stack glass pyramid first row glass second row glass 100th row glass hold cup champagn champagn pour first glass top topmost glass full excess liquid pour fall equal glass immedi left right glass becom full excess champagn fall equal left right glass glass bottom row excess champagn fall floor exampl cup champagn pour top glass full cup champagn pour glass second row half full cup champagn pour cup becom full full glass total cup champagn pour third row middl glass half full outsid glass quarter full pictur pour nonneg integ cup champagn return full jth glass ith row 0index exampl input pour queryrow queryglass output explan pour cup champang top glass tower index excess liquid glass top glass remain empti exampl input pour queryrow queryglass output explan pour cup champang top glass tower index cup excess liquid glass index glass index share excess liquid equal get half cup champang exampl input pour queryrow queryglass output constraint pour queryglass queryrow ","603":"integ array length nums1 nums2 oper allow swap nums1i nums2i exampl nums1 nums2 swap element obtain nums1 nums2 return minimum number need oper make nums1 nums2 strictli increas test case gener input alway make possibl array arr strictli increas arr0 arr1 arr2 arrarrlength exampl input nums1 nums2 output explan swap nums13 nums23 sequenc nums1 nums2 strictli increas exampl input nums1 nums2 output constraint nums1length nums2length nums1length nums1i nums2i ","604":"direct graph node node label graph repres 0index 2d integ array graph graphi integ array node adjac node mean edg node node graphi node termin node outgo edg node safe node everi possibl path start node lead termin node anoth safe node return array contain safe node graph answer sort ascend order exampl input graph output explan graph shown node termin node outgo edg either everi path start node lead either node exampl input graph output explan node termin node everi path start node lead node constraint graphlength graphilength graphij graphi sort strictli increas order graph may contain selfloop number edg graph rang ","605":"binari grid repres brick repres empti space brick stabl directli connect top grid least brick adjac cell stabl also array hit sequenc erasur want appli time want eras brick locat hitsi rowi coli brick locat exist disappear brick may longer stabl erasur fall brick fall immedi eras grid ie land stabl brick return array result resulti number brick fall ith erasur appli note erasur may refer locat brick brick drop exampl input grid hit output explan start grid eras underlin brick result grid underlin brick longer stabl longer connect top adjac anoth stabl brick fall result grid henc result exampl input grid hit output explan start grid eras underlin brick result grid remain brick still stabl brick fall grid remain next eras underlin brick result grid remain brick still stabl brick fall henc result constraint gridlength gridilength gridij hitslength hitsilength xi yi xi yi uniqu ","606":"intern mors code defin standard encod letter map seri dot dash follow map map map conveni full tabl letter english alphabet array string word word written concaten mors code letter exampl cab written concaten call concaten transform word return number differ transform among word exampl input word ginzengigmsg output explan transform word gin zen gig msg differ transform exampl input word output constraint wordslength wordsilength wordsi consist lowercas english letter ","607":"string lowercas english letter array width denot mani pixel wide lowercas english letter specif widths0 width widths1 width tri write across sever line line longer pixel start begin write mani letter first line total width exceed pixel stop continu write mani letter second line continu process written return array result length result0 total number line result1 width last line pixel exampl input width abcdefghijklmnopqrstuvwxyz output explan write follow abcdefghij pixel wide klmnopqrst pixel wide uvwxyz pixel wide total line last line pixel wide exampl input width bbbcccdddaaa output explan write follow bbbcccdddaa pixel wide pixel wide total line last line pixel wide constraint widthslength widthsi slength contain lowercas english letter ","608":"citi compos block block contain singl build shape like vertic squar prism 0index integ matrix grid gridrc repres height build locat block row column citi skylin outer contour form build view side citi distanc skylin cardin direct north east south west may differ allow increas height number build amount amount differ per build height 0height build also increas howev increas height build affect citi skylin cardin direct return maximum total sum height build increas without chang citi skylin cardin direct exampl input grid output explan build height shown center imag skylin view cardin direct drawn red grid increas height build without affect skylin gridnew exampl input grid output explan increas height build result skylin chang constraint gridlength gridrlength gridrc ","609":"type soup type type initi type soup kind oper serv soup soup serv soup soup serv soup soup serv soup soup serv soup give someon longer turn choos oper equal probabl remain volum soup enough complet oper serv much possibl stop longer quantiti type soup note oper ml soup use first return probabl soup empti first plu half probabl becom empti time answer within actual answer accept exampl input output explan choos first oper becom empti first third oper becom empti time fourth oper becom empti first total probabl becom empti first plu half probabl becom empti time exampl input output constraint ","610":"sometim peopl repeat letter repres extra feel exampl hello heeellooo hi hiiii string like heeellooo group adjac letter eee ooo string array queri string word queri word stretchi made equal number applic follow extens oper choos group consist charact add number charact group size group exampl start hello could extens group get hellooo get helloo sinc group oo size less also could anoth extens like lllll get helllllooo helllllooo queri word hello would stretchi extens oper queri hello hellooo helllllooo return number queri string stretchi exampl input heeellooo word hello hi helo output explan extend e word hello get heeellooo cant extend helo get heeellooo group size exampl input zzzzzyyyyi word zzyyzyzyy output constraint slength wordslength wordsilength wordsi lowercas letter ","611":"array integ num repres number written chalkboard alic bob take turn eras exactli number chalkboard alic start first eras number caus bitwis element chalkboard becom player lose bitwis element element bitwis element also player start turn bitwis element chalkboard equal player win return true alic win game assum player play optim exampl input num output fals explan alic choic eras eras eras num array becom bitwis element chalkboard bob remov element want alic eras last element lose alic eras first num becom bitwis element chalkboard alic lose exampl input num output true exampl input num output true constraint numslength numsi ","612":"websit domain discussleetcodecom consist variou subdomain top level com next level leetcodecom lowest level discussleetcodecom visit domain like discussleetcodecom also visit parent domain leetcodecom com implicitli countpair domain domain format rep d1d2d3 rep rep number visit domain d1d2d3 domain exampl discussleetcodecom countpair domain indic discussleetcodecom visit time array countpair domain cpdomain return array countpair domain subdomain input may return answer order exampl input cpdomain discussleetcodecom output leetcodecom9001 discussleetcodecom9001 com explan websit domain discussleetcodecom discuss subdomain leetcodecom com also visit visit time exampl input cpdomain googlemailcom yahoocom intelmailcom wikiorg output mailcom50 yahoocom900 googlemailcom5 wikiorg5 org1 intelmailcom951 com explan visit googlemailcom time yahoocom time intelmailcom wikiorg time subdomain visit mailcom time com time org time constraint cpdomainlength cpdomainilength cpdomaini follow either repi d1id2id3i format repi d1id2i format repi integ rang d1i d2i d3i lowercas english letter ","613":"array point xy plane point pointsi xi yi return area largest triangl form differ point answer within actual answer accept exampl input point output explan point shown figur red triangl largest exampl input point output constraint pointslength xi yi point uniqu ","614":"integ array num integ partit array nonempti adjac subarray score partit sum averag subarray note partit must use everi integ num score necessarili integ return maximum score achiev possibl partit answer within actual answer accept exampl input num output explan best choic partit num answer could also partit num exampl partit would lead score wors exampl input num output constraint numslength numsi numslength ","615":"root binari tree return tree everi subtre tree contain remov subtre node node node plu everi node descend node exampl input root 1null001 output 1null0null1 explan red node satisfi properti everi subtre contain diagram right repres answer exampl input root output 1null1null1 exampl input root output 11011null1 constraint number node tree rang nodev either ","616":"array rout repres bu rout routesi bu rout ith bu repeat forev exampl routes0 mean 0th bu travel sequenc forev start bu stop sourc bu initi want go bu stop target travel bu stop buse return least number buse must take travel sourc target return possibl exampl input rout sourc target output explan best strategi take first bu bu stop take second bu bu stop exampl input rout sourc target output constraint routeslength routesilength valu routesi uniqu sumroutesilength routesij sourc target ","617":"2dimension coordin like remov comma decim point space end string exampl becom becom return list string repres possibl origin coordin could origin represent never extran zero never start number like number repres fewer digit also decim point within number never occur without least digit occur never start number like final answer list return order coordin final answer exactli space occur comma exampl input output exampl input output explan allow exampl input output constraint slength sslength rest digit ","618":"head link list contain uniqu integ valu integ array num subset link list valu return number connect compon num valu connect appear consecut link list exampl input head num output explan connect connect compon exampl input head num output explan connect connect connect compon constraint number node link list nodev valu nodev uniqu numslength numsi valu num uniqu ","619":"car start posit speed infinit number line car go neg posit car drive automat accord sequenc instruct acceler revers get instruct car follow posit speed speed get instruct car follow speed posit speed otherwis speed posit stay exampl command aar car goe posit speed goe target posit target return length shortest sequenc instruct get exampl input target output explan shortest instruct sequenc posit goe exampl input target output explan shortest instruct sequenc aaara posit goe constraint target ","620":"string paragraph string array ban word ban return frequent word ban guarante least word ban answer uniqu word paragraph caseinsensit answer return lowercas exampl input paragraph bob hit ball hit ball flew far hit ban hit output ball explan hit occur time ban word ball occur twice word frequent nonban word paragraph note word paragraph case sensit punctuat ignor even adjac word ball hit isnt answer even though occur ban exampl input paragraph ban output constraint paragraphlength paragraph consist english letter space symbol bannedlength bannedilength bannedi consist lowercas english letter ","621":"valid encod array word refer string array indic indic wordslength indiceslength refer string end charact index indicesi substr start indicesi includ next charact equal wordsi array word return length shortest refer string possibl valid encod word exampl input word time bell output explan valid encod would timebel indic words0 time substr start indices0 next underlin timebel words1 substr start indices1 next underlin timebel words2 bell substr start indices2 next underlin timebel exampl input word output explan valid encod would indic constraint wordslength wordsilength wordsi consist lowercas letter ","622":"string charact occur return array integ answer answerlength slength answeri distanc index closest occurr charact distanc indic absi ab absolut valu function exampl input loveleetcod e output explan charact e appear indic 0index closest occurr e index index distanc abs0 closest occurr e index index distanc abs1 index tie e index e index distanc still abs4 abs4 closest occurr e index index distanc abs8 exampl input aaab output constraint slength si lowercas english letter guarante occur least ","623":"0index integ array front back length ith card posit integ frontsi print front backsi print back initi card place tabl front number face face may flip number card possibl flip card integ consid good face card face card return minimum possibl good integ flip card good integ return exampl input front back output explan flip second card face number face minimum good integ appear face face shown minimum possibl good integ obtain flip card exampl input front back output explan good integ matter flip card return constraint frontslength backslength frontsi backsi ","624":"array uniqu integ arr integ arri strictli greater make binari tree use integ number may use number time nonleaf node valu equal product valu children return number binari tree make answer may larg return answer modulo exampl input arr output explan make tree exampl input arr output explan make tree constraint arrlength arri valu arr uniqu ","625":"string sentenc word separ space word consist lowercas uppercas letter would like convert sentenc goat latin madeup languag similar pig latin rule goat latin follow word begin vowel e u append end word exampl word appl becom applema word begin conson ie vowel remov first letter append end add exampl word goat becom oatgma add letter end word per word index sentenc start exampl first word get ad end second word get ad end return final sentenc repres convers sentenc goat latin exampl input sentenc speak goat latin output imaa peaksmaaa oatgmaaaa atinlmaaaaa exampl input sentenc quick brown fox jump lazi dog output hetmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa constraint sentencelength sentenc consist english letter space sentenc lead trail space word sentenc separ singl space ","626":"person social media websit integ array age agesi age ith person person send friend request person follow condit true agey agex agey agex agey agex otherwis send friend request note send request necessarili send request also person send friend request themself return total number friend request made exampl input age output explan peopl friend request exampl input age output explan friend request made exampl input age output explan friend request made constraint ageslength agesi ","627":"binari matrix grid allow chang return size largest island grid appli oper island 4direct connect group exampl input grid output explan chang connect get island area exampl input grid output explan chang make island bigger island area exampl input grid output explan cant chang island area constraint gridlength gridilength gridij either ","628":"let defin function countuniquecharss return number uniqu charact exampl call countuniquecharss leetcod uniqu charact sinc appear therefor countuniquecharss string return sum countuniquecharst substr test case gener answer fit 32bit integ notic substr repeat case count repeat one exampl input abc output explan possibl substr abcabbc abc everi substr compos uniqu letter sum length substr exampl input aba output explan exampl except countuniquecharsaba exampl input leetcod output constraint slength consist uppercas english letter ","629":"integ return number way write sum consecut posit integ exampl input output explan exampl input output explan exampl input output explan constraint ","630":"string lowercas letter letter form consecut group charact exampl string like abbxxxxzyy group xxxx group identifi interv start end start end denot start end indic inclus group exampl xxxx interv group consid larg charact return interv everi larg group sort increas order start index exampl input abbxxxxzzi output explan xxxx larg group start index end index exampl input abc output explan group none larg group exampl input abcdddeeeeaabbbcd output explan larg group eeee bbb constraint slength contain lowercas english letter ","631":"person inform string repres either email address phone number return mask person inform use rule email address email address name consist uppercas lowercas english letter follow symbol follow domain consist uppercas lowercas english letter dot somewher middl first last charact mask email uppercas letter name domain must convert lowercas letter middl letter name ie first last letter must replac asterisk phone number phone number format follow phone number contain digit last digit make local number remain digit begin make countri code separ charact set separ digit way mask phone number remov separ charact mask phone number form xxxx countri code digit xxxx countri code digit xxxx countri code digit xxxx countri code digit xxxx last digit local number exampl input leetcodeleetcodecom output leleetcodecom explan email address name domain convert lowercas middl name replac asterisk exampl input abqqcom output abqqcom explan email address name domain convert lowercas middl name replac asterisk note even though ab charact still must asterisk middl exampl input output explan phone number digit local number digit countri code digit thu result mask number constraint either valid email phone number email slength consist uppercas lowercas english letter exactli symbol symbol phone number slength consist digit space symbol ","632":"binari matrix imag flip imag horizont invert return result imag flip imag horizont mean row imag revers exampl flip horizont result invert imag mean replac replac exampl invert result exampl input imag output explan first revers row invert imag exampl input imag output explan first revers row invert imag constraint imagelength imageilength imagesij either ","633":"0index string must perform replac oper replac oper 0index parallel array indic sourc target length complet ith replac oper check substr sourcesi occur index indicesi origin string occur noth otherwis occur replac substr targetsi exampl abcd indicesi sourcesi ab targetsi eee result replac eeecd replac oper must occur simultan mean replac oper affect index testcas gener replac overlap exampl testcas abc indic sourc abbc gener ab replac overlap return result string perform replac oper substr contigu sequenc charact string exampl input abcd indic sourc cd target eee ffff output eeebffff explan occur index replac eee cd occur index replac ffff exampl input abcd indic sourc abec target eeeffff output eeecd explan ab occur index replac eee ec occur index noth constraint slength indiceslength sourceslength targetslength indexesi slength sourcesilength targetsilength consist lowercas english letter sourcesi targetsi lowercas english letter ","634":"undirect connect tree node label edg integ array edg edgesi ai bi indic edg node ai bi tree return array answer length answeri sum distanc ith node tree node exampl input edg output explan tree shown see dist01 dist02 dist03 dist04 dist05 equal henc answer0 exampl input edg output exampl input edg output constraint edgeslength edgesilength ai bi ai bi input repres valid tree ","635":"imag img1 img2 repres binari squar matric size binari matrix valu translat imag howev choos slide bit left right andor number unit place top imag calcul overlap count number posit imag note also translat includ kind rotat bit translat outsid matrix border eras return largest possibl overlap exampl input img1 img2 output explan translat img1 right unit unit number posit imag shown red exampl input img1 img2 output exampl input img1 img2 output constraint img1length img1ilength img2length img2ilength img1ij either img2ij either ","636":"axisalign rectangl repres list x1 y1 x2 y2 x1 y1 coordin bottomleft corner x2 y2 coordin topright corner top bottom edg parallel xaxi left right edg parallel yaxi rectangl overlap area intersect posit clear rectangl touch corner edg overlap axisalign rectangl rec1 rec2 return true overlap otherwis return fals exampl input rec1 rec2 output true exampl input rec1 rec2 output fals exampl input rec1 rec2 output fals constraint rec1length rec2length rec1i rec2i rec1 rec2 repres valid rectangl nonzero area ","637":"alic play follow game loos base card game alic start point draw number less point draw gain integ number point randomli rang maxpt maxpt integ draw independ outcom equal probabl alic stop draw number get point return probabl alic fewer point answer within actual answer consid accept exampl input maxpt output explan alic get singl card stop exampl input maxpt output explan alic get singl card stop possibl point exampl input maxpt output constraint maxpt ","638":"domino line place domino vertic upright begin simultan push domino either left right second domino fall left push adjac domino left similarli domino fall right push adjac domino stand right vertic domino domino fall side stay still due balanc forc purpos question consid fall domino expend addit forc fall alreadi fallen domino string domino repres initi state dominoesi ith domino push left dominoesi ith domino push right dominoesi ith domino push return string repres final state exampl input domino rrl output rrl explan first domino expend addit forc second domino exampl input domino lrlrl output llrrllrrll constraint dominoeslength dominoesi either ","639":"magic squar grid fill distinct number row column diagon sum row col grid integ mani magic squar subgrid note magic squar contain number grid may contain number exampl input grid output explan follow subgrid magic squar total magic squar insid grid exampl input grid output constraint row gridlength col gridilength row col gridij ","640":"string digit num split fibonaccilik sequenc formal fibonaccilik sequenc list nonneg integ fi integ fit 32bit sign integ type flength fi fi fi flength note split string piec piec must extra lead zero except piec number return fibonaccilik sequenc split num return done exampl input num output explan output would also accept exampl input num output explan task imposs exampl input num output explan lead zero allow valid constraint numlength num contain digit ","641":"array uniqu string word wordsi letter long word word chosen secret word also helper object master may call masterguessword word sixletterlong string must word masterguessword return word word integ repres number exact match valu posit guess secret word paramet allowedguess test case allowedguess maximum number time call masterguessword test case call masterguess secret word without exceed maximum number allow guess get either took mani guess find secret word call masterguess allowedguess time call masterguess secret word guess secret word correctli call masterguess secret word number call masterguess less equal allowedguess test case gener guess secret word reason strategi use bruteforc method exampl input secret acckzz word acckzzccbazzeiowzzabcczz allowedguess output guess secret word correctli explan masterguessaaaaaa return aaaaaa wordlist masterguessacckzz return acckzz secret match masterguessccbazz return ccbazz match masterguesseiowzz return eiowzz match masterguessabcczz return abcczz match made call masterguess secret pass test case exampl input secret hamada word hamadakh allowedguess output guess secret word correctli explan sinc word guess constraint wordslength wordsilength wordsi lowercas english letter string wordlist uniqu secret exist word allowedguess ","642":"string return true equal type empti text editor mean backspac charact note backspac empti text text continu empti exampl input abc adc output true explan becom ac exampl input ab cd output true explan becom exampl input ac output fals explan becom becom constraint slength tlength contain lowercas letter charact solv time space ","643":"may recal array arr mountain array arrlength exist index 0index arrlength arr0 arr1 arri arri arri arri arrarrlength integ array arr return length longest subarray mountain return mountain subarray exampl input arr output explan largest mountain length exampl input arr output explan mountain constraint arrlength arri solv use pass solv space ","644":"alic number card want rearrang card group group size groupsiz consist groupsiz consecut card integ array hand handi valu written ith card integ groupsiz return true rearrang card fals otherwis exampl input hand groupsiz output true explan alic hand rearrang exampl input hand groupsiz output fals explan alic hand rearrang group constraint handlength handi groupsiz handlength note question httpsleetcodecomproblemsdividearrayinsetsofkconsecutivenumb ","645":"undirect connect graph node label array graph graphi list node connect node edg return length shortest path visit everi node may start stop node may revisit node multipl time may reus edg exampl input graph output explan possibl path exampl input graph output explan possibl path constraint graphlength graphilength graphi contain grapha contain graphb contain input graph alway connect ","646":"string lowercas english letter integ array shift length call shift letter next letter alphabet wrap around becom exampl shifta shiftt u shiftz shiftsi want shift first letter time return final string shift appli exampl input abc shift output rpl explan start abc shift first letter dbc shift first letter igc shift first letter rpl answer exampl input aaa shift output gfd constraint slength consist lowercas english letter shiftslength slength shiftsi ","647":"array repres row seat seatsi repres person sit ith seat seatsi repres ith seat empti 0index least empti seat least person sit alex want sit seat distanc closest person maxim return maximum distanc closest person exampl input seat output explan alex sit second open seat ie seats2 closest person distanc alex sit open seat closest person distanc thu maximum distanc closest person exampl input seat output explan alex sit last seat ie seats3 closest person seat away maximum distanc possibl answer exampl input seat output constraint seatslength seatsi least seat empti least seat occupi ","648":"2d array axisalign rectangl rectanglei xi1 yi1 xi2 yi2 denot ith rectangl xi1 yi1 coordin bottomleft corner xi2 yi2 coordin topright corner calcul total area cover rectangl plane area cover rectangl count return total area sinc answer may larg return modulo exampl input rectangl output explan total area cover rectangl illustr pictur green red rectangl overlap rectangl overlap exampl input rectangl output explan answer modulo constraint rectangleslength rectangesilength xi1 yi1 xi2 yi2 xi1 xi2 yi1 yi2 ","649":"group peopl label person differ amount money differ level quiet array richer richeri ai bi indic ai money bi integ array quiet quieti quiet ith person data richer logic correct ie data lead situat richer richer time return integ array answer answerx least quiet person person smallest valu quieti among peopl definit equal money person exampl input richer quiet output explan answer0 person money money money person quieter lower quietx person clear money person answer7 among peopl definit equal money person could person person quietest lower quietx person answer fill similar reason exampl input richer quiet output constraint quietlength quieti valu quiet uniqu richerlength ai bi ai bi pair richer uniqu observ richer logic consist ","650":"integ mountain array arr length valu increas peak element decreas return index peak element task solv ologn time complex exampl input arr output exampl input arr output exampl input arr output constraint arrlength arri arr guarante mountain array ","651":"car mile away start mile travel reach mile target integ array posit speed length positioni start mile ith car speedi speed ith car mile per hour car pass anoth car catch travel next speed slower car car fleet car car drive next speed car fleet minimum speed car fleet car catch car fleet mile target still consid part car fleet return number car fleet arriv destin exampl input target posit speed output explan car start speed speed becom fleet meet fleet form target car start speed catch car fleet car start speed speed becom fleet meet fleet move speed reach target exampl input target posit speed output explan car henc fleet exampl input target posit speed output explan car start speed speed becom fleet meet car start speed travel fleet speed car posit speed becom fleet meet fleet move speed reach target constraint positionlength speedlength target positioni target valu posit uniqu speedi ","652":"string ksimilar nonneg integ swap posit letter exactli time result string equal anagram return smallest ksimilar exampl input ab ba output explan string 1similar use swap chang ab ba exampl input abc bca output explan string 2similar use swap chang abc bac bca constraint s1length s2length s1length contain lowercas letter set e anagram ","653":"exam room seat singl row label student enter room must sit seat maxim distanc closest person multipl seat sit seat lowest number room student sit seat number design class simul mention exam room implement examroom class examroomint initi object exam room number seat int seat return label seat next student set void leaveint indic student sit seat leav room guarante student sit seat exampl input examroom seat seat seat seat leav seat output null null explan examroom examroom new examroom10 examroomseat return room student sit seat number examroomseat return student sit last seat number examroomseat return student sit last seat number examroomseat return student sit last seat number examroomleave4 examroomseat return student sit last seat number constraint guarante student sit seat call made seat leav ","654":"balanc parenthes string return score string score balanc parenthes string base follow rule score ab score balanc parenthes string score balanc parenthes string exampl input output exampl input output exampl input output constraint slength consist balanc parenthes string ","655":"worker integ array qualiti wage qualityi qualiti ith worker wagei minimum wage expect ith worker want hire exactli worker form paid group hire group worker must pay accord follow rule everi worker paid group must paid least minimum wage expect group worker pay must directli proport qualiti mean worker qualiti doubl anoth worker group must paid twice much worker integ return least amount money need form paid group satisfi condit answer within actual answer accept exampl input qualiti wage output explan pay 0th worker worker exampl input qualiti wage output explan pay 0th worker 3rd worker separ constraint qualitylength wagelength qualityi wagei ","656":"special squar room mirror wall except southwest corner receptor remain corner number squar room wall length laser ray southwest corner first meet east wall distanc 0th receptor integ return number receptor ray meet first test case guarante ray meet receptor eventu exampl input output explan ray meet receptor first time get reflect back left wall exampl input output constraint ","657":"string goal return true swap letter result equal goal otherwis return fals swap letter defin take indic 0index swap charact si exampl swap indic abcd result cbad exampl input ab goal ba output true explan swap get ba equal goal exampl input ab goal ab output fals explan letter swap result ba goal exampl input goal output true explan swap get equal goal constraint slength goallength goal lowercas letter ","658":"lemonad stand lemonad cost custom stand queue buy order time order specifi bill custom buy lemonad pay either bill must provid correct chang custom net transact custom pay note chang hand first integ array bill billsi bill ith custom pay return true provid everi custom correct chang fals otherwis exampl input bill output true explan first custom collect bill order fourth custom collect bill give back fifth custom give bill bill sinc custom got correct chang output true exampl input bill output fals explan first custom order collect bill next custom order collect bill give back bill last custom give chang back bill sinc everi custom receiv correct chang answer fals constraint billslength billsi either ","659":"binari matrix grid move consist choos row column toggl valu row column ie chang everi row matrix interpret binari number score matrix sum number return highest possibl score make number move includ move exampl input grid output explan 0b1111 0b1001 0b1111 exampl input grid output constraint gridlength gridilength gridij either ","660":"integ array num integ return length shortest nonempti subarray num sum least subarray return subarray contigu part array exampl input num output exampl input num output exampl input num output constraint numslength numsi ","661":"root binari tree valu target node target integ return array valu node distanc target node return answer order exampl input root 3516208nullnull74 target output explan node distanc target node valu valu exampl input root target output constraint number node tree rang nodev valu nodev uniqu target valu node tree ","662":"grid grid empti cell wall start point lowercas letter repres key uppercas letter repres lock start start point move consist walk space cardin direct walk outsid grid walk wall walk key pick walk lock unless correspond key exactli lowercas uppercas letter first letter english alphabet grid mean exactli key lock lock key also letter use repres key lock chosen order english alphabet return lowest number move acquir key imposs return exampl input grid abab output explan note goal obtain key open lock exampl input grid aabb output exampl input grid output constraint gridlength gridilength gridij either english letter exactli grid number key grid rang key grid uniqu key grid match lock ","663":"root binari tree depth node shortest distanc root return smallest subtre contain deepest node origin tree node call deepest largest depth possibl among node entir tree subtre node tree consist node plu set descend node exampl input root 3516208nullnull74 output explan return node valu color yellow diagram node colour blue deepest node tree notic node contain deepest node tree node smallest subtre among return exampl input root output explan root deepest node tree exampl input root 013null2 output explan deepest node tree valid subtre subtre node subtre node smallest constraint number node tree rang nodev valu node tree uniqu note question httpsleetcodecomproblemslowestcommonancestorofdeepestleav ","664":"integ return smallest prime palindrom greater equal integ prime exactli divisor note prime number exampl prime integ palindrom read left right right left exampl palindrom test case gener answer alway exist rang exampl input output exampl input output exampl input output constraint ","665":"2d integ array matrix return transpos matrix transpos matrix matrix flip main diagon switch matrix row column indic exampl input matrix output exampl input matrix output constraint matrixlength matrixilength matrixij ","666":"integ reorder digit order includ origin order lead digit return true result number power exampl input output true exampl input output fals constraint ","667":"integ array nums1 nums2 length advantag nums1 respect nums2 number indic nums1i nums2i return permut nums1 maxim advantag respect nums2 exampl input nums1 nums2 output exampl input nums1 nums2 output constraint nums1length nums2length nums1length nums1i nums2i ","668":"consid leav binari tree left right order valu leav form leaf valu sequenc exampl tree leaf valu sequenc binari tree consid leafsimilar leaf valu sequenc return true tree head node root1 root2 leafsimilar exampl input root1 3516298nullnull74 root2 3516742nullnullnullnullnullnull98 output true exampl input root1 root2 output fals constraint number node tree rang tree valu rang ","669":"sequenc x1 x2 fibonaccilik xi xi1 xi2 strictli increas array arr posit integ form sequenc return length longest fibonaccilik subsequ arr exist return subsequ deriv anoth sequenc arr delet number element includ none arr without chang order remain element exampl subsequ exampl input arr output explan longest subsequ fibonaccilik exampl input arr output explan longest subsequ fibonaccilik constraint arrlength arri arri ","670":"robot infinit xyplan start point face north robot receiv array integ command repres sequenc move need execut possibl type instruct robot receiv turn left degre turn right degre move forward unit unit time grid squar obstacl ith obstacl grid point obstaclesi xi yi robot run obstacl stay current locat block adjac obstacl move onto next command return maximum squar euclidean distanc robot reach point path ie distanc return note obstacl happen robot ignor obstacl move origin howev unabl return due obstacl north mean direct east mean direct south mean direct west mean direct exampl input command obstacl output explan robot start move north unit turn right move east unit furthest point robot ever get origin squar unit away exampl input command obstacl output explan robot start move north unit turn right move east unit get block obstacl robot turn left move north unit furthest point robot ever get origin squar unit away exampl input command obstacl output explan robot start move north unit turn right turn right move south unit get block obstacl robot furthest point robot ever get origin squar unit away constraint commandslength commandsi either integ rang obstacleslength xi yi answer guarante less ","671":"koko love eat banana pile banana ith pile pilesi banana guard gone come back hour koko decid bananasperhour eat speed hour choos pile banana eat banana pile pile less banana eat instead eat banana hour koko like eat slowli still want finish eat banana guard return return minimum integ eat banana within hour exampl input pile output exampl input pile output exampl input pile output constraint pileslength pileslength pilesi ","672":"head singli link list return middl node link list middl node return second middl node exampl input head output explan middl node list node exampl input head output explan sinc list middl node valu return second constraint number node list rang nodev ","673":"alic bob play game pile stone even number pile arrang row pile posit integ number stone pilesi object game end stone total number stone across pile odd tie alic bob take turn alic start first turn player take entir pile stone either begin end row continu pile left point person stone win assum alic bob play optim return true alic win game fals bob win exampl input pile output true explan alic start first take first last say take first row becom bob take board alic take win point bob take last board alic take win point demonstr take first win move alic return true exampl input pile output true constraint pileslength pileslength even pilesi sumpilesi odd ","674":"posit integ magic divis either integ return nth magic number sinc answer may larg return modulo exampl input output exampl input output constraint ","675":"group member list variou crime could commit ith crime gener profiti requir groupi member particip member particip crime member cant particip anoth crime let call profit scheme subset crime gener least minprofit profit total number member particip subset crime return number scheme chosen sinc answer may larg return modulo exampl input minprofit group profit output explan make profit least group could either commit crime crime total scheme exampl input minprofit group profit output explan make profit least group could commit crime long commit possibl scheme constraint minprofit grouplength groupi profitlength grouplength profiti ","676":"encod string decod string tape encod string read charact time follow step taken charact read letter letter written onto tape charact read digit entir current tape repeatedli written time total integ return kth letter 1index decod string exampl input leet2code3 output explan decod string leetleetcodeleetleetcodeleetleetcod letter string exampl input output explan decod string hahahaha 5th letter exampl input a2345678999999999999999 output explan decod string repeat time 1st letter constraint slength consist lowercas english letter digit start letter guarante less equal length decod string decod string guarante less letter ","677":"array peopl peoplei weight ith person infinit number boat boat carri maximum weight limit boat carri peopl time provid sum weight peopl limit return minimum number boat carri everi person exampl input peopl limit output explan boat exampl input peopl limit output explan boat exampl input peopl limit output explan boat constraint peoplelength peoplei limit ","678":"undirect graph origin graph node label decid subdivid edg graph chain node number new node vari edg graph 2d array edg edgesi ui vi cnti indic edg node ui vi origin graph cnti total number new node subdivid edg note cnti mean subdivid edg subdivid edg ui vi replac cnti new edg cnti new node new node x1 x2 xcnti new edg ui x1 x1 x2 x2 x3 xcnti1 xcnti xcnti vi new graph want know mani node reachabl node node reachabl distanc maxmov less origin graph maxmov return number node reachabl node new graph exampl input edg maxmov output explan edg subdivis shown imag node reachabl highlight yellow exampl input edg maxmov output exampl input edg maxmov output explan node disconnect rest graph node reachabl constraint edgeslength minn edgesilength ui vi multipl edg graph cnti maxmov ","679":"grid place cube axisalign axe valu gridij repres tower cube place top cell view project cube onto xy yz zx plane project like shadow map 3dimension figur 2dimension plane view shadow look cube top front side return total area project exampl input grid output explan project shadow shape made axisalign plane exampl input grid output exampl input grid output constraint gridlength gridilength gridij ","680":"sentenc string singlespac separ word word consist lowercas letter word uncommon appear exactli sentenc appear sentenc sentenc return list uncommon word may return answer order exampl input appl sweet appl sour output sweetsour explan word sweet appear word sour appear exampl input appl appl banana output banana constraint s1length s2length lowercas english letter space lead trail space word separ singl space ","681":"start cell rstart cstart row col grid face east northwest corner first row column grid southeast corner last row column walk clockwis spiral shape visit everi posit grid whenev move outsid grid boundari continu walk outsid grid may return grid boundari later eventu reach row col space grid return array coordin repres posit grid order visit exampl input row col rstart cstart output exampl input row col rstart cstart output constraint row col rstart row cstart col ","682":"want split group peopl label group size person may dislik peopl go group integ array dislik dislikesi ai bi indic person label ai like person label bi return true possibl split everyon group way exampl input dislik output true explan first group second group exampl input dislik output fals explan need least group divid put group constraint dislikeslength dislikesilength ai bi pair dislik uniqu ","683":"alic bob differ total number candi integ array alices bobsiz alicesizesi number candi ith box candi alic bobsizesj number candi jth box candi bob sinc friend would like exchang candi box exchang total amount candi total amount candi person sum number candi box return integ array answer answer0 number candi box alic must exchang answer1 number candi box bob must exchang multipl answer may return guarante least answer exist exampl input alices bobsiz output exampl input alices bobsiz output exampl input alices bobsiz output constraint alicesizeslength bobsizeslength alicesizesi bobsizesj alic bob differ total number candi least valid answer input ","684":"integ array preorder postord preorder preorder travers binari tree distinct valu postord postord travers tree reconstruct return binari tree exist multipl answer return exampl input preorder postord output exampl input preorder postord output constraint preorderlength preorderi preorderlength valu preorder uniqu postorderlength preorderlength postorderi postorderlength valu postord uniqu guarante preorder postord preorder travers postord travers binari tree ","685":"list string word string pattern return list wordsi match pattern may return answer order word match pattern exist permut letter replac everi letter pattern px get desir word recal permut letter biject letter letter everi letter map anoth letter letter map letter exampl input word abcdeqmeeaqqdkdccc pattern abb output meeaqq explan mee match pattern permut e ccc match pattern permut sinc map letter exampl input word abc pattern output abc constraint patternlength wordslength wordsilength patternlength pattern wordsi lowercas english letter ","686":"width sequenc differ maximum minimum element sequenc array integ num return sum width nonempti subsequ num sinc answer may larg return modulo subsequ sequenc deriv array delet element without chang order remain element exampl subsequ array exampl input num output explan subsequ correspond width sum width exampl input num output constraint numslength numsi ","687":"grid place cube valu gridij repres tower cube place top cell place cube decid glue directli adjac cube form sever irregular 3d shape return total surfac area result shape note bottom face shape count toward surfac area exampl input grid output exampl input grid output exampl input grid output constraint gridlength gridilength gridij ","688":"array string length word move swap even index charact odd index charact string wordsi string wordsi wordsj specialequival number move wordsi wordsj exampl wordsi zzxi wordsj xyzz specialequival may make move zzxi xzzi xyzz group specialequival string word nonempti subset word everi pair string group special equival group largest size possibl ie string wordsi group wordsi specialequival everi string group return number group specialequival string word exampl input word abcdcdabcbadxyzzzzxyzzyx output explan group abcd cdab cbad sinc pairwis special equival none string pairwis special equival group xyzz zzxi zzyx note particular zzxi special equival zzyx exampl input word abcacbbacbcacabcba output constraint wordslength wordsilength wordsi lowercas english letter string length ","689":"integ return list possibl full binari tree node node tree answer must nodev element answer root node possibl tree may return final list tree order full binari tree binari tree node exactli children exampl input output 000nullnull00nullnull00000nullnull0000000000000000nullnullnullnull0000000nullnull00 exampl input output constraint ","690":"design stacklik data structur push element stack pop frequent element stack implement freqstack class freqstack construct empti frequenc stack void pushint val push integ val onto top stack int pop remov return frequent element stack tie frequent element element closest stack top remov return exampl input freqstack push push push push push push pop pop pop pop output null null null null null null null explan freqstack freqstack new freqstack freqstackpush5 stack freqstackpush7 stack freqstackpush5 stack freqstackpush7 stack freqstackpush4 stack freqstackpush5 stack freqstackpop return frequent stack becom freqstackpop return frequent closest top stack becom freqstackpop return frequent stack becom freqstackpop return frequent closest top stack becom constraint val call made push pop guarante least element stack call pop ","691":"array monoton either monoton increas monoton decreas array num monoton increas numsi numsj array num monoton decreas numsi numsj integ array num return true array monoton fals otherwis exampl input num output true exampl input num output true exampl input num output fals constraint numslength numsi ","692":"integ array arr return number distinct bitwis or nonempti subarray arr bitwis subarray bitwis integ subarray bitwis subarray integ integ subarray contigu nonempti sequenc element within array exampl input arr output explan possibl result exampl input arr output explan possibl subarray yield result uniqu valu answer exampl input arr output explan possibl result constraint arrlength arri ","693":"string integ choos first letter append end string return lexicograph smallest string could appli mention step number move exampl input cba output acb explan first move move 1st charact end obtain string bac second move move 1st charact end obtain final result acb exampl input baaca output aaabc explan first move move 1st charact end obtain string aacab second move move 3rd charact end obtain final result aaabc constraint slength lowercas english letter ","694":"use runlength encod ie rle encod sequenc integ runlength encod array even length encod 0index even encodingi tell us number time nonneg integ valu encodingi repeat sequenc exampl sequenc arr encod encod encod encod also valid rle arr runlength encod array design iter iter implement rleiter class rleiteratorint encod initi object encod array encod int nextint exhaust next element return last element exhaust way element left exhaust return instead exampl input rleiter next next next next output null explan rleiter rleiter new rleiterator3 map sequenc rleiteratornext2 exhaust term sequenc return remain sequenc rleiteratornext1 exhaust term sequenc return remain sequenc rleiteratornext1 exhaust term sequenc return remain sequenc rleiteratornext2 exhaust term return first term exhaust second term exist sinc last term exhaust exist return constraint encodinglength encodinglength even encodingi call made next ","695":"design algorithm collect daili price quot stock return span stock price current day span stock price day maximum number consecut day start day go backward stock price less equal price day exampl price stock last day price stock today span today start today price stock less equal consecut day also price stock last day price stock today span today start today price stock less equal consecut day implement stockspann class stockspann initi object class int nextint price return span stock price today price price exampl input stockspann next next next next next next next output null explan stockspann stockspann new stockspann stockspannernext100 return stockspannernext80 return stockspannernext60 return stockspannernext70 return stockspannernext60 return stockspannernext75 return last price includ today price less equal today price stockspannernext85 return constraint price call made next ","696":"array digit sort nondecreas order write number use digitsi mani time want exampl digit may write number return number posit integ gener less equal integ exampl input digit output explan number written exampl input digit output explan write digit number digit number digit number digit number digit number digit number digit number digit number digit number total integ written use digit array exampl input digit output constraint digitslength digitsilength digitsi digit valu digit uniqu digit sort nondecreas order ","697":"string length si either mean decreas mean increas permut perm integ integ rang call valid permut valid si permi permi si permi permi return number valid permut perm sinc answer may larg return modulo exampl input output explan valid permut exampl input output constraint slength si either ","698":"visit farm singl row fruit tree arrang left right tree repres integ array fruit fruitsi type fruit ith tree produc want collect much fruit possibl howev owner strict rule must basket basket hold singl type fruit limit amount fruit basket hold start tree choic must pick exactli fruit everi tree includ start tree move right pick fruit must fit basket reach tree fruit fit basket must stop integ array fruit return maximum number fruit pick exampl input fruit output explan pick tree exampl input fruit output explan pick tree start first tree would pick tree exampl input fruit output explan pick tree start first tree would pick tree constraint fruitslength fruitsi fruitslength ","699":"integ array num move even integ begin array follow odd integ return array satisfi condit exampl input num output explan output would also accept exampl input num output constraint numslength numsi ","700":"let say posit integ superpalindrom palindrom also squar palindrom posit integ left right repres string return number superpalindrom integ inclus rang left right exampl input left right output explan superpalindrom note superpalindrom palindrom exampl input left right output constraint leftlength rightlength left right digit left right lead zero left right repres integ rang left less equal right ","701":"array integ arr find sum minb rang everi contigu subarray arr sinc answer may larg return answer modulo exampl input arr output explan subarray minimum sum exampl input arr output constraint arrlength arri ","702":"integ array num integ oper choos index numslength chang numsi numsi integ rang appli oper index score num differ maximum minimum element num return minimum score num appli mention oper index exampl input num output explan score maxnum minnum exampl input num output explan chang num score maxnum minnum exampl input num output explan chang num score maxnum minnum constraint numslength numsi ","703":"integ array num integ index numslength chang numsi either numsi numsi score num differ maximum minimum element num return minimum score num chang valu index exampl input num output explan score maxnum minnum exampl input num output explan chang num score maxnum minnum exampl input num output explan chang num score maxnum minnum constraint numslength numsi ","704":"integ array person time elect ith vote cast personsi time timesi queri time find person lead elect time vote cast time count toward queri case tie recent vote among tie candid win implement topvotedcandid class topvotedcandidateint person int time initi object person time array int qint return number person lead elect time accord mention rule exampl input topvotedcandid output null explan topvotedcandid topvotedcandid new topvotedcandidate0 topvotedcandidateq3 return time vote lead topvotedcandidateq12 return time vote lead topvotedcandidateq25 return time vote lead tie go recent vote topvotedcandidateq15 return topvotedcandidateq24 return topvotedcandidateq8 return constraint personslength timeslength personslength personsi personslength timesi time sort strictli increas order times0 call made ","705":"array integ num sort array ascend order return must solv problem without use builtin function onlogn time complex smallest space complex possibl exampl input num output explan sort array posit number chang exampl posit number chang exampl exampl input num output explan note valu num necessairli uniqu constraint numslength numsi ","706":"game undirect graph play player mous cat altern turn graph follow grapha list node ab edg graph mous start node goe first cat start node goe second hole node player turn must travel along edg graph meet exampl mous node must travel node graph1 addit allow cat travel hole node game end way ever cat occupi node mous cat win ever mous reach hole mous win ever posit repeat ie player posit previou turn player turn move game draw graph assum player play optim return mous win game cat win game game draw exampl input graph output exampl input graph output constraint graphlength graphilength graphlength graphij graphlength graphij graphi uniqu mous cat alway move ","707":"integ array deck decki repres number written ith card partit card group group exactli card card group integ written return true partit possibl fals otherwis exampl input deck output true explan possibl partit exampl input deck output fals explan possibl partit constraint decklength decki ","708":"integ array num partit contigu subarray left right everi element left less equal everi element right left right nonempti left smallest possibl size return length left partit test case gener partit exist exampl input num output explan left right exampl input num output explan left right constraint numslength numsi least valid answer input ","709":"string array words1 words2 string subset string everi letter occur includ multipl exampl wrr subset warrior subset world string words1 univers everi string words2 subset return array univers string words1 may return answer order exampl input words1 amazonapplefacebookgoogleleetcod words2 eo output facebookgoogleleetcod exampl input words1 amazonapplefacebookgoogleleetcod words2 le output applegoogleleetcod constraint words1length words2length words1ilength words2ilength words1i words2i lowercas english letter string words1 uniqu ","710":"string revers string accord follow rule charact english letter remain posit english letter lowercas uppercas revers return revers exampl input abcd output dcba exampl input abcdefghij output jihgfedcba exampl input test1ngleetcodeq output qedo1cteelgntset constraint slength consist charact ascii valu rang contain ","711":"circular integ array num length return maximum possibl sum nonempti subarray num circular array mean end array connect begin array formal next element numsi numsi previou element numsi numsi subarray may includ element fix buffer num formal subarray numsi numsi numsj exist k1 k2 k1 k2 exampl input num output explan subarray maximum sum exampl input num output explan subarray maximum sum exampl input num output explan subarray maximum sum constraint numslength numsi ","712":"music player contain differ song want listen goal song necessarili differ trip avoid boredom creat playlist everi song play least song play song play goal return number possibl playlist creat sinc answer larg return modulo exampl input goal output explan possibl playlist exampl input goal output explan possibl playlist exampl input goal output explan possibl playlist constraint goal ","713":"parenthes string valid empti string written ab concaten valid string written valid string parenthes string move insert parenthesi posit string exampl insert open parenthesi close parenthesi return minimum number move requir make valid exampl input output exampl input output constraint slength si either ","714":"array integ num half integ num odd half even sort array whenev numsi odd odd whenev numsi even even return answer array satisfi condit exampl input num output explan would also accept exampl input num output constraint numslength numslength even half integ num even numsi could solv inplac ","715":"integ array arr integ target return number tupl arri arrj arrk target answer larg return modulo exampl input arr target output explan enumer valu arri arrj arrk occur time occur time occur time occur time exampl input arr target output explan arri arrj arrk occur time choos way way exampl input arr target output explan occur time array return constraint arrlength arri target ","716":"network node repres adjac matrix graph ith node directli connect jth node graphij node initi initi infect malwar whenev node directli connect least node infect malwar node infect malwar spread malwar continu node infect manner suppos miniti final number node infect malwar entir network spread malwar stop remov exactli node initi return node remov would minim miniti multipl node could remov minim miniti return node smallest index note node remov initi list infect node might still infect later due malwar spread exampl input graph initi output exampl input graph initi output exampl input graph initi output constraint graphlength graphilength graphij graphij graphji graphii initiallength initiali integ initi uniqu ","717":"friend type name keyboard sometim type charact key might get long press charact type time examin type charact keyboard return true possibl friend name charact possibl none long press exampl input name alex type aaleex output true explan e alex long press exampl input name saeed type ssaaedd output fals explan e must press twice type output constraint namelength typedlength name type lowercas english letter ","718":"binari string monoton increas consist number possibl none follow number also possibl none binari string flip si chang return minimum number flip make monoton increas exampl input output explan flip last digit get exampl input output explan flip get altern exampl input output explan flip get constraint slength si either ","719":"array arr consist zero one divid array nonempti part part repres binari valu possibl return arr0 arr1 arri first part arri arri arrj second part arrj arrj arrarrlength third part part equal binari valu possibl return note entir part use consid binari valu repres exampl repres decim also lead zero allow repres valu exampl input arr output exampl input arr output exampl input arr output constraint arrlength arri ","720":"network node repres adjac matrix graph ith node directli connect jth node graphij node initi initi infect malwar whenev node directli connect least node infect malwar node infect malwar spread malwar continu node infect manner suppos miniti final number node infect malwar entir network spread malwar stop remov exactli node initi complet remov connect node node return node remov would minim miniti multipl node could remov minim miniti return node smallest index exampl input graph initi output exampl input graph initi output exampl input graph initi output constraint graphlength graphilength graphij graphij graphji graphii initiallength initiali integ initi uniqu ","721":"everi valid email consist local name domain name separ sign besid lowercas letter email may contain exampl aliceleetcodecom alic local name leetcodecom domain name add period charact local name part email address mail sent forward address without dot local name note rule appli domain name exampl alicezleetcodecom alicezleetcodecom forward email address add plu local name everyth first plu sign ignor allow certain email filter note rule appli domain name exampl mynameemailcom forward myemailcom possibl use rule time array string email send email emailsi return number differ address actual receiv mail exampl input email testemailalexleetcodecomtestemailbobcathyleetcodecomtestemaildavidleetcodecom output explan testemailleetcodecom testemailleetcodecom actual receiv mail exampl input email aleetcodecombleetcodecomcleetcodecom output constraint emailslength emailsilength emailsi lowercas english letter emailsi contain exactli charact local domain name nonempti local name start charact domain name end com suffix domain name must contain least charact com suffix ","722":"binari array num integ goal return number nonempti subarray sum goal subarray contigu part array exampl input num goal output explan subarray bold underlin exampl input num goal output constraint numslength numsi either goal numslength ","723":"array integ matrix return minimum sum fall path matrix fall path start element first row choos element next row either directli diagon leftright specif next element posit row col row col row col row col exampl input matrix output explan fall path minimum sum shown exampl input matrix output explan fall path minimum sum shown constraint matrixlength matrixilength matrixij ","724":"array num length beauti num permut integ rang everi index numsk numsi numsj integ return beauti array num length least valid answer exampl input output exampl input output constraint ","725":"recentcount class count number recent request within certain time frame implement recentcount class recentcount initi counter recent request int pingint add new request time repres time millisecond return number request happen past millisecond includ new request specif return number request happen inclus rang guarante everi call ping use strictli larger valu previou call exampl input recentcount ping ping ping ping output null explan recentcount recentcount new recentcount recentcounterping1 request rang return recentcounterping100 request rang return recentcounterping3001 request rang return recentcounterping3002 request rang return constraint test case call ping strictli increas valu call made ping ","726":"binari matrix grid repres land repres water island 4direct connect group connect exactli island grid may chang connect island form island return smallest number must flip connect island exampl input grid output exampl input grid output exampl input grid output constraint gridlength gridilength gridij either exactli island grid ","727":"chess knight uniqu movement may move squar vertic squar horizont squar horizont squar vertic form shape possibl movement chess knight shown diagram chess knight move indic chess diagram chess knight phone pad shown knight stand numer cell ie blue cell integ return mani distinct phone number length dial allow place knight numer cell initi perform jump dial number length jump valid knight jump answer may larg return answer modulo exampl input output explan need dial number length place knight numer cell cell suffici exampl input output explan valid number dial exampl input output explan pleas take care mod constraint ","728":"string stamp target initi string length targetlength si turn place stamp replac everi letter correspond letter stamp exampl stamp abc target abcba initi turn place stamp index obtain abc place stamp index obtain abc place stamp index obtain abc note stamp must fulli contain boundari order stamp ie place stamp index want convert target use targetlength turn return array index leftmost letter stamp turn obtain target within targetlength turn return empti array exampl input stamp abc target ababc output explan initi place stamp index get abc place stamp index get ababc would also accept answer well answer exampl input stamp abca target aabcaca output explan initi place stamp index get abca place stamp index get abcabca place stamp index get aabcaca constraint stamplength targetlength stamp target lowercas english letter ","729":"array log log spacedelimit string word first word identifi type log letterlog word except identifi lowercas english letter digitlog word except identifi digit reorder log letterlog come digitlog letterlog sort lexicograph content content sort lexicograph identifi digitlog maintain rel order return final order log exampl input log dig1 1let1 art candig2 6let2 kit diglet3 art output let1 art canlet3 art zerolet2 kit digdig1 1dig2 explan letterlog content differ order art art kit dig digitlog rel order dig1 dig2 exampl input log 1g1 act carzo4 7ab1 key doga8 act zoo output g1 act cara8 act zooab1 key doga1 1zo4 constraint logslength logsilength token logsi separ singl space logsi guarante identifi least word identifi ","730":"root node binari search tree integ low high return sum valu node valu inclus rang low high exampl input root 1051537null18 low high output explan node rang exampl input root 105153713181null6 low high output explan node rang constraint number node tree rang nodev low high nodev uniqu ","731":"array point xy plane point pointsi xi yi return minimum area rectangl form point side parallel axe rectangl return exampl input point output exampl input point output constraint pointslength pointsilength xi yi point uniqu ","732":"string return number distinct nonempti subsequ sinc answer may larg return modulo subsequ string new string form origin string delet none charact without disturb rel posit remain charact ie ace subsequ abcd aec exampl input abc output explan distinct subsequ ab ac abc exampl input aba output explan distinct subsequ ab ba aba exampl input aaa output explan distinct subsequ aaa constraint slength consist lowercas english letter ","733":"array integ arr return true valid mountain array recal arr mountain array arrlength exist arrlength arr0 arr1 arri arri arri arri arrarrlength exampl input arr output fals exampl input arr output fals exampl input arr output true constraint arrlength arri ","734":"permut perm integ integ rang repres string length si permi permi si permi permi string reconstruct permut perm return multipl valid permut perm return exampl input output exampl input iii output exampl input ddi output constraint slength si either ","735":"array string word return smallest string contain string word substr multipl valid string smallest length return may assum string word substr anoth string word exampl input word alexlovesleetcod output alexlovesleetcod explan permut alexlovesleetcod would also accept exampl input word catgctaagtgctattcaatgcatc output gctaagttcatgcatc constraint wordslength wordsilength wordsi consist lowercas english letter string word uniqu ","736":"array string str length string arrang line make grid exampl str abc cae arrang follow abc cae want delet column sort lexicograph exampl 0index column e e sort column would delet column return number column delet exampl input str cbadafghi output explan grid look follow cba daf ghi column sort column need delet column exampl input str ab output explan grid look follow column column sort delet column exampl input str zyxwvutsr output explan grid look follow zyx wvu tsr column sort delet constraint strslength strsilength strsi consist lowercas english letter ","737":"integ array num move pick index numslength increment numsi return minimum number move make everi valu num uniqu test case gener answer fit 32bit integ exampl input num output explan move array could exampl input num output explan move array could shown imposs array uniqu valu less move constraint numslength numsi ","738":"integ array push pop distinct valu return true could result sequenc push pop oper initi empti stack fals otherwis exampl input push pop output true explan might follow sequenc push1 push2 push3 push4 pop push5 pop pop pop pop exampl input push pop output fals explan pop constraint pushedlength pushedi element push uniqu poppedlength pushedlength pop permut push ","739":"2d plane place stone integ coordin point coordin point may stone stone remov share either row column anoth stone remov array stone length stonesi xi yi repres locat ith stone return largest possibl number stone remov exampl input stone output explan way remov stone follow remov stone share row remov stone share column remov stone share row remov stone share column remov stone share row stone remov sinc share rowcolumn anoth stone still plane exampl input stone output explan way make move follow remov stone share row remov stone share column remov stone share row stone remov sinc share rowcolumn anoth stone still plane exampl input stone output explan stone plane remov constraint stoneslength xi yi stone coordin point ","740":"start initi power power initi score bag token integ array token tokensi denot valu tokeni goal maxim total score strateg play token move play unplay token way token faceup current power least tokensi may play tokeni lose tokensi power gain score facedown current score least may play tokeni gain tokensi power lose score return maximum possibl score achiev play number token exampl input token power output explan sinc score initi play token facedown also play faceup sinc power less tokens0 exampl input token power output explan play token1 faceup reduc power increas score need play token0 sinc play faceup add score maximum score achiev exampl input token power output explan play token order get score play token0 faceup reduc power increas score play token3 facedown increas power reduc score play token1 faceup reduc power increas score play token2 faceup reduc power increas score maximum score achiev constraint tokenslength tokensi power ","741":"array arr digit find latest 24hour time made use digit exactli 24hour time format hhmm earliest 24hour time latest return latest 24hour time hhmm format valid time made return empti string exampl input arr output explan valid 24hour time time latest exampl input arr output explan valid 24hour time valid constraint arrlength arri ","742":"integ array deck deck card everi card uniqu integ integ ith card decki order deck order want initi card start face unrev deck follow step repeatedli card reveal take top card deck reveal take deck still card deck put next top card deck bottom deck still unrev card go back step otherwis stop return order deck would reveal card increas order note first entri answer consid top deck exampl input deck output explan get deck order order matter reorder reorder deck start top deck reveal move bottom deck reveal move bottom deck reveal move bottom deck reveal move bottom deck reveal move bottom deck reveal move bottom deck reveal sinc card reveal increas order answer correct exampl input deck output constraint decklength decki valu deck uniqu ","743":"binari tree defin flip oper follow choos node swap left right child subtre binari tree flip equival binari tree make equal number flip oper root binari tree root1 root2 return true tree flip equival fals otherwis exampl input root1 123456nullnullnull78 root2 132null645nullnullnullnull87 output true explan flip node valu exampl input root1 root2 output true exampl input root1 root2 output fals constraint number node tree rang tree uniqu node valu rang ","744":"alien languag surprisingli also use english lowercas letter possibl differ order order alphabet permut lowercas letter sequenc word written alien languag order alphabet return true word sort lexicograph alien languag exampl input word helloleetcod order hlabcdefgijkmnopqrstuvwxyz output true explan come languag sequenc sort exampl input word wordworldrow order worldabcefghijkmnpqstuvxyz output fals explan come languag words0 words1 henc sequenc unsort exampl input word appleapp order abcdefghijklmnopqrstuvwxyz output fals explan first charact app match second string shorter size accord lexicograph rule appl app defin blank charact less charact info constraint wordslength wordsilength orderlength charact wordsi order english lowercas letter ","745":"instal billboard want largest height billboard steel support side steel support must equal height collect rod weld togeth exampl rod length weld togeth make support length return largest possibl height billboard instal support billboard return exampl input rod output explan disjoint subset sum exampl input rod output explan disjoint subset sum exampl input rod output explan billboard support return constraint rodslength rodsi sumrodsi ","746":"prison cell row cell either occupi vacant day whether cell occupi vacant chang accord follow rule cell adjac neighbor occupi vacant cell becom occupi otherwis becom vacant note prison row first last cell row cant adjac neighbor integ array cell cellsi ith cell occupi cellsi ith cell vacant integ return state prison day ie chang describ exampl input cell output explan follow tabl summar state prison day day day day day day day day day exampl input cell output constraint cellslength cellsi either ","747":"root binari tree determin complet binari tree complet binari tree everi level except possibl last complet fill node last level far left possibl 2h node inclus last level exampl input root output true explan everi level last full ie level nodevalu node last level far left possibl exampl input root 12345null7 output fals explan node valu isnt far left possibl constraint number node tree rang nodev ","748":"grid compos squar squar consist blank space charact divid squar contigu region grid grid repres string array return number region note backslash charact escap repres exampl input grid output exampl input grid output exampl input grid output explan recal charact escap refer refer constraint gridlength gridilength gridij either ","749":"integ array num follow properti numslength num contain uniqu element exactli element num repeat time return element repeat time exampl input num output exampl input num output exampl input num output constraint numslength numsi num contain uniqu element repeat exactli time ","750":"ramp integ array num pair numsi numsj width ramp integ array num return maximum width ramp num ramp num return exampl input num output explan maximum width ramp achiev nums1 nums5 exampl input num output explan maximum width ramp achiev nums2 nums9 constraint numslength numsi ","751":"array point xy plane point pointsi xi yi return minimum area rectangl form point side necessarili parallel axe rectangl return answer within actual answer accept exampl input point output explan minimum area rectangl occur area exampl input point output explan minimum area rectangl occur area exampl input point output explan possibl rectangl form point constraint pointslength pointsilength xi yi point uniqu ","752":"singl posit integ write express form op1 op2 op3 oper op1 op2 etc either addit subtract multipl divis exampl might write valu write express adher follow convent divis oper return ration number parenthes place anywher use usual order oper multipl divis happen addit subtract allow use unari negat oper exampl valid express use subtract use negat would like write express least number oper express equal target return least number oper use exampl input target output explan express contain oper exampl input target output explan express contain oper exampl input target output explan express contain oper constraint target ","753":"binari tree univalu everi node tree valu root binari tree return true tree univalu fals otherwis exampl input root 11111null1 output true exampl input root output fals constraint number node tree rang nodev ","754":"wordlist want implement spellcheck convert queri word correct word queri word spell checker handl categori spell mistak capit queri match word wordlist caseinsensit queri word return case case wordlist exampl wordlist yellow queri yellow correct yellow exampl wordlist yellow queri yellow correct yellow exampl wordlist yellow queri yellow correct yellow vowel error replac vowel e u queri word vowel individu match word wordlist caseinsensit queri word return case match wordlist exampl wordlist yellow queri correct yellow exampl wordlist yellow queri yeellow correct match exampl wordlist yellow queri correct match addit spell checker oper follow preced rule queri exactli match word wordlist casesensit return word back queri match word capitl return first match wordlist queri match word vowel error return first match wordlist queri match wordlist return empti string queri return list word answer answeri correct word queri queriesi exampl input wordlist kitekiteharehar queri kitekitekitehareharehearhearketikeetketo output kitekitekitehareharekitekit exampl input wordlist yellow queri yellow output yellow constraint wordlistlength querieslength wordlistilength queriesilength wordlisti queriesi english letter ","755":"integ return array integ length differ everi consecut digit may return answer order note integ lead zero integ allow exampl input output explan note valid number lead zero exampl input output constraint ","756":"root binari tree instal camera tree node camera node monitor parent immedi children return minimum number camera need monitor node tree exampl input root 00null00 output explan camera enough monitor node place shown exampl input root 00null0null0nullnull0 output explan least camera need monitor node tree imag show valid configur camera placement constraint number node tree rang nodev ","757":"array integ arr sort array perform seri pancak flip pancak flip follow step choos integ arrlength revers subarray arr0k1 0index exampl arr perform pancak flip choos revers subarray arr pancak flip return array kvalu correspond sequenc pancak flip sort arr valid answer sort array within arrlength flip judg correct exampl input arr output explan perform pancak flip valu start state arr 1st flip arr flip arr 3rd flip arr 4th flip arr sort exampl input arr output explan input alreadi sort need flip anyth note answer would also accept constraint arrlength arri arrlength integ arr uniqu ie arr permut integ arrlength ","758":"integ bound return list power integ valu less equal bound integ power repres xi yj integ may return answer order answer valu occur exampl input bound output explan exampl input bound output constraint bound ","759":"root binari tree node node uniqu assign valu also sequenc valu voyag desir preorder travers binari tree node binari tree flip swap left right subtre exampl flip node follow effect flip smallest number node preorder travers tree match voyag return list valu flip node may return answer order imposs flip node tree make preorder travers match voyag return list exampl input root voyag output explan imposs flip node preorder travers match voyag exampl input root voyag output explan flip node swap node preorder travers match voyag exampl input root voyag output explan tree preorder travers alreadi match voyag node need flip constraint number node tree voyagelength nodev voyagei valu tree uniqu valu voyag uniqu ","760":"string repres nonneg ration number return true repres number string may use parenthes denot repeat part ration number ration number repres use part integerpart nonrepeatingpart repeatingpart number repres follow way integerpart exampl integerpartnonrepeatingpart exampl integerpartnonrepeatingpartrepeatingpart exampl repeat portion decim expans convent denot within pair round bracket exampl exampl input output true explan repres repres string repres number exampl input output true exampl input output true explan repres repeat forev equal see link explan repres number form correctli integerpart nonrepeatingpart constraint part consist digit integerpart lead zero except integerpartlength nonrepeatingpartlength repeatingpartlength ","761":"array point pointsi xi yi repres point xy plane integ return closest point origin distanc point xy plane euclidean distanc ie \u221ax1 x22 y1 may return answer order answer guarante uniqu except order exampl input point output explan distanc origin sqrt10 distanc origin sqrt8 sinc sqrt8 sqrt10 closer origin want closest point origin answer exampl input point output explan answer would also accept constraint pointslength xi yi ","762":"integ array num integ return number nonempti subarray sum divis subarray contigu part array exampl input num output explan subarray sum divis exampl input num output constraint numslength numsi ","763":"integ array arr start index make seri jump 1st 3rd 5th jump seri call oddnumb jump 4th 6th jump seri call evennumb jump note jump number indic may jump forward index index follow way oddnumb jump ie jump jump index arri arrj arrj smallest possibl valu multipl indic jump smallest index evennumb jump ie jump jump index arri arrj arrj largest possibl valu multipl indic jump smallest index may case index legal jump start index good start index reach end array index arrlength jump number time possibl return number good start indic exampl input arr output explan start index make 1st jump sinc arr2 smallest among arr1 arr2 arr3 arr4 greater equal arr0 jump start index make 1st jump jump start index make 1st jump reach end start index reach end alreadi total differ start indic reach end number jump exampl input arr output explan start index make jump 1st jump oddnumb first jump arr1 smallest valu arr1 arr2 arr3 arr4 greater equal arr0 jump evennumb jump arr2 largest valu arr2 arr3 arr4 less equal arr1 arr3 also largest valu smaller index jump 3rd jump oddnumb jump arr3 smallest valu arr3 arr4 greater equal arr2 cant jump start index good similar manner deduc start index jump reach end start index jump cant jump anymor start index jump reach end start index alreadi end total differ start indic reach end number jump exampl input arr output explan reach end start indic constraint arrlength arri ","764":"integ array num sort nondecreas order return array squar number sort nondecreas order exampl input num output explan squar array becom sort becom exampl input num output constraint numslength numsi num sort nondecreas order squar element sort new array trivial could find solut use differ approach ","765":"integ array arr return length maximum size turbul subarray arr subarray turbul comparison sign flip adjac pair element subarray formal subarray arri arri arrj arr said turbul arrk arrk odd arrk arrk even arrk arrk even arrk arrk odd exampl input arr output explan arr1 arr2 arr3 arr4 arr5 exampl input arr output exampl input arr output constraint arrlength arri ","766":"root binari tree node node tree nodev coin coin total throughout whole tree move may choos adjac node move coin node anoth move may parent child child parent return minimum number move requir make everi node exactli coin exampl input root output explan root tree move coin left child coin right child exampl input root output explan left child root move coin root take move move coin root tree right child constraint number node tree nodev sum nodev ","767":"integ array grid gridij could repres start squar exactli start squar repres end squar exactli end squar repres empti squar walk repres obstacl walk return number 4direct walk start squar end squar walk everi nonobstacl squar exactli exampl input grid output explan follow path exampl input grid output explan follow path exampl input grid output explan path walk everi empti squar exactli note start end squar anywher grid constraint gridlength gridilength gridij exactli start cell end cell ","768":"design timebas keyvalu data structur store multipl valu key differ time stamp retriev key valu certain timestamp implement timemap class timemap initi object data structur void setstr key string valu int timestamp store key key valu valu time timestamp string getstr key int timestamp return valu set call previous timestampprev timestamp multipl valu return valu associ largest timestampprev valu return exampl input timemap set get get set get get foo bar foo foo foo bar2 foo foo output null null bar bar null bar2 bar2 explan timemap timemap new timemap timemapsetfoo bar store key foo valu bar along timestamp timemapgetfoo return bar timemapgetfoo return bar sinc valu correspond foo timestamp timestamp valu timestamp bar timemapsetfoo bar2 store key foo valu bar2 along timestamp timemapgetfoo return bar2 timemapgetfoo return bar2 constraint keylength valuelength key valu lowercas english letter digit timestamp timestamp timestamp set strictli increas call made set get ","769":"integ array num return number tripl tripl tripl indic numslength numslength numslength numsi numsj numsk repres bitwiseand oper exampl input num output explan could choos follow tripl j0 k1 j1 k0 j1 k1 j1 k2 j2 k1 j0 k0 j0 k1 j0 k2 j1 k0 j2 k0 j0 k1 j1 k0 exampl input num output constraint numslength numsi ","770":"plan train travel year advanc day year travel integ array day day integ train ticket sold differ way 1day pass sold costs0 dollar 7day pass sold costs1 dollar 30day pass sold costs2 dollar pass allow mani day consecut travel exampl get 7day pass day travel day return minimum number dollar need travel everi day list day exampl input day cost output explan exampl way buy pass let travel travel plan day bought 1day pass costs0 cover day day bought 7day pass costs1 cover day day bought 1day pass costs0 cover day total spent cover day travel exampl input day cost output explan exampl way buy pass let travel travel plan day bought 30day pass costs2 cover day day bought 1day pass costs0 cover day total spent cover day travel constraint dayslength daysi day strictli increas order costslength costsi ","771":"integ return string length contain exactli letter exactli letter substr aaa occur substr bbb occur exampl input output abb explan abb bab bba correct answer exampl input output aabaa constraint guarante exist ","772":"integ array num array queri queriesi vali indexi queri first appli numsindexi numsindexi vali print sum even valu num return integ array answer answeri answer ith queri exampl input num queri output explan begin array ad nums0 array sum even valu ad nums1 array sum even valu ad nums0 array sum even valu ad nums3 array sum even valu exampl input num queri output constraint numslength numsi querieslength vali indexi numslength ","773":"root binari tree node valu rang repres letter return lexicograph smallest string start leaf tree end root remind shorter prefix string lexicograph smaller exampl ab lexicograph smaller aba leaf node node children exampl input root output dba exampl input root output adz exampl input root 221null10null0 output abc constraint number node tree rang nodev ","774":"arrayform integ num array repres digit left right order exampl num array form num arrayform integ integ return arrayform integ num exampl input num output explan exampl input num output explan exampl input num output explan constraint numlength numi num contain lead zero except ","775":"array string equat repres relationship variabl string equationsi length take differ form xiyi xiyiher xi yi lowercas letter necessarili differ repres onelett variabl name return true possibl assign integ variabl name satisfi equat fals otherwis exampl input equat abba output fals explan assign say first equat satisfi second way assign variabl satisfi equat exampl input equat baab output true explan could assign satisfi equat constraint equationslength equationsilength equationsi0 lowercas letter equationsi1 either equationsi2 equationsi3 lowercas letter ","776":"broken calcul integ startvalu display initi oper multipli number display subtract number display integ startvalu target return minimum number oper need display target calcul exampl input startvalu target output explan use doubl oper decrement oper exampl input startvalu target output explan use decrement doubl exampl input startvalu target output explan use doubl decrement doubl constraint startvalu target ","777":"integ array num integ return number good subarray num good array array number differ integ array exactli exampl differ integ subarray contigu part array exampl input num output explan subarray form exactli differ integ exampl input num output explan subarray form exactli differ integ constraint numslength numsi numslength ","778":"root binari tree uniqu valu valu differ node tree return true node correspond valu tree cousin fals otherwis node binari tree cousin depth differ parent note binari tree root node depth children depth node depth exampl input root output fals exampl input root 123null4null5 output true exampl input root 123null4 output fals constraint number node tree rang nodev node uniqu valu exist tree ","779":"grid cell valu repres empti cell repres fresh orang repres rotten orang everi minut fresh orang 4direct adjac rotten orang becom rotten return minimum number minut must elaps cell fresh orang imposs return exampl input grid output exampl input grid output explan orang bottom left corner row column never rotten rot happen 4direct exampl input grid output explan sinc alreadi fresh orang minut answer constraint gridlength gridilength gridij ","780":"binari array num integ kbit flip choos subarray length num simultan chang everi subarray everi subarray return minimum number kbit flip requir array possibl return subarray contigu part array exampl input num output explan flip nums0 flip nums2 exampl input num output explan matter flip subarray size make array becom exampl input num output explan flip nums0nums1nums2 num becom flip nums4nums5nums6 num becom flip nums5nums6nums7 num becom constraint numslength numslength ","781":"array squar sum everi pair adjac element perfect squar integ array num return number permut num squar permut perm1 perm2 differ index perm1i perm2i exampl input num output explan valid permut exampl input num output constraint numslength numsi ","782":"town peopl label rumor peopl secretli town judg town judg exist town judg trust nobodi everybodi except town judg trust town judg exactli person satisfi properti array trust trusti ai bi repres person label ai trust person label bi trust relationship exist trust array trust relationship exist return label town judg town judg exist identifi return otherwis exampl input trust output exampl input trust output exampl input trust output constraint trustlength trustilength pair trust uniqu ai bi ai bi ","783":"maximum tree tree everi node valu greater valu subtre root maximum binari tree integ val previou problem tree construct list root constructa recurs follow constructa routin empti return null otherwis let ai largest element creat root node valu ai left child root constructa0 ai right child root constructai ai aalength return root note directli root node root constructa suppos copi valu val append guarante uniqu valu return constructb exampl input root 413nullnull2 val output 54null13nullnull2 explan exampl input root 524null1 val output 524null1null3 explan exampl input root 523null1 val output 524null13 explan constraint number node tree rang nodev valu tree uniqu val ","784":"pile stone arrang row ith pile stonesi stone move consist merg exactli consecut pile pile cost move equal total number stone pile return minimum cost merg pile stone pile imposs return exampl input stone output explan start merg cost left merg cost left merg cost left total cost minimum possibl exampl input stone output explan merg oper pile left cant merg anymor task imposs exampl input stone output explan start merg cost left merg cost left total cost minimum possibl constraint stoneslength stonesi ","785":"2d grid size cell grid lamp initi turn 2d array lamp posit lamp lampsi rowi coli indic lamp gridrowicoli turn even lamp list turn lamp turn illumin cell cell row column diagon also anoth 2d array queri queriesj rowj colj jth queri determin whether gridrowjcolj illumin answer jth queri turn lamp gridrowjcolj adjac lamp exist lamp adjac cell share either side corner gridrowjcolj return array integ an ansj cell jth queri illumin lamp exampl input lamp queri output explan initi grid lamp turn pictur see grid turn lamp grid00 turn lamp grid44 0th queri ask lamp grid11 illumin blue squar illumin set ans0 turn lamp red squar 1st queri ask lamp grid10 illumin blue squar illumin set ans1 turn lamp red rectangl exampl input lamp queri output exampl input lamp queri output constraint lampslength querieslength lampsilength rowi coli queriesjlength rowj colj ","786":"string array word return array charact show string within word includ duplic may return answer order exampl input word bellalabelrol output ell exampl input word coollockcook output co constraint wordslength wordsilength wordsi consist lowercas english letter ","787":"string determin valid string valid start empti string transform perform follow oper number time insert string abc posit formal becom tleft abc tright tleft tright note tleft tright may empti return true valid string otherwis return fals exampl input aabcbc output true explan abc aabcbc thu aabcbc valid exampl input abcabcababcc output true explan abc abcabc abcabcabc abcabcababcc thu abcabcababcc valid exampl input abccba output fals explan imposs get abccba use oper constraint slength consist letter ","788":"binari array num integ return maximum number consecut array flip exampl input num output explan bold number flip longest subarray underlin exampl input num output explan bold number flip longest subarray underlin constraint numslength numsi either numslength ","789":"integ array num integ modifi array follow way choos index replac numsi numsi appli process exactli time may choos index multipl time return largest possibl sum array modifi way exampl input num output explan choos index num becom exampl input num output explan choos indic num becom exampl input num output explan choos indic num becom constraint numslength numsi ","790":"factori posit integ product posit integ less equal exampl factorial10 make clumsi factori use integ decreas order swap multipli oper fix rotat oper multipli divid add subtract order exampl clumsy10 howev oper still appli use usual order oper arithmet multipl divis step addit subtract step multipl divis step process left right addit divis use floor divis integ return clumsi factori exampl input output explan exampl input output explan constraint ","791":"row domino topsi bottomsi repres top bottom halv ith domino domino tile number half tile may rotat ith domino topsi bottomsi swap valu return minimum number rotat valu top valu bottom done return exampl input top bottom output explan first figur repres domino top bottom rotat rotat second fourth domino make everi valu top row equal indic second figur exampl input top bottom output explan case possibl rotat domino make row valu equal constraint topslength bottomslength topslength topsi bottomsi ","792":"array integ preorder repres preorder travers ie binari search tree construct tree return root guarante alway possibl find binari search tree requir test case binari search tree binari tree everi node descend nodeleft valu strictli less nodev descend noderight valu strictli greater nodev preorder travers binari tree display valu node first travers nodeleft travers noderight exampl input preorder output 851017null12 exampl input preorder output 1null3 constraint preorderlength preorderi valu preorder uniqu ","793":"complement integ integ get flip binari represent exampl integ binari complement integ integ return complement exampl input output explan binari complement binari base10 exampl input output explan binari complement binari base10 exampl input output explan binari complement binari base10 constraint note question httpsleetcodecomproblemsnumbercompl ","794":"list song ith song durat timei second return number pair song total durat second divis formal want number indic timei timej exampl input time output explan pair total durat divis time0 time2 total durat time1 time3 total durat time1 time4 total durat exampl input time output explan pair total durat divis constraint timelength timei ","795":"conveyor belt packag must ship port anoth within day day ith packag conveyor belt weight weightsi day load ship packag conveyor belt order weight may load weight maximum weight capac ship return least weight capac ship result packag conveyor belt ship within day day exampl input weight day output explan ship capac minimum ship packag day like 1st day day 3rd day 4th day 5th day note cargo must ship order use ship capac split packag part like allow exampl input weight day output explan ship capac minimum ship packag day like 1st day day 3rd day exampl input weight day output explan 1st day day 3rd day 4th day constraint day weightslength weightsi ","796":"integ return number posit integ rang least repeat digit exampl input output explan posit number least repeat digit exampl input output explan posit number atleast repeat digit exampl input output constraint ","797":"array integ arr return true partit array nonempti part equal sum formal partit array find index arr0 arr1 arri arri arri arrj arrj arrj arrarrlength exampl input arr output true explan exampl input arr output fals exampl input arr output true explan constraint arrlength arri ","798":"integ array valu valuesi repres valu ith sightse spot sightse spot distanc score pair sightse spot valuesi valuesj sum valu sightse spot minu distanc return maximum score pair sightse spot exampl input valu output explan valuesi valuesj exampl input valu output constraint valueslength valuesi ","799":"posit integ need find length smallest posit integ divis contain digit return length return note may fit 64bit sign integ exampl input output explan smallest answer length exampl input output explan posit integ divis exampl input output explan smallest answer length constraint ","800":"binari string posit integ return true binari represent integ rang substr fals otherwis substr contigu sequenc charact within string exampl input output true exampl input output fals constraint slength si either ","801":"integ return binari string repres represent base note return string lead zero unless string exampl input output explant exampl input output explant exampl input output explant constraint ","802":"binari array num 0index defin xi number whose binari represent subarray nums0i mostsignificantbit leastsignificantbit exampl num x0 x1 x2 return array boolean answer answeri true xi divis exampl input num output truefalsefals explan input number binari base10 first number divis answer0 true exampl input num output falsefalsefals constraint numslength numsi either ","803":"head link list node node list find valu next greater node node find valu first node next strictli larger valu return integ array answer answeri valu next greater node ith node 1index ith node next greater node set answeri exampl input head output exampl input head output constraint number node list nodev ","804":"binari matrix grid repres sea cell repres land cell move consist walk land cell anoth adjac 4direct land cell walk boundari grid return number land cell grid walk boundari grid number move exampl input grid output explan enclos enclos boundari exampl input grid output explan either boundari reach boundari constraint gridlength gridilength gridij either ","805":"valid parenthes string either empti valid parenthes string repres string concaten exampl valid parenthes string valid parenthes string primit nonempti exist way split nonempti valid parenthes string valid parenthes string consid primit decomposit p1 p2 pk pi primit valid parenthes string return remov outermost parenthes everi primit string primit decomposit exampl input output explan input string primit decomposit remov outer parenthes part exampl input output explan input string primit decomposit remov outer parenthes part exampl input output explan input string primit decomposit remov outer parenthes part constraint slength si either valid parenthes string ","806":"root binari tree node valu roottoleaf path repres binari number start signific bit exampl path could repres binari leav tree consid number repres path root leaf return sum number test case gener answer fit 32bit integ exampl input root output explan exampl input root output constraint number node tree rang nodev ","807":"array string queri string pattern return boolean array answer answeri true queriesi match pattern fals otherwis queri word queriesi match pattern insert lowercas english letter pattern equal queri may insert charact posit may insert charact exampl input queri foobarfoobartestfootballframebufferforcefeedback pattern fb output truefalsetruetruefals explan foobar gener like oo ar footbal gener like oot framebuff gener like rame uffer exampl input queri foobarfoobartestfootballframebufferforcefeedback pattern foba output truefalsetruefalsefals explan foobar gener like fo ba footbal gener like fo ot ba exampl input queri foobarfoobartestfootballframebufferforcefeedback pattern fobat output falsetruefalsefalsefals explan foobartest gener like fo ba est constraint patternlength querieslength queriesilength queriesi pattern english letter ","808":"seri video clip sport event last time second video clip overlap vari length video clip describ array clip clipsi starti endi indic ith clip start starti end endi cut clip segment freeli exampl clip cut segment return minimum number clip need cut clip segment cover entir sport event time task imposs return exampl input clip time output explan take clip total clip reconstruct sport event follow cut segment segment cover sport event exampl input clip time output explan cover exampl input clip time output explan take clip constraint clipslength starti endi time ","809":"alic bob take turn play game alic start first initi number chalkboard player turn player make move consist choos replac number chalkboard also player make move lose game return true alic win game assum player play optim exampl input output true explan alic choos bob move exampl input output fals explan alic choos bob choos alic move constraint ","810":"root binari tree find maximum valu exist differ node aval bval ancestor node ancestor either child equal child ancestor exampl input root 831016null14nullnull4713 output explan variou ancestornod differ among possibl differ maximum valu obtain exampl input root 1null2null03 output constraint number node tree rang nodev ","811":"array num integ return length longest arithmet subsequ num note subsequ array deriv anoth array delet element without chang order remain element sequenc seq arithmet seqi seqi valu seqlength exampl input num output explan whole array arithmet sequenc step length exampl input num output explan longest arithmet subsequ exampl input num output explan longest arithmet subsequ constraint numslength numsi ","812":"run preorder depthfirst search df root binari tree node travers output dash depth node output valu node depth node depth immedi child depth root node node child child guarante left child output travers travers recov tree return root exampl input travers output exampl input travers output 1253null6null4null7 exampl input travers output 1401null3498890 constraint number node origin tree rang nodev ","813":"compani plan interview peopl array cost costsi acosti bcosti cost fli ith person citi acosti cost fli ith person citi bcosti return minimum cost fli everi person citi exactli peopl arriv citi exampl input cost output explan first person goe citi cost second person goe citi cost third person goe citi cost fourth person goe citi cost total minimum cost half peopl interview citi exampl input cost output exampl input cost output constraint costslength costslength costslength even acosti bcosti ","814":"integ row col rcenter ccenter row col matrix cell coordin rcenter ccenter return coordin cell matrix sort distanc rcenter ccenter smallest distanc largest distanc may return answer order satisfi condit distanc cell c1 c2 c1 c2 exampl input row col rcenter ccenter output explan distanc cell exampl input row col rcenter ccenter output explan distanc cell answer would also accept correct exampl input row col rcenter ccenter output explan distanc cell answer would also accept correct constraint row col rcenter row ccenter col ","815":"integ array num integ firstlen secondlen return maximum sum element nonoverlap subarray length firstlen secondlen array length firstlen could occur array length secondlen nonoverlap subarray contigu part array exampl input num firstlen secondlen output explan choic subarray length length exampl input num firstlen secondlen output explan choic subarray length length exampl input num firstlen secondlen output explan choic subarray length length constraint firstlen secondlen firstlen secondlen firstlen secondlen numslength numsi ","816":"design algorithm accept stream charact check suffix charact string array string word exampl word abc xyz stream ad charact algorithm detect suffix xyz charact axyz match xyz word implement streamcheck class streamcheckerstr word initi object string array word boolean querychar letter accept new charact stream return true nonempti suffix stream form word word exampl input streamcheck queri queri queri queri queri queri queri queri queri queri queri queri cd kl e output null fals fals fals true fals true fals fals fals fals fals true explan streamcheck streamcheck new streamcheckercd kl streamcheckerquerya return fals streamcheckerqueryb return fals streamcheckerqueryc return fals streamcheckerqueryd return true cd wordlist streamcheckerquery return fals streamcheckerqueryf return true wordlist streamcheckerqueryg return fals streamcheckerqueryh return fals streamcheckerqueryi return fals streamcheckerqueryj return fals streamcheckerqueryk return fals streamcheckerqueryl return true kl wordlist constraint wordslength wordsilength wordsi consist lowercas english letter letter lowercas english letter call made queri ","817":"stone differ posit xaxi integ posit stone move pick stone endpoint ie either lowest highest posit stone move unoccupi posit endpoint formal let say stone current posit pick stone either posit posit move stone integ posit game end make move ie stone consecut posit return integ array answer length answer0 minimum number move play answer1 maximum number move play exampl input output explan move stone move stone exampl input output explan make move exampl input output explan move stone move stone constraint differ valu ","818":"integ matrix grid integ row col color valu grid repres color grid squar locat squar call adjac next direct squar belong connect compon color adjac border connect compon squar connect compon either adjac least squar compon boundari grid first last row column color border connect compon contain squar gridrowcol color return final grid exampl input grid row col color output exampl input grid row col color output exampl input grid row col color output constraint gridlength gridilength gridij color row col ","819":"integ array nums1 nums2 write integ nums1 nums2 order separ horizont line may draw connect line straight line connect number nums1i nums2j nums1i nums2j line draw intersect connect nonhorizont line note connect line intersect even endpoint ie number belong connect line return maximum number connect line draw way exampl input nums1 nums2 output explan draw uncross line diagram draw uncross line line nums11 nums22 intersect line nums122 nums212 exampl input nums1 nums2 output exampl input nums1 nums2 output constraint nums1length nums2length nums1i nums2j ","820":"million million grid xyplan coordin grid squar start sourc sy squar want reach target ty squar also array block squar blockedi xi yi repres block squar coordin xi yi move walk squar north east south west squar array block squar also allow walk outsid grid return true possibl reach target squar sourc squar sequenc valid move exampl input block sourc target output fals explan target squar inaccess start sourc squar move move north east squar block move south west go outsid grid exampl input block sourc target output true explan block cell possibl reach target squar constraint blockedlength blockedilength xi yi sourcelength targetlength sy ty sourc target guarante sourc target block ","821":"array point pointsi xi yi repres point xy plane return true point boomerang boomerang set point distinct straight line exampl input point output true exampl input point output fals constraint pointslength pointsilength xi yi ","822":"root binari search tree convert greater tree everi key origin chang origin key plu sum key greater origin key remind binari search tree tree satisfi constraint left subtre node contain node key less node key right subtre node contain node key greater node key left right subtre must also binari search tree exampl input root 4160257nullnullnull3nullnullnull8 output 30362136352615nullnullnull33nullnullnull8 exampl input root 0null1 output 1null1 constraint number node tree rang nodev valu tree uniqu note question httpsleetcodecomproblemsconvertbsttogreatertre ","823":"convex nside polygon vertex integ valu integ array valu valuesi valu ith vertex clockwis order polygon triangul process divid polygon set triangl vertic triangl must also vertic origin polygon note shape triangl allow divis process result triangl triangul polygon triangl weight triangl product valu vertic total score triangul sum weight triangl return minimum possibl score achiev triangul polygon exampl input valu output explan polygon alreadi triangul score triangl exampl input valu output explan triangul possibl score minimum score exampl input valu output explan minimum score triangul constraint valueslength valuesi ","824":"stone differ posit xaxi integ array stone posit stone call stone endpoint stone smallest largest posit move pick endpoint stone move unoccupi posit longer endpoint stone particular stone say stone move endpoint stone posit sinc move posit still keep stone endpoint stone game end make move ie stone consecut posit return integ array answer length answer0 minimum number move play answer1 maximum number move play exampl input stone output explan move move finish game move move finish game exampl input stone output explan move finish game move finish game notic move finish game would illeg move constraint stoneslength stonesi valu stone uniqu ","825":"infinit plane robot initi stand face north note north direct posit direct yaxi south direct neg direct yaxi east direct posit direct xaxi west direct neg direct xaxi robot receiv instruct go straight unit turn degre left ie anticlockwis direct turn degre right ie clockwis direct robot perform instruct order repeat forev return true exist circl plane robot never leav circl exampl input instruct ggllgg output true explan robot initi face north direct move step posit direct north move step posit direct north turn degre anticlockwis posit direct west turn degre anticlockwis posit direct south move step posit direct south move step posit direct south repeat instruct robot goe cycl base return true exampl input instruct gg output fals explan robot initi face north direct move step posit direct north move step posit direct north repeat instruct keep advanc north direct go cycl base return fals exampl input instruct gl output true explan robot initi face north direct move step posit direct north turn degre anticlockwis posit direct west move step posit direct west turn degre anticlockwis posit direct south move step posit direct south turn degre anticlockwis posit direct east move step posit direct east turn degre anticlockwis posit direct north repeat instruct robot goe cycl base return true constraint instructionslength instructionsi ","826":"garden label array path pathsi xi yi describ bidirect path garden xi garden yi garden want plant type flower garden path come leav task choos flower type garden garden connect path differ type flower return choic array answer answeri type flower plant i1th garden flower type denot guarante answer exist exampl input path output explan garden differ type garden differ type garden differ type henc valid answer valid answer includ exampl input path output exampl input path output constraint pathslength pathsilength xi yi xi yi everi garden path come leav ","827":"integ array arr partit array contigu subarray length partit subarray valu chang becom maximum valu subarray return largest sum array partit test case gener answer fit 32bit integ exampl input arr output explan arr becom exampl input arr output exampl input arr output constraint arrlength arri arrlength ","828":"string consid duplic substr contigu substr occur time occurr may overlap return duplic substr longest possibl length duplic substr answer exampl input banana output ana exampl input abcd output constraint slength consist lowercas english letter ","829":"sql schema panda schema ","830":"array integ stone stonesi weight ith stone play game stone turn choos heaviest stone smash togeth suppos heaviest stone weight result smash stone destroy stone weight destroy stone weight new weight end game stone left return weight last remain stone stone left return exampl input stone output explan combin get array convert combin get array convert combin get array convert combin get array convert that valu last stone exampl input stone output constraint stoneslength stonesi ","831":"string consist lowercas english letter duplic remov consist choos adjac equal letter remov repeatedli make duplic remov longer return final string duplic remov made proven answer uniqu exampl input abbaca output ca explan exampl abbaca could remov sinc letter adjac equal possibl move result move string aaca possibl final string ca exampl input azxxzi output ay constraint slength consist lowercas english letter ","832":"array word word consist lowercas english letter worda predecessor wordb insert exactli letter anywher worda without chang order charact make equal wordb exampl abc predecessor abac cba predecessor bcad word chain sequenc word word1 word2 wordk word1 predecessor word2 word2 predecessor word3 singl word trivial word chain return length longest possibl word chain word chosen list word exampl input word abbabcabdabdca output explan longest word chain ababdabdca exampl input word xbcpcxbcfxbcxbcpcxbc output explan word put word chain xb xbc cxbc pcxbc pcxbcf exampl input word abcddbqca output explan trivial word chain abcd longest word chain abcddbqca valid word chain order letter chang constraint wordslength wordsilength wordsi consist lowercas english letter ","833":"array integ stone stonesi weight ith stone play game stone turn choos stone smash togeth suppos stone weight result smash stone destroy stone weight destroy stone weight new weight end game stone left return smallest possibl weight left stone stone left return exampl input stone output explan combin get array convert combin get array convert combin get array convert combin get array convert that optim valu exampl input stone output constraint stoneslength stonesi ","834":"sql schema panda schema ","835":"bookstor owner store open minut integ array custom length customersi number custom enter store start ith minut custom leav end minut certain minut bookstor owner grumpi binari array grumpi grumpyi bookstor owner grumpi ith minut otherwis bookstor owner grumpi custom enter minut satisfi otherwis satisfi bookstor owner know secret techniqu remain grumpi minut consecut minut techniqu use return maximum number custom satisfi throughout day exampl input custom grumpi minut output explan bookstor owner keep grumpi last minut maximum number custom satisfi exampl input custom grumpi minut output constraint customerslength grumpylength minut customersi grumpyi either ","836":"array posit integ arr necessarili distinct return lexicograph largest permut smaller arr made exactli swap done return array note swap exchang posit number arri arrj exampl input arr output explan swap exampl input arr output explan alreadi smallest permut exampl input arr output explan swap constraint arrlength arri ","837":"warehous row barcod ith barcod barcodesi rearrang barcod adjac barcod equal may return answer guarante answer exist exampl input barcod output exampl input barcod output constraint barcodeslength barcodesi ","838":"string length string basestr say s1i s2i equival charact exampl abc cde e equival charact usual rule equival relat reflex symmetri impli transit impli exampl equival inform abc cde aab equival string basestr eed aab lexicograph smallest equival string basestr return lexicograph smallest equival string basestr use equival inform exampl input parker morri basestr parser output makkek explan base equival inform group charact ao kr ei charact group equival sort lexicograph order answer makkek exampl input hello world basestr hold output hdld explan base equival inform group charact deo second letter basestr chang answer hdld exampl input leetcod program basestr sourcecod output aauaaaaada explan group equival charact aoersc thu letter basestr except u transform answer aauaaaaada constraint s1length s2length basestr s1length s2length basestr lowercas english letter ","839":"sql schema panda schema ","840":"sql schema panda schema ","841":"string say divid ie concaten time string str1 str2 return largest string divid str1 str2 exampl input str1 abcabc str2 abc output abc exampl input str1 ababab str2 abab output ab exampl input str1 leet str2 code output constraint str1length str2length str1 str2 english uppercas letter ","842":"binari matrix matrix choos number column matrix flip everi cell column ie chang valu cell vice versa return maximum number row valu equal number flip exampl input matrix output explan flip valu row valu equal exampl input matrix output explan flip valu first column row equal valu exampl input matrix output explan flip valu first column last row equal valu constraint matrixlength matrixilength matrixij either ","843":"number arr1 arr2 base return result ad togeth number array format array signific bit least signific bit exampl arr repres number number arr array format also guarante lead zero either arr arr0 return result ad arr1 arr2 format array lead zero exampl input arr1 arr2 output explan arr1 repres arr2 repres output repres exampl input arr1 arr2 output exampl input arr1 arr2 output constraint arr1length arr2length arr1i arr2i arr1 arr2 lead zero ","844":"matrix target return number nonempti submatric sum target submatrix x1 y1 x2 y2 set cell matrixxi x1 x2 y1 y2 submatric x1 y1 x2 y2 x1 y1 x2 y2 differ coordin differ exampl x1 x1 exampl input matrix target output explan 1x1 submatric contain exampl input matrix target output explan 1x2 submatric plu 2x1 submatric plu 2x2 submatrix exampl input matrix target output constraint matrixlength matrix0length matrixij target ","845":"string first second consid occurr text form first second third second come immedi first third come immedi second return array word third occurr first second third exampl input text alic good girl good student first second good output girlstud exampl input text rock first second output werock constraint textlength text consist lowercas english letter space word text separ singl space firstlength secondlength first second lowercas english letter text lead trail space ","846":"tile tile letter tilesi print return number possibl nonempti sequenc letter make use letter print tile exampl input tile aab output explan possibl sequenc ab ba aab aba baa exampl input tile aaabbc output exampl input tile output constraint tileslength tile consist uppercas english letter ","847":"root binari tree integ limit delet insuffici node tree simultan return root result binari tree node insuffici everi root leaf path intersect node sum strictli less limit leaf node children exampl input root limit output 1234nullnull789null14 exampl input root 54811null17471nullnull53 limit output 54811null1747nullnullnull5 exampl input root 1235null4nul limit output 1null34 constraint number node tree rang nodev limit ","848":"string return lexicograph smallest subsequ contain distinct charact exactli exampl input bcabc output abc exampl input cbacdcbc output constraint slength consist lowercas english letter note question httpsleetcodecomproblemsremoveduplicatelett ","849":"sql schema panda schema ","850":"fixedlength integ array arr duplic occurr shift remain element right note element beyond length origin array written modif input array place return anyth exampl input arr output explan call function input array modifi exampl input arr output explan call function input array modifi constraint arrlength arri ","851":"item valu label integ array valu label also integ numwant uselimit task find subset item maximum sum valu number item numwant number item label uselimit return maximum sum exampl input valu label numwant uselimit output explan subset chosen first third fifth item sum valu exampl input valu label numwant uselimit output explan subset chosen first second third item sum valu exampl input valu label numwant uselimit output explan subset chosen first fourth item sum valu constraint valueslength labelslength valuesi labelsi numwant uselimit ","852":"binari matrix grid return length shortest clear path matrix clear path return clear path binari matrix path topleft cell ie bottomright cell ie visit cell path adjac cell path 8direct connect ie differ share edg corner length clear path number visit cell path exampl input grid output exampl input grid output exampl input grid output constraint gridlength gridilength gridij ","853":"string str1 str2 return shortest string str1 str2 subsequ multipl valid string return string subsequ string delet number charact possibl result string exampl input str1 abac str2 cab output cabac explan str1 abac subsequ cabac delet first str2 cab subsequ cabac delet last ac answer provid shortest string satisfi properti exampl input str1 aaaaaaaa str2 aaaaaaaa output aaaaaaaa constraint str1length str2length str1 str2 lowercas english letter ","854":"larg sampl integ rang sinc sampl larg repres array count countk number time appear sampl calcul follow statist minimum minimum element sampl maximum maximum element sampl mean averag sampl calcul total sum element divid total number element median sampl odd number element median middl element sampl sort sampl even number element median averag middl element sampl sort mode number appear sampl guarante uniqu return statist sampl array floatingpoint number minimum maximum mean median mode answer within actual answer accept exampl input count output explan sampl repres count minimum maximum respect mean sinc size sampl even median averag middl element mode appear sampl exampl input count output explan sampl repres count minimum maximum respect mean display purpos output show round number sinc size sampl odd median middl element mode appear sampl constraint countlength counti sumcount mode sampl count repres uniqu ","855":"car capac empti seat vehicl drive east ie turn around drive west integ capac array trip tripsi numpassengersi toi indic ith trip numpassengersi passeng locat pick drop toi respect locat number kilomet due east car initi locat return true possibl pick drop passeng trip fals otherwis exampl input trip capac output fals exampl input trip capac output true constraint tripslength tripsilength numpassengersi toi capac ","856":"problem interact problem may recal array arr mountain array arrlength exist arrlength arr0 arr1 arri arri arri arri arrarrlength mountain array mountainarr return minimum index mountainarrgetindex target index exist return access mountain array directli may access array use mountainarray interfac mountainarraygetk return element array index 0index mountainarraylength return length array submiss make call mountainarrayget judg wrong answer also solut attempt circumv judg result disqualif exampl input array target output explan exist array index2 index5 return minimum index exampl input array target output explan exist array return constraint mountainarrlength target mountainarrgetindex ","857":"grammar string repres set lowercas word let rexpr denot set word express repres grammar best understood simpl exampl singl letter repres singleton set contain word ra take commadelimit list express take union possibl rabc abc rabbc abc notic final set contain word concaten express take set possibl concaten word first word come first express second word come second express rabcd acadbcbd rabcdefgh abdfg abdfh abefg abefh acdfg acdfh acefg acefh formal rule grammar everi lowercas letter express e1 e2 ek re1 e2 re1 re2 express e1 e2 re1 e2 re1 re2 denot concaten denot cartesian product express repres set word grammar return sort list word express repres exampl input express abcd output acadaebcbdb exampl input express azabcabz output aabacz explan distinct word written final answer constraint expressionlength expressioni consist lowercas english letter express repres set word base grammar descript ","858":"distribut number candi row numpeopl peopl follow way give candi first person candi second person give candi last person go back start row give candi first person candi second person give candi last person process repeat us give candi time move start row reach end run candi last person receiv remain candi necessarili previou gift return array length numpeopl sum candi repres final distribut candi exampl input candi numpeopl output explan first turn ans0 array second turn ans1 array third turn ans2 array fourth turn ans3 candi left final array exampl input candi numpeopl output explan first turn ans0 array second turn ans1 array third turn ans2 array fourth turn ans0 final array constraint candi numpeopl ","859":"infinit binari tree everi node children node label row order odd number row ie first third fifth label left right even number row second fourth sixth label right left label node tree return label path root tree node label exampl input label output exampl input label output constraint label ","860":"array book booksi thicknessi heighti indic thick height ith book also integ shelfwidth want place book order onto bookcas shelv total width shelfwidth choos book place shelf sum thick less equal shelfwidth build anoth level shelf bookcas total height bookcas increas maximum height book put repeat process book place note step process order book place order sequenc book exampl order list book might place first second book onto first shelf third book second shelf fourth fifth book last shelf return minimum possibl height total bookshelf place shelv manner exampl input book shelfwidth output explan sum height shelv notic book number first shelf exampl input book shelfwidth output constraint bookslength thicknessi shelfwidth heighti ","861":"boolean express express evalu either true fals follow shape evalu true evalu fals subexpr evalu logic inner express subexpr subexpr1 subexpr2 subexprn evalu logic inner express subexpr1 subexpr2 subexprn subexpr1 subexpr2 subexprn evalu logic inner express subexpr1 subexpr2 subexprn string express repres boolean express return evalu express guarante express valid follow rule exampl input express output fals explan first evalu express evalu express final return fals exampl input express output true explan evalu fals fals fals true true exampl input express output true explan first evalu fals true fals express evalu fals true return true constraint expressionlength expressioni follow charact ","862":"valid ipv4 ip address return defang version ip address defang ip address replac everi period exampl input address output exampl input address output constraint address valid ipv4 address ","863":"flight label array flight book book bookingsi firsti lasti seatsi repres book flight firsti lasti inclus seatsi seat reserv flight rang return array answer length answeri total number seat reserv flight exampl input book output explan flight label book reserv book reserv book reserv total seat henc answer exampl input book output explan flight label book reserv book reserv total seat henc answer constraint bookingslength bookingsilength firsti lasti seatsi ","864":"root binari tree node tree distinct valu delet node valu todelet left forest disjoint union tree return root tree remain forest may return result order exampl input root todelet output 12null467 exampl input root 124null3 todelet output constraint number node tree node distinct valu todeletelength todelet contain distinct valu ","865":"string valid parenthes string denot vp consist charact empti string written ab concaten vpss written vp similarli defin nest depth depth vp follow depth deptha maxdeptha depthb vpss depth deptha vp exampl vpss nest depth vpss vp seq split disjoint subsequ vpss alength blength seqlength choos maxdeptha depthb minimum possibl valu return answer array length seqlength encod choic answeri seqi part els answeri note even though multipl answer may exist may return exampl input seq output exampl input seq output constraint seqsiz ","866":"suppos class public class foo public void first printfirst public void second printsecond public void third printthird instanc foo pass differ thread thread call first thread call second thread call third design mechan modifi program ensur second execut first third execut second note know thread schedul oper system even though number input seem impli order input format see mainli ensur test comprehens exampl input num output firstsecondthird explan thread fire asynchron input mean thread call first thread call second thread call third firstsecondthird correct output exampl input num output firstsecondthird explan input mean thread call first thread call third thread call second firstsecondthird correct output constraint num permut ","867":"function printnumb call integ paramet print consol exampl call printnumber7 print consol instanc class zeroevenodd function even odd instanc zeroevenodd pass differ thread thread call output thread call even output even number thread call odd output odd number modifi class output seri length seri must implement zeroevenodd class zeroevenoddint initi object number repres number print void zeroprintnumb call printnumb output void evenprintnumb call printnumb output even number void oddprintnumb call printnumb output odd number exampl input output explan thread fire asynchron call call even last call odd correct output exampl input output constraint ","868":"kind thread oxygen hydrogen goal group thread form water molecul barrier thread wait complet molecul form hydrogen oxygen thread releasehydrogen releaseoxygen method respect allow pass barrier thread pass barrier group must immedi bond form water molecul must guarante thread molecul bond thread next molecul word oxygen thread arriv barrier hydrogen thread present must wait hydrogen thread hydrogen thread arriv barrier thread present must wait oxygen thread anoth hydrogen thread worri match thread explicitli thread necessarili know thread pair key thread pass barrier complet set thu examin sequenc thread bind divid group group contain oxygen hydrogen thread write synchron code oxygen hydrogen molecul enforc constraint exampl input water hoh output explan hoh ohh also valid answer exampl input water oohhhh output hhohho explan hohhho ohhhho hhohoh hohhoh ohhhoh hhoohh hohohh ohhohh also valid answer constraint waterlength wateri either exactli water exactli water ","869":"array arr1 arr2 element arr2 distinct element arr2 also arr1 sort element arr1 rel order item arr1 arr2 element appear arr2 place end arr1 ascend order exampl input arr1 arr2 output exampl input arr1 arr2 output constraint arr1length arr2length arr1i arr2i element arr2 distinct arr2i arr1 ","870":"root binari tree return lowest common ancestor deepest leav recal node binari tree leaf children depth root tree depth node depth children lowest common ancestor set node node largest depth everi node subtre root exampl input root 3516208nullnull74 output explan return node valu color yellow diagram node colour blue deepest leafnod tree note node also leaf node depth depth node exampl input root output explan root deepest node tree lca exampl input root 013null2 output explan deepest leaf node tree lca node constraint number node tree rang nodev valu node tree uniqu note question httpsleetcodecomproblemssmallestsubtreewithallthedeepestnod ","871":"hour list number hour work per day employe day consid tire day number hour work strictli greater wellperform interv interv day number tire day strictli larger number nontir day return length longest wellperform interv exampl input hour output explan longest wellperform interv exampl input hour output constraint hourslength hoursi ","872":"project list requir skill reqskil list peopl ith person peoplei contain list skill person consid suffici team set peopl everi requir skill reqskil least person team skill repres team index person exampl team repres peopl skill people0 people1 people3 return suffici team smallest possibl size repres index person may return answer order guarante answer exist exampl input reqskil javanodejsreactj peopl javanodejsnodejsreactj output exampl input reqskil algorithmsmathjavareactjscsharpaw peopl algorithmsmathjavaalgorithmsmathreactjsjavacsharpawsreactjscsharpcsharpmathawsjava output constraint reqskillslength reqskillsilength reqskillsi consist lowercas english letter string reqskil uniqu peoplelength peopleilength peopleijlength peopleij consist lowercas english letter string peoplei uniqu everi skill peoplei skill reqskil guarante suffici team exist ","873":"list domino dominoesi equival dominoesj either domino rotat equal anoth domino return number pair dominoeslength dominoesi equival dominoesj exampl input domino output exampl input domino output constraint dominoeslength dominoesilength dominoesij ","874":"integ number node direct graph node label edg red blue graph could selfedg parallel edg array rededg blueedg rededgesi ai bi indic direct red edg node ai node bi graph blueedgesj uj indic direct blue edg node uj node graph return array answer length answerx length shortest path node node edg color altern along path path exist exampl input rededg blueedg output exampl input rededg blueedg output constraint rededgeslength blueedgeslength rededgesilength blueedgesjlength ai bi uj ","875":"array arr posit integ consid binari tree node either children valu arr correspond valu leaf inord travers tree valu nonleaf node equal product largest leaf valu left right subtre respect among possibl binari tree consid return smallest possibl sum valu nonleaf node guarante sum fit 32bit integ node leaf children exampl input arr output explan possibl tree shown first nonleaf node sum second nonleaf node sum exampl input arr output constraint arrlength arri guarante answer fit 32bit sign integ ie less ","876":"array integ equal length return maximum valu arr1i arr1j arr2i arr2j maximum taken arr1length exampl input arr1 arr2 output exampl input arr1 arr2 output constraint arr1length arr2length arr1i arr2i ","877":"tribonacci sequenc defin follow tn3 tn1 tn2 return valu exampl input output explan exampl input output constraint answer guarante fit within 32bit integ ie answer ","878":"alphabet board start posit correspond charact board00 board abcd fghij klmno pqrst uvwxi shown diagram may make follow move u move posit row posit exist board move posit row posit exist board move posit left column posit exist board move posit right column posit exist board add charact boardrc current posit answer posit exist board posit letter return sequenc move make answer equal target minimum number move may return path exampl input target leet output ddruurrrddd exampl input target code output rrddrruulr constraint targetlength target consist english lowercas letter ","879":"2d grid return number element largest squar subgrid border subgrid doesnt exist grid exampl input grid output exampl input grid output constraint gridlength grid0length gridij ","880":"alic bob continu game pile stone number pile arrang row pile posit integ number stone pilesi object game end stone alic bob take turn alic start first player turn player take stone first remain pile set maxm initi game continu stone taken assum alic bob play optim return maximum number stone alic get exampl input pile output explan alic take pile begin bob take pile alic take pile alic get stone total alic take pile begin bob take pile left case alic get stone total return sinc larger exampl input pile output constraint pileslength pilesi ","881":"sql schema panda schema ","882":"string text1 text2 return length longest common subsequ common subsequ return subsequ string new string gener origin string charact none delet without chang rel order remain charact exampl ace subsequ abcd common subsequ string subsequ common string exampl input text1 abcd text2 ace output explan longest common subsequ ace length exampl input text1 abc text2 abc output explan longest common subsequ abc length exampl input text1 abc text2 def output explan common subsequ result constraint text1length text2length text1 text2 lowercas english charact ","883":"array num integ move consist choos element decreas array zigzag array either everi evenindex element greater adjac element ie everi oddindex element greater adjac element ie return minimum number move transform array num zigzag array exampl input num output explan decreas exampl input num output constraint numslength numsi ","884":"player play turn base game binari tree root binari tree number node tree odd node distinct valu initi first player name valu second player name valu first player color node valu red second player color node valu blue player take turn start first player turn player choos node color red player blue player color uncolor neighbor chosen node either left child right child parent chosen node player choos node way must pass turn player pass turn game end winner player color node second player possibl choos ensur win game return true possibl return fals exampl input root output true explan second player choos node valu exampl input root output fals constraint number node tree odd nodev valu tree uniqu ","885":"implement snapshotarray support follow interfac snapshotarrayint length initi arraylik data structur length initi element equal void setindex val set element index equal val int snap take snapshot array return snapid total number time call snap minu int getindex snapid return valu index time took snapshot snapid exampl input snapshotarraysetsnapsetget output nullnull0null5 explan snapshotarray snapshotarr new snapshotarray3 set length snapshotarrset05 set array0 snapshotarrsnap take snapshot return snapid snapshotarrset06 snapshotarrget00 get valu array0 snapid return constraint length index length val snapid total number time call snap call made set snap get ","886":"string text split substr subtext1 subtext2 subtextk subtexti nonempti string concaten substr equal text ie subtext1 subtext2 subtextk text subtexti subtextk valid valu ie return largest possibl valu exampl input text ghiabcdefhelloadamhelloabcdefghi output explan split string ghiabcdefhelloadamhelloabcdefghi exampl input text merchant output explan split string merchant exampl input text antaprezatepzapreanta output explan split string antaprezatepzapreanta constraint textlength text consist lowercas english charact ","887":"sql schema panda schema ","888":"string date repres gregorian calendar date format yyyymmdd return day number year exampl input date output explan date 9th day year exampl input date output constraint datelength date4 date7 datei digit date repres calendar date jan 1st dec ","889":"dice dice face number integ target return number possibl way total way roll dice sum faceup number equal target sinc answer may larg return modulo exampl input target output explan throw die face way get sum exampl input target output explan throw dice face way get sum exampl input target output explan answer must return modulo constraint target ","890":"design data structur effici find major element subarray major element subarray element occur threshold time subarray implement majoritycheck class majoritycheckerint arr initi instanc class array arr int queryint left int right int threshold return element subarray arrleftright occur least threshold time element exist exampl input majoritycheck queri queri queri output null explan majoritycheck majoritycheck new majoritychecker1 majoritycheckerquery0 return majoritycheckerquery0 return majoritycheckerquery2 return constraint arrlength arri left right arrlength threshold right left threshold right left call made queri ","891":"sql schema panda schema ","892":"array string word string char string good form charact char charact use return sum length good string word exampl input word catbthattre char atach output explan string form cat hat answer exampl input word helloworldleetcod char welldonehoneyr output explan string form hello world answer constraint wordslength wordsilength charslength wordsi char lowercas english letter ","893":"root binari tree level root level children return smallest level sum valu node level maxim exampl input root 17078nullnul output explan level sum level sum level sum return level maximum sum level exampl input root 989null102509869389388nullnullnull32127 output constraint number node tree rang nodev ","894":"string return last substr lexicograph order exampl input abab output bab explan substr ab aba abab ba bab lexicograph maximum substr bab exampl input leetcod output tcode constraint slength contain lowercas english letter ","895":"sql schema panda schema ","896":"transact possibl invalid amount exce occur within includ minut anoth transact name differ citi array string transact transactionsi consist commasepar valu repres name time minut amount citi transact return list transact possibl invalid may return answer order exampl input transact alice20800mtvalice50100beij output alice20800mtvalice50100beij explan first transact invalid second transact occur within differ minut name differ citi similarli second invalid exampl input transact alice20800mtvalice501200mtv output alice501200mtv exampl input transact alice20800mtvbob501200mtv output bob501200mtv constraint transactionslength transactionsi take form nametimeamountc name citi lowercas english letter length time digit repres integ amount digit repres integ ","897":"let function frequenc lexicograph smallest charact nonempti string exampl dcce lexicograph smallest charact frequenc array string word anoth array queri string queri queri queriesi count number word word fqueriesi word return integ array answer answeri answer ith queri exampl input queri cbd word zaaaz output explan first queri fcbd fzaaaz fcbd fzaaaz exampl input queri bbbcc word aaaaaaaaaa output explan first queri fbbb faaaa second queri faaa faaaa fcc constraint querieslength wordslength queriesilength wordsilength queriesij wordsij lowercas english letter ","898":"head link list repeatedli delet consecut sequenc node sum sequenc return head final link list may return answer note exampl sequenc serial listnod object exampl input head output note answer would also accept exampl input head output exampl input head output constraint link list contain node node link list nodev ","899":"return number permut prime number prime indic 1index recal integ prime greater written product posit integ smaller sinc answer may larg return answer modulo exampl input output explan exampl valid permut prime number index exampl input output constraint ","900":"string array queri queriesi lefti righti ki may rearrang substr sleftirighti queri choos ki replac lowercas english letter substr possibl palindrom string oper result queri true otherwis result fals return boolean array answer answeri result ith queri queriesi note letter count individu replac exampl sleftirighti aaa ki replac letter also note queri modifi initi string exampl input abcda queri output truefalsefalsetruetru explan queries0 substr palidrom queries1 substr palidrom queries2 substr abcd palidrom replac charact queries3 substr abcd could chang abba palidrom also chang baab first rearrang bacd replac cd ab queries4 substr abcda could chang abcba palidrom exampl input lyb queri output falsetru constraint slength querieslength lefti righti slength ki slength consist lowercas english letter ","901":"respect puzzl string word valid follow condit satisfi word contain first letter puzzl letter word letter puzzl exampl puzzl abcdefg valid word face cabbag baggag invalid word beef includ base includ puzzl return array answer answeri number word word list word valid respect puzzl puzzlesi exampl input word aaaaasasableabilityacttactoraccess puzzl aboveyzabrodyzabsluteabsoryzactreszgaswxyz output explan valid word aaaa valid word abrodyz aaaa valid word abslut aaaa asa abl valid word absoryz aaaa asa valid word actresz aaaa asa actt access valid word gaswxyz caus none word list contain letter exampl input word applepleaspleas puzzl aelwxyzaelpxyzaelpsxysaelpxyxaelpsi output constraint wordslength wordsilength puzzleslength puzzlesilength wordsi puzzlesi lowercas english letter puzzlesi contain repeat charact ","902":"sql schema panda schema ","903":"bu stop number form circl know distanc pair neighbor stop distancei distanc stop number bu goe along direct ie clockwis counterclockwis return shortest distanc start destin stop exampl input distanc start destin output explan distanc minimum exampl input distanc start destin output explan distanc minimum exampl input distanc start destin output explan distanc minimum constraint distancelength start destin distancei ","904":"date return correspond day week date input integ repres day month year respect return answer follow valu sunday monday tuesday wednesday thursday friday saturday exampl input day month year output saturday exampl input day month year output sunday exampl input day month year output sunday constraint date valid date year ","905":"array integ return maximum sum nonempti subarray contigu element element delet word want choos subarray option delet element still least element left sum remain element maximum possibl note subarray need nonempti delet element exampl input arr output explan choos drop thu subarray becom maximum valu exampl input arr output explan choos maximum sum exampl input arr output explan final subarray need nonempti cant choos delet get empti subarray make sum equal constraint arrlength arri ","906":"integ array arr1 arr2 return minimum number oper possibl need make arr1 strictli increas oper choos indic arr1length arr2length assign arr1i arr2j way make arr1 strictli increas return exampl input arr1 arr2 output explan replac arr1 exampl input arr1 arr2 output explan replac replac arr1 exampl input arr1 arr2 output explan cant make arr1 strictli increas constraint arr1length arr2length arr1i arr2i ","907":"string text want use charact text form mani instanc word balloon possibl use charact text return maximum number instanc form exampl input text nlaebolko output exampl input text loonbalxballpoon output exampl input text leetcod output constraint textlength text consist lower case english letter note question rearrang charact make target string ","908":"integ array arr integ modifi array repeat time exampl arr modifi array return maximum subarray sum modifi array note length subarray sum case answer larg return answer modulo exampl input arr output exampl input arr output exampl input arr output constraint arrlength arri ","909":"sql schema panda schema ","910":"function printfizz print word fizz consol printbuzz print word buzz consol printfizzbuzz print word fizzbuzz consol printnumb print integ consol instanc class fizzbuzz function fizz buzz fizzbuzz number instanc fizzbuzz pass differ thread thread call fizz output word fizz thread call buzz output word buzz thread call fizzbuzz output word fizzbuzz thread call number output integ modifi class output seri fizz buzz ith token 1index seri fizzbuzz divis fizz divis buzz divis divis implement fizzbuzz class fizzbuzzint initi object number repres length sequenc print void fizzprintfizz call printfizz output fizz void buzzprintbuzz call printbuzz output buzz void fizzbuzzprintfizzbuzz call printfizzbuzz output fizzbuzz void numberprintnumb call printnumb output number exampl input output 12fizz4buzzfizz78fizzbuzz11fizz1314fizzbuzz exampl input output 12fizz4buzz constraint ","911":"array distinct integ arr find pair element minimum absolut differ element return list pair ascend orderwith respect pair pair follow arr equal minimum absolut differ element arr exampl input arr output explan minimum absolut differ list pair differ equal ascend order exampl input arr output exampl input arr output constraint arrlength arri ","912":"ugli number posit integ divis integ return nth ugli number exampl input output explan ugli number 3rd exampl input output explan ugli number 4th exampl input output explan ugli number 5th constraint guarante result rang ","913":"string array pair indic string pair pairsi indic indices0index string swap charact pair indic pair number time return lexicograph smallest string chang use swap exampl input dcab pair output bacd explain swap bcad swap bacd exampl input dcab pair output abcd explain swap bcad swap acbd swap abcd exampl input cba pair output abc explain swap bca swap bac swap abc constraint slength pairslength pairsi0 pairsi1 slength contain lower case english letter ","914":"item belong group groupi group ith item belong equal ith item belong group item group index group item belong return sort list item item belong group next sort list relat item beforeitemsi list contain item come ith item sort array left ith item return solut solut return empti list solut exampl input group beforeitem output exampl input group beforeitem output explan exampl except need sort list constraint grouplength beforeitemslength groupi beforeitemsilength beforeitemsij beforeitemsij beforeitemsi contain duplic element ","915":"sql schema panda schema ","916":"design skiplist without use builtin librari skiplist data structur take ologn time add eras search compar treap redblack tree function perform code length skiplist compar short idea behind skiplist simpl link list exampl skiplist contain want add skiplist work way artyom kalinin cc bysa via wikimedia common see mani layer skiplist layer sort link list help top layer add eras search faster proven averag time complex oper ologn space complex see skiplist httpsenwikipediaorgwikiskiplist implement skiplist class skiplist initi object skiplist bool searchint target return true integ target exist skiplist fals otherwis void addint num insert valu num skiplist bool eraseint num remov valu num skiplist return true num exist skiplist noth return fals exist multipl num valu remov fine note duplic may exist skiplist code need handl situat exampl input skiplist add add add search add search eras eras search output null null null null fals null true fals true fals explan skiplist skiplist new skiplist skiplistadd1 skiplistadd2 skiplistadd3 skiplistsearch0 return fals skiplistadd4 skiplistsearch1 return true skiplisterase0 return fals skiplist skiplisterase1 return true skiplistsearch1 return fals alreadi eras constraint num target call made search add eras ","917":"array integ arr return true number occurr valu array uniqu fals otherwis exampl input arr output true explan valu occurr valu number occurr exampl input arr output fals exampl input arr output true constraint arrlength arri ","918":"string length integ maxcost want chang chang ith charact ith charact cost si ti ie absolut differ ascii valu charact return maximum length substr chang correspond substr cost less equal maxcost substr chang correspond substr return exampl input abcd bcdf maxcost output explan abc chang bcd cost maximum length exampl input abcd cdef maxcost output explan charact cost chang charact maximum length exampl input abcd acd maxcost output explan make chang maximum length constraint slength tlength slength maxcost lowercas english letter ","919":"string integ duplic remov consist choos adjac equal letter remov caus left right side delet substr concaten togeth repeatedli make duplic remov longer return final string duplic remov made guarante answer uniqu exampl input abcd output abcd explan there noth delet exampl input deeedbbcccbdaa output explan first delet eee ccc get ddbbbdaa delet bbb get dddaa final delet get exampl input pbbcggttciiippooaai output constraint slength contain lowercas english letter ","920":"grid snake span cell start move top left corner grid empti cell repres zero block cell repres one snake want reach lower right corner move snake move cell right block cell move keep horizontalvert posit snake move cell block cell move keep horizontalvert posit snake rotat clockwis horizont posit cell empti case snake move c1 rotat counterclockwis vertic posit cell right empti case snake move c1 return minimum number move reach target way reach target return exampl input grid output explan possibl solut right right rotat clockwis right rotat counterclockwis right exampl input grid output constraint gridij guarante snake start empti cell ","921":"sql schema panda schema ","922":"chip posit ith chip positioni need move chip posit step chang posit ith chip positioni positioni positioni cost positioni positioni cost return minimum cost need move chip posit exampl input posit output explan first step move chip posit posit cost second step move chip posit posit cost total cost exampl input posit output explan move chip posit posit move cost total cost exampl input posit output constraint positionlength positioni ","923":"integ array arr integ differ return length longest subsequ arr arithmet sequenc differ adjac element subsequ equal differ subsequ sequenc deriv arr delet element without chang order remain element exampl input arr differ output explan longest arithmet subsequ exampl input arr differ output explan longest arithmet subsequ singl element exampl input arr differ output explan longest arithmet subsequ constraint arrlength arri differ ","924":"gold mine grid size cell mine integ repres amount gold cell empti return maximum amount gold collect condit everi time locat cell collect gold cell posit walk step left right cant visit cell never visit cell gold start stop collect gold posit grid gold exampl input grid output explan path get maximum gold exampl input grid output explan path get maximum gold constraint gridlength gridilength gridij cell contain gold ","925":"integ task count mani string length form follow rule charact lower case vowel e u vowel may follow e vowel e may follow vowel may follow anoth vowel may follow u vowel u may follow sinc answer may larg return modulo exampl input output explan possibl string e u exampl input output explan possibl string ae ea ei ia ie io iu oi ou ua exampl input output constraint ","926":"balanc string equal quantiti charact balanc string split number substr substr balanc return maximum number balanc string obtain exampl input rlrrllrlrl output explan split rrll substr contain number exampl input rlrrrllrll output explan split rrrllrll substr contain number note split 5th substr balanc exampl input llllrrrr output explan split llllrrrr constraint slength si either balanc string ","927":"0index chessboard multipl black queen white king 2d integ array queen queensi xqueeni yqueeni repres posit ith black queen chessboard also integ array king length king xking yking repres posit white king return coordin black queen directli attack king may return answer order exampl input queen king output explan diagram show queen directli attack king queen attack king ie mark red dash exampl input queen king output explan diagram show queen directli attack king queen attack king ie mark red dash constraint queenslength queensilength kinglength xqueeni yqueeni xking yking posit uniqu ","928":"die simul gener random number roll introduc constraint gener roll number rollmaxi 1index consecut time array integ rollmax integ return number distinct sequenc obtain exact roll sinc answer may larg return modulo sequenc consid differ least element differ exampl input rollmax output explan roll die constraint die possibl combin case look rollmax array number appear consecut therefor sequenc occur final answer exampl input rollmax output exampl input rollmax output constraint rollmaxlength rollmaxi ","929":"array num posit integ return longest possibl length array prefix num possibl remov exactli element prefix everi number appear number occurr remov element remain element still consid everi appear number number ocurr exampl input num output explan subarray length remov nums4 get number appear exactli twice exampl input num output constraint numslength numsi ","930":"silent philosoph sit round tabl bowl spaghetti fork place pair adjac philosoph philosoph must altern think eat howev philosoph eat spaghetti left right fork fork held philosoph philosoph use fork use anoth philosoph individu philosoph finish eat need put fork fork becom avail other philosoph take fork right left becom avail start eat get fork eat limit remain amount spaghetti stomach space infinit suppli infinit demand assum design disciplin behaviour concurr algorithm philosoph starv ie forev continu altern eat think assum philosoph know other may want eat think problem statement imag taken wikipediaorg philosoph id number clockwis order implement function void wantstoeatphilosoph pickleftfork pickrightfork eat putleftfork putrightfork philosoph id philosoph want eat pickleftfork pickrightfork function call pick correspond fork philosoph eat function call let philosoph eat pick fork putleftfork putrightfork function call put correspond fork philosoph philosoph assum think long ask eat function call number thread repres philosoph simultan use object class simul process function may call philosoph even last call end exampl input output explan number time philosoph call function output array describ call made function control fork eat function format outputi integ id philosoph specifi fork left right specifi oper pick put eat constraint ","931":"passeng board airplan exactli seat first passeng lost ticket pick seat randomli rest passeng take seat still avail pick seat randomli find seat occupi return probabl nth person get seat exampl input output explan first person get first seat exampl input output explan second person probabl get second seat first person get first seat constraint ","932":"array coordin coordinatesi repres coordin point check point make straight line xy plane exampl input coordin output true exampl input coordin output fals constraint coordinateslength coordinatesilength coordinatesi0 coordinatesi1 coordin contain duplic point ","933":"list folder folder return folder remov subfold folder may return answer order folderi locat within anoth folderj call subfold format path concaten string form follow lowercas english letter exampl leetcod leetcodeproblem valid path empti string exampl input folder aabcdcdecf output acdcf explan folder ab subfold cde insid folder cd filesystem exampl input folder aabcabd output explan folder abc abd remov subfold exampl input folder abcabcaabd output abcabcaabd constraint folderlength folderilength folderi contain lowercas letter folderi alway start charact folder name uniqu ","934":"string length contain kind charact e string said balanc charact appear time length string return minimum length substr replac string length make balanc alreadi balanc return exampl input qwer output explan alreadi balanc exampl input output explan need replac rqwe qrwe balanc exampl input qqqw output explan replac first qq er constraint slength multipl contain e ","935":"callabl function fx hidden formula valu revers engin formula return posit integ pair fxi may return pair order exact formula hidden function monoton increas ie fx fx fx fx function interfac defin like interfac customfunct public return posit integ fx posit integ base formula int fint int judg solut follow judg list hidden implement customfunct along way gener answer key valid pair specif judg receiv input functionid determin implement test code target judg call findsolut compar result answer key result match answer key solut accept exampl input functionid output explan hidden formula functionid fx follow posit integ valu make fx equal x1 y4 f1 x2 y3 f2 x3 y2 f3 x4 y1 f4 exampl input functionid output explan hidden formula functionid fx follow posit integ valu make fx equal x1 y5 f1 x5 y1 f5 constraint functionid guarante solut fx rang also guarante fx fit bit sign integ ","936":"integ start task return permut 0122n p0 start pi pi1 differ bit binari represent p0 p2n must also differ bit binari represent exampl input start output explan binari represent permut adjac element differ bit anoth valid permut exampl input start output explan binari represent permut constraint start ","937":"array string arr string form concaten subsequ arr uniqu charact return maximum possibl length subsequ array deriv anoth array delet element without chang order remain element exampl input arr uniqu output explan valid concaten un iq ue uniq un iq iqu iq ue maximum length exampl input arr charact output explan possibl longest valid concaten chaer cha er acter act er exampl input arr abcdefghijklmnopqrstuvwxyz output explan string arr charact constraint arrlength arrilength arri contain lowercas english letter ","938":"rectangl size return minimum number integersid squar tile rectangl exampl input output explan squar necessari cover rectangl squar 1x1 squar 2x2 exampl input output exampl input output constraint ","939":"string equal length consist letter task make string equal swap charact belong differ string mean swap s1i return minimum number swap requir make equal return imposs exampl input xx output explan swap yx yx exampl input xy yx output explan swap xx swap xy xy note swap make equal yx caus swap char differ string exampl input xx xy output constraint s1length s2length s1length s2length contain ","940":"array integ num integ continu subarray call nice odd number return number nice subarray exampl input num output explan subarray odd number exampl input num output explan odd number array exampl input num output constraint numslength numsi numslength ","941":"string lowercas english charact task remov minimum number parenthes posit result parenthes string valid return valid string formal parenthes string valid empti string contain lowercas charact written ab concaten valid string written valid string exampl input leetcod output leetcod explan leetcod leetcod would also accept exampl input abcd output abcd exampl input output explan empti string also valid constraint slength si either lowercas english letter ","942":"array num posit integ task select subset num multipli element integ add number array said good obtain sum array possibl subset multiplicand return true array good otherwis return fals exampl input num output true explan pick number exampl input num output true explan pick number exampl input num output fals constraint numslength numsi ","943":"sql schema panda schema ","944":"matrix initi also 2d array indic indicesi ri ci repres 0index locat perform increment oper matrix locat indicesi follow increment cell row ri increment cell column ci indic return number oddvalu cell matrix appli increment locat indic exampl input indic output explan initi matrix appli first increment becom final matrix contain odd number exampl input indic output explan final matrix odd number final matrix constraint indiceslength ri ci could solv indiceslength time extra space ","945":"follow detail matrix column row matrix binari matrix mean element matrix sum element 0thupper row upper sum element 1stlower row lower sum element ith column0index colsumi colsum integ array length task reconstruct matrix upper lower colsum return 2d integ array valid solut accept valid solut exist return empti 2d array exampl input upper lower colsum output explan also correct answer exampl input upper lower colsum output exampl input upper lower colsum output constraint colsumlength upper lower colsumlength colsumi ","946":"2d grid consist land water island maxim 4direct connect group close island island total left top right bottom surround return number close island exampl input grid output explan island gray close complet surround water group exampl input grid output exampl input grid output constraint gridlength grid0length gridij ","947":"list word list singl letter might repeat score everi charact return maximum score valid set word form use letter wordsi use time necessari use charact letter letter use score letter score0 score1 score25 respect exampl input word dogcatdadgood letter aacdddgoo score output explan score c9 g3 letter form word dad good score word dad dog get score exampl input word xxxzaxbxcx letter zabcxxx score output explan score c4 x5 z10 letter form word ax cx score word xxxz get score exampl input word leetcod letter letcod score output explan letter e use constraint wordslength wordsilength letterslength lettersilength scorelength scorei wordsi lettersi contain lower case english letter ","948":"2d grid size integ need shift grid time shift oper element gridij move gridij element gridin move gridi element gridm move grid00 return 2d grid appli shift oper time exampl input grid output exampl input grid output exampl input grid output constraint gridlength gridilength gridij ","949":"binari tree follow rule rootval treenodev treenodeleft null treenodeleftv treenodev treenoderight null treenoderightv binari tree contamin mean treenodev chang implement findel class findelementstreenod root initi object contamin binari tree recov bool findint target return true target valu exist recov binari tree exampl input findelementsfindfind 1null112 output nullfalsetru explan findel findel new findelements1null1 findelementsfind1 return fals findelementsfind2 return true exampl input findelementsfindfindfind output nulltruetruefals explan findel findel new findelements11111 findelementsfind1 return true findelementsfind3 return true findelementsfind5 return fals exampl input findelementsfindfindfindfind 1null11null12345 output nulltruefalsefalsetru explan findel findel new findelements1null11null1 findelementsfind2 return true findelementsfind3 return fals findelementsfind4 return fals findelementsfind5 return true constraint treenodev height binari tree less equal total number node total call find target ","950":"integ array num return maximum possibl sum element array divis exampl input num output explan pick number sum maximum sum divis exampl input num output explan sinc divis pick number exampl input num output explan pick number sum maximum sum divis constraint numslength numsi ","951":"storekeep game player push box around warehous tri get target locat game repres grid charact grid element wall floor box task move box target posit follow rule charact repres player player move left right grid floor empti cell charact repres floor mean free cell walk charact repres wall mean obstacl imposs walk box target cell grid box move adjac free cell stand next box move direct box push player walk box return minimum number push move box target way reach target return exampl input grid output explan return number time box push exampl input grid output exampl input grid output explan push box left left constraint gridlength gridilength grid contain charact charact grid ","952":"2d plane point integ coordin pointsi xi yi return minimum time second visit point order point move accord rule second either move vertic unit move horizont unit move diagon sqrt2 unit word move unit vertic unit horizont second visit point order appear array allow pass point appear later order count visit exampl input point output explan optim path time second time second total time second exampl input point output constraint pointslength pointsilength pointsi0 pointsi1 ","953":"map server center repres integ matrix grid mean cell server mean server server said commun row column return number server commun server exampl input grid output explan server commun other exampl input grid output explan server commun least server exampl input grid output explan server first row commun server third column commun server right bottom corner cant commun server constraint gridlength gridilength gridij ","954":"array string product string searchword design system suggest product name product charact searchword type suggest product common prefix searchword product common prefix return lexicograph minimum product return list list suggest product charact searchword type exampl input product mobilemousemoneypotmonitormousepad searchword mous output mobilemoneypotmonitormobilemoneypotmonitormousemousepadmousemousepadmousemousepad explan product sort lexicograph mobilemoneypotmonitormousemousepad type mo product match show user mobilemoneypotmonitor type mou mou mous system suggest mousemousepad exampl input product havana searchword havana output havanahavanahavanahavanahavanahavana explan word havana alway suggest type search word constraint productslength productsilength sumproductsilength string product uniqu productsi consist lowercas english letter searchwordlength searchword consist lowercas english letter ","955":"pointer index array size arrlen step move posit left posit right array stay place pointer place outsid array time integ step arrlen return number way pointer still index exactli step step sinc answer may larg return modulo exampl input step arrlen output explan differ way stay index step right left stay stay right left right stay left stay stay stay exampl input step arrlen output explan differ way stay index step right left stay stay exampl input step arrlen output constraint step arrlen ","956":"tictacto play player grid rule tictacto player take turn place charact empti squar first player alway place charact second player alway place charact charact alway place empti squar never fill one game end nonempti charact fill row column diagon game also end squar nonempti move play game 2d integ array move movesi rowi coli indic ith move play gridrowicoli return winner game exist case game end draw return draw still movement play return pend assum move valid ie follow rule tictacto grid initi empti play first exampl input move output explan win alway play first exampl input move output explan win exampl input move output draw explan game end draw sinc move make constraint moveslength movesilength rowi coli repeat element move move rule tic tac toe ","957":"matrix one zero return mani squar submatric one exampl input matrix output explan squar side squar side squar side total number squar exampl input matrix output explan squar side squar side total number squar constraint arrlength arr0length arrij ","958":"string contain lowercas letter integ need first chang charact lowercas english letter divid nonempti disjoint substr substr palindrom return minim number charact need chang divid string exampl input abc output explan split string ab chang charact ab make palindrom exampl input aabbc output explan split string palindrom exampl input leetcod output constraint slength contain lowercas english letter ","959":"sql schema panda schema ","960":"integ number return differ product digit sum digit exampl input output explan product digit sum digit result exampl input output explan product digit sum digit result constraint ","961":"peopl split unknown number group person label uniqu id integ array groupsiz groupsizesi size group person exampl groupsizes1 person must group size return list group person group size groupsizesi person appear exactli group everi person must group multipl answer return guarante least valid solut input exampl input groupsiz output explan first group size groupsizes5 second group size groupsizes0 groupsizes1 groupsizes2 third group size groupsizes3 groupsizes4 groupsizes6 possibl solut exampl input groupsiz output constraint groupsizeslength groupsizesi ","962":"binari matrix mat step choos cell flip neighbor exist flip chang pair cell call neighbor share edg return minimum number step requir convert mat matrix binari matrix matrix cell equal matrix matrix cell equal exampl input mat output explan possibl solut flip final shown exampl input mat output explan matrix matrix need chang exampl input mat output explan matrix matrix constraint matlength matilength matij either ","963":"design combinationiter class combinationiteratorstr charact int combinationlength initi object string charact sort distinct lowercas english letter number combinationlength argument next return next combin length combinationlength lexicograph order return true exist next combin exampl input combinationiter next next next abc output null ab true ac true fals explan combinationiter new combinationiteratorabc itrnext return ab itrhasnext return true itrnext return ac itrhasnext return true itrnext return itrhasnext return fals constraint combinationlength characterslength charact charact uniqu call made next guarante call function next valid ","964":"integ array sort nondecreas order exactli integ array occur time return integ exampl input arr output exampl input arr output constraint arrlength arri ","965":"array interv intervalsi li ri repres interv li ri remov interv cover anoth interv list interv cover interv return number remain interv exampl input interv output explan interv cover therefor remov exampl input interv output constraint intervalslength intervalsilength li ri interv uniqu ","966":"integ matrix grid return minimum sum fall path nonzero shift fall path nonzero shift choic exactli element row grid element chosen adjac row column exampl input grid output explan possibl fall path fall path smallest sum answer exampl input grid output constraint gridlength gridilength gridij ","967":"head refer node singlylink list valu node link list either link list hold binari represent number return decim valu number link list signific bit head link list exampl input head output explan base base exampl input head output constraint link list empti number node exceed node valu either ","968":"integ sequenti digit digit number previou digit return sort list integ rang low high inclus sequenti digit exampl input low high output exampl input low high output constraint low high ","969":"matrix mat integ threshold return maximum sidelength squar sum less equal threshold return squar exampl input mat threshold output explan maximum side length squar sum less shown exampl input mat threshold output constraint matlength matilength matij threshold ","970":"integ matrix grid cell either empti obstacl move left right empti cell step return minimum number step walk upper left corner lower right corner elimin obstacl possibl find walk return exampl input grid output explan shortest path without elimin obstacl shortest path obstacl elimin posit path exampl input grid output explan need elimin least obstacl find walk constraint gridlength gridilength gridij either grid00 gridm ","971":"array num integ return mani contain even number digit exampl input num output explan contain digit even number digit contain digit odd number digit contain digit odd number digit contain digit odd number digit contain digit even number digit therefor contain even number digit exampl input num output explan contain even number digit constraint numslength numsi ","972":"array integ num posit integ check whether possibl divid array set consecut number return true possibl otherwis return fals exampl input num output true explan array divid exampl input num output true explan array divid exampl input num output fals explan array divid subarray size constraint numslength numsi note question httpsleetcodecomproblemshandofstraight ","973":"string return maximum number occurr substr follow rule number uniqu charact substr must less equal maxlett substr size must minsiz maxsiz inclus exampl input aababcaab maxlett minsiz maxsiz output explan substr aab occurr origin string satisfi condit uniqu letter size minsiz maxsiz exampl input aaaa maxlett minsiz maxsiz output explan substr aaa occur time string overlap constraint slength maxlett minsiz maxsiz min26 slength consist lowercas english letter ","974":"box label array statu candi key containedbox statusi ith box open ith box close candiesi number candi ith box keysi list label box open open ith box containedboxesi list box found insid ith box integ array initialbox contain label box initi take candi open box use key open new box also use box find return maximum number candi get follow rule exampl input statu candi key containedbox initialbox output explan initi box find candi box box close key open box find candi key box box box find candi box find key box box remain close total number candi collect candi exampl input statu candi key containedbox initialbox output explan initi box open find box key total number candi constraint statuslength candieslength keyslength containedboxeslength statusi either candiesi keysilength keysij valu keysi uniqu containedboxesilength containedboxesij valu containedboxesi uniqu box contain box initialboxeslength initialboxesi ","975":"array arr replac everi element array greatest element among element right replac last element return array exampl input arr output explan index greatest element right index index index greatest element right index index index greatest element right index index index greatest element right index index index greatest element right index index index element right index put exampl input arr output explan element right index constraint arrlength arri ","976":"integ array arr target valu target return integ valu chang integ larger valu array equal valu sum array get close possibl absolut differ target case tie return minimum integ notic answer neccesarilli number arr exampl input arr target output explan use arr convert sum that optim answer exampl input arr target output exampl input arr target output constraint arrlength arri target ","977":"squar board charact move board start bottom right squar mark charact need reach top left squar mark charact e rest squar label either numer charact obstacl move go left upleft diagon obstacl return list integ first integ maximum sum numer charact collect second number path take get maximum sum taken modulo case path return exampl input board e232x212 output exampl input board e121x121 output exampl input board e11xxx11 output constraint boardlength boardilength ","978":"root binari tree return sum valu deepest leav exampl input root 12345null67nullnullnullnull8 output exampl input root 67827139null14nullnullnull5 output constraint number node tree rang nodev ","979":"integ return array contain uniqu integ add exampl input output explan array also accept exampl input output exampl input output constraint ","980":"binari search tree root1 root2 return list contain integ tree sort ascend order exampl input root1 root2 output exampl input root1 1null8 root2 output constraint number node tree rang nodev ","981":"array nonneg integ arr initi posit start index array index jump arri arri check reach index valu notic jump outsid array time exampl input arr start output true explan possibl way reach index valu index index index index index index index index index exampl input arr start output true explan possibl way reach index valu index index index index exampl input arr start output fals explan way reach index valu constraint arrlength arri arrlength start arrlength ","982":"equat repres word left side result right side need check equat solvabl follow rule charact decod digit charact map digit wordsi result decod number without lead zero sum number left side word equal number right side result return true equat solvabl otherwis return fals exampl input word sendmor result money output true explan map e5 y2 send money exampl input word sixsevenseven result twenti output true explan map x0 e8 y4 twenti exampl input word leetcod result point output fals explan possibl map satisfi equat return fals note differ charact map digit constraint wordslength wordsilength resultlength wordsi result contain uppercas english letter number differ charact use express ","983":"string form digit want map english lowercas charact follow charact repres respect charact repres respect return string form map test case gener uniqu map alway exist exampl input output jkab explan exampl input output acz constraint slength consist digit letter valid string map alway possibl ","984":"array arr posit integ also array queri queriesi lefti righti queri comput element lefti righti arrlefti arrlefti arrrighti return array answer answeri answer ith queri exampl input arr queri output explan binari represent element array valu queri exampl input arr queri output constraint arrlength querieslength arri queriesilength lefti righti arrlength ","985":"peopl person uniqu id array watchedvideo friend watchedvideosi friendsi contain list watch video list friend respect person id level video watch video friend level video watch video friend friend gener level video watch video peopl shortest path exactli equal id level video return list video order frequenc increas video frequenc order alphabet least greatest exampl input watchedvideo abcbcd friend id level output explan id green color figur friend yellow color figur person id watchedvideo person id watchedvideo frequenc watchedvideo friend exampl input watchedvideo abcbcd friend id level output explan id green color figur friend friend person id yellow color figur constraint watchedvideoslength friendslength watchedvideosilength watchedvideosijlength friendsilength friendsij id level friendsi contain friendsj contain ","986":"string step insert charact index string return minimum number step make palindrom palindrom string read backward well forward exampl input zzazz output explan string zzazz alreadi palindrom need insert exampl input mbadm output explan string mbdadbm mdbabdm exampl input leetcod output explan insert charact string becom leetcodocteel constraint slength consist lowercas english letter ","987":"list num integ repres list compress runlength encod consid adjac pair element freq val nums2i nums2i1 pair freq element valu val concaten sublist concaten sublist left right gener decompress list return decompress list exampl input num output explan first pair mean freq val gener array second pair mean freq val gener end concaten exampl input num output constraint numslength numslength numsi ","988":"matrix mat integ return matrix answer answerij sum element matrc valid posit matrix exampl input mat output exampl input mat output constraint matlength matilength matij ","989":"root binari tree return sum valu node evenvalu grandpar node evenvalu grandpar return grandpar node parent parent exist exampl input root 67827139null14nullnullnull5 output explan red node node evenvalu grandpar blue node evenvalu grandpar exampl input root output constraint number node tree rang nodev ","990":"return number distinct nonempti substr text written concaten string ie written string exampl input text abcabcabc output explan substr abcabc bcabca cabcab exampl input text leetcodeleetcod output explan substr ee leetcodeleetcod constraint textlength text lowercas english letter ","991":"integ posit integ contain decim represent integ return list integ integ test case gener least valid solut mani valid solut return exampl input output explan let integ exampl input output explan let integ note valid answer accept constraint ","992":"posit number return minimum flip requir bit make bitwis oper flip oper consist chang singl bit chang bit binari represent exampl input output explan flip exampl input output exampl input output constraint ","993":"comput number connect ethernet cabl connect form network connectionsi ai bi repres connect comput ai bi comput reach comput directli indirectli network initi comput network connect extract certain cabl directli connect comput place pair disconnect comput make directli connect return minimum number time need order make comput connect possibl return exampl input connect output explan remov cabl comput place comput exampl input connect output exampl input connect output explan enough cabl constraint connectionslength minn connectionsilength ai bi ai bi repeat connect comput connect cabl ","994":"sql schema panda schema ","995":"posit integ num consist digit return maximum number get chang digit becom becom exampl input num output explan chang first digit result chang second digit result chang third digit result chang fourth digit result maximum number exampl input num output explan chang last digit result maximum number exampl input num output explan better appli chang constraint num num consist digit ","996":"string return word vertic order appear word return list string complet space necessari trail space allow word would put column column word exampl input output hayoroweu explan word print vertic hay oro exampl input output tbontboeroo explan trail space allow tbontb oeroo exampl input contest come output cicoson ie constraint slength contain upper case english letter guarante space word ","997":"binari tree root integ target delet leaf node valu target note delet leaf node valu target parent node becom leaf node valu target also delet need continu exampl input root 1232null24 target output 1null3null4 explan leaf node green valu target remov pictur left remov new node becom leaf node valu target pictur center exampl input root target output 13nullnull2 exampl input root 12null2null2 target output explan leaf node green valu target remov step constraint number node tree rang nodev target ","998":"onedimension garden xaxi garden start point end point ie length garden tap locat point garden integ integ array rang length rangesi 0index mean ith tap water area rangesi rangesi open return minimum number tap open water whole garden garden water return exampl input rang output explan tap point cover interv tap point cover interv tap point cover interv tap point cover interv tap point cover interv tap point cover interv open second tap water whole garden exampl input rang output explan even activ tap water whole garden constraint rangeslength rangesi ","999":"sql schema panda schema ","1000":"palindrom string lowercas english letter palindrom replac exactli charact lowercas english letter result string palindrom lexicograph smallest possibl return result string way replac charact make palindrom return empti string string lexicograph smaller string length first posit differ charact strictli smaller correspond charact exampl abcc lexicograph smaller abcd first posit differ fourth charact smaller exampl input palindrom abccba output aaccba explan mani way make abccba palindrom zbccba aaccba abacba way aaccba lexicograph smallest exampl input palindrom output explan way replac singl charact make palindrom return empti string constraint palindromelength palindrom consist lowercas english letter ","1001":"matrix diagon diagon line cell start cell either topmost row leftmost column go bottomright direct reach matrix end exampl matrix diagon start mat20 mat matrix includ cell mat20 mat31 mat42 matrix mat integ sort matrix diagon ascend order return result matrix exampl input mat output exampl input mat output constraint matlength matilength matij ","1002":"integ array num valu array defin sum numsi numsi numslength allow select subarray array revers perform oper find maximum possibl valu final array exampl input num output explan revers subarray array becom whose valu exampl input num output constraint numslength numsi answer guarante fit 32bit integ ","1003":"array integ arr replac element rank rank repres larg element rank follow rule rank integ start larger element larger rank element equal rank must rank small possibl exampl input arr output explan largest element smallest second smallest third smallest exampl input arr output explan element share rank exampl input arr output constraint arrlength arri ","1004":"string consist letter singl step remov palindrom subsequ return minimum number step make string empti string subsequ string gener delet charact string without chang order note subsequ necessarili need contigu string call palindrom read backward well forward exampl input ababa output explan alreadi palindrom entireti remov singl step exampl input abb output explan abb remov palindrom subsequ exampl input baabb output explan baabb remov palindrom subsequ baab constraint slength si either ","1005":"array restaur restaurantsi idi ratingi veganfriendlyi pricei distancei filter restaur use filter veganfriendli filter either true mean includ restaur veganfriendlyi set true fals mean includ restaur addit filter maxpric maxdist maximum valu price distanc restaur consid respect return array restaur id filter order rate highest lowest restaur rate order id highest lowest simplic veganfriendlyi veganfriendli take valu true fals exampl input restaur veganfriendli maxpric maxdist output explan restaur restaur id1 rating4 veganfriendly1 price40 distance10 restaur id2 rating8 veganfriendly0 price50 distance5 restaur id3 rating8 veganfriendly1 price30 distance4 restaur id4 rating10 veganfriendly0 price10 distance3 restaur id5 rating1 veganfriendly1 price15 distance1 filter restaur veganfriendli maxpric maxdist restaur restaur restaur order rate highest lowest exampl input restaur veganfriendli maxpric maxdist output explan restaur exampl case filter veganfriendli therefor restaur consid exampl input restaur veganfriendli maxpric maxdist output constraint restaurantslength restaurantsilength idi ratingi pricei distancei maxpric maxdist veganfriendlyi veganfriendli idi distinct ","1006":"citi number array edg edgesi toi weighti repres bidirect weight edg citi toi integ distancethreshold return citi smallest number citi reachabl path whose distanc distancethreshold multipl citi return citi greatest number notic distanc path connect citi equal sum edg weight along path exampl input edg distancethreshold output explan figur describ graph neighbor citi distancethreshold citi citi citi citi citi citi citi citi citi citi citi citi citi citi citi citi neighbor citi distancethreshold return citi sinc greatest number exampl input edg distancethreshold output explan figur describ graph neighbor citi distancethreshold citi citi citi citi citi citi citi citi citi citi citi citi citi citi citi citi citi neighbor citi distancethreshold constraint edgeslength edgesilength toi weighti distancethreshold pair toi distinct ","1007":"want schedul list job day job depend ie work ith job finish job finish least task everi day difficulti job schedul sum difficulti day day difficulti day maximum difficulti job done day integ array jobdifficulti integ difficulti ith job jobdifficultyi return minimum difficulti job schedul find schedul job return exampl input jobdifficulti output explan first day finish first job total difficulti second day finish last job total difficulti difficulti schedul exampl input jobdifficulti output explan finish job per day still free day find schedul job exampl input jobdifficulti output explan schedul job per day total difficulti constraint jobdifficultylength jobdifficultyi ","1008":"binari matrix mat repres soldier repres civilian soldier posit front civilian appear left row row weaker row follow true number soldier row less number soldier row row number soldier return indic weakest row matrix order weakest strongest exampl input mat output explan number soldier row row row row row row row order weakest strongest exampl input mat output explan number soldier row row row row row row order weakest strongest constraint matlength matilength matrixij either ","1009":"integ array arr choos set integ remov occurr integ array return minimum size set least half integ array remov exampl input arr output explan choos make new array size ie equal half size old array possibl set size choos set possibl make new array size greater half size old array exampl input arr output explan possibl set choos make new array empti constraint arrlength arrlength even arri ","1010":"root binari tree split binari tree subtre remov edg product sum subtre maxim return maximum product sum subtre sinc answer may larg return modulo note need maxim answer take mod take exampl input root output explan remov red edg get binari tree sum product exampl input root 1null234nullnull56 output explan remov red edg get binari tree sum product constraint number node tree rang nodev ","1011":"array integ arr integ step jump index index arrlength addit jump index index arri arrj arri arrk indic formal mini maxi choos index array start jump return maximum number indic visit notic jump outsid array time exampl input arr output explan start index jump shown note start index jump index jump index jump index index index similarli jump index index index exampl input arr output explan start index alway jump index exampl input arr output explan start index visit indici constraint arrlength arri arrlength ","1012":"sql schema panda schema ","1013":"integ num return number step reduc step current number even divid otherwis subtract exampl input num output explan step even divid obtain step odd subtract obtain step even divid obtain step odd subtract obtain step even divid obtain step odd subtract obtain exampl input num output explan step even divid obtain step even divid obtain step even divid obtain step odd subtract obtain exampl input num output constraint num ","1014":"array integ arr integ threshold return number subarray size averag greater equal threshold exampl input arr threshold output explan subarray averag respect subarray size averag less threshold exampl input arr threshold output explan first subarray size averag greater note averag integ constraint arrlength arri arrlength threshold ","1015":"number hour minut return smaller angl degre form hour minut hand answer within actual valu accept correct exampl input hour minut output exampl input hour minut output exampl input hour minut output constraint hour minut ","1016":"array integ arr initi posit first index array step jump index index arrlength arri arrj return minimum number step reach last index array notic jump outsid array time exampl input arr output explan need jump index note index last index array exampl input arr output explan start index last index need jump exampl input arr output explan jump directli index index last index array constraint arrlength arri ","1017":"array arr integ check exist indic arrlength arri arrj exampl input arr output true explan arri arrj exampl input arr output fals explan satisfi condit constraint arrlength arri ","1018":"string length step choos charact replac anoth charact return minimum number step make anagram anagram string string contain charact differ order exampl input bab aba output explan replac first bba anagram exampl input leetcod practic output explan replac proper charact make anagram exampl input anagram mangaar output explan anagram mangaar anagram constraint slength slength tlength lowercas english letter ","1019":"social media compani tri monitor activ site analyz number tweet occur select period time period partit smaller time chunk base certain frequenc everi minut hour day exampl period second would partit follow time chunk frequenc everi minut 60second chunk everi hour 3600second chunk everi day 86400second chunk notic last chunk may shorter specifi frequenc chunk size alway end end time period exampl design implement api help compani analysi implement tweetcount class tweetcount initi tweetcount object void recordtweetstr tweetnam int time store tweetnam record time second listinteg gettweetcountsperfrequencystr freq string tweetnam int starttim int endtim return list integ repres number tweet tweetnam time chunk period time starttim endtim second frequenc freq freq minut hour day repres frequenc everi minut hour day respect exampl input tweetcountsrecordtweetrecordtweetrecordtweetgettweetcountsperfrequencygettweetcountsperfrequencyrecordtweetgettweetcountsperfrequ tweet30tweet360tweet310minutetweet3059minutetweet3060tweet3120hourtweet30210 output nullnullnullnull221null4 explan tweetcount tweetcount new tweetcount tweetcountsrecordtweettweet3 new tweet tweet3 time tweetcountsrecordtweettweet3 new tweet tweet3 time tweetcountsrecordtweettweet3 new tweet tweet3 time tweetcountsgettweetcountsperfrequencyminut tweet3 return chunk tweet tweetcountsgettweetcountsperfrequencyminut tweet3 return chunk tweet chunk tweet tweetcountsrecordtweettweet3 new tweet tweet3 time tweetcountsgettweetcountsperfrequencyhour tweet3 return chunk tweet constraint time starttim endtim endtim starttim call total recordtweet gettweetcountsperfrequ ","1020":"matrix seat repres seat distribut classroom seat broken denot charact otherwis denot charact student see answer sit next left right upper left upper right see answer student sit directli front behind return maximum number student take exam togeth without cheat possibl student must place seat good condit exampl input seat output explan teacher place student avail seat dont cheat exam exampl input seat output explan place student avail seat exampl input seat output explan place student avail seat column constraint seat contain charact seatslength seatsilength ","1021":"matrix grid sort nonincreas order rowwis columnwis return number neg number grid exampl input grid output explan neg number matrix exampl input grid output constraint gridlength gridilength gridij could find solut ","1022":"design algorithm accept stream integ retriev product last integ stream implement productofnumb class productofnumb initi object empti stream void addint num append integ num stream int getproductint return product last number current list assum alway current list least number test case gener time product contigu sequenc number fit singl 32bit integ without overflow exampl input productofnumbersaddaddaddaddaddgetproductgetproductgetproductaddgetproduct output nullnullnullnullnullnull20400null32 explan productofnumb productofnumb new productofnumb productofnumbersadd3 productofnumbersadd0 productofnumbersadd2 productofnumbersadd5 productofnumbersadd4 productofnumbersgetproduct2 return product last number productofnumbersgetproduct3 return product last number productofnumbersgetproduct4 return product last number productofnumbersadd8 productofnumbersgetproduct2 return product last number constraint num call made add getproduct product stream point time fit 32bit integ ","1023":"array event eventsi startdayi enddayi everi event start startdayi end enddayi attend event day starttimei endtimei attend event time return maximum number event attend exampl input event output explan attend event way attend shown attend first event day attend second event day attend third event day exampl input event output constraint eventslength eventsilength startdayi enddayi ","1024":"array target integ start array arr consist may perform follow procedur let sum element current array choos index set valu arr index may repeat procedur mani time need return true possibl construct target array arr otherwis return fals exampl input target output true explan start arr sum choos index sum choos index sum choos index done exampl input target output fals explan imposs creat target array exampl input target output true constraint targetlength targeti ","1025":"integ array arr sort integ array ascend order number binari represent case integ number sort ascend order return array sort exampl input arr output explant integ bit bit bit bit sort array bit exampl input arr output explant integ bit binari represent sort ascend order constraint arrlength arri ","1026":"string consist charact return number substr contain least occurr charact exampl input abcabc output explan substr contain least occurr charact abc abca abcab abcabc bca bcab bcabc cab cabc abc exampl input aaacb output explan substr contain least occurr charact aaacb aacb acb exampl input abc output constraint slength consist charact ","1027":"order order consist pickup deliveri servic count valid pickupdeliveri possibl sequenc deliveryi alway pickupi sinc answer may larg return modulo exampl input output explan uniqu order p1 deliveri alway pickup exampl input output explan possibl order p1p2d1d2 p1p2d2d1 p1d1p2d2 p2p1d1d2 p2p1d2d1 p2d2p1d1 invalid order p1d2p2d1 pickup deliveri exampl input output constraint ","1028":"write program count number day date date string format yyyymmdd shown exampl exampl input date1 date2 output exampl input date1 date2 output constraint date valid date year ","1029":"binari tree node number node children leftchildi rightchildi return true node form exactli valid binari tree node left child leftchildi equal similarli right child note node valu use node number problem exampl input leftchild rightchild output true exampl input leftchild rightchild output fals exampl input leftchild rightchild output fals constraint leftchildlength rightchildlength leftchildi rightchildi ","1030":"integ num find closest integ absolut differ whose product equal num num return integ order exampl input num output explan num closest divisor num closest divisor henc chosen exampl input num output exampl input num output constraint num ","1031":"array digit digit return largest multipl form concaten digit order answer return empti string sinc answer may fit integ data type return answer string note return answer must contain unnecessari lead zero exampl input digit output exampl input digit output exampl input digit output constraint digitslength digitsi ","1032":"special rank system voter give rank highest lowest team particip competit order team decid receiv positionon vote team tie first posit consid second posit resolv conflict tie continu process tie resolv team still tie consid posit rank alphabet base team letter array string vote vote voter rank system sort team accord rank system describ return string team sort rank system exampl input vote abcacbabcacbacb output acb explan team rank first place voter team vote first place team first team team rank second voter rank third voter team rank second voter rank third voter voter rank second team second team team third exampl input vote wxyzxyzw output xwyz explan winner due tiebreak rule vote first posit vote second posit vote second posit exampl input vote zmnaguedsjylbophrqicwfxtvk output zmnaguedsjylbophrqicwfxtvk explan voter vote use rank constraint voteslength votesilength votesilength votesjlength voteslength votesij english uppercas letter charact votesi uniqu charact occur votes0 also occur votesj voteslength ","1033":"binari tree root link list head first node return true element link list start head correspond downward path connect binari tree otherwis return fals context downward path mean path start node goe downward exampl input head root 144null22null1null68nullnullnullnull13 output true explan node blue form subpath binari tree exampl input head root 144null22null1null68nullnullnullnull13 output true exampl input head root 144null22null1null68nullnullnullnull13 output fals explan path binari tree contain element link list head constraint number node tree rang number node list rang nodev node link list binari tree ","1034":"grid cell grid sign point next cell visit current cell sign gridij mean go cell right ie go gridij gridij mean go cell left ie go gridij gridij mean go lower cell ie go gridij gridi 1j mean go upper cell ie go gridij gridi 1j notic could sign cell grid point outsid grid initi start upper left cell valid path grid path start upper left cell end bottomright cell follow sign grid valid path shortest modifi sign cell cost modifi sign cell time return minimum cost make grid least valid path exampl input grid output explan start point path follow chang arrow cost chang arrow cost chang arrow cost total cost exampl input grid output explan path exampl input grid output constraint gridlength gridilength gridij ","1035":"string reorder string use follow algorithm remov smallest charact append result remov smallest charact greater last append charact append result repeat step charact remov remov largest charact append result remov largest charact smaller last append charact append result repeat step charact remov repeat step charact remov smallest largest charact appear may choos occurr append result return result string reorder use algorithm exampl input aaaabbbbcccc output abccbaabccba explan step first iter result abc step first iter result abccba first iter done aabbcc go back step step second iter result abccbaabc step second iter result abccbaabccba exampl input rat output art explan word rat becom art reorder mention algorithm constraint slength consist lowercas english letter ","1036":"string return size longest substr contain vowel even number time e u must appear even number time exampl input eleetminicoworoep output explan longest substr leetminicowor contain vowel e vowel u exampl input leetcodeisgreat output explan longest substr leetc contain es exampl input bcbcbc output explan case string bcbcbc longest vowel e u appear time constraint slength contain lowercas english letter ","1037":"root binari tree zigzag path binari tree defin choos node binari tree direct right left current direct right move right child current node otherwis move left child chang direct right left left right repeat second third step cant move tree zigzag length defin number node visit singl node length return longest zigzag path contain tree exampl input root 1null111nullnull11null1nullnullnull1 output explan longest zigzag path blue node right left right exampl input root 111null1nullnull11null1 output explan longest zigzag path blue node left right left right exampl input root output constraint number node tree rang nodev ","1038":"binari tree root return maximum sum key subtre also binari search tree assum defin follow left subtre node contain node key less node key right subtre node contain node key greater node key left right subtre must also binari search tree exampl input root 1432425nullnullnullnullnullnull46 output explan maximum sum valid binari search tree obtain root node key equal exampl input root 43null12 output explan maximum sum valid binari search tree obtain singl root node key equal exampl input root output explan valu neg return empti constraint number node tree rang nodev ","1039":"integ return string charact charact string occur odd number time return string must contain lowercas english letter multipl valid string return exampl input output pppz explan pppz valid string sinc charact occur time charact occur note mani valid string ohhh love exampl input output xy explan xy valid string sinc charact occur note mani valid string ag ur exampl input output holasss constraint ","1040":"1index binari string length bit initi flip bit binari string ie chang 1index integ array flip flipsi indic bit index flip ith step binari string prefixalign ith step bit inclus rang one bit zero return number time binari string prefixalign flip process exampl input flip output explan binari string initi appli step string becom prefixalign appli step string becom prefixalign appli step string becom prefixalign appli step string becom prefixalign appli step string becom prefixalign see string prefixalign time return exampl input flip output explan binari string initi appli step string becom prefixalign appli step string becom prefixalign appli step string becom prefixalign appli step string becom prefixalign see string prefixalign time return constraint flipslength flip permut integ rang ","1041":"compani employe uniqu id employe head compani headid employe direct manag manag array manageri direct manag ith employe managerheadid also guarante subordin relationship tree structur head compani want inform compani employe urgent piec news inform direct subordin inform subordin employe know urgent news ith employe need informtimei minut inform direct subordin ie informtimei minut direct subordin start spread news return number minut need inform employe urgent news exampl input headid manag informtim output explan head compani employe compani exampl input headid manag informtim output explan head compani id direct manag employe compani need minut inform tree structur employe compani shown constraint headid managerlength manageri managerheadid informtimelength informtimei informtimei employe subordin guarante employe inform ","1042":"undirect tree consist vertic number frog start jump vertex second frog jump current vertex anoth unvisit vertex directli connect frog jump back visit vertex case frog jump sever vertic jump randomli probabl otherwis frog jump unvisit vertex jump forev vertex edg undirect tree array edg edgesi ai bi mean exist edg connect vertic ai bi return probabl second frog vertex target answer within actual answer accept exampl input edg target output explan figur show graph frog start vertex jump probabl vertex second jump probabl vertex second thu probabl frog vertex second exampl input edg target output explan figur show graph frog start vertex jump probabl vertex second constraint edgeslength edgesilength ai bi target ","1043":"sql schema panda schema ","1044":"binari tree origin clone refer node target origin tree clone tree copi origin tree return refer node clone tree note allow chang tree target node answer must refer node clone tree exampl input tree 743nullnull619 target output explan exampl origin clone tree shown target node green node origin tree answer yellow node clone tree exampl input tree target output exampl input tree 8null6null5null4null3null2null1 target output constraint number node tree rang valu node tree uniqu target node node origin tree null could solv problem repeat valu tree allow ","1045":"matrix distinct number return lucki number matrix order lucki number element matrix minimum element row maximum column exampl input matrix output explan lucki number sinc minimum row maximum column exampl input matrix output explan lucki number sinc minimum row maximum column exampl input matrix output explan lucki number sinc minimum row maximum column constraint matlength matilength matrixij element matrix distinct ","1046":"design stack support increment oper element implement customstack class customstackint maxsiz initi object maxsiz maximum number element stack void pushint add top stack stack reach maxsiz int pop pop return top stack stack empti void incint int val increment bottom element stack val less element stack increment element stack exampl input customstackpushpushpoppushpushpushincrementincrementpoppoppoppop output nullnullnull2nullnullnullnullnull1032022011 explan customstack stk new customstack3 stack empti stkpush1 stack becom stkpush2 stack becom stkpop return return top stack stack becom stkpush2 stack becom stkpush3 stack becom stkpush4 stack still add anoth element size stkincrement5 stack becom stkincrement2 stack becom stkpop return return top stack stack becom stkpop return return top stack stack becom stkpop return return top stack stack becom stkpop return stack empti return constraint maxsiz val call made method increment push pop separ ","1047":"integ array arr1 arr2 integ return distanc valu array distanc valu defin number element arr1i element arr2j arr1iarr2j exampl input arr1 arr2 output explan arr104 arr115 arr128 exampl input arr1 arr2 output exampl input arr1 arr2 output constraint arr1length arr2length arr1i arr2j ","1048":"cinema row seat number ten seat row label shown figur array reservedseat contain number seat alreadi reserv exampl reservedseatsi mean seat locat row label alreadi reserv return maximum number fourperson group assign cinema seat fourperson group occupi adjac seat singl row seat across aisl consid adjac except case aisl split fourperson group case aisl split fourperson group middl mean peopl side exampl input reservedseat output explan figur show optim alloc group seat mark blue alreadi reserv contigu seat mark orang group exampl input reservedseat output exampl input reservedseat output constraint reservedseatslength min10n reservedseatsilength reservedseatsi0 reservedseatsi1 reservedseatsi distinct ","1049":"power integ defin number step need transform use follow step even odd exampl power need step becom integ lo hi task sort integ interv lo hi power valu ascend order integ power valu sort ascend order return kth integ rang lo hi sort power valu notic integ lo hi guarante transform use step power fit 32bit sign integ exampl input lo hi output explan power power power power interv sort power valu answer second element notic power valu sort ascend order exampl input lo hi output explan power array correspond interv interv sort power fourth number sort array constraint lo hi hi lo ","1050":"pizza slice vari size friend take slice pizza follow pick pizza slice friend alic pick next slice anticlockwis direct pick friend bob pick next slice clockwis direct pick repeat slice pizza integ array slice repres size pizza slice clockwis direct return maximum possibl sum slice size pick exampl input slice output explan pick pizza slice size alic bob pick slice size respect pick slice size final alic bob pick slice size respect total exampl input slice output explan pick pizza slice size turn pick slice size partner pick slice size constraint sliceslength sliceslength slicesi ","1051":"array integ num index task creat target array follow rule initi target array empti left right read numsi indexi insert index indexi valu numsi target array repeat previou step element read num index return target array guarante insert oper valid exampl input num index output explan num index target exampl input num index output explan num index target exampl input num index output constraint numslength indexlength numslength indexlength numsi indexi ","1052":"integ array num return sum divisor integ array exactli divisor integ array return exampl input num output explan divisor divisor divisor answer sum divisor exampl input num output exampl input num output constraint numslength numsi ","1053":"grid cell grid repres street street gridij mean street connect left cell right cell mean street connect upper cell lower cell mean street connect left cell lower cell mean street connect right cell lower cell mean street connect left cell upper cell mean street connect right cell upper cell initi start street upperleft cell valid path grid path start upper left cell end bottomright cell path street notic allow chang street return true valid path grid fals otherwis exampl input grid output true explan shown start cell visit cell grid reach exampl input grid output fals explan shown street cell connect street cell get stuck cell exampl input grid output fals explan get stuck cell reach cell constraint gridlength gridilength gridij ","1054":"string call happi prefix nonempti prefix also suffix exclud string return longest happi prefix return empti string prefix exist exampl input level output explan contain prefix exclud le lev leve suffix el vel evel largest prefix also suffix exampl input ababab output abab explan abab largest prefix also suffix overlap origin string constraint slength contain lowercas english letter ","1055":"sql schema panda schema ","1056":"array integ arr lucki integ integ frequenc array equal valu return largest lucki integ array lucki integ return exampl input arr output explan lucki number array frequency2 exampl input arr output explan lucki number return largest exampl input arr output explan lucki number array constraint arrlength arri ","1057":"soldier stand line soldier assign uniqu rate valu form team soldier amongst follow rule choos soldier index rate ratingi ratingj ratingk team valid ratingi ratingj ratingk ratingi ratingj ratingk return number team form condit soldier part multipl team exampl input rate output explan form team condit exampl input rate output explan cant form team condit exampl input rate output constraint ratinglength ratingi integ rate uniqu ","1058":"underground railway system keep track custom travel time differ station use data calcul averag time take travel station anoth implement undergroundsystem class void checkinint id string stationnam int custom card id equal id check station stationnam time custom check place time void checkoutint id string stationnam int custom card id equal id check station stationnam time doubl getaveragetimestr startstat string endstat return averag time take travel startstat endstat averag time comput previou travel time startstat endstat happen directli mean check startstat follow check endstat time take travel startstat endstat may differ time take travel endstat startstat least custom travel startstat endstat getaveragetim call may assum call checkin checkout method consist custom check time check time event happen chronolog order exampl input undergroundsystemcheckincheckincheckincheckoutcheckoutcheckoutgetaveragetimegetaveragetimecheckingetaveragetimecheckoutgetaveragetim 45leyton332paradise827leyton1045waterloo1527waterloo2032cambridge22paradisecambridgeleytonwaterloo10leyton24leytonwaterloo10waterloo38leytonwaterloo output nullnullnullnullnullnullnull14000001100000null1100000null1200000 explan undergroundsystem undergroundsystem new undergroundsystem undergroundsystemcheckin45 leyton undergroundsystemcheckin32 paradis undergroundsystemcheckin27 leyton undergroundsystemcheckout45 waterloo custom leyton waterloo undergroundsystemcheckout27 waterloo custom leyton waterloo undergroundsystemcheckout32 cambridg custom paradis cambridg undergroundsystemgetaveragetimeparadis cambridg return trip paradis cambridg undergroundsystemgetaveragetimeleyton waterloo return trip leyton waterloo undergroundsystemcheckin10 leyton undergroundsystemgetaveragetimeleyton waterloo return undergroundsystemcheckout10 waterloo custom leyton waterloo undergroundsystemgetaveragetimeleyton waterloo return trip leyton waterloo exampl input undergroundsystemcheckincheckoutgetaveragetimecheckincheckoutgetaveragetimecheckincheckoutgetaveragetim 10leyton310paradise8leytonparadise5leyton105paradise16leytonparadise2leyton212paradise30leytonparadis output nullnullnull500000nullnull550000nullnull666667 explan undergroundsystem undergroundsystem new undergroundsystem undergroundsystemcheckin10 leyton undergroundsystemcheckout10 paradis custom leyton paradis undergroundsystemgetaveragetimeleyton paradis return undergroundsystemcheckin5 leyton undergroundsystemcheckout5 paradis custom leyton paradis undergroundsystemgetaveragetimeleyton paradis return undergroundsystemcheckin2 leyton undergroundsystemcheckout2 paradis custom leyton paradis undergroundsystemgetaveragetimeleyton paradis return constraint id stationnamelength startstationlength endstationlength string uppercas lowercas english letter digit call total checkin checkout getaveragetim answer within actual valu accept ","1059":"string size string evil return number good string good string size alphabet greater equal alphabet smaller equal contain string evil substr sinc answer huge number return modulo exampl input da evil output explan good string start aaacadaz good string start cacccdcz final good string start da exampl input leetcod leetgo evil leet output explan string greater equal smaller equal start prefix leet therefor good string exampl input gx gz evil output constraint s1length s2length evillength string lowercas english letter ","1060":"circl repres radiu xcenter ycenter axisalign rectangl repres x1 y1 x2 y2 x1 y1 coordin bottomleft corner x2 y2 coordin topright corner rectangl return true circl rectangl overlap otherwis return fals word check point xi yi belong circl rectangl time exampl input radiu xcenter ycenter x1 y1 x2 y2 output true explan circl rectangl share point exampl input radiu xcenter ycenter x1 y1 x2 y2 output fals exampl input radiu xcenter ycenter x1 y1 x2 y2 output true constraint radiu xcenter ycenter x1 x2 y1 y2 ","1061":"chef collect data satisfact level dish chef cook dish unit time liketim coeffici dish defin time taken cook dish includ previou dish multipli satisfact level ie timei satisfactioni return maximum sum liketim coeffici chef obtain prepar amount dish dish prepar order chef discard dish get maximum valu exampl input satisfact output explan remov second last dish maximum total liketim coeffici equal dish prepar unit time exampl input satisfact output explan dish prepar order exampl input satisfact output explan peopl like dish dish prepar constraint satisfactionlength satisfactioni ","1062":"","1063":"string call happi satisfi follow condit contain letter contain aaa bbb ccc substr contain occurr letter contain occurr letter contain occurr letter integ return longest possibl happi string multipl longest happi string return string return empti string substr contigu sequenc charact within string exampl input output ccaccbcc explan ccbccacc would also correct answer exampl input output aabaa explan correct answer case constraint ","1064":"alic bob continu game pile stone sever stone arrang row stone associ valu integ array stonevalu alic bob take turn alic start first player turn player take stone first remain stone row score player sum valu stone taken score player initi object game end highest score winner player highest score could tie game continu stone taken assum alic bob play optim return alic alic win bob bob win tie end game score exampl input stonevalu output bob explan alic alway lose best move take pile score becom score bob bob win exampl input stonevalu output alic explan alic must choos pile first move win leav bob neg score alic choos pile score next move bob score becom next move alic take pile valu lose alic choos pile score next move bob score becom next move alic take pile valu also lose rememb play optim alic choos scenario make win exampl input stonevalu output tie explan alic win game end game draw decid choos first pile otherwis lose constraint stonevaluelength stonevaluei ","1065":"sql schema panda schema ","1066":"array string word return string word substr anoth word return answer order substr contigu sequenc charact within string exampl input word massasherosuperhero output ashero explan substr mass hero substr superhero heroa also valid answer exampl input word leetcodeetcod output etcod explan et code substr leetcod exampl input word bluegreenbu output explan string word substr anoth string constraint wordslength wordsilength wordsi contain lowercas english letter string word uniqu ","1067":"array queri posit integ process queriesi iquerieslength1 accord follow rule begin permut p123m current find posit queriesi permut index move begin permut notic posit queriesi result queriesi return array contain result queri exampl input queri output explan queri process queriesi3 p12345 posit move begin result p31245 queriesi1 p31245 posit move begin result p13245 queriesi2 p13245 posit move begin result p21345 queriesi1 p21345 posit move begin result p12345 therefor array contain result exampl input queri output exampl input queri output constraint querieslength queriesi ","1068":"grid size want paint cell grid exactli color red yellow green make sure adjac cell color ie cell share vertic horizont side color number row grid return number way paint grid answer may grow larg answer must comput modulo exampl input output explan possibl way paint grid shown exampl input output constraint gridlength ","1069":"array integ num start initi posit valu startvalu iter calcul step step sum startvalu plu element num left right return minimum posit valu startvalu step step sum never less exampl input num output explan choos startvalu third iter step step sum less step step sum startvalu startvalu num exampl input num output explan minimum start valu posit exampl input num output constraint numslength numsi ","1070":"integ return minimum number fibonacci number whose sum equal fibonacci number use multipl time fibonacci number defin f1 f2 fn1 fn2 guarante constraint alway find fibonacci number sum exampl input output explan fibonacci number use exampl input output explan use exampl input output explan use constraint ","1071":"happi string string consist letter set si si valu slength string 1index exampl string abc ac abcbabcbcb happi string string baa ababbc happi string integ consid list happi string length sort lexicograph order return kth string list return empti string less happi string length exampl input output explan list contain happi string length third string exampl input output explan happi string length exampl input output cab explan differ happi string length aba abc aca acb bab bac bca bcb cab cac cba cbc find 9th string cab constraint ","1072":"program suppos print array integ program forgot print whitespac array print string digit know integ array rang lead zero array string integ return number possibl array print use mention program sinc answer may larg return modulo exampl input output explan possibl array exampl input output explan array print way integ exampl input output explan possibl array constraint slength consist digit contain lead zero ","1073":"alphanumer string alphanumer string string consist lowercas english letter digit find permut string letter follow anoth letter digit follow anoth digit adjac charact type return reformat string return empti string imposs reformat string exampl input a0b1c2 output 0a1b2c explan adjac charact type 0a1b2c a0b1c2 0a1b2c 0c2a1b also valid permut exampl input leetcod output explan leetcod charact separ digit exampl input output explan digit separ charact constraint slength consist lowercas english letter andor digit ","1074":"array order repres order custom done restaur specif ordersicustomernameitablenumberifooditemi customernamei name custom tablenumberi tabl custom sit fooditemi item custom order return restaur display tabl display tabl tabl whose row entri denot mani food item tabl order first column tabl number remain column correspond food item alphabet order first row header whose first column tabl follow name food item note custom name part tabl addit row sort numer increas order exampl input order david3cevichecorina10beef burritodavid3fri chickencarla5watercarla5cevicherous3cevich output tablebeef burritocevichefri chickenwater3021050101101000 explan display tabl look like tablebeef burritocevichefri chickenwat tabl david order cevich fri chicken rou order cevich tabl carla order water cevich tabl corina order beef burrito exampl input order james12fri chickenratesh12fri chickenamadeus12fri chickenadam1canadian wafflesbrianna1canadian waffl output tablecanadian wafflesfri chicken1201203 explan tabl adam brianna order canadian waffl tabl jame ratesh amadeu order fri chicken exampl input order laura2bean burritojhon2beef burritomelissa2soda output tablebean burritobeef burritosoda2111 constraint orderslength ordersilength customernameilength fooditemilength customernamei fooditemi lowercas uppercas english letter space charact tablenumberi valid integ ","1075":"string croakoffrog repres combin string croak differ frog multipl frog croak time multipl croak mix return minimum number differ frog finish croak string valid croak mean frog print letter sequenti frog print letter finish croak string combin valid croak return exampl input croakoffrog croakcroak output explan frog yell croak twice exampl input croakoffrog crcoakroak output explan minimum number frog first frog could yell crcoakroak second frog could yell later crcoakroak exampl input croakoffrog croakcrook output explan string invalid combin croak differ frog constraint croakoffrogslength croakoffrog either ","1076":"integ consid follow algorithm find maximum element array posit integ build array arr follow properti arr exactli integ arri appli mention algorithm arr valu searchcost equal return number way build array arr mention condit answer may grow larg answer must comput modulo exampl input output explan possibl array exampl input output explan possibl array satisfi mention condit exampl input output explan possibl array constraint ","1077":"sever card arrang row card associ number point point integ array cardpoint step take card begin end row take exactli card score sum point card taken integ array cardpoint integ return maximum score obtain exampl input cardpoint output explan first step score alway howev choos rightmost card first maxim total score optim strategi take card right give final score exampl input cardpoint output explan regardless card take score alway exampl input cardpoint output explan take card score sum point card constraint cardpointslength cardpointsi cardpointslength ","1078":"2d integ array num return element num diagon order shown imag exampl input num output exampl input num output constraint numslength numsilength sumnumsilength numsij ","1079":"integ array num integ return maximum sum nonempti subsequ array everi consecut integ subsequ numsi numsj condit satisfi subsequ array obtain delet number element array leav remain element origin order exampl input num output explan subsequ exampl input num output explan subsequ must nonempti choos largest number exampl input num output explan subsequ constraint numslength numsi ","1080":"kid candi integ array candi candiesi repres number candi ith kid integ extracandi denot number extra candi return boolean array result length resulti true give ith kid extracandi greatest number candi among kid fals otherwis note multipl kid greatest number candi exampl input candi extracandi output truetruetruefalsetru explan give extracandi kid candi greatest among kid kid candi greatest among kid kid candi greatest among kid kid candi greatest among kid kid candi greatest among kid exampl input candi extracandi output truefalsefalsefalsefals explan extra candi kid alway greatest number candi even differ kid extra candi exampl input candi extracandi output truefalsetru constraint candieslength candiesi extracandi ","1081":"integ num appli follow step exactli time pick digit pick anoth digit digit equal replac occurr decim represent num new integ lead zero also new integ let result appli oper num first second time respect return max differ exampl input num output explan first time pick store new integ second time pick store new integ max differ exampl input num output explan first time pick store new integ second time pick store new integ max differ constraint num ","1082":"string size check permut string break permut string viceversa word break viceversa string break string size xi yi alphabet order exampl input abc xya output true explan ayx permut s2xya break string abc permut s1abc exampl input abe output fals explan permut s1abe abe aeb bae bea eab eba permut s2acd adc cad cda dac dca howev permut break permut viceversa exampl input leetcode interview output true constraint s1length s2length string lowercas english letter ","1083":"peopl type hat label 2d integ array hat hatsi list hat prefer ith person return number way peopl wear differ hat sinc answer may larg return modulo exampl input hat output explan way choos hat condit first person choos hat second person choos hat last hat exampl input hat output explan way choos hat exampl input hat output explan person choos hat label number permut constraint hatslength hatsilength hatsij hatsi contain list uniqu integ ","1084":"array path pathsi cityai citybi mean exist direct path go cityai citybi return destin citi citi without path outgo anoth citi guarante graph path form line without loop therefor exactli destin citi exampl input path londonnew yorknew yorklimalimasao paulo output sao paulo explan start london citi reach sao paulo citi destin citi trip london new york lima sao paulo exampl input path bcdbca output explan possibl trip clearli destin citi exampl input path az output constraint pathslength pathsilength cityailength citybilength cityai citybi string lowercas uppercas english letter space charact ","1085":"binari array num integ return true least place away otherwis return fals exampl input num output true explan least place away exampl input num output fals explan second third apart constraint numslength numslength numsi ","1086":"array integ num integ limit return size longest nonempti subarray absolut differ element subarray less equal limit exampl input num limit output explan subarray maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff maximum absolut diff therefor size longest subarray exampl input num limit output explan subarray longest sinc maximum absolut diff exampl input num limit output constraint numslength numsi limit ","1087":"matrix mat row sort nondecreas order integ allow choos exactli element row form array return kth smallest array sum among possibl array exampl input mat output explan choos element row first smallest sum 5th sum exampl input mat output exampl input mat output explan choos element row first smallest sum 7th sum constraint matlength matlengthi matij min200 mati nondecreas array ","1088":"integ array target integ empti stack follow oper push push integ top stack pop remov integ top stack also stream integ rang use stack oper make number stack bottom top equal target follow rule stream integ empti pick next integ stream push top stack stack empti pop integ top stack moment element stack bottom top equal target read new integ stream oper stack return stack oper need build target follow mention rule multipl valid answer return exampl input target output pushpushpoppush explan initi stack empti last element top stack read stream push stack read stream push stack pop integ top stack read stream push stack exampl input target output pushpushpush explan initi stack empti last element top stack read stream push stack read stream push stack read stream push stack exampl input target output pushpush explan initi stack empti last element top stack read stream push stack read stream push stack sinc stack bottom top equal target stop stack oper answer read integ stream accept constraint targetlength targeti target strictli increas ","1089":"array integ arr want select indic arrlength let defin follow arri arri arrj arrj arrj arrk note denot bitwisexor oper return number triplet exampl input arr output explan triplet exampl input arr output constraint arrlength arri ","1090":"undirect tree consist vertic number appl vertic spend second walk edg tree return minimum time second spend collect appl tree start vertex come back vertex edg undirect tree array edg edgesi ai bi mean exist edg connect vertic ai bi addit boolean array hasappl hasapplei true mean vertex appl otherwis appl exampl input edg hasappl falsefalsetruefalsetruetruefals output explan figur repres tree red vertic appl optim path collect appl shown green arrow exampl input edg hasappl falsefalsetruefalsefalsetruefals output explan figur repres tree red vertic appl optim path collect appl shown green arrow exampl input edg hasappl falsefalsefalsefalsefalsefalsefals output constraint edgeslength edgesilength ai bi hasapplelength ","1091":"rectangular pizza repres row col matrix contain follow charact appl empti cell integ cut pizza piec use k1 cut cut choos direct vertic horizont choos cut posit cell boundari cut pizza piec cut pizza vertic give left part pizza person cut pizza horizont give upper part pizza person give last piec pizza last person return number way cut pizza piec contain least appl sinc answer huge number return modulo exampl input pizza aaaa output explan figur show way cut pizza note piec must contain least appl exampl input pizza aaa output exampl input pizza output constraint row col row pizzalength col pizzailength pizza consist charact ","1092":"integ return list simplifi fraction exclus denomin lessthanorequalto return answer order exampl input output explan uniqu fraction denomin lessthanorequalto exampl input output exampl input output explan simplifi fraction simplifi constraint ","1093":"binari tree root node tree name good path root node valu greater return number good node binari tree exampl input root 3143null15 output explan node blue good root node alway good node node maximum valu path start root node maximum valu path node maximum valu path exampl input root 33null42 output explan node good higher exampl input root output explan root consid good constraint number node binari tree rang node valu ","1094":"array integ cost integ target return maximum integ paint follow rule cost paint digit costi 0index total cost use must equal target integ digit sinc answer may larg return string way paint integ condit return exampl input cost target output explan cost paint digit digit cost7772 could also paint largest number digit cost exampl input cost target output explan cost paint digit digit cost85 exampl input cost target output explan imposs paint integ total cost equal target constraint costlength costi target ","1095":"integ array starttim endtim integ querytim ith student start homework time starttimei finish time endtimei return number student homework time querytim formal return number student querytim lay interv starttimei endtimei inclus exampl input starttim endtim querytim output explan student first student start homework time finish time wasnt anyth time second student start homework time finish time also wasnt anyth time third student start homework time finish time student homework time exampl input starttim endtim querytim output explan student homework querytim constraint starttimelength endtimelength starttimelength starttimei endtimei querytim ","1096":"alic throw dart larg wall array dart dartsi xi yi posit ith dart alic threw wall bob know posit dart wall want place dartboard radiu wall maximum number dart alic throw lie dartboard integ return maximum number dart lie dartboard exampl input dart output explan circl dartboard center radiu contain point exampl input dart output explan circl dartboard center radiu contain point except point constraint dartslength dartsilength xi yi dart uniqu ","1097":"sentenc consist word separ singl space searchword check searchword prefix word sentenc return index word sentenc 1index searchword prefix word searchword prefix word return index first word minimum index word return prefix string lead contigu substr exampl input sentenc love eat burger searchword burg output explan burg prefix burger 4th word sentenc exampl input sentenc problem easi problem searchword pro output explan pro prefix problem 6th word sentenc return minim index exampl input sentenc tire searchword output explan prefix word sentenc constraint sentencelength searchwordlength sentenc consist lowercas english letter space searchword consist lowercas english letter ","1098":"string integ return maximum number vowel letter substr length vowel letter english e u exampl input abciiidef output explan substr iii contain vowel letter exampl input aeiou output explan substr length contain vowel exampl input leetcod output explan lee eet ode contain vowel constraint slength consist lowercas english letter slength ","1099":"binari tree node valu digit path binari tree said pseudopalindrom least permut node valu path palindrom return number pseudopalindrom path go root node leaf node exampl input root 23131null1 output explan figur repres binari tree path go root node leaf node red path green path path among path red path green path pseudopalindrom path sinc red path rearrang palindrom green path rearrang palindrom exampl input root 21113nullnullnullnullnull1 output explan figur repres binari tree path go root node leaf node green path path path among path green path pseudopalindrom sinc rearrang palindrom exampl input root output constraint number node tree rang nodev ","1100":"array nums1 nums2 return maximum dot product nonempti subsequ nums1 nums2 length subsequ array new array form origin array delet none charact without disturb rel posit remain charact ie subsequ exampl input nums1 nums2 output explan take subsequ nums1 subsequ nums2 dot product exampl input nums1 nums2 output explan take subsequ nums1 subsequ nums2 dot product exampl input nums1 nums2 output explan take subsequ nums1 subsequ nums2 dot product constraint nums1length nums2length nums1i nums2i ","1101":"integ array equal length target arr step select nonempti subarray arr revers allow make number step return true make arr equal target fals otherwis exampl input target arr output true explan next step convert arr target revers subarray arr becom revers subarray arr becom revers subarray arr becom multipl way convert arr target way exampl input target arr output true explan arr equal target without revers exampl input target arr output fals explan arr valu never convert target constraint targetlength arrlength targetlength targeti arri ","1102":"binari string integ return true everi binari code length substr otherwis return fals exampl input output true explan binari code length found substr indic respect exampl input output true explan binari code length clear exist substr exampl input output fals explan binari code length exist array constraint slength si either ","1103":"array integ num choos differ indic array return maximum valu numsi1numsj1 exampl input num output explan choos indic j2 index get maximum valu nums11nums21 exampl input num output explan choos indic j3 index get maximum valu exampl input num output constraint numslength numsi ","1104":"rectangular cake size array integ horizontalcut verticalcut horizontalcutsi distanc top rectangular cake ith horizont cut similarli verticalcutsj distanc left rectangular cake jth vertic cut return maximum area piec cake cut horizont vertic posit provid array horizontalcut verticalcut sinc answer larg number return modulo exampl input horizontalcut verticalcut output explan figur repres rectangular cake red line horizont vertic cut cut cake green piec cake maximum area exampl input horizontalcut verticalcut output explan figur repres rectangular cake red line horizont vertic cut cut cake green yellow piec cake maximum area exampl input horizontalcut verticalcut output constraint horizontalcutslength minh verticalcutslength minw horizontalcutsi verticalcutsi element horizontalcut distinct element verticalcut distinct ","1105":"citi number road way travel differ citi network form tree last year ministri transport decid orient road direct narrow road repres connect connectionsi ai bi repres road citi ai citi bi year big event capit citi mani peopl want travel citi task consist reorient road citi visit citi return minimum number edg chang guarante citi reach citi reorder exampl input connect output explan chang direct edg show red node reach node capit exampl input connect output explan chang direct edg show red node reach node capit exampl input connect output constraint connectionslength connectionsilength ai bi ai bi ","1106":"","1107":"array num consist element form x1x2xny1y2yn return array form x1y1x2y2xnyn exampl input num output explan sinc x12 x25 x31 answer exampl input num output exampl input num output constraint numslength numsi ","1108":"array integ arr integ valu arri said stronger valu arrj arri arrj median array arri arrj arri said stronger arrj arri arrj return list strongest valu array return answer arbitrari order median middl valu order integ list formal length list median element posit sort list 0index arr median obtain sort array arr median arrm median arr median obtain sort array arr median arrm median exampl input arr output explan median element array sort strongest strongest element also accept answer pleas note although stronger exampl input arr output explan median element array sort strongest strongest element exampl input arr output explan median element array sort strongest permut accept constraint arrlength arri arrlength ","1109":"browser tab start homepag visit anoth url get back histori number step move forward histori number step implement browserhistori class browserhistorystr homepag initi object homepag browser void visitstr url visit url current page clear forward histori string backint step move step back histori return step histori step return step return current url move back histori step string forwardint step move step forward histori forward step histori step forward step return current url forward histori step exampl input browserhistoryvisitvisitvisitbackbackforwardvisitforwardbackback leetcodecomgooglecomfacebookcomyoutubecom111linkedincom227 output nullnullnullnullfacebookcomgooglecomfacebookcomnulllinkedincomgooglecomleetcodecom explan browserhistori browserhistori new browserhistoryleetcodecom browserhistoryvisitgooglecom leetcodecom visit googlecom browserhistoryvisitfacebookcom googlecom visit facebookcom browserhistoryvisityoutubecom facebookcom visit youtubecom browserhistoryback1 youtubecom move back facebookcom return facebookcom browserhistoryback1 facebookcom move back googlecom return googlecom browserhistoryforward1 googlecom move forward facebookcom return facebookcom browserhistoryvisitlinkedincom facebookcom visit linkedincom browserhistoryforward2 linkedincom move forward step browserhistoryback2 linkedincom move back step facebookcom googlecom return googlecom browserhistoryback7 googlecom move back step leetcodecom return leetcodecom constraint homepagelength urllength step homepag url lower case english letter call made visit back forward ","1110":"row hous small citi hous must paint color label hous paint last summer paint neighborhood maxim group continu hous paint color exampl hous contain neighborhood array hous matrix cost integ target housesi color hous hous paint yet costij cost paint hous color return minimum cost paint remain hous way exactli target neighborhood possibl return exampl input hous cost target output explan paint hous way array contain target neighborhood cost paint hous exampl input hous cost target output explan hous alreadi paint paint hous way array contain target neighborhood cost paint first last hous exampl input hous cost target output explan hous alreadi paint total neighborhood differ target constraint houseslength costlength costilength target housesi costij ","1111":"integ array price pricesi price ith item shop special discount item shop buy ith item receiv discount equival pricesj minimum index pricesj pricesi otherwis receiv discount return integ array answer answeri final price pay ith item shop consid special discount exampl input price output explan item price08 receiv discount equival prices14 therefor final price pay item price14 receiv discount equival prices32 therefor final price pay item price26 receiv discount equival prices32 therefor final price pay item receiv discount exampl input price output explan case item receiv discount exampl input price output constraint priceslength pricesi ","1112":"implement class subrectanglequeri receiv row col rectangl matrix integ constructor support method updatesubrectangleint row1 int col1 int row2 int col2 int newvalu updat valu newvalu subrectangl whose upper left coordin row1col1 bottom right coordin row2col2 getvalueint row int col return current valu coordin rowcol rectangl exampl input subrectanglequeriesgetvalueupdatesubrectanglegetvaluegetvalueupdatesubrectanglegetvaluegetvalu output null1null55null105 explan subrectanglequeri subrectanglequeri new subrectanglequeries121434321111 initi rectangl 4x3 look like subrectanglequeriesgetvalue0 return subrectanglequeriesupdatesubrectangle0 updat rectangl look like subrectanglequeriesgetvalue0 return subrectanglequeriesgetvalue3 return subrectanglequeriesupdatesubrectangle3 updat rectangl look like subrectanglequeriesgetvalue3 return subrectanglequeriesgetvalue0 return exampl input subrectanglequeriesgetvalueupdatesubrectanglegetvaluegetvalueupdatesubrectanglegetvalu output null1null100100null20 explan subrectanglequeri subrectanglequeri new subrectanglequeries111222333 subrectanglequeriesgetvalue0 return subrectanglequeriesupdatesubrectangle0 subrectanglequeriesgetvalue0 return subrectanglequeriesgetvalue2 return subrectanglequeriesupdatesubrectangle1 subrectanglequeriesgetvalue2 return constraint oper consid method updatesubrectangl getvalu row col row rectanglelength col rectangleilength row1 row2 row col1 col2 col newvalu rectangleij row row col col ","1113":"array integ arr integ target find nonoverlap subarray arr sum equal target multipl answer find answer sum length subarray minimum return minimum sum length requir subarray return find subarray exampl input arr target output explan subarray sum sum length exampl input arr target output explan although nonoverlap subarray sum choos first third subarray sum length exampl input arr target output explan subarray sum constraint arrlength arri target ","1114":"array num defin run sum array runningsumi sumnums0\u2026numsi return run sum num exampl input num output explan run sum obtain follow exampl input num output explan run sum obtain follow exampl input num output constraint numslength numsi ","1115":"array integ arr integ find least number uniqu integ remov exactli element exampl input arr output explan remov singl left exampl input arr output explan remov either left constraint arrlength arri arrlength ","1116":"integ array bloomday integ integ want make bouquet make bouquet need use adjac flower garden garden consist flower ith flower bloom bloomdayi use exactli bouquet return minimum number day need wait abl make bouquet garden imposs make bouquet return exampl input bloomday output explan let us see happen first day mean flower bloom mean flower bloom garden need bouquet contain flower day make bouquet day make bouquet day make bouquet answer exampl input bloomday output explan need bouquet flower mean need flower flower imposs get need bouquet return exampl input bloomday output explan need bouquet flower garden day day make bouquet first flower bloom make anoth bouquet last flower bloom adjac day obviou make bouquet differ way constraint bloomdaylength bloomdayi ","1117":"tree node number form parent array parent parenti parent ith node root tree node find kth ancestor node kth ancestor tree node kth node path node root node implement treeancestor class treeancestorint int parent initi object number node tree parent array int getkthancestorint node int return kth ancestor node node ancestor return exampl input treeancestor getkthancestor getkthancestor getkthancestor output null explan treeancestor treeancestor new treeancestor7 treeancestorgetkthancestor3 return parent treeancestorgetkthancestor5 return grandpar treeancestorgetkthancestor6 return ancestor constraint parentlength parent0 parenti node queri ","1118":"sql schema panda schema ","1119":"integ integ start defin array num numsi start 0index numslength return bitwis element num exampl input start output explan array num equal correspond bitwis oper exampl input start output explan array num equal constraint start numslength ","1120":"array string name size creat folder file system ith minut creat folder name namesi sinc file name enter folder name previous use system suffix addit name form smallest posit integ obtain name remain uniqu return array string length ansi actual name system assign ith folder creat exampl input name pesfifagtapes2019 output pesfifagtapes2019 explan let see file system creat folder name pe assign remain pe fifa assign remain fifa gta assign remain gta pes2019 assign remain pes2019 exampl input name gtagta1gtaavalon output gtagta1gta2avalon explan let see file system creat folder name gta assign remain gta gta1 assign remain gta1 gta name reserv system add sinc gta1 also reserv system put becom gta2 avalon assign remain avalon exampl input name onepieceonepiece1onepiece2onepiece3onepiec output onepieceonepiece1onepiece2onepiece3onepiece4 explan last folder creat smallest posit valid becom onepiece4 constraint nameslength namesilength namesi consist lowercas english letter digit andor round bracket ","1121":"countri infinit number lake initi lake empti rain nth lake nth lake becom full water rain lake full water flood goal avoid flood lake integ array rain rainsi mean rain rainsi lake rainsi mean rain day choos lake day dri return array an anslength rainslength ansi rainsi ansi lake choos dri ith day rainsi multipl valid answer return imposs avoid flood return empti array notic chose dri full lake becom empti chose dri empti lake noth chang exampl input rain output explan first day full lake second day full lake third day full lake fourth day full lake there day dri lake flood lake exampl input rain output explan first day full lake second day full lake third day dri lake full lake fourth day dri lake full lake fifth day full lake sixth day full lake easi scenario floodfre anoth accept scenario exampl input rain output explan second day full lake dri lake third day rain lake easi prove matter lake choos dri 3rd day flood constraint rainslength rainsi ","1122":"weight undirect connect graph vertic number array edg edgesi ai bi weighti repres bidirect weight edg node ai bi minimum span tree mst subset graph edg connect vertic without cycl minimum possibl total edg weight find critic pseudocrit edg graph minimum span tree mst mst edg whose delet graph would caus mst weight increas call critic edg hand pseudocrit edg appear mst note return indic edg order exampl input edg output explan figur describ graph follow figur show possibl mst notic edg appear mst therefor critic edg return first list output edg part mst therefor consid pseudocrit edg add second list output exampl input edg output explan observ sinc edg equal weight choos edg yield mst therefor edg pseudocrit constraint edgeslength min200 edgesilength ai bi weighti pair ai bi distinct ","1123":"array uniqu integ salari salaryi salari ith employe return averag salari employe exclud minimum maximum salari answer within actual answer accept exampl input salari output explan minimum salari maximum salari respect averag salari exclud minimum maximum salari exampl input salari output explan minimum salari maximum salari respect averag salari exclud minimum maximum salari constraint salarylength salaryi integ salari uniqu ","1124":"posit integ factor integ defin integ consid list factor sort ascend order return kth factor list return less factor exampl input output explan factor list 3rd factor exampl input output explan factor list factor exampl input output explan factor list factor return constraint could solv problem less complex ","1125":"binari array num delet element return size longest nonempti subarray contain result array return subarray exampl input num output explan delet number posit contain number valu exampl input num output explan delet number posit longest subarray valu exampl input num output explan must delet element constraint numslength numsi either ","1126":"integ indic cours label also array relat relationsi prevcoursei nextcoursei repres prerequisit relationship cours prevcoursei cours nextcoursei cours prevcoursei taken cours nextcoursei also integ semest take cours long taken prerequisit previou semest cours take return minimum number semest need take cours testcas gener possibl take everi cours exampl input relat output explan figur repres graph first semest take cours second semest take cours third semest take cours exampl input relat output explan figur repres graph first semest take cours sinc take per semest second semest take cours third semest take cours fourth semest take cours constraint relationslength relationsilength prevcoursei nextcoursei prevcoursei nextcoursei pair prevcoursei nextcoursei uniqu graph direct acycl graph ","1127":"string path pathi e repres move unit north south east west respect start origin 2d plane walk path specifi path return true path cross point time locat previous visit return fals otherwis exampl input path ne output fals explan notic path doesnt cross point exampl input path nesww output true explan notic path visit origin twice constraint pathlength pathi either e ","1128":"array integ arr even length integ want divid array exactli pair sum pair divis return true find way fals otherwis exampl input arr output true explan pair exampl input arr output true explan pair exampl input arr output fals explan tri possibl pair see way divid arr pair sum divis constraint arrlength even arri ","1129":"array integ num integ target return number nonempti subsequ num sum minimum maximum element less equal target sinc answer may larg return modulo exampl input num target output explan subsequ satisfi condit min valu max valu target exampl input num target output explan subsequ satisfi condit num repeat number exampl input num target output explan nonempti subsequ satisfi condit number valid subsequ constraint numslength numsi target ","1130":"array point contain coordin point 2d plane sort xvalu pointsi xi yi xi xj pointslength also integ return maximum valu equat yi yj xi xj xi xj pointslength guarante exist least pair point satisfi constraint xi xj exampl input point output explan first point satisfi condit xi xj calcul equat get third fourth point also satisfi condit give valu pair satisfi condit return max exampl input point output explan first point absolut differ less xvalu give valu constraint pointslength pointsilength xi yi xi xj pointslength xi form strictli increas sequenc ","1131":"wooden plank length unit ant walk plank ant move speed unit per second ant move left move right ant move differ direct meet point chang direct continu move assum chang direct take addit time ant reach end plank time fall plank immedi integ integ array left right posit ant move left right return moment last ant fall plank exampl input left right output explan imag ant index name go right ant index name go right ant index name go left ant index name go left last moment ant plank second fall immedi plank ie say ant plank exampl input left right output explan ant go right ant index need second fall exampl input left right output explan ant go left ant index need second fall constraint leftlength lefti rightlength righti leftlength rightlength valu left right uniqu valu appear array ","1132":"binari matrix mat return number submatric one exampl input mat output explan rectangl side 1x1 rectangl side 1x2 rectangl side 2x1 rectangl side 2x2 rectangl side 3x1 total number rectangl exampl input mat output explan rectangl side 1x1 rectangl side 1x2 rectangl side 1x3 rectangl side 2x1 rectangl side 2x2 rectangl side 3x1 rectangl side 3x2 total number rectangl constraint matij either ","1133":"string num repres digit larg integ integ allow swap adjac digit integ time return minimum integ obtain also string exampl input num output explan step obtain minimum integ adjac swap shown exampl input num output explan ok output lead zero input guarante lead zero exampl input num output explan keep number without swap constraint numlength num consist digit contain lead zero ","1134":"date string form day month year day set 1st 3rd 4th month set jan feb mar apr may jun jul aug sep oct nov dec year rang convert date string format yyyymmdd yyyi denot digit year denot digit month denot digit day exampl input date oct output exampl input date 6th jun output exampl input date may output constraint date guarante valid error handl necessari ","1135":"array num consist posit integ comput sum nonempti continu subarray array sort nondecreas order creat new array number return sum number index left index right index inclus new array sinc answer huge number return modulo exampl input num left right output explan subarray sum sort nondecreas order new array sum number index le ri exampl input num left right output explan array exampl new array sum number index le ri exampl input num left right output constraint numslength numslength numsi left right ","1136":"integ array num move choos element num chang valu return minimum differ largest smallest valu num perform move exampl input num output explan make move first move chang num becom second move chang num becom third move chang num becom perform move differ minimum maximum exampl input num output explan make move first move chang num becom second move chang num becom third move chang num becom perform move differ minimum maximum shown way make differ move exampl input num output explan make move first move chang num becom second move chang num becom third move chang num becom perform move differ minimum maximum constraint numslength numsi ","1137":"alic bob take turn play game alic start first initi stone pile player turn player make move consist remov nonzero squar number stone pile also player make move hesh lose game posit integ return true alic win game otherwis return fals assum player play optim exampl input output true explan alic remov stone win game bob doesnt move exampl input output fals explan alic remov stone bob remov last win game exampl input output true explan alreadi perfect squar alic win move remov stone constraint ","1138":"array integ num return number good pair pair call good numsi numsj exampl input num output explan good pair 0index exampl input num output explan pair array good exampl input num output constraint numslength numsi ","1139":"binari string return number substr charact sinc answer may larg return modulo exampl input output explan substr total charact time time time exampl input output explan substr shown time exampl input output explan substr contain charact constraint slength si either ","1140":"undirect weight graph node 0index repres edg list edgesi undirect edg connect node probabl success travers edg succprobi node start end find path maximum probabl success go start end return success probabl path start end return answer accept differ correct answer 1e5 exampl input edg succprob start end output explan path start end probabl success exampl input edg succprob start end output exampl input edg succprob start end output explan path constraint start end start end succproblength edgeslength succprobi edg everi node ","1141":"deliveri compani want build new servic center new citi compani know posit custom citi 2dmap want build new center posit sum euclidean distanc custom minimum array posit positionsi xi yi posit ith custom map return minimum sum euclidean distanc custom word need choos posit servic center xcentr ycentr follow formula minim answer within actual valu accept exampl input posit output explan shown see choos xcentr ycentr make distanc custom sum distanc minimum possibl achiev exampl input posit output explan minimum possibl sum distanc sqrt2 sqrt2 constraint positionslength positionsilength xi yi ","1142":"sql schema panda schema ","1143":"numbottl water bottl initi full water exchang numexchang empti water bottl market full water bottl oper drink full water bottl turn empti bottl integ numbottl numexchang return maximum number water bottl drink exampl input numbottl numexchang output explan exchang empti bottl get full water bottl number water bottl drink exampl input numbottl numexchang output explan exchang empti bottl get full water bottl number water bottl drink constraint numbottl numexchang ","1144":"tree ie connect undirect graph cycl consist node number exactli edg root tree node node tree label lowercas charact string label ie node number label labelsi edg array form edgesi ai bi mean edg node ai bi tree return array size ansi number node subtre ith node label node subtre tree tree consist node descend node exampl input edg label abaedcd output explan node label subtre node label well thu answer notic node part subtre node label subtre node contain node node differ label node answer node exampl input edg label bbbb output explan subtre node contain node answer subtre node contain node answer subtre node contain node label thu answer subtre node contain node label thu answer exampl input edg label aabab output constraint edgeslength edgesilength ai bi ai bi labelslength label consist lowercas english letter ","1145":"string lowercas letter need find maximum number nonempti substr meet follow condit substr overlap substr sij sxi either true substr contain certain charact must also contain occurr find maximum number substr meet condit multipl solut number substr return minimum total length shown exist uniqu solut minimum total length notic return substr order exampl input adefaddaccc output efccc explan follow possibl substr meet condit adefaddaccc adefadda ef e ccc choos first string choos anyth els wed get choos adefadda left ccc doesnt overlap thu obtain substr notic also optim choos ef sinc split therefor optim way choos efccc give us substr solut number substr exist exampl input abbaccd output dbbcc explan notic set substr dabbacc also length consid incorrect sinc larger total length constraint slength contain lowercas english letter ","1146":"winston mysteri function func integ array arr integ target want find valu make valu funcarr target minimum possibl return minimum possibl valu funcarr target notic func call valu arrlength exampl input arr target output explan call func pair winston got follow result valu closest thu minimum differ exampl input arr target output explan winston call func possibl valu alway got thu min differ exampl input arr target output constraint arrlength arri target ","1147":"nonneg integ low high return count odd number low high inclus exampl input low high output explan odd number exampl input low high output explan odd number constraint low high ","1148":"array integ arr return number subarray odd sum sinc answer larg return modulo exampl input arr output explan subarray subarray sum odd sum answer exampl input arr output explan subarray subarray sum subarray even sum answer exampl input arr output constraint arrlength arri ","1149":"string split call good split nonempti string sleft sright concaten equal ie sleft sright number distinct letter sleft sright return number good split make exampl input aacaba output explan way split aacaba good acaba left string right string contain differ letter respect caba left string right string contain differ letter respect aac aba left string right string contain differ letter respect good split aaca ba left string right string contain differ letter respect good split aacab left string right string contain differ letter respect exampl input abcd output explan split string follow ab cd constraint slength consist lowercas english letter ","1150":"integ array target integ array initi size target element initi zero oper choos subarray initi increment valu return minimum number oper form target array initi test case gener answer fit 32bit integ exampl input target output explan need least oper form target array initi array increment index inclus increment index inclus increment index target array form exampl input target output explan exampl input target output explan constraint targetlength targeti ","1151":"sql schema panda schema ","1152":"string integ array indic length string shuffl charact ith posit move indicesi shuffl string return shuffl string exampl input codeleet indic output leetcod explan shown codeleet becom leetcod shuffl exampl input abc indic output abc explan shuffl charact remain posit constraint slength indiceslength consist lowercas english letter indicesi valu indic uniqu ","1153":"0index binari string target length anoth binari string length initi set zero want make equal target oper pick index flip bit inclus rang flip mean chang return minimum number oper need make equal target exampl input target output explan initi choos index choos index choos index need least flip oper form target exampl input target output explan initi choos index choos index choos index need least flip oper form target exampl input target output explan need oper sinc initi alreadi equal target constraint targetlength targeti either ","1154":"root binari tree integ distanc pair differ leaf node binari tree said good length shortest path less equal distanc return number good leaf node pair tree exampl input root 123null4 distanc output explan leaf node tree length shortest path good pair exampl input root distanc output explan good pair shortest path pair good length ther shortest path exampl input root 7146null53nullnullnullnullnull2 distanc output explan good pair constraint number node tree rang nodev distanc ","1155":"runlength encod string compress method work replac consecut ident charact repeat time concaten charact number mark count charact length run exampl compress string aabccc replac replac ccc c3 thu compress string becom a2bc3 notic problem ad singl charact string integ need delet charact runlength encod version minimum length find minimum length runlength encod version delet charact exampl input aaabcccd output explan compress without delet anyth give us a3bc3d length delet charact would decreas length compress string instanc delet abcccd compress abc3d therefor optim way delet compress version a3c3 length exampl input aabbaa output explan delet charact result compress string would length exampl input aaaaaaaaaaa output explan sinc delet anyth compress string length constraint slength slength contain lowercas english letter ","1156":"array integ arr integ need find number good triplet triplet arri arrj arrk good follow condit true arrlength arri arrj arrj arrk arri arrk denot absolut valu return number good triplet exampl input arr output explan good triplet exampl input arr output explan triplet satisfi condit constraint arrlength arri ","1157":"integ array arr distinct integ integ game play first element array ie arr0 arr1 round game compar arr0 arr1 larger integ win remain posit smaller integ move end array game end integ win consecut round return integ win game guarante winner game exampl input arr output explan let see round game round arr winner wincount see round play winner win consecut game exampl input arr output explan win first round consecut constraint arrlength arri arr contain distinct integ ","1158":"binari grid step choos adjac row grid swap grid said valid cell main diagon zero return minimum number step need make grid valid grid valid main diagon grid diagon start cell end cell exampl input grid output exampl input grid output explan row similar swap effect grid exampl input grid output constraint gridlength gridilength gridij either ","1159":"sort array distinct integ nums1 nums2 valid path defin follow choos array nums1 nums2 travers index0 travers current array left right read valu present nums1 nums2 allow chang path array repeat valu consid valid path score defin sum uniqu valu valid path return maximum score obtain possibl valid path sinc answer may larg return modulo exampl input nums1 nums2 output explan valid path start nums1 start nums2 maximum obtain path green exampl input nums1 nums2 output explan maximum sum obtain path exampl input nums1 nums2 output explan common element nums1 nums2 maximum sum obtain path constraint nums1length nums2length nums1i nums2i nums1 nums2 strictli increas ","1160":"array arr posit integ sort strictli increas order integ return kth posit integ miss array exampl input arr output explan miss posit integ 5th miss posit integ exampl input arr output explan miss posit integ miss posit integ constraint arrlength arri arri arrj arrlength could solv problem less complex ","1161":"string goal convert move less ith move choos index 1index slength chosen previou move shift charact index time noth shift charact mean replac next letter alphabet wrap around becom shift charact mean appli shift oper time rememb index pick return true possibl convert move otherwis return fals exampl input input ouput output true explan 6th move shift time get 7th move shift get u exampl input abc bcd output fals explan need shift charact time convert shift 1st move howev way shift charact remain move obtain exampl input aab bbb output true explan 1st move shift first time get move shift second time get constraint slength tlength contain lowercas english letter ","1162":"parenthes string contain charact parenthes string balanc left parenthesi must correspond consecut right parenthesi left parenthesi must go correspond consecut right parenthesi word treat open parenthesi close parenthesi exampl balanc balanc insert charact posit string balanc need return minimum number insert need make balanc exampl input output explan second match first match need add end string balanc exampl input output explan string alreadi balanc exampl input output explan add match first add match last constraint slength consist ","1163":"string awesom substr nonempti substr make number swap order make palindrom return length maximum length awesom substr exampl input output explan longest awesom substr form palindrom swap exampl input output exampl input output explan longest awesom substr form palindrom swap constraint slength consist digit ","1164":"string lower upper case english letter good string string doesnt adjac charact si si slength si lowercas letter si letter uppercas viceversa make string good choos adjac charact make string bad remov keep string becom good return string make good answer guarante uniqu constraint notic empti string also good exampl input leeeetcod output leetcod explan first step either choos result leeeetcod reduc leetcod exampl input abbacc output explan mani possibl scenario lead answer exampl abbacc aacc cc abbacc abba exampl input output constraint slength contain lower upper case english letter ","1165":"posit integ binari string form follow si si reverseinvertsi denot concaten oper reversex return revers string invertx invert bit chang chang exampl first string sequenc return kth bit guarante valid exampl input output explan 1st bit exampl input output explan bit constraint ","1166":"array num integ target return maximum number nonempti nonoverlap subarray sum valu subarray equal target exampl input num target output explan nonoverlap subarray sum equal target2 exampl input num target output explan subarray sum equal first nonoverlap constraint numslength numsi target ","1167":"wooden stick length unit stick label exampl stick length label follow integ array cut cutsi denot posit perform cut perform cut order chang order cut wish cost cut length stick cut total cost sum cost cut cut stick split smaller stick ie sum length length stick cut pleas refer first exampl better explan return minimum total cost cut exampl input cut output explan use cut order input lead follow scenario first cut done rod length cost second cut done rod length ie second part first cut third done rod length last cut rod length total cost rearrang cut exampl lead scenario total cost shown exampl photo exampl input cut output explan tri cut order cost much order total cost exampl order total cost minimum possibl constraint cutslength minn cutsi integ cut array distinct ","1168":"integ array arr return true consecut odd number array otherwis return fals exampl input arr output fals explan consecut odd exampl input arr output true explan consecut odd constraint arrlength arri ","1169":"univers earth c137 rick discov special form magnet forc ball put new invent basket rick empti basket ith basket positioni morti ball need distribut ball basket minimum magnet forc ball maximum rick state magnet forc differ ball posit integ array posit integ return requir forc exampl input posit output explan distribut ball basket make magnet forc ball pair minimum magnet forc achiev larger minimum magnet forc exampl input posit output explan use basket constraint positionlength positioni integ posit distinct positionlength ","1170":"orang kitchen decid eat orang everi day follow eat orang number remain orang divis eat orang number remain orang divis eat orang choos action per day integ return minimum number day eat orang exampl input output explan orang day eat orang day eat orang sinc divis day eat orang day eat last orang need least day eat orang exampl input output explan orang day eat orang sinc divis day eat orang sinc divis day eat last orang need least day eat orang constraint ","1171":"direct acycl graph vertic number array edg edgesi toi repres direct edg node node toi find smallest set vertic node graph reachabl guarante uniqu solut exist notic return vertic order exampl input edg output explan possibl reach node singl vertex reach reach output exampl input edg output explan notic vertic reachabl node must includ also vertic reach node constraint edgeslength min105 edgesilength toi pair toi distinct ","1172":"2d array charact grid size need find exist cycl consist valu grid cycl path length grid start end cell cell move cell adjac direct left right valu current cell also move cell visit last move exampl cycl invalid visit last visit cell return true cycl valu exist grid otherwis return fals exampl input grid aaaaabbaabbaaaaa output true explan valid cycl shown differ color imag exampl input grid cccacdccccecfccc output true explan valid cycl highlight imag exampl input grid abbbzbbba output fals constraint gridlength gridilength grid consist lowercas english letter ","1173":"integ integ array round circular track consist sector label marathon held track marathon consist round ith round start sector roundsi end sector roundsi exampl round start sector rounds0 end sector rounds1 return array visit sector sort ascend order notic circul track ascend order sector number counterclockwis direct see first exampl exampl input round output explan marathon start sector order visit sector follow end round end round end round marathon see sector visit twice visit sector sector visit exampl input round output exampl input round output constraint roundslength roundsi roundsi roundsi ","1174":"pile coin vari size friend take pile coin follow step choos pile coin necessarili consecut choic alic pick pile maximum number coin pick next pile maximum number coin friend bob pick last pile repeat pile coin array integ pile pilesi number coin ith pile return maximum number coin exampl input pile output explan choos triplet alic pick pile coin pile coin bob last choos triplet alic pick pile coin pile coin bob last maximum number coin hand choos arrang get coin optim exampl input pile output exampl input pile output constraint pileslength pileslength pilesi ","1175":"array arr repres permut number binari string size initi bit set step assum binari string arr 1index bit posit arri set also integ find latest step exist group one length group one contigu substr extend either direct return latest step exist group one length exactli group exist return exampl input arr output explan step group step group step group step group step group latest step exist group size step exampl input arr output explan step group step group step group step group step group group size exist step constraint arrlength arri integ arr distinct ","1176":"sever stone arrang row stone associ valu integ array stonevalu round game alic divid row nonempti row ie left row right row bob calcul valu row sum valu stone row bob throw away row maximum valu alic score increas valu remain row valu row equal bob let alic decid row thrown away next round start remain row game end stone remain alic initi return maximum score alic obtain exampl input stonevalu output explan first round alic divid row left row valu right row valu bob throw away right row alic score second round alic divid row time bob throw away left row alic score becom last round alic choic divid row bob throw away right row alic score game end stone remain row exampl input stonevalu output exampl input stonevalu output constraint stonevaluelength stonevaluei ","1177":"array posit integ arr find pattern length repeat time pattern subarray consecut subsequ consist valu repeat multipl time consecut without overlap pattern defin length number repetit return true exist pattern length repeat time otherwis return fals exampl input arr output true explan pattern length repeat consecut time notic pattern repeat time less exampl input arr output true explan pattern length repeat consecut time anoth valid pattern also repeat time exampl input arr output fals explan pattern length repeat time pattern length repeat time constraint arrlength arri ","1178":"array integ num find maximum length subarray product element posit subarray array consecut sequenc valu taken array return maximum length subarray posit product exampl input num output explan array num alreadi posit product exampl input num output explan longest subarray posit product product notic includ subarray sinc thatll make product posit exampl input num output explan longest subarray posit product constraint numslength numsi ","1179":"binari grid grid repres land repres water island maxim 4direct horizont vertic connect group grid said connect exactli island otherwis said disconnect day allow chang singl land cell water cell return minimum number day disconnect grid exampl input grid output explan need least day get disconnect grid chang land grid11 grid02 water get disconnect island exampl input grid output explan grid full water also disconnect island constraint gridlength gridilength gridij either ","1180":"array num repres permut integ go construct binari search tree insert element num order initi empti find number differ way reorder num construct ident form origin array num exampl num root left child right child array also yield yield differ return number way reorder num form ident origin form num sinc answer may larg return modulo exampl input num output explan reorder num yield way reorder num yield exampl input num output explan follow array yield exampl input num output explan order num yield constraint numslength numsi numslength integ num distinct ","1181":"squar matrix mat return sum matrix diagon includ sum element primari diagon element secondari diagon part primari diagon exampl input mat output explan diagon sum notic element mat11 count exampl input mat output exampl input mat output constraint matlength matilength matij ","1182":"binari string split nonempti string return number way split number one sinc answer may larg return modulo exampl input output explan way split part part contain number letter exampl input output exampl input output explan way split part constraint slength si either ","1183":"","1184":"array distinct posit integ locat locationsi repres posit citi also integ start finish fuel repres start citi end citi initi amount fuel respect step citi pick citi locationslength move citi move citi citi reduc amount fuel locationsi locationsj pleas notic denot absolut valu notic fuel becom neg point time allow visit citi includ start finish return count possibl rout start finish sinc answer may larg return modulo exampl input locat start finish fuel output explan follow possibl rout use unit fuel exampl input locat start finish fuel output explan follow possibl rout use fuel use fuel use fuel use fuel use fuel exampl input locat start finish fuel output explan imposs get use unit fuel sinc shortest rout need unit fuel constraint locationslength locationsi integ locat distinct start finish locationslength fuel ","1185":"string contain lowercas english letter charact convert charact lowercas letter final string contain consecut repeat charact modifi non charact guarante consecut repeat charact string except return final string convers possibl made solut return shown answer alway possibl constraint exampl input output explan solut problem yz valid invalid modif string consecut repeat charact zz exampl input ubvw output ubvaw explan solut problem invalid modif string consecut repeat charact ubvvw ubvww constraint slength lowercas english letter ","1186":"array integ nums1 nums2 return number triplet form type type follow rule type triplet nums1i2 nums2j nums2k nums1length nums2length type triplet nums2i2 nums1j nums1k nums2length nums1length exampl input nums1 nums2 output explan type nums112 nums21 nums22 exampl input nums1 nums2 output explan triplet valid type nums1i2 nums2j nums2k type nums2i2 nums1j nums1k exampl input nums1 nums2 output explan valid triplet type nums132 nums20 nums22 type nums232 nums10 nums11 constraint nums1length nums2length nums1i nums2i ","1187":"alic balloon arrang rope 0index string color colorsi color ith balloon alic want rope color want consecut balloon color ask bob help bob remov balloon rope make color 0index integ array neededtim neededtimei time second bob need remov ith balloon rope return minimum time bob need make rope color exampl input color abaac neededtim output explan imag blue red green bob remov blue balloon index take second longer consecut balloon color total time exampl input color abc neededtim output explan rope alreadi color bob need remov balloon rope exampl input color aabaa neededtim output explan bob remov balloon indic balloon take second remov longer consecut balloon color total time constraint colorslength neededtimelength neededtimei color contain lowercas english letter ","1188":"alic bob undirect graph node type edg type travers alic type travers bob type travers alic bob array edg edgesi typei ui vi repres bidirect edg type typei node ui vi find maximum number edg remov remov edg graph still fulli travers alic bob graph fulli travers alic bob start node reach node return maximum number edg remov return alic bob fulli travers graph exampl input edg output explan remov edg graph still fulli travers alic bob remov addit edg make maximum number edg remov exampl input edg output explan notic remov edg make graph fulli travers alic bob exampl input edg output explan current graph alic reach node node likewis bob reach therefor imposs make graph fulli travers constraint edgeslength min105 edgesilength typei ui vi tupl typei ui vi distinct ","1189":"sql schema panda schema ","1190":"binari matrix mat return number special posit mat posit call special matij element row column row column 0index exampl input mat output explan special posit mat12 element row column exampl input mat output explan special posit constraint matlength matilength matij either ","1191":"list prefer friend alway even person preferencesi contain list friend sort order prefer word friend earlier list prefer friend later list friend list denot integ friend divid pair pair list pair pairsi xi yi denot xi pair yi yi pair xi howev pair may caus friend unhappi friend unhappi pair exist friend u pair prefer u u prefer return number unhappi friend exampl input prefer pair output explan friend unhappi pair prefer prefer friend unhappi pair prefer prefer friend happi exampl input prefer pair output explan friend happi exampl input prefer pair output constraint even preferenceslength preferencesilength preferencesij preferencesi contain valu preferencesi uniqu pairslength pairsilength xi yi xi yi person contain exactli pair ","1192":"array point repres integ coordin point 2dplane pointsi xi yi cost connect point xi yi xj yj manhattan distanc xi xj yi yj val denot absolut valu val return minimum cost make point connect point connect exactli simpl path point exampl input point output explan connect point shown get minimum cost notic uniqu path everi pair point exampl input point output constraint pointslength xi yi pair xi yi distinct ","1193":"sql schema panda schema ","1194":"array posit integ arr return sum possibl oddlength subarray arr subarray contigu subsequ array exampl input arr output explan oddlength subarray arr sum add togeth get exampl input arr output explan subarray odd length sum exampl input arr output constraint arrlength arri could solv problem time complex ","1195":"array integ num array request requestsi starti endi ith request ask sum numsstarti numsstarti numsendi numsendi starti endi 0index return maximum total sum request among permut num sinc answer may larg return modulo exampl input num request output explan permut num follow result requests0 nums1 nums2 nums3 requests1 nums0 nums1 total sum permut higher total sum follow result requests0 nums1 nums2 nums3 requests1 nums0 nums1 total sum best exampl input num request output explan permut max total sum request sum exampl input num request output explan permut max total sum request sum constraint numslength numsi requestslength requestsilength starti endi ","1196":"array posit integ num remov smallest subarray possibl empti sum remain element divis allow remov whole array return length smallest subarray need remov imposs subarray defin contigu block element array exampl input num output explan sum element num divis remov subarray sum remain element divis exampl input num output explan remov singl element get sum divis best way remov subarray leav us sum exampl input num output explan sum alreadi divis thu need remov anyth constraint numslength numsi ","1197":"strang printer follow special requir turn printer print solid rectangular pattern singl color grid cover exist color rectangl printer use color oper color use matrix targetgrid targetgridrowcol color posit row col grid return true possibl print matrix targetgrid otherwis return fals exampl input targetgrid output true exampl input targetgrid output true exampl input targetgrid output fals explan imposs form targetgrid allow print color differ turn constraint targetgridlength targetgridilength targetgridrowcol ","1198":"string text word place among number space word consist lowercas english letter separ least space guarante text contain least word rearrang space equal number space everi pair adjac word number maxim redistribut space equal place extra space end mean return string length text return string rearrang space exampl input text sentenc output sentenc explan total space word evenli divid space word space exampl input text practic make perfect output practic make perfect explan total space word space plu extra space place extra space end string constraint textlength text consist lowercas english letter text contain least word ","1199":"string return maximum number uniqu substr string split split string list nonempti substr concaten substr form origin string howev must split substr uniqu substr contigu sequenc charact within string exampl input ababccc output explan way split maxim ab cc split like cc valid multipl time exampl input aba output explan way split maxim ba exampl input output explan imposs split string constraint slength contain lower case english letter ","1200":"matrix grid initi locat topleft corner step move right matrix among possibl path start topleft corner end bottomright corner find path maximum nonneg product product path product integ grid cell visit along path return maximum nonneg product modulo maximum product neg return notic modulo perform get maximum product exampl input grid output explan possibl get nonneg product path return exampl input grid output explan maximum nonneg product shown exampl input grid output explan maximum nonneg product shown constraint gridlength gridilength gridij ","1201":"group point first group size1 point second group size2 point size1 size2 cost connect point size1 size2 matrix costij cost connect point first group point second group group connect point group connect point opposit group word point first group must connect least point second group point second group must connect least point first group return minimum cost take connect group exampl input cost output explan optim way connect group 2b result total cost exampl input cost output explan optim way connect group 2b 2c result total cost note multipl point connect point first group point second group matter limit number point connect care minimum total cost exampl input cost output constraint size1 costlength size2 costilength size1 size2 size1 size2 costij ","1202":"leetcod file system keep log time user perform chang folder oper oper describ move parent folder current folder alreadi main folder remain folder remain folder move child folder name folder guarante alway exist list string log logsi oper perform user ith step file system start main folder oper log perform return minimum number oper need go back main folder chang folder oper exampl input log d1d2d21 output explan use chang folder oper time go back main folder exampl input log d1d2d3d31 output exampl input log output constraint logslength logsilength logsi contain lowercas english letter digit logsi follow format describ statement folder name lowercas english letter digit ","1203":"oper centenni wheel gondola gondola room peopl abil rotat gondola counterclockwis cost runningcost dollar array custom length customersi number new custom arriv ith rotat 0index mean must rotat wheel time customersi custom arriv make custom wait room gondola custom pay boardingcost dollar board gondola closest ground exit gondola reach ground stop wheel time includ serv custom decid stop serv custom subsequ rotat free order get custom safe note current custom wait wheel board gondola rest wait next rotat return minimum number rotat need perform maxim profit scenario profit posit return exampl input custom boardingcost runningcost output explan number written gondola number peopl current custom arriv board wait next gondola wheel rotat current profit custom arriv wait board wheel wait wheel rotat current profit final custom board gondola wheel rotat current profit highest profit rotat wheel time exampl input custom boardingcost runningcost output explan custom arriv board wait next gondola wheel rotat current profit custom arriv board wait origin wait newli wait wheel rotat current profit final custom arriv board wait wheel rotat current profit board wait wheel rotat current profit board wait wheel rotat current profit board wait wheel rotat current profit board wheel rotat current profit highest profit rotat wheel time exampl input custom boardingcost runningcost output explan custom arriv board wait wheel rotat current profit custom arriv board wait wheel rotat current profit custom arriv board wait wheel rotat current profit custom arriv board wait wheel rotat current profit custom arriv board wait wheel rotat current profit profit never posit return constraint customerslength customersi boardingcost runningcost ","1204":"kingdom consist king children grandchildren everi someon famili die child born kingdom welldefin order inherit consist king first member let defin recurs function successorx curord person inherit order far return next person order inherit successorx curord children children curord king return null els return successorx parent curord els return oldest child who curord exampl assum kingdom consist king children alic bob alic older bob final alic son jack begin curord king call successork curord return alic append curord get king alic call successoralic curord return jack append curord get king alic jack call successorjack curord return bob append curord get king alic jack bob call successorbob curord return null thu order inherit king alic jack bob use function alway obtain uniqu order inherit implement throneinherit class throneinheritancestr kingnam initi object throneinherit class name king part constructor void birthstr parentnam string childnam indic parentnam gave birth childnam void deathstr name indic death name death person doesnt affect successor function current inherit order treat mark person dead string getinheritanceord return list repres current order inherit exclud dead peopl exampl input throneinherit birth birth birth birth birth birth getinheritanceord death getinheritanceord king king andi king bob king catherin andi matthew bob alex bob asha null bob null output null null null null null null null king andi matthew bob alex asha catherin null king andi matthew alex asha catherin explan throneinherit new throneinheritancek order king tbirthk andi order king andi tbirthk bob order king andi bob tbirthk catherin order king andi bob catherin tbirthandi matthew order king andi matthew bob catherin tbirthbob alex order king andi matthew bob alex catherin tbirthbob asha order king andi matthew bob alex asha catherin tgetinheritanceord return king andi matthew bob alex asha catherin tdeathbob order king andi matthew bob alex asha catherin tgetinheritanceord return king andi matthew alex asha catherin constraint kingnamelength parentnamelength childnamelength namelength kingnam parentnam childnam name lowercas english letter argument childnam kingnam distinct name argument death pass either constructor childnam birth first call birthparentnam childnam guarante parentnam aliv call made birth death call made getinheritanceord ","1205":"build number build number employe transfer season employe want chang build resid array request requestsi toi repres employe request transfer build build toi build full list request achiev build net chang employe transfer mean number employe leav equal number employe move exampl employe leav build leav build leav build employe move build employe move build employe move build return maximum number achiev request exampl input request output explant let see request build employe want move build build employe want move build respect build employe want move build build employe want move build build dont request achiev request user swap place achiev request user swap place build exampl input request output explant let see request build employe want stay build build employe want move build build employe want move build achiev request exampl input request output constraint requestslength requestsilength toi ","1206":"design park system park lot park lot kind park space big medium small fix number slot size implement parkingsystem class parkingsystemint big int medium int small initi object parkingsystem class number slot park space part constructor bool addcarint cartyp check whether park space cartyp car want get park lot cartyp kind big medium small repres respect car park park space cartyp space avail return fals els park car size space return true exampl input parkingsystem addcar addcar addcar addcar output null true true fals fals explan parkingsystem parkingsystem new parkingsystem1 parkingsystemaddcar1 return true avail slot big car parkingsystemaddcar2 return true avail slot medium car parkingsystemaddcar3 return fals avail slot small car parkingsystemaddcar1 return fals avail slot big car alreadi occupi constraint big medium small cartyp call made addcar ","1207":"leetcod compani worker use keycard unlock offic door time worker use keycard secur system save worker name time use system emit alert worker use keycard time onehour period list string keynam keytim keynamei keytimei correspond person name time keycard use singl day access time 24hour time format hhmm return list uniqu worker name receiv alert frequent keycard use sort name ascend order alphabet notic consid within onehour period consid within onehour period exampl input keynam danieldanieldanielluisluisluislui keytim output daniel explan daniel use keycard time onehour period exampl input keynam alicealicealicebobbobbobbob keytim output bob explan bob use keycard time onehour period constraint keynamelength keytimelength keynamelength keytimelength keytimei format hhmm keynamei keytimei uniqu keynameilength keynamei contain lowercas english letter ","1208":"array rowsum colsum nonneg integ rowsumi sum element ith row colsumj sum element jth column 2d matrix word know element matrix know sum row column find matrix nonneg integ size rowsumlength colsumlength satisfi rowsum colsum requir return 2d array repres matrix fulfil requir guarante least matrix fulfil requir exist exampl input rowsum colsum output explan 0th row rowsum0 1st row rowsum1 0th column colsum0 1st column colsum1 row column sum match matrix element nonneg anoth possibl matrix exampl input rowsum colsum output constraint rowsumlength colsumlength rowsumi colsumi sumrowsum sumcolsum ","1209":"server number k1 use handl multipl request simultan server infinit comput capac handl request time request assign server accord specif algorithm ith 0index request arriv server busi request drop handl kth server avail assign request server otherwis assign request next avail server wrap around list server start necessari exampl ith server busi tri assign request i1th server i2th server strictli increas array arriv posit integ arrivali repres arriv time ith request anoth array load loadi repres load ith request time take complet goal find busiest server server consid busiest handl number request success among server return list contain id 0index busiest server may return id order exampl input arriv load output explan server start avail first request handl first server order request come server busi assign next avail server request come handl sinc server busi drop server handl request server handl request henc server busiest server exampl input arriv load output explan first request handl first server request come handl server sinc server avail server handl request server handl request henc server busiest server exampl input arriv load output explan server handl singl request consid busiest constraint arrivallength loadlength arrivallength loadlength arrivali loadi arriv strictli increas ","1210":"array num nonneg integ num consid special exist number exactli number num greater equal notic element num return array special otherwis return proven num special valu uniqu exampl input num output explan valu greater equal exampl input num output explan number fit criteria number number number greater sinc number num exampl input num output explan valu greater equal constraint numslength numsi ","1211":"binari tree name evenodd meet follow condit root binari tree level index children level index children level index etc everi evenindex level node level odd integ valu strictli increas order left right everi oddindex level node level even integ valu strictli decreas order left right root binari tree return true binari tree evenodd otherwis return fals exampl input root 11043null791286nullnull2 output true explan node valu level level level level level sinc level odd increas level even decreas tree evenodd exampl input root output fals explan node valu level level level level node valu level must strictli increas order tree evenodd exampl input root output fals explan node valu level even integ constraint number node tree rang nodev ","1212":"array point integ angl locat locat posx posi pointsi xi yi denot integr coordin xy plane initi face directli east posit move posit rotat word posx posi chang field view degre repres angl determin wide see view direct let amount degre rotat counterclockwis field view inclus rang angl angle2 angle2 browser support video tag video format see set point point angl form point posit immedi east direct posit field view multipl point coordin may point locat alway see point regardless rotat point obstruct vision point return maximum number point see exampl input point angl locat output explan shade region repres field view point made visibl field view includ even though front line sight exampl input point angl locat output explan point made visibl field view includ locat exampl input point angl locat output explan see point shown constraint pointslength pointsilength locationlength angl posx posi xi yi ","1213":"integ must transform use follow oper number time chang rightmost 0th bit binari represent chang ith bit binari represent i1th bit set i2th 0th bit set return minimum number oper transform exampl input output explan binari represent oper sinc 0th bit 1st oper exampl input output explan binari represent oper sinc 1st bit 0th 0th bit 1st oper oper sinc 0th bit 1st oper constraint ","1214":"valid parenthes string return nest depth nest depth maximum number nest parenthes exampl input output explan digit insid nest parenthes string exampl input output explan digit insid nest parenthes string exampl input output constraint slength consist digit charact guarante parenthes express vp ","1215":"infrastructur citi number road connect citi roadsi ai bi indic bidirect road citi ai bi network rank differ citi defin total number directli connect road either citi road directli connect citi count maxim network rank infrastructur maximum network rank pair differ citi integ array road return maxim network rank entir infrastructur exampl input road output explan network rank citi road connect either road count exampl input road output explan road connect citi exampl input road output explan network rank notic citi connect constraint roadslength roadsilength ai bi ai bi pair citi road connect ","1216":"string length choos index split string index split string aprefix asuffix aprefix asuffix split string bprefix bsuffix bprefix bsuffix check aprefix bsuffix bprefix asuffix form palindrom split string sprefix ssuffix either ssuffix sprefix allow empti exampl abc abc ab abc valid split return true possibl form palindrom string otherwis return fals notic denot concaten string exampl input output true explain either palindrom answer true sinc split follow way aprefix asuffix bprefix bsuffix aprefix bsuffix palindrom exampl input xbdef xecab output fals exampl input ulacfd jizalu output true explain split index aprefix ula asuffix cfd bprefix jiz bsuffix aprefix bsuffix ula ulaalu palindrom constraint alength blength alength blength lowercas english letter ","1217":"citi number array edg size edgesi ui vi repres bidirect edg citi ui vi exist uniqu path pair citi word citi form tree subtre subset citi everi citi reachabl everi citi subset path pair pass citi subset subtre differ citi subtre present find number subtre maximum distanc citi subtre equal return array size dth element 1index number subtre maximum distanc citi equal notic distanc citi number edg path exampl input edg output explan subtre subset max distanc subtre subset max distanc subtre node max distanc exampl input edg output exampl input edg output constraint edgeslength edgesilength ui vi pair ui vi distinct ","1218":"integ array arr return mean remain integ remov smallest largest element answer within actual answer consid accept exampl input arr output explan eras minimum maximum valu array element equal mean exampl input arr output exampl input arr output constraint arrlength arrlength multipl arri ","1219":"array network tower tower towersi xi yi qi denot ith network tower locat xi yi qualiti factor qi coordin integr coordin xy plane distanc coordin euclidean distanc also integ radiu tower reachabl distanc less equal radiu outsid distanc signal becom garbl tower reachabl signal qualiti ith tower coordin calcul formula \u230aqi distanc tower coordin network qualiti coordin sum signal qualiti reachabl tower return array cx cy repres integr coordin cx cy network qualiti maximum multipl coordin network qualiti return lexicograph minimum nonneg coordin note coordin x1 y1 lexicograph smaller x2 y2 either x1 x2 x1 x2 y1 y2 \u230aval\u230b greatest integ less equal val floor function exampl input tower radiu output explan coordin total qualiti qualiti result sqrt0\u230b \u230a7\u230b qualiti result sqrt2\u230b \u230a207\u230b qualiti result sqrt1\u230b \u230a45\u230b coordin higher network qualiti exampl input tower radiu output explan sinc tower network qualiti highest right tower locat exampl input tower radiu output explan coordin highest network qualiti constraint towerslength towersilength xi yi qi radiu ","1220":"point 1d plane ith point find number way draw exactli nonoverlap line segment segment cover point endpoint segment must integr coordin line segment cover point allow share endpoint return number way draw nonoverlap line segment sinc number huge return modulo exampl input output explan line segment shown red blue imag show differ way exampl input output explan way exampl input output explan total number possibl way draw line segment take number modulo give us constraint ","1221":"write api gener fanci sequenc use append addal multal oper implement fanci class fanci initi object empti sequenc void appendv append integ val end sequenc void addallinc increment exist valu sequenc integ inc void multallm multipli exist valu sequenc integ int getindexidx get current valu index idx 0index sequenc modulo index greater equal length sequenc return exampl input fanci append addal append multal getindex addal append multal getindex getindex getindex output null null null null null null null null explan fanci fanci new fanci fancyappend2 fanci sequenc fancyaddall3 fanci sequenc fancyappend7 fanci sequenc fancymultall2 fanci sequenc fancygetindex0 return fancyaddall3 fanci sequenc fancyappend10 fanci sequenc fancymultall2 fanci sequenc fancygetindex0 return fancygetindex1 return fancygetindex2 return constraint val inc idx call total made append addal multal getindex ","1222":"string return length longest substr equal charact exclud charact substr return substr contigu sequenc charact within string exampl input output explan optim substr empti substr exampl input abca output explan optim substr exampl input cbzxi output explan charact appear twice constraint slength contain lowercas english letter ","1223":"string even length consist digit integ appli either follow oper number time order add odd indic 0index digit post cycl back exampl becom rotat right posit exampl becom return lexicograph smallest string obtain appli oper number time string lexicograph smaller string length first posit differ string letter appear earlier alphabet correspond letter exampl lexicograph smaller first posit differ third letter come exampl input output explan appli follow oper start rotat add add rotat add add rotat add way obtain string lexicograph smaller exampl input output explan appli follow oper start rotat add rotat way obtain string lexicograph smaller exampl input output explan sequenc oper give us lexicograph smaller string constraint slength slength even consist digit slength ","1224":"manag basketbal team upcom tournament want choos team highest overal score score team sum score player team howev basketbal team allow conflict conflict exist younger player strictli higher score older player conflict occur player age list score age scoresi agesi repres score age ith player respect return highest overal score possibl basketbal team exampl input score age output explan choos player exampl input score age output explan best choos last player notic allow choos multipl peopl age exampl input score age output explan best choos first player constraint scoreslength ageslength scoreslength ageslength scoresi agesi ","1225":"newli design keypad test tester press sequenc key time string keyspress length keyspressedi ith key press test sequenc sort list releasetim releasetimesi time ith key releas array 0index 0th key press time everi subsequ key press exact time previou key releas tester want know key keypress longest durat ith keypress durat releasetimesi releasetimesi 0th keypress durat releasetimes0 note key could press multipl time test multipl press key may durat return key keypress longest durat multipl keypress return lexicograph largest key keypress exampl input releasetim keyspress cbcd output explan keypress follow keypress durat press time releas time keypress durat press time right releas previou charact releas time keypress durat press time right releas previou charact releas time keypress durat press time right releas previou charact releas time longest keypress second keypress durat lexicograph larger answer exampl input releasetim keyspress spuda output explan keypress follow keypress durat keypress durat keypress u durat keypress durat keypress durat longest keypress durat constraint releasetimeslength keyspressedlength releasetimesi releasetimesi releasetimesi1 keyspress contain lowercas english letter ","1226":"sequenc number call arithmet consist least element differ everi consecut element formal sequenc arithmet si1 si valid exampl arithmet sequenc follow sequenc arithmet array integ num array integ repres rang queri ith queri rang li ri array 0index return list boolean element answer answeri true subarray numsli numsli1 numsri rearrang form arithmet sequenc fals otherwis exampl input num output truefalsetru explan 0th queri subarray rearrang arithmet sequenc 1st queri subarray rearrang arithmet sequenc queri subarray rearrang arithmet sequenc exampl input num output falsetruefalsefalsetruetru constraint numslength llength rlength li ri numsi ","1227":"hiker prepar upcom hike height 2d array size row column heightsrowcol repres height cell row col situat topleft cell hope travel bottomright cell rows1 columns1 ie 0index move left right wish find rout requir minimum effort rout effort maximum absolut differ height consecut cell rout return minimum effort requir travel topleft cell bottomright cell exampl input height output explan rout maximum absolut differ consecut cell better rout maximum absolut differ exampl input height output explan rout maximum absolut differ consecut cell better rout exampl input height output explan rout requir effort constraint row heightslength column heightsilength row column heightsij ","1228":"matrix return new matrix answer answerrowcol rank matrixrowcol rank integ repres larg element compar element calcul use follow rule rank integ start element row column rankp rankq rankp rankq rankp rankq rank small possibl test case gener answer uniqu rule exampl input matrix output explan rank matrix00 smallest integ row column rank matrix01 matrix01 matrix00 matrix00 rank rank matrix10 matrix10 matrix00 matrix00 rank rank matrix11 matrix11 matrix01 matrix11 matrix10 matrix01 matrix10 rank exampl input matrix output exampl input matrix output constraint matrixlength matrixilength matrixrowcol ","1229":"sql schema panda schema ","1230":"array integ num sort array increas order base frequenc valu multipl valu frequenc sort decreas order return sort array exampl input num output explan frequenc frequenc frequenc exampl input num output explan frequenc sort decreas order exampl input num output constraint numslength numsi ","1231":"point 2d plane pointsi xi yi return widest vertic area point point insid area vertic area area fixedwidth extend infinit along yaxi ie infinit height widest vertic area maximum width note point edg vertic area consid includ area exampl input point output explan red blue area optim exampl input point output constraint pointslength pointsilength xi yi ","1232":"string find number way choos nonempti substr replac singl charact differ charact result substr substr word find number substr differ substr exactli charact exampl underlin substr comput comput differ ea valid way return number substr satisfi condit substr contigu sequenc charact within string exampl input aba baba output explan follow pair substr differ exactli charact aba baba aba baba aba baba aba baba aba baba aba baba underlin portion substr chosen exampl input ab output explan follow pair substr differ charact ab ab ab underlin portion substr chosen constraint slength tlength lowercas english letter ","1233":"array distinct integ arr array integ array piec integ piec distinct goal form arr concaten array piec order howev allow reorder integ array piecesi return true possibl form array arr piec otherwis return fals exampl input arr piec output true explan concaten exampl input arr piec output fals explan even though number match reorder pieces0 exampl input arr piec output true explan concaten constraint pieceslength arrlength sumpiecesilength arrlength piecesilength arrlength arri piecesij integ arr distinct integ piec distinct ie flatten piec 1d array integ array distinct ","1234":"integ return number string length vowel e u lexicograph sort string lexicograph sort valid si come si1 alphabet exampl input output explan sort string vowel aeiou exampl input output explan sort string vowel aaaeaiaoaueeeieoeuiiioiuooouuu note ea valid string sinc e come alphabet exampl input output constraint ","1235":"integ array height repres height build brick ladder start journey build move next build possibl use brick ladder move build build 0index current build height greater equal next build height need ladder brick current build height less next build height either use ladder hi brick return furthest build index 0index reach use ladder brick optim exampl input height brick ladder output explan start build step go build without use ladder brick sinc go build use brick must use either brick ladder go build without use ladder brick sinc go build use ladder must use either brick ladder imposs go beyond build brick ladder exampl input height brick ladder output exampl input height brick ladder output constraint heightslength heightsi brick ladder heightslength ","1236":"bob stand cell want reach destin row column travel right go help bob provid instruct reach destin instruct repres string charact either mean move horizont go right mean move vertic go multipl instruct lead bob destin exampl destin hhhvv hvhvh valid instruct howev bob picki bob lucki number want kth lexicograph smallest instruct lead destin 1index integ array destin integ return kth lexicograph smallest instruct take bob destin exampl input destin output hhhvv explan instruct reach lexicograph order follow hhhvv hhvhv hhvvh hvhhv hvhvh hvvhh vhhhv vhhvh vhvhh vvhhh exampl input destin output hhvhv exampl input destin output hhvvh constraint destinationlength row column ncrrow column row ncra denot choos ","1237":"integ 0index integ array num length gener follow way nums0 nums1 nums2 numsi nums2 numsi numsi return maximum integ array num exampl input output explan accord rule nums0 nums1 nums1 nums1 nums1 nums1 nums2 nums2 nums2 nums2 nums2 nums3 nums3 nums3 nums3 nums3 nums4 henc num maximum max01121323 exampl input output explan accord rule num maximum max011 exampl input output explan accord rule num maximum max0112 constraint ","1238":"string call good differ charact frequenc string return minimum number charact need delet make good frequenc charact string number time appear string exampl string aab frequenc frequenc exampl input aab output explan alreadi good exampl input aaabbbcc output explan delet result good string aaabcc anoth way delet result good string aaabbc exampl input ceabaacb output explan delet result good string eabaab note care charact still string end ie frequenc ignor constraint slength contain lowercas english letter ","1239":"integ array instruct ask creat sort array element instruct start empti contain num element left right instruct insert num cost insert minimum follow number element current num strictli less instructionsi number element current num strictli greater instructionsi exampl insert element num cost insert min2 element less element greater num becom return total cost insert element instruct num sinc answer may larg return modulo exampl input instruct output explan begin num insert cost min0 num insert cost min1 num insert cost min2 num insert cost min1 num total cost exampl input instruct output explan begin num insert cost min0 num insert cost min1 num insert cost min2 num insert cost min3 num insert cost min3 num insert cost min3 num total cost exampl input instruct output explan begin num insert cost min0 num insert cost min1 num insert cost min1 num insert cost min1 num insert cost min1 num insert cost min5 num insert cost min1 num insert cost min0 num insert cost min2 num total cost constraint instructionslength instructionsi ","1240":"bomb defus time run inform provid circular array code length key decrypt code must replac everi number number replac simultan replac ith number sum next number replac ith number sum previou number replac ith number code circular next element coden1 code0 previou element code0 coden1 circular array code integ key return decrypt code defus bomb exampl input code output explan number replac sum next number decrypt code notic number wrap around exampl input code output explan number replac exampl input code output explan decrypt code notic number wrap around neg sum previou number constraint codelength codei ","1241":"string consist charact delet number charact make balanc balanc pair indic ij si return minimum number delet need make balanc exampl input aababbab output explan either delet charact 0index posit aababbab aaabbb delet charact 0index posit aababbab aabbbb exampl input bbaaaaabb output explan solut delet first charact constraint slength si ","1242":"certain bug home xaxi posit help get posit bug jump accord follow rule jump exactli posit forward right jump exactli posit backward left jump backward twice row jump forbidden posit bug may jump forward beyond home jump posit number neg integ array integ forbidden forbiddeni mean bug jump posit forbiddeni integ return minimum number jump need bug reach home possibl sequenc jump land bug posit return exampl input forbidden output explan jump forward get bug home exampl input forbidden output exampl input forbidden output explan jump forward jump backward get bug home constraint forbiddenlength forbiddeni element forbidden distinct posit forbidden ","1243":"array integ num uniqu valu array also array custom order quantiti quantiti quantityi amount integ ith custom order determin possibl distribut num ith custom get exactli quantityi integ integ ith custom get equal everi custom satisfi return true possibl distribut num accord condit exampl input num quantiti output fals explan 0th custom differ integ exampl input num quantiti output true explan 0th custom integ use exampl input num quantiti output true explan 0th custom 1st custom constraint numslength numsi quantitylength quantityi uniqu valu num ","1244":"stream idkey valu pair arriv arbitrari order idkey integ valu string pair id design stream return valu increas order id return chunk list valu insert concaten chunk result list sort valu implement orderedstream class orderedstreamint construct stream take valu string insertint idkey string valu insert pair idkey valu stream return largest possibl chunk current insert valu appear next order exampl input orderedstream insert insert insert insert insert ccccc aaaaa bbbbb eeeee ddddd output null aaaaa bbbbb ccccc ddddd eeeee explan note valu order id aaaaa bbbbb ccccc ddddd eeeee orderedstream os new orderedstream5 osinsert3 ccccc insert ccccc return osinsert1 aaaaa insert aaaaa return aaaaa osinsert2 bbbbb insert bbbbb return bbbbb ccccc osinsert5 eeeee insert eeeee return osinsert4 ddddd insert ddddd return ddddd eeeee concatent chunk return aaaaa bbbbb ccccc ddddd eeeee aaaaa bbbbb ccccc ddddd eeeee result order order constraint id valuelength valu consist lowercas letter call insert uniqu id exactli call made insert ","1245":"string consid close attain use follow oper oper swap exist charact exampl abcd aecdb oper transform everi occurr exist charact anoth exist charact charact exampl aacabb bbcbaa turn turn use oper either string mani time necessari string word1 word2 return true word1 word2 close fals otherwis exampl input word1 abc word2 bca output true explan attain word2 word1 oper appli oper abc acb appli oper acb bca exampl input word1 word2 output fals explan imposs attain word2 word1 vice versa number oper exampl input word1 cabbba word2 abbccc output true explan attain word2 word1 oper appli oper cabbba caabbb appli oper caabbb baaccc appli oper baaccc abbccc constraint word1length word2length word1 word2 contain lowercas english letter ","1246":"","1247":"integ introvertscount extrovertscount grid type peopl introvert extrovert introvertscount introvert extrovertscount extrovert decid mani peopl want live grid assign grid cell note peopl live grid happi person calcul follow introvert start happi lose happi neighbor introvert extrovert extrovert start happi gain happi neighbor introvert extrovert neighbor live directli adjac cell north east south west person cell grid happi sum person happi return maximum possibl grid happi exampl input introvertscount extrovertscount output explan assum grid 1index coordin row column put introvert cell put extrovert cell introvert happi start happi neighbor extrovert happi start happi neighbor extrovert happi start happi neighbor grid happi figur show grid exampl person happi introvert stay light green cell extrovert live light purpl cell exampl input introvertscount extrovertscount output explan place introvert extrovert introvert happi start happi neighbor extrovert happi start happi neighbor introvert happi start happi neighbor grid happi exampl input introvertscount extrovertscount output constraint introvertscount extrovertscount minm ","1248":"sql schema panda schema ","1249":"string array word1 word2 return true array repres string fals otherwis string repres array array element concaten order form string exampl input word1 ab word2 output true explan word1 repres string ab abc word2 repres string abc string return true exampl input word1 cb word2 ab output fals exampl input word1 abc defg word2 abcddefg output true constraint word1length word2length word1ilength word2ilength sumword1ilength sumword2ilength word1i word2i lowercas letter ","1250":"numer valu lowercas charact defin posit 1index alphabet numer valu numer valu numer valu numer valu string consist lowercas charact defin sum charact numer valu exampl numer valu string abe equal integ return lexicograph smallest string length equal numer valu equal note string lexicograph smaller string come dictionari order either prefix first posit xi yi xi come yi alphabet order exampl input output explan numer valu string smallest string valu length equal exampl input output aaszz constraint ","1251":"integ array num choos exactli index 0index remov element notic index element may chang remov exampl num choos remov index result num choos remov index result num choos remov index result num array fair sum oddindex valu equal sum evenindex valu return number indic could choos remov num fair exampl input num output explan remov index even sum odd sum fair remov index even sum odd sum fair remov index even sum odd sum fair remov index even sum odd sum fair index remov make num fair exampl input num output explan remov index remain array fair exampl input num output explan make fair array remov index constraint numslength numsi ","1252":"","1253":"sql schema panda schema ","1254":"string sequenc string word krepeat word concaten time substr sequenc word maximum krepeat valu highest valu word krepeat sequenc word substr sequenc word maximum krepeat valu string sequenc word return maximum krepeat valu word sequenc exampl input sequenc ababc word ab output explan abab substr ababc exampl input sequenc ababc word ba output explan ba substr ababc baba substr ababc exampl input sequenc ababc word ac output explan ac substr ababc constraint sequencelength wordlength sequenc word contain lowercas english letter ","1255":"link list list1 list2 size respect remov list1 node ath node node put list2 place blue edg node follow figur indic result build result list return head exampl input list1 list2 output explan remov node put entir list2 place blue edg node figur indic result exampl input list1 list2 output explan blue edg node figur indic result constraint list1length list1length list2length ","1256":"design queue support push pop oper front middl back implement frontmiddleback class frontmiddleback initi queue void pushfrontint val add val front queue void pushmiddleint val add val middl queue void pushbackint val add val back queue int popfront remov front element queue return queue empti return int popmiddl remov middl element queue return queue empti return int popback remov back element queue return queue empti return notic middl posit choic oper perform frontmost middl posit choic exampl push middl result pop middl return result exampl input frontmiddlebackqueu pushfront pushback pushmiddl pushmiddl popfront popmiddl popmiddl popback popfront output null null null null null explan frontmiddlebackqueu new frontmiddlebackqueu qpushfront1 qpushback2 qpushmiddle3 qpushmiddle4 qpopfront return qpopmiddl return qpopmiddl return qpopback return qpopfront return queue empti constraint val call made pushfront pushmiddl pushback popfront popmiddl popback ","1257":"may recal array arr mountain array arrlength exist index 0index arrlength arr0 arr1 arri arri arri arri arrarrlength integ array num return minimum number element remov make num mountain array exampl input num output explan array mountain array need remov element exampl input num output explan solut remov element indic make array num constraint numslength numsi guarante make mountain array num ","1258":"integ grid account accountsij amount money ith custom jth bank return wealth richest custom custom wealth amount money bank account richest custom custom maximum wealth exampl input account output explan 1st custom wealth custom wealth custom consid richest wealth return exampl input account output explan 1st custom wealth custom wealth 3rd custom wealth custom richest wealth exampl input account output constraint accountslength accountsilength accountsij ","1259":"integ array num posit integ return competit subsequ num size array subsequ result sequenc obtain eras possibl element array defin subsequ competit subsequ length first posit differ subsequ number less correspond number exampl competit first posit differ final number less exampl input num output explan among set everi possibl subsequ competit exampl input num output constraint numslength numsi numslength ","1260":"integ array num even length integ limit move replac integ num anoth integ limit inclus array num complementari indic 0index numsi numsn equal number exampl array complementari indic numsi numsn return minimum number move requir make num complementari exampl input num limit output explan move chang num underlin element chang nums0 nums3 nums1 nums2 nums2 nums1 nums3 nums0 therefor numsi numsn1i everi num complementari exampl input num limit output explan move chang num chang number sinc limit exampl input num limit output explan num alreadi complementari constraint numslength numsi limit even ","1261":"array num posit integ perform type oper element array number time element even divid exampl array oper last element array element odd multipli exampl array oper first element array deviat array maximum differ element array return minimum deviat array perform number oper exampl input num output explan transform array deviat exampl input num output explan transform array oper deviat exampl input num output constraint numslength numsi ","1262":"goal parser interpret string command command consist alphabet andor al order goal parser interpret string string al string al interpret string concaten origin order string command return goal parser interpret command exampl input command gal output goal explan goal parser interpret command follow al al final concaten result goal exampl input command gal output gooooal exampl input command algalg output algaloog constraint commandlength command consist andor al order ","1263":"integ array num integ oper pick number array whose sum equal remov array return maximum number oper perform array exampl input num output explan start num remov number num remov number num pair sum henc total oper exampl input num output explan start num remov first num pair sum henc total oper constraint numslength numsi ","1264":"integ return decim valu binari string form concaten binari represent order modulo exampl input output explan binari correspond decim valu exampl input output explan binari correspond concaten correspond decim valu exampl input output explan concaten result decim valu modulo result constraint ","1265":"integ array num integ ask distribut array subset equal size equal element subset subset incompat differ maximum minimum element array return minimum possibl sum incompat subset distribut array optim return possibl subset group integ appear array particular order exampl input num output explan optim distribut subset incompat note would result smaller sum first subset contain equal element exampl input num output explan optim distribut subset incompat exampl input num output explan imposs distribut num subset element equal subset constraint numslength numslength divis numsi numslength ","1266":"sql schema panda schema ","1267":"string allow consist distinct charact array string word string consist charact string appear string allow return number consist string array word exampl input allow ab word adbdaaabbaabadab output explan string aaab baa consist sinc contain charact exampl input allow abc word abcabacbcabc output explan string consist exampl input allow cad word ccacdbbabacbadacd output explan string cc ac consist constraint wordslength allowedlength wordsilength charact allow distinct wordsi allow contain lowercas english letter ","1268":"integ array num sort nondecreas order build return integ array result length num resulti equal summat absolut differ numsi element array word resulti equal sumnumsinumsj numslength 0index exampl input num output explan assum array 0index result0 result1 result2 exampl input num output constraint numslength numsi numsi ","1269":"alic bob take turn play game alic start first stone pile player turn remov stone pile receiv point base stone valu alic bob may valu stone differ integ array length alicevalu bobvalu alicevaluesi bobvaluesi repres alic bob respect valu ith stone winner person point stone chosen player amount point game result draw player play optim player know other valu determin result game alic win return bob win return game result draw return exampl input alicevalu bobvalu output explan alic take stone 0index first alic receiv point bob choos stone receiv point alic win exampl input alicevalu bobvalu output explan alic take stone bob take stone point draw exampl input alicevalu bobvalu output explan regardless alic play bob abl point alic exampl alic take stone bob take stone alic take stone alic point bob bob win constraint alicevalueslength bobvalueslength alicevaluesi bobvaluesi ","1270":"task deliv box storag port use ship howev ship limit number box total weight carri array box boxesi portsi weighti integ portscount maxbox maxweight portsi port need deliv ith box weightsi weight ith box portscount number port maxbox maxweight respect box weight limit ship box need deliv order ship step ship take number box box queue violat maxbox maxweight constraint load box order ship make trip port box need deliv deliv ship alreadi correct port trip need box immedi deliv ship make return trip storag take box queue ship must end storag box deliv return minimum number trip ship need make deliv box respect port exampl input box portscount maxbox maxweight output explan optim strategi follow ship take box queue goe port port port return storag trip total number trip note first third box deliv togeth box need deliv order ie second box need deliv port third box exampl input box portscount maxbox maxweight output explan optim strategi follow ship take first box goe port return storag trip ship take second third fourth box goe port return storag trip ship take fifth box goe port return storag trip total number trip exampl input box portscount maxbox maxweight output explan optim strategi follow ship take first second box goe port return storag trip ship take third fourth box goe port return storag trip ship take fifth sixth box goe port return storag trip total number trip constraint boxeslength portscount maxbox maxweight portsi portscount weightsi maxweight ","1271":"integ number team tournament strang rule current number team even team get pair anoth team total match play team advanc next round current number team odd team randomli advanc tournament rest get pair total match play team advanc next round return number match play tournament winner decid exampl input output explan detail tournament 1st round team match team advanc round team match team advanc 3rd round team match team declar winner total number match exampl input output explan detail tournament 1st round team match team advanc round team match team advanc 3rd round team match team advanc 4th round team match team declar winner total number match constraint ","1272":"decim number call decibinari digit either without lead zero exampl decibinari string repres posit decim integ return minimum number posit decibinari number need sum exampl input output explan exampl input output exampl input output constraint nlength consist digit contain lead zero repres posit integ ","1273":"alic bob take turn play game alic start first stone arrang row player turn remov either leftmost stone rightmost stone row receiv point equal sum remain stone valu row winner higher score stone left remov bob found alway lose game poor bob alway lose decid minim score differ alic goal maxim differ score array integ stone stonesi repres valu ith stone left return differ alic bob score play optim exampl input stone output explan alic remov get point alic bob stone bob remov get point alic bob stone alic remov get point alic bob stone bob remov get point alic bob stone alic remov get point alic bob stone score differ exampl input stone output constraint stoneslength stonesi ","1274":"cuboid dimens ith cuboid cuboidsi widthi lengthi heighti 0index choos subset cuboid place place cuboid cuboid widthi widthj lengthi lengthj heighti heightj rearrang cuboid dimens rotat put anoth cuboid return maximum height stack cuboid exampl input cuboid output explan cuboid place bottom 53x37 side face height cuboid place next 45x20 side face height cuboid place next 23x12 side face height total height exampl input cuboid output explan cant place cuboid choos cuboid rotat 35x3 side face height exampl input cuboid output explan rearrang cuboid see cuboid dimens place 11x7 side cuboid height maximum height stack cuboid constraint cuboidslength widthi lengthi heighti ","1275":"sql schema panda schema ","1276":"phone number string number number consist digit space andor dash would like reformat phone number certain manner firstli remov space dash group digit left right block length fewer digit final digit group follow digit singl block length digit singl block length digit block length block join dash notic reformat process never produc block length produc block length return phone number format exampl input number output explan digit step digit group next digit 1st block step digit remain put singl block length block join block give exampl input number output explan digit step digit group next digit 1st block step digit left split block length block join block give exampl input number output explan digit step 1st block step block step digit left put singl block length 3rd block join block give constraint numberlength number consist digit charact least digit number ","1277":"array posit integ num want eras subarray contain uniqu element score get eras subarray equal sum element return maximum score get eras exactli subarray array call subarray form contigu subsequ equal alal1ar exampl input num output explan optim subarray exampl input num output explan optim subarray constraint numslength numsi ","1278":"0index integ array num integ initi stand index move jump step forward without go outsid boundari array jump index index rang minn inclus want reach last index array index score sum numsj index visit array return maximum score get exampl input num output explan choos jump form subsequ underlin sum exampl input num output explan choos jump form subsequ underlin sum exampl input num output constraint numslength numsi ","1279":"school cafeteria offer circular squar sandwich lunch break refer number respect student stand queue student either prefer squar circular sandwich number sandwich cafeteria equal number student sandwich place stack step student front queue prefer sandwich top stack take leav queue otherwis leav go queue end continu none queue student want take top sandwich thu unabl eat integ array student sandwich sandwichesi type ith sandwich stack top stack studentsj prefer jth student initi queue front queue return number student unabl eat exampl input student sandwich output explan front student leav top sandwich return end line make student front student leav top sandwich return end line make student front student take top sandwich leav line make student sandwich front student leav top sandwich return end line make student front student take top sandwich leav line make student sandwich front student leav top sandwich return end line make student front student take top sandwich leav line make student sandwich front student take top sandwich leav line make student sandwich henc student abl eat exampl input student sandwich output constraint studentslength sandwicheslength studentslength sandwicheslength sandwichesi studentsi ","1280":"restaur singl chef array custom customersi arrivali timei arrivali arriv time ith custom arriv time sort nondecreas order timei time need prepar order ith custom custom arriv give chef order chef start prepar idl custom wait till chef finish prepar order chef prepar food custom time chef prepar food custom order input return averag wait time custom solut within actual answer consid accept exampl input custom output explan first custom arriv time chef take order start prepar immedi time finish time wait time first custom second custom arriv time chef take order start prepar time finish time wait time second custom third custom arriv time chef take order start prepar time finish time wait time third custom averag wait time exampl input custom output explan first custom arriv time chef take order start prepar immedi time finish time wait time first custom second custom arriv time chef take order start prepar time finish time wait time second custom third custom arriv time chef take order start prepar time finish time wait time third custom fourth custom arriv time chef take order start prepar immedi time finish time wait time fourth custom averag wait time constraint customerslength arrivali timei arrivali arrivali1 ","1281":"binari string binari consist appli follow oper number time oper number contain substr replac exampl oper number contain substr replac exampl return maximum binari string obtain number oper binari string greater binari string decim represent greater ys decim represent exampl input binari output explan valid transform sequenc exampl input binari output explan transform constraint binarylength binari ","1282":"integ array num integ num compris move choos adjac indic swap valu return minimum number move requir num consecut exampl input num output explan move num could consecut exampl input num output explan move leftmost shift right num exampl input num output explan num alreadi consecut constraint numslength numsi sumnum ","1283":"string even length split string halv equal length let first half second half string alik number vowel e u e u notic contain uppercas lowercas letter return true alik otherwis return fals exampl input book output true explan bo ok vowel vowel therefor alik exampl input textbook output fals explan text book vowel wherea therefor alik notic vowel count twice constraint slength slength even consist uppercas lowercas letter ","1284":"special kind appl tree grow appl everi day day ith day tree grow applesi appl rot daysi day day daysi appl rotten eaten day appl tree grow appl denot applesi daysi decid eat appl day keep doctor away note keep eat first day integ array day appl length return maximum number appl eat exampl input appl day output explan eat appl first day eat appl grew first day second day eat appl grew second day third day eat appl grew second day day appl grew third day rot fourth seventh day eat appl grew fourth day exampl input appl day output explan eat appl first third day eat appl grew first day noth fouth fifth day sixth seventh day eat appl grew sixth day constraint appleslength dayslength applesi daysi daysi applesi ","1285":"2d grid size repres box ball box open top bottom side cell box diagon board span corner cell redirect ball right left board redirect ball right span topleft corner bottomright corner repres grid board redirect ball left span topright corner bottomleft corner repres grid drop ball top column box ball get stuck box fall bottom ball get stuck hit shape pattern board board redirect ball either wall box return array answer size answeri column ball fall bottom drop ball ith column top ball get stuck box exampl input grid output explan exampl shown photo ball drop column fall box column ball drop column get stuck box column row ball drop column get stuck box column row ball drop column get stuck box column row ball drop column get stuck box column row exampl input grid output explan ball get stuck left wall exampl input grid output constraint gridlength gridilength gridij ","1286":"array num consist nonneg integ also queri array queriesi xi mi answer ith queri maximum bitwis valu xi element num exceed mi word answer maxnumsj xi numsj mi element num larger mi answer return integ array answer answerlength querieslength answeri answer ith queri exampl input num queri output explan integ greater larger exampl input num queri output constraint numslength querieslength queriesilength numsj xi mi ","1287":"assign put amount box onto truck 2d array boxtyp boxtypesi numberofboxesi numberofunitsperboxi numberofboxesi number box type numberofunitsperboxi number unit box type also integ trucksiz maximum number box put truck choos box put truck long number box exceed trucksiz return maximum total number unit put truck exampl input boxtyp trucksiz output explan box first type contain unit box second type contain unit box third type contain unit take box first second type box third type total number unit exampl input boxtyp trucksiz output constraint boxtypeslength numberofboxesi numberofunitsperboxi trucksiz ","1288":"good meal meal contain exactli differ food item sum delici equal power pick differ food make good meal array integ delici deliciousnessi delici ith item food return number differ good meal make list modulo note item differ indic consid differ even delici valu exampl input delici output explan good meal respect sum power exampl input delici output explan good meal way way way constraint deliciousnesslength deliciousnessi ","1289":"split integ array good array split nonempti contigu subarray name left mid right respect left right sum element left less equal sum element mid sum element mid less equal sum element right num array nonneg integ return number good way split num number may larg return modulo exampl input num output explan good way split num exampl input num output explan good way split num exampl input num output explan good way split num constraint numslength numsi ","1290":"array target consist distinct integ anoth integ array arr duplic oper insert integ posit arr exampl arr add middl make note insert integ begin end array return minimum number oper need make target subsequ arr subsequ array new array gener origin array delet element possibl none without chang remain element rel order exampl subsequ underlin element exampl input target arr output explan add way make arr target subsequ arr exampl input target arr output constraint targetlength arrlength targeti arri target contain duplic ","1291":"herci want save money first car put money leetcod bank everi day start put monday first day everi day tuesday sunday put day everi subsequ monday put previou monday return total amount money leetcod bank end nth day exampl input output explan 4th day total exampl input output explan day total notic monday herci put exampl input output explan day total constraint ","1292":"string integ perform type oper number time remov substr ab gain point exampl remov ab cabxba becom cxbae remov substr ba gain point exampl remov ba cabxba becom cabx return maximum point gain appli oper exampl input cdbcbbaaabab output explan remov ba underlin cdbcbbaaabab cdbcbbaaab point ad score remov ab underlin cdbcbbaaab cdbcbbaa point ad score remov ba underlin cdbcbbaa cdbcba point ad score remov ba underlin cdbcba cdbc point ad score total score exampl input aabbaaxybbaabb output constraint slength consist lowercas english letter ","1293":"integ find sequenc satisfi follow integ occur sequenc integ occur twice sequenc everi integ distanc occurr exactli distanc number sequenc ai aj absolut differ indic return lexicograph largest sequenc guarante constraint alway solut sequenc lexicograph larger sequenc length first posit differ sequenc number greater correspond number exampl lexicograph larger first posit differ third number greater exampl input output explan also valid sequenc lexicograph largest valid sequenc exampl input output constraint ","1294":"array pair pairsi xi yi duplic xi yi let way number root tree satisfi follow condit tree consist node whose valu appear pair pair xi yi exist pair xi ancestor yi yi ancestor xi note tree binari tree way consid differ least node differ parent way return way way way root tree tree singl root node edg orient outgo root ancestor node node path root node exclud node root ancestor exampl input pair output explan exactli valid root tree shown figur exampl input pair output explan multipl valid root tree shown figur exampl input pair output explan valid root tree constraint pairslength xi yi element pair uniqu ","1295":"head link list integ return head link list swap valu kth node begin kth node end list 1index exampl input head output exampl input head output constraint number node list nodev ","1296":"integ array sourc target length also array allowedswap allowedswapsi ai bi indic allow swap element index ai index bi 0index array sourc note swap element specif pair indic multipl time order ham distanc array length sourc target number posit element differ formal number indic sourcei targeti 0index return minimum ham distanc sourc target perform amount swap oper array sourc exampl input sourc target allowedswap output explan sourc transform follow way swap indic sourc swap indic sourc ham distanc sourc target differ posit index exampl input sourc target allowedswap output explan allow swap ham distanc sourc target differ posit index index exampl input sourc target allowedswap output constraint sourcelength targetlength sourcei targeti allowedswapslength allowedswapsilength ai bi ai bi ","1297":"integ array job jobsi amount time take complet ith job worker assign job job assign exactli worker work time worker sum time take complet job assign goal devis optim assign maximum work time worker minim return minimum possibl maximum work time assign exampl input job output explan assign person job maximum time exampl input job output explan assign job follow way worker work time worker work time maximum work time constraint jobslength jobsi ","1298":"array rectangl rectanglesi li wi repres ith rectangl length li width wi cut ith rectangl form squar side length li wi exampl rectangl cut get squar side length let maxlen side length largest squar obtain rectangl return number rectangl make squar side length maxlen exampl input rectangl output explan largest squar get rectangl length largest possibl squar length get rectangl exampl input rectangl output constraint rectangleslength rectanglesilength li wi li wi ","1299":"array num distinct posit integ return number tupl element num exampl input num output explan valid tupl exampl input num output explan valid tupl constraint numslength numsi element num distinct ","1300":"binari matrix matrix size allow rearrang column matrix order return area largest submatrix within matrix everi element submatrix reorder column optim exampl input matrix output explan rearrang column shown largest submatrix bold area exampl input matrix output explan rearrang column shown largest submatrix bold area exampl input matrix output explan notic must rearrang entir column way make submatrix larger area constraint matrixlength matrixilength matrixij either ","1301":"game play cat mous name cat mous environ repres grid size row col element wall floor player cat mous food player repres charact ccatmmous floor repres charact walk wall repres charact walk food repres charact walk charact grid mous cat play accord follow rule mous move first take turn move turn cat mous jump direct left right jump wall outsid grid catjump mousejump maximum length cat mous jump time respect cat mous jump less maximum length stay posit allow mous jump cat game end way cat occupi posit mous cat win cat reach food first cat win mous reach food first mous win mous get food within turn cat win row col matrix grid integ catjump mousejump return true mous win game cat mous play optim otherwis return fals exampl input grid fcm catjump mousejump output true explan cat catch mous turn get food mous exampl input grid catjump mousejump output true exampl input grid catjump mousejump output fals constraint row gridlength col gridilength row col gridij charact charact grid catjump mousejump ","1302":"sql schema panda schema ","1303":"sql schema panda schema ","1304":"biker go road trip road trip consist point differ altitud biker start trip point altitud equal integ array gain length gaini net gain altitud point return highest altitud point exampl input gain output explan altitud highest exampl input gain output explan altitud highest constraint gainlength gaini ","1305":"social network consist user friendship user user commun know common languag integ array languag array friendship languag number languagesi set languag ith user know friendshipsi ui vi denot friendship user ui vi choos languag teach user friend commun return minimum number user need teach note friendship transit mean friend friend doesnt guarante friend exampl input languag friendship output explan either teach user second languag user first languag exampl input languag friendship output explan teach third languag user yield user teach constraint languageslength languagesilength languagesij ui vi languageslength friendshipslength tupl ui vi uniqu languagesi contain uniqu valu ","1306":"integ array perm permut first posit integ alway odd encod anoth integ array encod length encodedi permi permi exampl perm encod encod array return origin array perm guarante answer exist uniqu exampl input encod output explan perm encod exampl input encod output constraint odd encodedlength ","1307":"2d integ array queri queriesi queriesi ni ki find number differ way place posit integ array size ni product integ ki number way may larg answer ith queri number way modulo return integ array answer answerlength querieslength answeri answer ith queri exampl input queri output explan queri independ way fill array size multipli way fill array size multipli way fill array size multipli modulo exampl input queri output constraint querieslength ni ki ","1308":"string time form hhmm digit string hidden repres valid time inclus return latest valid time get time replac hidden digit exampl input time output explan latest hour begin digit latest minut end digit exampl input time output exampl input time output constraint time format hhmm guarante produc valid time string ","1309":"string lowercas letter oper chang charact lowercas letter goal satisfi follow condit everi letter strictli less everi letter alphabet everi letter strictli less everi letter alphabet distinct letter return minimum number oper need achiev goal exampl input aba caa output explan consid best way make condit true chang ccc oper everi letter less everi letter chang bbb aaa oper everi letter less everi letter chang aaa aaa oper distinct letter best way done oper either condit condit exampl input dabadd cda output explan best way make condit true chang eee constraint alength blength lowercas letter ","1310":"2d matrix size consist nonneg integ also integ valu coordin matrix matrixij 0index find kth largest valu 1index coordin matrix exampl input matrix output explan valu coordin largest valu exampl input matrix output explan valu coordin largest valu exampl input matrix output explan valu coordin 3rd largest valu constraint matrixlength matrixilength matrixij ","1311":"cubic storeroom width length height room equal unit ask place box room box cube unit side length howev rule place box place box anywher floor box place top box side vertic side box must either adjac anoth box wall integ return minimum possibl number box touch floor exampl input output explan figur placement box box place corner room corner left side exampl input output explan figur placement box box place corner room corner left side exampl input output explan figur placement ten box box place corner room corner back side constraint ","1312":"sql schema panda schema ","1313":"work ball factori ball number lowlimit highlimit inclus ie highlimit lowlimit infinit number box number infin job factori put ball box number equal sum digit ball number exampl ball number put box number ball number put box number integ lowlimit highlimit return number ball box ball exampl input lowlimit highlimit output explan box number ball count box number ball ball exampl input lowlimit highlimit output explan box number ball count box number ball ball exampl input lowlimit highlimit output explan box number ball count box number ball ball constraint lowlimit highlimit ","1314":"integ array num consist uniqu element forgotten howev rememb everi pair adjac element num 2d integ array adjacentpair size adjacentpairsi ui vi indic element ui vi adjac num guarante everi adjac pair element numsi numsi1 exist adjacentpair either numsi numsi1 numsi1 numsi pair appear order return origin array num multipl solut return exampl input adjacentpair output explan array adjac pair adjacentpair notic adjacentpairsi may lefttoright order exampl input adjacentpair output explan neg number anoth solut would also accept exampl input adjacentpair output constraint numslength adjacentpairslength adjacentpairsilength numsi ui vi exist num adjacentpair pair ","1315":"0index array posit integ candiescount candiescounti repres number candi ith type also 2d array queri queriesi favoritetypei favoritedayi dailycapi play game follow rule start eat candi day eat candi type unless eaten candi type must eat least candi per day eaten candi construct boolean array answer answerlength querieslength answeri true eat candi type favoritetypei day favoritedayi without eat dailycapi candi day fals otherwis note eat differ type candi day provid rule return construct array answer exampl input candiescount queri output truefalsetru explan eat candi type day candi type day eat candi type day eat candi day eat candi everi day eat candi type day candi type type day day eat candi type type eat candi type day eat candi day eat candi type day exampl input candiescount queri output falsetruetruefalsefals constraint candiescountlength candiescounti querieslength queriesilength favoritetypei candiescountlength favoritedayi dailycapi ","1316":"string return true possibl split string nonempti palindrom substr otherwis return fals string said palindrom string revers exampl input abcbdd output true explan abcbdd bcb substr palindrom exampl input bcbddxi output fals explan split palindrom constraint slength consist lowercas english letter ","1317":"integ array num uniqu element array element appear exactli array return sum uniqu element num exampl input num output explan uniqu element sum exampl input num output explan uniqu element sum exampl input num output explan uniqu element sum constraint numslength numsi ","1318":"integ array num absolut sum subarray numsl numsl1 numsr1 numsr absnumsl numsl1 numsr1 numsr return maximum absolut sum possibl empti subarray num note absx defin follow neg integ absx nonneg integ absx exampl input num output explan subarray absolut sum abs23 abs5 exampl input num output explan subarray absolut sum abs514 abs8 constraint numslength numsi ","1319":"string consist charact ask appli follow algorithm string number time pick nonempti prefix string charact prefix equal pick nonempti suffix string charact suffix equal prefix suffix intersect index charact prefix suffix must delet prefix suffix return minimum length perform oper number time possibl time exampl input ca output explan cant remov charact string stay exampl input cabaabac output explan optim sequenc oper take prefix suffix remov abaaba take prefix suffix remov baab take prefix suffix remov take prefix suffix remov exampl input aabccabba output explan optim sequenc oper take prefix suffix remov bccabb take prefix suffix remov cca constraint slength consist charact ","1320":"array num return true array origin sort nondecreas order rotat number posit includ otherwis return fals may duplic origin array note array rotat posit result array length ai bix alength modulo oper exampl input num output true explan origin sort array rotat array posit begin element valu exampl input num output fals explan sort array rotat make num exampl input num output true explan origin sort array rotat array posit ie rotat make num constraint numslength numsi ","1321":"play solitair game pile stone size respect turn choos differ nonempti pile take stone add point score game stop fewer nonempti pile mean avail move integ return maximum score get exampl input output explan start state optim set move take 1st 3rd pile state take 1st 3rd pile state take 3rd pile state take 3rd pile state take 3rd pile state take 3rd pile state fewer nonempti pile game end total point exampl input output explan start state optim set move take 1st pile state take 1st 3rd pile state take 1st 3rd pile state take 1st 3rd pile state take 3rd pile state take 3rd pile state take 3rd pile state fewer nonempti pile game end total point exampl input output explan optim set move take 3rd pile turn empti fewer nonempti pile game end constraint ","1322":"string word1 word2 want construct string merg follow way either word1 word2 nonempti choos follow option word1 nonempti append first charact word1 merg delet word1 exampl word1 abc merg choos oper word1 merg dva word2 nonempti append first charact word2 merg delet word2 exampl word2 abc merg choos oper word2 merg return lexicograph largest merg construct string lexicograph larger string length first posit differ charact strictli larger correspond charact exampl abcd lexicograph larger abcc first posit differ fourth charact greater exampl input word1 cabaa word2 bcaaa output cbcabaaaaa explan way get lexicograph largest merg take word1 merg word1 abaa word2 bcaaa take word2 merg cb word1 abaa word2 caaa take word2 merg cbc word1 abaa word2 aaa take word1 merg cbca word1 baa word2 aaa take word1 merg cbcab word1 word2 aaa append remain word1 word2 end merg exampl input word1 abcabc word2 abdcaba output abdcabcabcaba constraint word1length word2length word1 word2 lowercas english letter ","1323":"integ array num integ goal want choos subsequ num sum element closest possibl goal sum subsequ element sum want minim absolut differ abssum goal return minimum possibl valu abssum goal note subsequ array array form remov element possibl none origin array exampl input num goal output explan choos whole array subsequ sum equal goal absolut differ exampl input num goal output explan choos subsequ sum absolut differ abs4 abs1 minimum exampl input num goal output constraint numslength numsi goal ","1324":"sql schema panda schema ","1325":"string consist charact oper chang vice versa string call altern adjac charact equal exampl string altern string return minimum number oper need make altern exampl input output explan chang last charact altern exampl input output explan alreadi altern exampl input output explan need oper reach constraint slength si either ","1326":"string return number homogen substr sinc answer may larg return modulo string homogen charact string substr contigu sequenc charact within string exampl input abbcccaa output explan homogen substr list appear time appear time appear time appear time appear time cc appear time ccc appear time exampl input xy output explan homogen substr exampl input zzzzz output constraint slength consist lowercas letter ","1327":"undirect graph integ number node graph array edg edgesi ui vi indic undirect edg ui vi connect trio set node edg everi pair degre connect trio number edg endpoint trio return minimum degre connect trio graph graph connect trio exampl input edg output explan exactli trio edg form degre bold figur exampl input edg output explan exactli trio degre degre degre constraint edgesilength edgeslength ui vi ui vi repeat edg ","1328":"string nice everi letter alphabet contain appear uppercas lowercas exampl ababb nice appear appear howev aba appear string return longest substr nice multipl return substr earliest occurr none return empti string exampl input yazaaay output aaa explan aaa nice string letter alphabet appear aaa longest nice substr exampl input output explan nice string appear whole string substr exampl input output explan nice substr constraint slength consist uppercas lowercas english letter ","1329":"2d integ array group length also integ array num ask choos disjoint subarray array num ith subarray equal groupsi 0index i1th subarray appear ith subarray num ie subarray must order group return true task fals otherwis note subarray disjoint index numsk belong subarray subarray contigu sequenc element within array exampl input group num output true explan choos 0th subarray 1st subarray disjoint share common numsk element exampl input group num output fals explan note choos subarray incorrect order group must come exampl input group num output fals explan note choos subarray invalid disjoint share common element nums4 0index constraint groupslength groupsilength sumgroupsilength numslength groupsij numsk ","1330":"integ matrix iswat size repres map land water cell iswaterij cell land cell iswaterij cell water cell must assign cell height way follow rule height cell must nonneg cell water cell height must adjac cell must absolut height differ cell adjac anoth cell former directli north east south west latter ie side touch find assign height maximum height matrix maxim return integ matrix height size heightij cell height multipl solut return exampl input iswat output explan imag show assign height cell blue cell water cell green cell land cell exampl input iswat output explan height maximum possibl height assign height assign maximum height still meet rule also accept constraint iswaterlength iswaterilength iswaterij least water cell ","1331":"tree ie connect undirect graph cycl consist node number exactli edg node valu associ root tree node repres tree integ array num 2d array edg numsi repres ith node valu edgesj uj repres edg node uj tree valu coprim gcdx gcdx greatest common divisor ancestor node node shortest path node root node consid ancestor return array an size ansi closest ancestor node numsi numsansi coprim ancestor exampl input num edg output explan figur node valu parenthes node coprim ancestor node ancestor node valu coprim gcd23 node ancestor node node valu coprim gcd33 node valu gcd23 node closest valid ancestor node ancestor node coprim node gcd32 node closest valid ancestor exampl input num edg output constraint numslength numsi edgeslength edgesjlength uj uj ","1332":"string word1 word2 merg string ad letter altern order start word1 string longer append addit letter onto end merg string return merg string exampl input word1 abc word2 pqr output apbqcr explan merg string merg word1 word2 merg exampl input word1 ab word2 pqr output apbqr explan notic word2 longer append end word1 word2 merg exampl input word1 abcd word2 pq output apbqcd explan notic word1 longer cd append end word1 word2 merg constraint word1length word2length word1 word2 lowercas english letter ","1333":"box binari string box length boxesi ith box empti contain ball oper move ball box adjac box box adjac box absi note may ball box return array answer size answeri minimum number oper need move ball ith box answeri calcul consid initi state box exampl input box output explan answer box follow first box move ball second box first box oper second box move ball first box second box oper third box move ball first box third box oper move ball second box third box oper exampl input box output constraint boxeslength boxesi either ","1334":"0index integ array num multipli size respect begin score want perform exactli oper ith oper 0index choos integ either start end array num add multipliersi score note multipliers0 correspond first oper multipliers1 second oper remov num return maximum score perform oper exampl input num multipli output explan optim solut follow choos end ad score choos end ad score choos end ad score total score exampl input num multipli output explan optim solut follow choos start ad score choos start ad score choos start ad score choos end ad score choos end ad score total score constraint numslength multiplierslength numsi multipliersi ","1335":"string word1 word2 want construct string follow manner choos nonempti subsequ subsequence1 word1 choos nonempti subsequ subsequence2 word2 concaten subsequ subsequence1 subsequence2 make string return length longest palindrom construct describ manner palindrom construct return subsequ string string made delet possibl none charact without chang order remain charact palindrom string read forward well backward exampl input word1 cacb word2 cbba output explan choos ab word1 cba word2 make abcba palindrom exampl input word1 ab word2 ab output explan choos ab word1 word2 make aba palindrom exampl input word1 word2 output explan construct palindrom describ method return constraint word1length word2length word1 word2 lowercas english letter ","1336":"array item itemsi typei colori namei describ type color name ith item also rule repres string rulekey rulevalu ith item said match rule follow true rulekey type rulevalu typei rulekey color rulevalu colori rulekey name rulevalu namei return number item match rule exampl input item phonebluepixelcomputersilverlenovophonegoldiphon rulekey color rulevalu silver output explan item match rule computersilverlenovo exampl input item phonebluepixelcomputersilverphonephonegoldiphon rulekey type rulevalu phone output explan item match rule phonebluepixel phonegoldiphon note item computersilverphon match constraint itemslength typeilength colorilength nameilength rulevaluelength rulekey equal either type color name string lowercas letter ","1337":"would like make dessert prepar buy ingredi ice cream base flavor type top choos must rule make dessert must exactli ice cream base add type top top type top input basecost integ array length basecostsi repres price ith ice cream base flavor toppingcost integ array length toppingcostsi price ith top target integ repres target price dessert want make dessert total cost close target possibl return closest possibl cost dessert target multipl return lower exampl input basecost toppingcost target output explan consid follow combin 0index choos base cost take top cost take top cost total exampl input basecost toppingcost target output explan consid follow combin 0index choos base cost take top cost take top cost take top cost total make dessert total cost exampl input basecost toppingcost target output explan possibl make dessert cost return lower cost constraint basecostslength toppingcostslength basecostsi toppingcostsi target ","1338":"array integ nums1 nums2 possibl differ length valu array inclus oper chang integ valu array valu inclus return minimum number oper requir make sum valu nums1 equal sum valu nums2 return possibl make sum array equal exampl input nums1 nums2 output explan make sum nums1 nums2 equal oper indic 0index chang nums20 nums1 nums2 chang nums15 nums1 nums2 chang nums12 nums1 nums2 exampl input nums1 nums2 output explan way decreas sum nums1 increas sum nums2 make equal exampl input nums1 nums2 output explan make sum nums1 nums2 equal oper indic 0index chang nums10 nums1 nums2 chang nums11 nums1 nums2 chang nums20 nums1 nums2 constraint nums1length nums2length nums1i nums2i ","1339":"car travel differ speed direct along onelan road array car length carsi positioni speedi repres positioni distanc ith car begin road meter guarante positioni positioni1 speedi initi speed ith car meter per second simplic car consid point move along number line car collid occupi posit car collid anoth car unit form singl car fleet car form fleet posit speed initi speed slowest car fleet return array answer answeri time second ith car collid next car car collid next car answer within actual answer accept exampl input car output explan exactli second first car collid second car form car fleet speed exactli second third car collid fourth car form car fleet speed exampl input car output constraint carslength positioni speedi positioni positioni1 ","1340":"integ repres current locat cartesian grid also array point pointsi ai bi repres point exist ai bi point valid share xcoordin ycoordin locat return index 0index valid point smallest manhattan distanc current locat multipl return valid point smallest index valid point return manhattan distanc point x1 y1 x2 y2 absx1 x2 absy1 y2 exampl input point output explan point valid valid point smallest manhattan distanc current locat distanc smallest index return exampl input point output explan answer allow locat current locat exampl input point output explan valid point constraint pointslength pointsilength ai bi ","1341":"integ return true possibl repres sum distinct power otherwis return fals integ power exist integ 3x exampl input output true explan exampl input output true explan exampl input output fals constraint ","1342":"undirect graph defin integ number node 2d integ array edg edg graph edgesi ui vi indic undirect edg ui vi also integ array queri let incidenta defin number edg connect either node answer jth queri number pair node satisfi follow condit incidenta queriesj return array answer answerslength querieslength answersj answer jth queri note multipl edg node exampl input edg queri output explan calcul incidenta shown tabl answer queri follow answers0 pair incidenta valu greater answers1 pair except incidenta valu greater exampl input edg queri output constraint edgeslength ui vi ui vi querieslength queriesj edgeslength ","1343":"integ array num integ limit goal array num interest properti absnumsi limit return minimum number element need add make sum array equal goal array must maintain properti absnumsi limit note absx equal otherwis exampl input num limit goal output explan add sum array exampl input num limit goal output constraint numslength limit limit numsi limit goal ","1344":"undirect weight connect graph posit integ denot graph node label array edg edgesi ui vi weighti denot edg node ui vi weight equal weighti path node start node end sequenc node z0 z1 z2 zk z0 start zk end edg zi zi1 k1 distanc path sum weight edg path let distancetolastnodex denot shortest distanc path node node restrict path path also satisfi distancetolastnodezi distancetolastnodezi1 k1 return number restrict path node node sinc number may larg return modulo exampl input edg output explan circl contain node number black distancetolastnod valu blue restrict path exampl input edg output explan circl contain node number black distancetolastnod valu blue restrict path constraint edgeslength edgesilength ui vi ui vi weighti edg node least path node ","1345":"array num integ segment left right left right element indic left right inclus numsleft numsleft1 numsright return minimum number element chang array segment size equal exampl input num output explan modifi array exampl input num output explan modifi array exampl input num output explan modifi array constraint numslength numsi ","1346":"sql schema panda schema ","1347":"string equal length string swap oper choos indic string necessarili differ swap charact indic return true possibl make string equal perform string swap exactli string otherwis return fals exampl input bank kanb output true explan exampl swap first charact last charact make bank exampl input attack defend output fals explan imposs make equal string swap exampl input kelb kelb output true explan string alreadi equal string swap oper requir constraint s1length s2length s1length s2length lowercas english letter ","1348":"undirect star graph consist node label star graph graph center node exactli edg connect center node everi node 2d integ array edg edgesi ui vi indic edg node ui vi return center star graph exampl input edg output explan shown figur node connect everi node center exampl input edg output constraint edgeslength edgesilength ui vi ui vi edg repres valid star graph ","1349":"school class student class final exam 2d integ array class classesi passi totali know beforehand ith class totali total student passi number student pass exam also integ extrastud anoth extrastud brilliant student guarante pass exam class assign want assign extrastud student class way maxim averag pass ratio across class pass ratio class equal number student class pass exam divid total number student class averag pass ratio sum pass ratio class divid number class return maximum possibl averag pass ratio assign extrastud student answer within actual answer accept exampl input class extrastud output explan assign extra student first class averag pass ratio equal exampl input class extrastud output constraint classeslength classesilength passi totali extrastud ","1350":"array integ num 0index integ score subarray defin minnumsi numsi1 numsj good subarray subarray return maximum possibl score good subarray exampl input num output explan optim subarray score min43745 exampl input num output explan optim subarray score min55454 constraint numslength numsi numslength ","1351":"sql schema panda schema ","1352":"alphanumer string return second largest numer digit appear exist alphanumer string string consist lowercas english letter digit exampl input dfa12321afd output explan digit appear second largest digit exampl input abc1111 output explan digit appear second largest digit constraint slength consist lowercas english letter digit ","1353":"authent system work authent token session user receiv new authent token expir timetol second currenttim token renew expiri time extend expir timetol second potenti differ currenttim implement authenticationmanag class authenticationmanagerint timetol construct authenticationmanag set timetol generatestr tokenid int currenttim gener new token tokenid currenttim second renewstr tokenid int currenttim renew unexpir token tokenid currenttim second unexpir token tokenid request ignor noth happen countunexpiredtokensint currenttim return number unexpir token currenttim note token expir time anoth action happen time renew countunexpiredtoken expir take place action exampl input authenticationmanag renew gener countunexpiredtoken gener renew renew countunexpiredtoken aaa aaa bbb aaa bbb output null null null null null null explan authenticationmanag authenticationmanag new authenticationmanager5 construct authenticationmanag timetol second authenticationmanagerrenewaaa token exist tokenid aaa time noth happen authenticationmanagergenerateaaa gener new token tokenid aaa time authenticationmanagercountunexpiredtokens6 token tokenid aaa unexpir time return authenticationmanagergeneratebbb gener new token tokenid bbb time authenticationmanagerrenewaaa token tokenid aaa expir time time renew request ignor noth happen authenticationmanagerrenewbbb token tokenid bbb unexpir time renew request fulfil token expir time authenticationmanagercountunexpiredtokens15 token tokenid bbb expir time token tokenid aaa expir time current token unexpir return constraint timetol currenttim tokenidlength tokenid consist lowercas letter call gener contain uniqu valu tokenid valu currenttim across function call strictli increas call made function combin ","1354":"integ array coin length repres coin valu ith coin coinsi make valu choos coin valu sum return maximum number consecut integ valu make coin start includ note may multipl coin valu exampl input coin output explan make follow valu take take make consecut integ valu start exampl input coin output explan make follow valu take take take take take take take take make consecut integ valu start exampl input coin output constraint coinslength coinsi ","1355":"num array posit integ size must perform oper array ith oper 1index choos element receiv score gcdx remov num return maximum score receiv perform oper function gcdx greatest common divisor exampl input num output explan optim choic oper gcd1 exampl input num output explan optim choic oper gcd3 gcd4 exampl input num output explan optim choic oper gcd1 gcd2 gcd3 constraint numslength numsi ","1356":"array posit integ num return maximum possibl sum ascend subarray num subarray defin contigu sequenc number array subarray numsl numsl1 numsr1 numsr ascend numsi numsi1 note subarray size ascend exampl input num output explan ascend subarray maximum sum exampl input num output explan ascend subarray maximum sum exampl input num output explan ascend subarray maximum sum constraint numslength numsi ","1357":"posit integ index maxsum want construct array num 0index satisfi follow condit numslength numsi posit integ absnumsi numsi1 sum element num exceed maxsum numsindex maxim return numsindex construct array note absx equal otherwis exampl input index maxsum output explan num array satisfi condit array satisfi condit nums2 maximum nums2 exampl input index maxsum output constraint maxsum index ","1358":"even integ initi permut perm size permi 0index oper creat new array arr arri permi arri permn assign arr perm return minimum nonzero number oper need perform perm return permut initi valu exampl input output explan perm initi 1st oper perm take oper exampl input output explan perm initi 1st oper perm oper perm take oper exampl input output constraint even ","1359":"string contain bracket pair pair contain nonempti key exampl string nameisageyearsold bracket pair contain key name age know valu wide rang key repres 2d string array knowledg knowledgei keyi valuei indic key keyi valu valuei task evalu bracket pair evalu bracket pair contain key keyi replac keyi bracket pair key correspond valuei know valu key replac keyi bracket pair question mark without quotat mark key appear knowledg nest bracket return result string evalu bracket pair exampl input nameisageyearsold knowledg namebobagetwo output bobistwoyearsold explan key name valu bob replac name bob key age valu replac age exampl input hinam knowledg ab output hi explan know valu key name replac name exampl input aaaaaa knowledg aye output yesyesyesaaa explan key appear multipl time key valu ye replac occurr ye notic bracket pair evalu constraint slength knowledgelength knowledgeilength keyilength valueilength consist lowercas english letter round bracket everi open bracket correspond close bracket key bracket pair nonempti nest bracket pair keyi valuei lowercas english letter keyi knowledg uniqu ","1360":"posit integ primefactor ask construct posit integ satisfi follow condit number prime factor necessarili distinct primefactor number nice divisor maxim note divisor nice divis everi prime factor exampl prime factor nice divisor return number nice divisor sinc number larg return modulo note prime number natur number greater product smaller natur number prime factor number list prime number product equal exampl input primefactor output explan valid valu prime factor nice divisor valu prime factor nice divisor exampl input primefactor output constraint primefactor ","1361":"coordin string repres coordin squar chessboard chessboard refer return true squar white fals squar black coordin alway repres valid chessboard squar coordin alway letter first number second exampl input coordin output fals explan chessboard squar coordin black return fals exampl input coordin output true explan chessboard squar coordin white return true exampl input coordin c7 output fals constraint coordinateslength coordinates0 coordinates1 ","1362":"string sentence1 sentence2 repres sentenc compos word sentenc list word separ singl space lead trail space word consist uppercas lowercas english charact sentenc consid similar possibl insert arbitrari sentenc possibl empti insid sentenc sentenc becom equal note insert sentenc must separ exist word space exampl hello jane hello name jane made equal insert name hello jane frog cool frog cool similar sinc although sentenc insert separ frog space sentenc sentence1 sentence2 return true sentence1 sentence2 similar otherwis return fals exampl input sentence1 name haley sentence2 haley output true explan sentence2 turn sentence1 insert name haley exampl input sentence1 sentence2 lot word output fals explan singl sentenc insert insid sentenc make equal exampl input sentence1 eat right sentence2 eat output true explan sentence2 turn sentence1 insert right end sentenc constraint sentence1length sentence2length sentence1 sentence2 lowercas uppercas english letter space word sentence1 sentence2 separ singl space ","1363":"array num consist nonneg integ let us defin revx revers nonneg integ exampl rev123 rev120 pair indic nice satisfi follow condit numslength numsi revnumsj numsj revnumsi return number nice pair indic sinc number larg return modulo exampl input num output explan pair rev97 rev42 rev1 rev11 exampl input num output constraint numslength numsi ","1364":"donut shop bake donut batch batchsiz rule must serv donut batch serv donut next batch integ batchsiz integ array group groupsi denot group groupsi custom visit shop custom get exactli donut group visit shop custom group must serv serv follow group group happi get fresh donut first custom group receiv donut left previou group freeli rearrang order group return maximum possibl number happi group rearrang group exampl input batchsiz group output explan arrang group 1st 4th 6th group happi exampl input batchsiz group output constraint batchsiz groupslength groupsi ","1365":"sentenc list word separ singl space lead trail space word consist uppercas lowercas english letter punctuat exampl hello world hello hello world hello world sentenc sentenc integ want truncat contain first word return truncat exampl input hello contest output hello explan word hello contest first word hello henc return hello exampl input solut problem output solut explan word solut problem first word solut henc return solut exampl input chopper tanuki output chopper tanuki constraint slength rang number word lowercas uppercas english letter space word separ singl space lead trail space ","1366":"log user action leetcod integ log repres 2d integ array log logsi idi timei indic user idi perform action minut timei multipl user perform action simultan singl user perform multipl action minut user activ minut user defin number uniqu minut user perform action leetcod minut count even multipl action occur calcul 1index array answer size answerj number user whose equal return array answer describ exampl input log output explan user id0 perform action minut henc minut count user id1 perform action minut henc sinc user answer2 remain answerj valu exampl input log output explan user id1 perform singl action minut henc user id2 perform action minut henc user henc answer1 answer2 remain valu constraint logslength idi timei rang maximum user ","1367":"posit integ array nums1 nums2 length absolut sum differ array nums1 nums2 defin sum nums1i nums2i 0index replac element nums1 element nums1 minim absolut sum differ return minimum absolut sum differ replac element array nums1 sinc answer may larg return modulo defin exampl input nums1 nums2 output explan possibl optim solut replac second element first replac second element third yield absolut sum differ exampl input nums1 nums2 output explan nums1 equal nums2 replac need result absolut sum differ exampl input nums1 nums2 output explan replac first element second yield absolut sum differ constraint nums1length nums2length nums1i nums2i ","1368":"array num consist posit integ gcd sequenc number defin greatest integ divid number sequenc evenli exampl gcd sequenc subsequ array sequenc form remov element possibl none array exampl subsequ return number differ gcd among nonempti subsequ num exampl input num output explan figur show nonempti subsequ gcd differ gcd exampl input num output constraint numslength numsi ","1369":"implement function signfuncx return posit neg equal integ array num let product product valu array num return signfuncproduct exampl input num output explan product valu array signfunc144 exampl input num output explan product valu array signfunc0 exampl input num output explan product valu array signfunc1 constraint numslength numsi ","1370":"friend play game friend sit circl number clockwis order formal move clockwis ith friend bring i1th friend move clockwis nth friend bring 1st friend rule game follow start 1st friend count next friend clockwis direct includ friend start count wrap around circl may count friend last friend count leav circl lose game still friend circl go back step start friend immedi clockwis friend lost repeat els last friend circl win game number friend integ return winner game exampl input output explan step game start friend count friend clockwis friend friend leav circl next start friend count friend clockwis friend friend leav circl next start friend count friend clockwis friend friend leav circl next start friend count friend clockwis friend friend leav circl friend left winner exampl input output explan friend leav order winner friend constraint could solv problem linear time constant space ","1371":"lane road length consist point label frog start point second lane want jump point howev could obstacl along way array obstacl length obstaclesi rang describ obstacl lane obstaclesi point obstaclesi obstacl point obstacl lane point exampl obstacles2 obstacl lane point frog travel point point lane obstacl lane point avoid obstacl frog also perform side jump jump anoth lane even adjac point obstacl new lane exampl frog jump lane point lane point return minimum number side jump frog need reach lane point start lane point note obstacl point exampl input obstacl output explan optim solut shown arrow side jump red arrow note frog jump obstacl make side jump shown point exampl input obstacl output explan obstacl lane side jump requir exampl input obstacl output explan optim solut shown arrow side jump constraint obstacleslength obstaclesi obstacles0 obstaclesn ","1372":"integ stream integ task implement data structur calcul mkaverag stream mkaverag calcul use step number element stream less consid mkaverag otherwis copi last element stream separ contain remov smallest element largest element contain calcul averag valu rest element round nearest integ implement mkaverag class mkaverageint int initi mkaverag object empti stream integ void addelementint num insert new element num stream int calculatemkaverag calcul return mkaverag current stream round nearest integ exampl input mkaverag addel addel calculatemkaverag addel calculatemkaverag addel addel addel calculatemkaverag output null null null null null null null explan mkaverag obj new mkaverage3 objaddelement3 current element objaddelement1 current element objcalculatemkaverag return element exist objaddelement10 current element objcalculatemkaverag last element remov smallest largest element contain averag equal return objaddelement5 current element objaddelement5 current element objaddelement5 current element objcalculatemkaverag last element remov smallest largest element contain averag equal return constraint k2 num call made addel calculatemkaverag ","1373":"integ array num 0index oper choos element array increment exampl num choos increment nums1 make num return minimum number oper need make num strictli increas array num strictli increas numsi numsi1 numslength array length trivial strictli increas exampl input num output explan follow oper increment nums2 num becom increment nums1 num becom increment nums2 num becom exampl input num output exampl input num output constraint numslength numsi ","1374":"array point pointsi xi yi coordin ith point 2d plane multipl point coordin also array queri queriesj xj yj describ circl center xj yj radiu queri queriesj comput number point insid jth circl point border circl consid insid return array answer answerj answer jth queri exampl input point queri output explan point circl shown queries0 green circl queries1 red circl queries2 blue circl exampl input point queri output explan point circl shown queries0 green queries1 red queries2 blue queries3 purpl constraint pointslength pointsilength xi yi querieslength queriesjlength xj yj coordin integ could find answer queri better complex ","1375":"sort array num nonneg integ integ maximumbit want perform follow queri time find nonneg integ 2maximumbit nums0 nums1 numsnumslength1 maxim answer ith queri remov last element current array num return array answer answeri answer ith queri exampl input num maximumbit output explan queri answer follow 1st queri num sinc queri num sinc 3rd queri num sinc 4th queri num sinc exampl input num maximumbit output explan queri answer follow 1st queri num sinc queri num sinc 3rd queri num sinc 4th queri num sinc exampl input num maximumbit output constraint numslength maximumbit numsi 2maximumbit num sort ascend order ","1376":"string 0index ask perform follow oper get sort string find largest index slength si si find largest index slength si possibl valu rang inclus swap charact indic revers suffix start index return number oper need make string sort sinc answer larg return modulo exampl input cba output explan simul goe follow oper j2 swap get scab revers suffix start scab oper j2 swap get sbac revers suffix start sbca oper j2 swap get sbac revers suffix start sbac oper j1 swap get sabc revers suffix start sacb oper j2 swap get sabc revers suffix start sabc exampl input aabaa output explan simul goe follow oper j4 swap get saaaab revers substr start saaaba oper j4 swap get saaaab revers substr start saaaab constraint slength consist lowercas english letter ","1377":"pangram sentenc everi letter english alphabet appear least string sentenc contain lowercas english letter return true sentenc pangram fals otherwis exampl input sentenc thequickbrownfoxjumpsoverthelazydog output true explan sentenc contain least everi letter english alphabet exampl input sentenc leetcod output fals constraint sentencelength sentenc consist lowercas english letter ","1378":"swelter summer day boy want buy ice cream bar store ice cream bar array cost length costsi price ith ice cream bar coin boy initi coin coin spend want buy mani ice cream bar possibl note boy buy ice cream bar order return maximum number ice cream bar boy buy coin coin must solv problem count sort exampl input cost coin output explan boy buy ice cream bar indic total price exampl input cost coin output explan boy afford ice cream bar exampl input cost coin output explan boy buy ice cream bar total price constraint costslength costsi coin ","1379":"task label repres 2d integ array task tasksi enqueuetimei processingtimei mean ith task avail process enqueuetimei take processingtimei finish process singlethread cpu process task time act follow way cpu idl avail task process cpu remain idl cpu idl avail task cpu choos shortest process time multipl task shortest process time choos task smallest index task start cpu process entir task without stop cpu finish task start new instantli return order cpu process task exampl input task output explan event go follow time task avail process avail task also time idl cpu start process task avail task time task avail process avail task time task avail process avail task also time cpu finish task start process task shortest avail task time task avail process avail task time cpu finish task start process task shortest avail task time cpu finish task start process task avail task time cpu finish task becom idl exampl input task output explan event go follow time task becom avail avail task also time idl cpu start process task avail task time cpu finish task start process task avail task time cpu finish task start process task avail task time cpu finish task start process task avail task time cpu finish task start process task avail task time cpu finish task becom idl constraint taskslength enqueuetimei processingtimei ","1380":"sum list bitwis element list contain element sum equal element exampl sum equal sum equal 0index array arr1 arr2 nonneg integ consid list contain result arr1i arr2j bitwis everi pair arr1length arr2length return sum aforement list exampl input arr1 arr2 output explan list sum exampl input arr1 arr2 output explan list sum constraint arr1length arr2length arr1i arr2j ","1381":"integ base base return sum digit convert base base convert digit interpret base number sum return base exampl input output explan base express base exampl input output explan alreadi base constraint ","1382":"frequenc element number time occur array integ array num integ oper choos index num increment element index return maximum possibl frequenc element perform oper exampl input num output explan increment first element time second element time make num frequenc exampl input num output explan multipl optim solut increment first element time make num frequenc increment second element time make num frequenc increment third element time make num frequenc exampl input num output constraint numslength numsi ","1383":"string consid beauti satisfi follow condit english vowel e u must appear least letter must sort alphabet order ie es es etc exampl string aeiou aaaaaaeiiiioou consid beauti uaeio aeoiu aaaeeeooo beauti string word consist english vowel return length longest beauti substr word substr exist return substr contigu sequenc charact string exampl input word aeiaaioaaaaeiiiiouuuooaauuaeiu output explan longest beauti substr word aaaaeiiiiouuu length exampl input word aeeeiiiioooauuuaeiou output explan longest beauti substr word aeiou length exampl input word output explan beauti substr return constraint wordlength word consist charact e u ","1384":"want build new build citi new build built line label howev citi restrict height new build height build must nonneg integ height first build must height differ adjac build exceed addit citi restrict maximum height specif build restrict 2d integ array restrict restrictionsi idi maxheighti indic build idi must height less equal maxheighti guarante build appear restrict build restrict return maximum possibl height tallest build exampl input restrict output explan green area imag indic maximum allow height build build build height tallest build height exampl input restrict output explan green area imag indic maximum allow height build build build height tallest build height exampl input restrict output explan green area imag indic maximum allow height build build build height tallest build height constraint restrictionslength minn idi idi uniqu maxheighti ","1385":"0index string lowercas english letter even indic digit odd indic must perform oper shiftc charact digit return xth charact exampl shifta shiftx everi odd index want replac digit si result shiftsi1 si oper return replac digit guarante shiftsi1 si never exceed note shiftc preload function oper implement part solut exampl input a1c1e1 output abcdef explan digit replac follow shifta1 shiftc1 shifte1 exampl input a1b2c3d4 output abbdcfdh explan digit replac follow shifta1 shiftb2 shiftc3 shiftd4 constraint slength consist lowercas english letter digit shiftsi1 si odd indic ","1386":"design system manag reserv state seat number implement seatmanag class seatmanagerint initi seatmanag object manag seat number seat initi avail int reserv fetch smallestnumb unreserv seat reserv return number void unreserveint seatnumb unreserv seat seatnumb exampl input seatmanag reserv reserv unreserv reserv reserv reserv reserv unreserv output null null null explan seatmanag seatmanag new seatmanager5 initi seatmanag seat seatmanagerreserv seat avail return lowest number seat seatmanagerreserv avail seat return lowest seatmanagerunreserve2 unreserv seat avail seat seatmanagerreserv avail seat return lowest seatmanagerreserv avail seat return lowest seatmanagerreserv avail seat return lowest seatmanagerreserv avail seat seat return seatmanagerunreserve5 unreserv seat avail seat constraint seatnumb call reserv guarante least unreserv seat call unreserv guarante seatnumb reserv call total made reserv unreserv ","1387":"array posit integ arr perform oper possibl none arr satisfi condit valu first element arr must absolut differ adjac element must less equal word absarri arri arrlength 0index absx absolut valu type oper perform number time decreas valu element arr smaller posit integ rearrang element arr order return maximum possibl valu element arr perform oper satisfi condit exampl input arr output explan satisfi condit rearrang arr becom largest element arr exampl input arr output explan possibl way satisfi condit follow rearrang arr becom decreas valu second element decreas valu third element arr satisfi condit largest element arr exampl input arr output explan array alreadi satisfi condit largest element constraint arrlength arri ","1388":"hotel room room repres 2d integ array room roomsi roomidi sizei denot room room number roomidi size equal sizei roomidi guarante uniqu also queri 2d array queri queriesj preferredj minsizej answer jth queri room number id room room size least minsizej absid preferredj minim absx absolut valu tie absolut differ use room smallest id room answer return array answer length answerj contain answer jth queri exampl input room queri output explan answer queri follow queri room number closest abs3 size least answer queri room size least answer queri room number closest abs3 size least answer exampl input room queri output explan answer queri follow queri room number closest abs2 size least answer queri room number size least answer sinc smaller queri room number room size least answer constraint roomslength querieslength roomidi preferredj sizei minsizej ","1389":"integ array num 0index integ target start find index numsi target absi start minim note absx absolut valu return absi start guarante target exist num exampl input num target start output explan nums4 valu equal target answer abs4 exampl input num target start output explan nums0 valu equal target answer abs0 exampl input num target start output explan everi valu num nums0 minim absi start abs0 constraint numslength numsi start numslength target num ","1390":"string consist digit check split nonempti substr numer valu substr descend order differ numer valu everi adjac substr equal exampl string split numer valu valu descend order adjac valu differ way valid anoth exampl string split howev way invalid numer valu respect descend order return true possibl split describ fals otherwis substr contigu sequenc charact string exampl input output fals explan valid way split exampl input output true explan split numer valu valu descend order adjac valu differ exampl input output fals explan valid way split constraint slength consist digit ","1391":"string num repres larg integ integ call integ wonder permut digit num greater valu num mani wonder integ howev care smallestvalu one exampl num 1st smallest wonder integ smallest wonder integ 3rd smallest wonder integ 4th smallest wonder integ return minimum number adjac digit swap need appli num reach kth smallest wonder integ test gener way kth smallest wonder integ exist exampl input num output explan 4th smallest wonder number get number swap index index swap index index exampl input num output explan 4th smallest wonder number get number swap index index swap index index swap index index swap index index exampl input num output explan 1st smallest wonder number get number swap index index constraint numlength num consist digit ","1392":"2d integ array interv intervalsi lefti righti describ ith interv start lefti end righti inclus size interv defin number integ contain formal righti lefti also integ array queri answer jth queri size smallest interv lefti queriesj righti interv exist answer return array contain answer queri exampl input interv queri output explan queri process follow queri interv smallest interv contain answer queri interv smallest interv contain answer queri interv smallest interv contain answer queri interv smallest interv contain answer exampl input interv queri output explan queri process follow queri interv smallest interv contain answer queri none interv contain answer queri interv smallest interv contain answer queri interv smallest interv contain answer constraint intervalslength querieslength intervalsilength lefti righti queriesj ","1393":"2d integ array log logsi birthi deathi indic birth death year ith person popul year number peopl aliv year ith person count year popul inclus rang birthi deathi note person count year die return earliest year maximum popul exampl input log output explan maximum popul earliest year popul exampl input log output explan maximum popul happen year earlier year constraint logslength birthi deathi ","1394":"nonincreas 0index integ array nums1 nums2 pair indic nums1length nums2length valid nums1i nums2j distanc pair return maximum distanc valid pair valid pair return array arr nonincreas arri1 arri everi arrlength exampl input nums1 nums2 output explan valid pair maximum distanc pair exampl input nums1 nums2 output explan valid pair maximum distanc pair exampl input nums1 nums2 output explan valid pair maximum distanc pair constraint nums1length nums2length nums1i nums2j nums1 nums2 nonincreas ","1395":"minproduct array equal minimum valu array multipli array sum exampl array minimum valu minproduct array integ num return maximum minproduct nonempti subarray num sinc answer may larg return modulo note minproduct maxim perform modulo oper testcas gener maximum minproduct without modulo fit 64bit sign integ subarray contigu part array exampl input num output explan maximum minproduct achiev subarray minimum valu exampl input num output explan maximum minproduct achiev subarray minimum valu exampl input num output explan maximum minproduct achiev subarray minimum valu constraint numslength numsi ","1396":"direct graph color node edg node number string color colorsi lowercas english letter repres color ith node graph 0index also 2d array edg edgesj aj indic direct edg node aj node valid path graph sequenc node x1 x2 x3 xk direct edg xi xi1 everi color valu path number node color frequent occur color along path return largest color valu valid path graph graph contain cycl exampl input color abaca edg output explan path contain node color red imag exampl input color edg output explan cycl constraint colorslength edgeslength color consist lowercas english letter aj ","1397":"sentenc list word separ singl space lead trail space word consist lowercas uppercas english letter sentenc shuffl append 1index word posit word rearrang word sentenc exampl sentenc sentenc shuffl sentence4 sentence4 shuffl sentenc contain word reconstruct return origin sentenc exampl input sentence4 output sentenc explan sort word origin posit sentence4 remov number exampl input output explan sort word origin posit remov number constraint slength consist lowercas uppercas english letter space digit number word word separ singl space contain lead trail space ","1398":"integ memory1 memory2 repres avail memori bit memori stick current faulti program run consum increas amount memori everi second ith second start bit memori alloc stick avail memori first memori stick avail memori neither stick least bit avail memori program crash return array contain crashtim memory1crash memory2crash crashtim time second program crash memory1crash memory2crash avail bit memori first second stick respect exampl input memory1 memory2 output explan memori alloc follow 1st second bit memori alloc stick first stick bit avail memori second bit memori alloc stick second stick bit avail memori 3rd second program crash stick bit avail respect exampl input memory1 memory2 output explan memori alloc follow 1st second bit memori alloc stick second stick bit avail memori second bit memori alloc stick second stick bit avail memori 3rd second bit memori alloc stick first stick bit avail memori 4th second bit memori alloc stick second stick bit avail memori 5th second bit memori alloc stick first stick bit avail memori 6th second program crash stick bit avail respect constraint memory1 memory2 ","1399":"integ array num return sum floornumsi numsj pair indic numslength array sinc answer may larg return modulo floor function return integ part divis exampl input num output explan floor2 floor2 floor5 floor2 floor5 floor9 floor5 floor9 floor9 calcul floor divis everi pair indic array sum exampl input num output constraint numslength numsi ","1400":"total array defin bitwis element array empti exampl total array array num return sum total everi subset num note subset element count multipl time array subset array obtain delet possibl element exampl input num output explan subset empti subset total total total total exampl input num output explan subset empti subset total total total total total total total total exampl input num output explan sum total everi subset constraint numslength numsi ","1401":"binari string return minimum number charact swap make altern imposs string call altern adjac charact equal exampl string altern string charact may swap even adjac exampl input output explan swap posit string altern exampl input output explan string alreadi altern swap need exampl input output constraint slength si either ","1402":"integ array nums1 nums2 task implement data structur support queri type add posit integ element index array nums2 count number pair nums1i nums2j equal valu nums1length nums2length implement findsumpair class findsumpairsint nums1 int nums2 initi findsumpair object integ array nums1 nums2 void addint index int val add val nums2index ie appli nums2index val int countint tot return number pair nums1i nums2j tot exampl input findsumpair count add count count add add count output null null null null explan findsumpair findsumpair new findsumpairs1 findsumpairscount7 return pair make pair make findsumpairsadd3 nums2 findsumpairscount8 return pair make findsumpairscount4 return pair make findsumpairsadd0 nums2 findsumpairsadd1 nums2 findsumpairscount7 return pair make pair make constraint nums1length nums2length nums1i nums2i index nums2length val tot call made add count ","1403":"uniquelys stick whose length integ want arrang stick exactli stick visibl left stick visibl left longer stick left exampl stick arrang stick length visibl left return number arrang sinc answer may larg return modulo exampl input output explan arrang exactli stick visibl visibl stick underlin exampl input output explan arrang stick visibl visibl stick underlin exampl input output explan mod way rearrang stick exactli stick visibl constraint ","1404":"binari string return true longest contigu segment strictli longer longest contigu segment return fals otherwis exampl longest continu segment length longest continu segment length note longest continu segment consid length appli exampl input output true explan longest contigu segment length longest contigu segment length segment longer return true exampl input output fals explan longest contigu segment length longest contigu segment length segment longer return fals exampl input output fals explan longest contigu segment length longest contigu segment length segment longer return fals constraint slength si either ","1405":"floatingpoint number hour repres amount time reach offic commut offic must take train sequenti order also integ array dist length disti describ distanc kilomet ith train ride train depart integ hour may need wait train ride exampl 1st train ride take hour must wait addit hour depart train ride hour mark return minimum posit integ speed kilomet per hour train must travel reach offic time imposs time test gener answer exceed hour digit decim point exampl input dist hour output explan speed first train ride take hour sinc alreadi integ hour depart immedi hour mark second train take hour sinc alreadi integ hour depart immedi hour mark third train take hour arriv exactli hour mark exampl input dist hour output explan speed first train ride take hour sinc integ hour wait hour mark depart second train ride take hour sinc alreadi integ hour depart immedi hour mark third train take hour arriv hour mark exampl input dist hour output explan imposs earliest third train depart hour mark constraint distlength disti hour digit decim point hour ","1406":"0index binari string integ minjump maxjump begin stand index equal move index index follow condit fulfil minjump mini maxjump slength return true reach index slength fals otherwis exampl input minjump maxjump output true explan first step move index index second step move index index exampl input minjump maxjump output fals constraint slength si either minjump maxjump slength ","1407":"alic bob take turn play game alic start first stone arrang row player turn number stone follow choos integ remov leftmost stone row add sum remov stone valu player score place new stone whose valu equal sum left side row game stop stone left row score differ alic bob alic score bob score alic goal maxim score differ bob goal minim score differ integ array stone length stonesi repres valu ith stone left return score differ alic bob play optim exampl input stone output explan alic remov first stone add score place stone valu left stone bob remov first stone add score place stone valu left stone differ score exampl input stone output explan alic remov stone add score place stone valu left stone differ score exampl input stone output explan alic make move remov stone add score place stone valu left stone differ score constraint stoneslength stonesi ","1408":"sql schema panda schema ","1409":"string good repeat charact string return number good substr length note multipl occurr substr everi occurr count substr contigu sequenc charact string exampl input xyzzaz output explan substr size xyz yzz zza zaz good substr length xyz exampl input aababcabc output explan substr size aab aba bab abc bca cab abc good substr abc bca cab abc constraint slength consist lowercas english letter ","1410":"pair sum pair ab equal maximum pair sum largest pair sum list pair exampl pair maximum pair sum would max15 max6 array num even length pair element num pair element num exactli pair maximum pair sum minim return minim maximum pair sum optim pair element exampl input num output explan element pair pair maximum pair sum max33 max6 exampl input num output explan element pair pair maximum pair sum max35 max8 constraint numslength even numsi ","1411":"integ matrix grid rhombu sum sum element form border regular rhombu shape grid rhombu must shape squar rotat degre corner center grid cell imag valid rhombu shape correspond color cell includ rhombu sum note rhombu area depict purpl rhombu bottom right corner return biggest distinct rhombu sum grid descend order less distinct valu return exampl input grid output explan rhombu shape biggest distinct rhombu sum depict blue red green exampl input grid output explan rhombu shape biggest distinct rhombu sum depict blue red area rhombu bottom right corner green area rhombu bottom middl exampl input grid output explan possibl rhombu sum return constraint gridlength gridilength gridij ","1412":"integ array nums1 nums2 length sum integ array nums10 nums20 nums11 nums21 nums1n nums2n 0index exampl sum equal rearrang element nums2 result sum minim return sum rearrang exampl input nums1 nums2 output explan rearrang nums2 becom sum exampl input nums1 nums2 output explan rearrang nums2 becom sum constraint nums1length nums2length nums1i nums2i ","1413":"letter valu letter posit alphabet start ie etc numer valu string lowercas english letter concaten letter valu letter convert integ exampl acb concaten letter letter valu result convert get string firstword secondword targetword consist lowercas english letter inclus return true summat numer valu firstword secondword equal numer valu targetword fals otherwis exampl input firstword acb secondword cba targetword cdb output true explan numer valu firstword acb numer valu secondword cba numer valu targetword cdb return true exampl input firstword aaa secondword targetword aab output fals explan numer valu firstword aaa numer valu secondword numer valu targetword aab return fals exampl input firstword aaa secondword targetword aaaa output true explan numer valu firstword aaa numer valu secondword numer valu targetword aaaa return true constraint firstwordlength secondwordlength targetwordlength firstword secondword targetword lowercas english letter inclus ","1414":"larg integ repres string integ digit digit digit inclus rang may repres neg number want maxim numer valu insert anywher decim represent insert left neg sign exampl would best insert make would best insert first make return string repres maximum valu insert exampl input output explan result regardless insert exampl input output explan make largest constraint nlength digit rang valid represent integ case neg begin ","1415":"0index integ array server task length respect serversi weight ith server tasksj time need process jth task second task assign server use task queue initi server free queue empti second jth task insert queue start 0th task insert second long free server queue empti task front queue assign free server smallest weight case tie assign free server smallest index free server queue empti wait server becom free immedi assign next task multipl server becom free time multipl task queue assign order insert follow weight index prioriti server assign task second free second tasksj build array an length ansj index server jth task assign return array an exampl input server task output explan event chronolog order go follow second task ad process use server second second server becom free task ad process use server second second task ad process use server second second server becom free task ad process use server second second task ad process use server second second server becom free task ad process use server second exampl input server task output explan event chronolog order go follow second task ad process use server second second task ad process use server second second server becom free task ad process use server second second task ad process use server second second server becom free task ad process use server second second task ad process use server second second task ad process use server second constraint serverslength taskslength serversi tasksj ","1416":"integ hoursbefor number hour travel meet arriv meet travel road road length integ array dist length disti describ length ith road kilomet addit integ speed speed kmh travel travel road must rest wait next integ hour begin travel next road note rest travel last road alreadi meet exampl travel road take hour must wait hour mark travel next road travel road take exactli hour need wait howev allow skip rest abl arriv time mean need wait next integ hour note mean may finish travel futur road differ hour mark exampl suppos travel first road take hour travel second road take hour skip rest first road mean finish travel second road right hour mark let start travel third road immedi return minimum number skip requir arriv meet time imposs exampl input dist speed hoursbefor output explan without skip rest arriv hour skip first rest arriv hour note second rest shorten finish travel second road integ hour due skip first rest exampl input dist speed hoursbefor output explan without skip rest arriv hour skip first third rest arriv hour exampl input dist speed hoursbefor output explan imposs arriv meet time even skip rest constraint distlength disti speed hoursbefor ","1417":"ident egg access build floor label know exist floor egg drop floor higher break egg drop floor break move may take unbroken egg drop floor egg break longer use howev egg break may reus futur move return minimum number move need determin certainti valu exampl input output explan drop first egg floor second egg floor first egg break know second egg break first egg didnt know otherwis egg surviv know exampl input output explan optim strategi drop 1st egg floor break know drop egg start floor go time find within drop total drop 1st egg break drop 1st egg floor break know drop egg start floor go time find within drop total drop 1st egg break similar process drop 1st egg floor regardless outcom take drop determin constraint ","1418":"binari matric mat target return true possibl make mat equal target rotat mat 90degre increment fals otherwis exampl input mat target output true explan rotat mat degre clockwis make mat equal target exampl input mat target output fals explan imposs make mat equal target rotat mat exampl input mat target output true explan rotat mat degre clockwis time make mat equal target constraint matlength targetlength matilength targetilength matij targetij either ","1419":"integ array num goal make element num equal complet oper step find largest valu num let index 0index valu largest multipl element largest valu pick smallest find next largest valu num strictli smaller largest let valu nextlargest reduc numsi nextlargest return number oper make element num equal exampl input num output explan take oper make element num equal largest index nextlargest reduc nums0 num largest index nextlargest reduc nums0 num largest index nextlargest reduc nums2 num exampl input num output explan element num alreadi equal exampl input num output explan take oper make element num equal largest index nextlargest reduc nums4 num largest index nextlargest reduc nums2 num largest index nextlargest reduc nums3 num largest index nextlargest reduc nums4 num constraint numslength numsi ","1420":"binari string allow perform type oper string sequenc type1 remov charact start string append end string type2 pick charact flip valu ie valu becom viceversa return minimum number type2 oper need perform becom altern string call altern adjac charact equal exampl string altern string exampl input output explan use first oper time make use second oper third sixth element make exampl input output explan string alreadi altern exampl input output explan use second oper second element make constraint slength si either ","1421":"packag tri place box packag box supplier produc box differ size infinit suppli packag place box size packag less equal size box packag size integ array packag packagesi size ith packag supplier 2d integ array box boxesj array box size jth supplier produc want choos singl supplier use box total wast space minim packag box defin space wast size box size packag total wast space sum space wast box exampl fit packag size supplier offer box size fit packag size2 size3 box size4 packag size5 box size8 would result wast return minimum total wast space choos box supplier optim imposs fit packag insid box sinc answer may larg return modulo exampl input packag box output explan optim choos first supplier use size4 box size8 box total wast exampl input packag box output explan box packag size fit exampl input packag box output explan optim choos third supplier use size5 box size10 box size14 box total wast constraint packageslength boxeslength packagesi boxesjlength boxesjk sumboxesjlength element boxesj distinct ","1422":"2d integ array rang integ left right rangesi starti endi repres inclus interv starti endi return true integ inclus rang left right cover least interv rang return fals otherwis integ cover interv rangesi starti endi starti endi exampl input rang left right output true explan everi integ cover cover first rang cover second rang cover third rang exampl input rang left right output fals explan cover rang constraint rangeslength starti endi left right ","1423":"student class number teacher give student problem start student number student number teacher reach student number teacher restart process start student number 0index integ array chalk integ initi piec chalk student number problem solv use chalki piec chalk solv problem howev current number chalk piec strictli less chalki student number ask replac chalk return index student replac chalk piec exampl input chalk output explan student go turn follow student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number enough chalk replac exampl input chalk output explan student go turn follow student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number use chalk student number enough chalk replac constraint chalklength chalki ","1424":"magic squar grid fill integ everi row sum everi column sum diagon sum equal integ magic squar distinct everi grid trivial magic squar integ grid return size ie side length largest magic squar found within grid exampl input grid output explan largest magic squar size everi row sum column sum diagon sum magic squar equal row sum column sum diagon sum exampl input grid output constraint gridlength gridilength gridij ","1425":"valid boolean express string express consist charact bitwis oper bitwis oper exampl valid valid express return minimum cost chang final valu express exampl express valu want appli oper new express evalu cost chang final valu express number oper perform express type oper describ follow turn turn turn turn note take preced order calcul evalu parenthes first lefttoright order exampl input express output explan turn chang use oper new express evalu exampl input express output explan turn use oper new express evalu exampl input express output explan turn use oper new express evalu constraint expressionlength express contain parenthes properli match empti parenthes ie substr express ","1426":"array string word 0index oper pick distinct indic wordsi nonempti string move charact wordsi posit wordsj return true make everi string word equal use number oper fals otherwis exampl input word abcaabcbc output true explan move first words1 front words2 make words1 abc words2 abc string equal abc return true exampl input word aba output fals explan imposs make string equal use oper constraint wordslength wordsilength wordsi consist lowercas english letter ","1427":"triplet array integ 2d integ array triplet tripletsi ai bi ci describ ith triplet also integ array target describ triplet want obtain obtain target may appli follow oper triplet number time possibl choos indic 0index updat tripletsj becom maxai aj maxbi maxci cj exampl tripletsi tripletsj tripletsj updat max2 max5 max3 return true possibl obtain target triplet element triplet fals otherwis exampl input triplet target output true explan perform follow oper choos first last triplet updat last triplet max21 max57 max35 triplet target triplet element triplet exampl input triplet target output fals explan imposs element triplet exampl input triplet target output true explan perform follow oper choos first third triplet updat third triplet max21 max52 max35 triplet choos third fourth triplet updat fourth triplet max25 max52 max53 triplet target triplet element triplet constraint tripletslength tripletsilength targetlength ai bi ci ","1428":"tournament player particip player stand singl row number base initi stand posit player first player row player second player row etc tournament consist multipl round start round number round ith player front row compet ith player end row winner advanc next round number player odd current round player middl automat advanc next round exampl row consist player player compet player player compet player player automat advanc next round round winner line back row base origin order assign initi ascend order player number firstplay secondplay best tournament win player compet player compet either might win thu may choos outcom round integ firstplay secondplay return integ array contain valu earliest possibl round number latest possibl round number player compet respect exampl input firstplay secondplay output explan possibl scenario lead earliest round number first round second round third round possibl scenario lead latest round number first round second round third round fourth round exampl input firstplay secondplay output explan player number compet first round way make compet round constraint firstplay secondplay ","1429":"peak element 2d grid element strictli greater adjac neighbor left right top bottom 0index matrix mat adjac cell equal find peak element matij return length array ij may assum entir matrix surround outer perimet valu cell must write algorithm run om logn logm time exampl input mat output explan peak element accept answer exampl input mat output explan peak element accept answer constraint matlength matilength matij adjac cell equal ","1430":"string num repres larg integ return largestvalu odd integ string nonempti substr num empti string odd integ exist substr contigu sequenc charact within string exampl input num output explan nonempti substr odd number exampl input num output explan odd number exampl input num output explan alreadi odd number constraint numlength num consist digit contain lead zero ","1431":"particip onlin chess tournament chess round start everi minut first round day start everi minut new round start exampl second round start fourth round start seventh round start string logintim logouttim logintim time login game logouttim time logout game logouttim earlier logintim mean play logintim midnight midnight logouttim return number full chess round play tournament note time 24hour clock mean first round day start last round day start exampl input logintim logouttim output explan play full round play full round log began play full round log end exampl input logintim logouttim output explan play full round full round constraint logintim logouttim format hhmm logintim logouttim equal ","1432":"binari matric grid1 grid2 contain repres water repres land island group connect 4direct horizont vertic cell outsid grid consid water cell island grid2 consid subisland island grid1 contain cell make island grid2 return number island grid2 consid subisland exampl input grid1 grid2 output explan pictur grid left grid1 grid right grid2 color red grid2 consid part subisland subisland exampl input grid1 grid2 output explan pictur grid left grid1 grid right grid2 color red grid2 consid part subisland subisland constraint grid1length grid2length grid1ilength grid2ilength grid1ij grid2ij either ","1433":"minimum absolut differ array defin minimum valu ai aj alength ai aj element minimum absolut differ exampl minimum absolut differ array note ai aj must differ integ array num array queri queriesi li ri queri comput minimum absolut differ subarray numsliri contain element num 0base indic li ri inclus return array an ansi answer ith queri subarray contigu sequenc element array valu defin exampl input num queri output explan queri process follow queries0 subarray minimum absolut differ queries1 subarray minimum absolut differ queries2 subarray minimum absolut differ queries3 subarray minimum absolut differ exampl input num queri output explan queri process follow queries0 subarray minimum absolut differ element queries1 subarray minimum absolut differ queries2 subarray minimum absolut differ queries3 subarray minimum absolut differ constraint numslength numsi querieslength li ri numslength ","1434":"sql schema panda schema ","1435":"0index integ array num return true made strictli increas remov exactli element fals otherwis array alreadi strictli increas return true array num strictli increas numsi numsi index numslength exampl input num output true explan remov index num becom strictli increas return true exampl input num output fals explan result remov element index result remov element index result remov element index result remov element index result array strictli increas return fals exampl input num output fals explan result remov element strictli increas return fals constraint numslength numsi ","1436":"string part perform follow oper occurr substr part remov find leftmost occurr substr part remov return remov occurr part substr contigu sequenc charact string exampl input daabcbaabcbc part abc output dab explan follow oper done daabcbaabcbc remov abc start index dabaabcbc dabaabcbc remov abc start index dababc dababc remov abc start index dab occurr abc exampl input axxxxyyyyb part xy output ab explan follow oper done axxxxyyyyb remov xy start index axxxyyyb axxxyyyb remov xy start index axxyyb axxyyb remov xy start index remov xy start index ab occurr xy constraint slength partlength part consist lowercas english letter ","1437":"altern sum 0index array defin sum element even indic minu sum element odd indic exampl altern sum array num return maximum altern sum subsequ num reindex element subsequ subsequ array new array gener origin array delet element possibl none without chang remain element rel order exampl subsequ underlin element exampl input num output explan optim choos subsequ altern sum exampl input num output explan optim choos subsequ altern sum exampl input num output explan optim choos subsequ altern sum constraint numslength numsi ","1438":"movi rent compani consist shop want implement rent system support search book return movi system also support gener report current rent movi movi 2d integ array entri entriesi shopi moviei pricei indic copi movi moviei shop shopi rental price pricei shop carri copi movi moviei system support follow function search find cheapest shop unrent copi movi shop sort price ascend order case tie smaller shopi appear first less match shop return shop unrent copi empti list return rent rent unrent copi movi shop drop drop previous rent copi movi shop report return cheapest rent movi possibl movi id 2d list re resj shopj moviej describ jth cheapest rent movi moviej rent shop shopj movi re sort price ascend order case tie smaller shopj appear first still tie smaller moviej appear first fewer rent movi return movi current rent empti list return implement movierentingsystem class movierentingsystemint int entri initi movierentingsystem object shop movi entri listinteg searchint movi return list shop unrent copi movi describ void rentint shop int movi rent movi shop void dropint shop int movi drop previous rent movi shop listlistinteg report return list cheapest rent movi describ note test case gener rent call shop unrent copi movi drop call shop previous rent movi exampl input movierentingsystem search rent rent report drop search output null null null null explan movierentingsystem movierentingsystem new movierentingsystem3 movierentingsystemsearch1 return movi id unrent shop shop cheapest shop price order shop number movierentingsystemrent0 rent movi shop unrent movi shop movierentingsystemrent1 rent movi shop unrent movi shop movierentingsystemreport return movi shop cheapest follow movi shop movierentingsystemdrop1 drop movi shop unrent movi shop movierentingsystemsearch2 return movi id unrent shop shop cheapest follow shop constraint entrieslength shopi moviei pricei shop carri copi movi moviei call total made search rent drop report ","1439":"product differ pair defin exampl product differ integ array num choos distinct indic product differ pair numsw numsx numsi numsz maxim return maximum product differ exampl input num output explan choos indic first pair indic second pair product differ exampl input num output explan choos indic first pair indic second pair product differ constraint numslength numsi ","1440":"integ matrix grid even integ integ matrix compos sever layer shown imag color layer cyclic rotat matrix done cyclic rotat layer matrix cyclic rotat layer element layer take place adjac element counterclockwis direct exampl rotat shown return matrix appli cyclic rotat exampl input grid output explan figur repres grid everi state exampl input grid output explan figur repres grid everi state constraint gridlength gridilength even integ gridij ","1441":"ant task ad new room number coloni expans plan 0index integ array length prevroom prevroomi indic must build room prevroomi build room room must connect directli room alreadi built prevroom0 expans plan room built everi room reachabl room build room time travel freeli room alreadi built connect choos build room long previou room alreadi built return number differ order build room sinc answer may larg return modulo exampl input prevroom output explan way build addit room exampl input prevroom output explan way constraint prevroomlength prevroom0 prevroomi everi room reachabl room room built ","1442":"zerobas permut num 0index build array an length ansi numsnumsi numslength return zerobas permut num array distinct integ numslength inclus exampl input num output explan array an built follow an numsnums0 numsnums1 numsnums2 numsnums3 numsnums4 numsnums5 nums0 nums2 nums1 nums5 nums3 nums4 exampl input num output explan array an built follow an numsnums0 numsnums1 numsnums2 numsnums3 numsnums4 numsnums5 nums5 nums0 nums1 nums2 nums3 nums4 constraint numslength numsi numslength element num distinct followup solv without use extra space ie memori ","1443":"play video game defend citi group monster 0index integ array dist size disti initi distanc kilomet ith monster citi monster walk toward citi constant speed speed monster integ array speed size speedi speed ith monster kilomet per minut weapon fulli charg elimin singl monster howev weapon take minut charg weapon fulli charg start lose monster reach citi monster reach citi exact moment weapon fulli charg count loss game end use weapon return maximum number monster elimin lose elimin monster reach citi exampl input dist speed output explan begin distanc monster elimin first monster minut distanc monster x23 elimin second monster minut distanc monster xx2 elimin third monster monster elimin exampl input dist speed output explan begin distanc monster elimin first monster minut distanc monster x012 lose elimin monster exampl input dist speed output explan begin distanc monster elimin first monster minut distanc monster x02 lose elimin monster constraint distlength speedlength disti speedi ","1444":"digit string good digit 0index even indic even digit odd indic prime exampl good digit even posit even digit odd posit prime howev good even index even integ return total number good digit string length sinc answer may larg return modulo digit string string consist digit may contain lead zero exampl input output explan good number length exampl input output exampl input output constraint ","1445":"countri citi number countri road connect everi pair citi friend number travel countri take path consist citi path repres integ array contain visit citi order path may contain citi citi list consecut integ 2d integ array path pathsi integ array repres path ith friend return length longest common subpath share everi friend path common subpath subpath path contigu sequenc citi within path exampl input path output explan longest common subpath exampl input path output explan common subpath share path exampl input path output explan possibl longest common subpath length constraint pathslength sumpathsilength pathsij citi list multipl time consecut pathsi ","1446":"squar tripl abc tripl integ c2 integ return number squar tripl exampl input output explan squar tripl exampl input output explan squar tripl constraint ","1447":"matrix maze 0index empti cell repres wall repres also entranc maze entranc entrancerow entrancecol denot row column cell initi stand step move cell left right step cell wall step outsid maze goal find nearest exit entranc exit defin empti cell border maze entranc count exit return number step shortest path entranc nearest exit path exist exampl input maze entranc output explan exit maze initi entranc cell reach move step left reach move step imposs reach entranc thu nearest exit step away exampl input maze entranc output explan exit maze count exit sinc entranc cell initi entranc cell reach move step right thu nearest exit step away exampl input maze entranc output explan exit maze constraint mazelength mazeilength mazeij either entrancelength entrancerow entrancecol entranc alway empti cell ","1448":"countri citi number citi connect bidirect road road repres 2d integ array edg edgesi xi yi timei denot road citi xi yi take timei minut travel may multipl road differ travel time connect citi road connect citi time pass citi must pay pass fee repres 0index integ array passingfe length passingfeesj amount dollar must pay pass citi begin citi want reach citi maxtim minut less cost journey summat pass fee citi pass moment journey includ sourc destin citi maxtim edg passingfe return minimum cost complet journey complet within maxtim minut exampl input maxtim edg passingfe output explan path take take minut worth pass fee exampl input maxtim edg passingfe output explan path take take minut worth pass fee take path sinc would take long exampl input maxtim edg passingfe output explan way reach citi citi within minut constraint maxtim passingfeeslength edgeslength xi yi timei passingfeesj graph may contain multipl edg node graph contain self loop ","1449":"integ array num length want creat array an length ansi numsi ansi numsi 0index specif an concaten num array return array an exampl input num output explan array an form follow an nums0nums1nums2nums0nums1nums2 an exampl input num output explan array an form follow an nums0nums1nums2nums3nums0nums1nums2nums3 an constraint numslength numsi ","1450":"string return number uniqu palindrom length subsequ note even multipl way obtain subsequ still count palindrom string read forward backward subsequ string new string gener origin string charact none delet without chang rel order remain charact exampl ace subsequ abcd exampl input aabca output explan palindrom subsequ length aba subsequ aabca aaa subsequ aabca aca subsequ aabca exampl input adc output explan palindrom subsequ length adc exampl input bbcbaba output explan palindrom subsequ length bbb subsequ bbcbaba bcb subsequ bbcbaba bab subsequ bbcbaba aba subsequ bbcbaba constraint slength consist lowercas english letter ","1451":"integ consid grid cell initi white paint cell red green blue cell must paint return number way color grid adjac cell color sinc answer larg return modulo exampl input output explan possibl color shown imag exampl input output explan possibl color shown imag exampl input output constraint ","1452":"sql schema panda schema ","1453":"malfunct keyboard letter key work key keyboard work properli string text word separ singl space lead trail space string brokenlett distinct letter key broken return number word text fulli type use keyboard exampl input text hello world brokenlett ad output explan type world key broken exampl input text leet code brokenlett output explan type leet key broken exampl input text leet code brokenlett e output explan type either word e key broken constraint textlength brokenletterslength text consist word separ singl space without lead trail space word consist lowercas english letter brokenlett consist distinct lowercas english letter ","1454":"strictli increas integ array rung repres height rung ladder current floor height want reach last rung also integ dist climb next highest rung distanc current floor rung next rung dist abl insert rung posit integ height rung alreadi return minimum number rung must ad ladder order climb last rung exampl input rung dist output explan current reach last rung add rung height climb ladder ladder rung exampl input rung dist output explan ladder climb without ad addit rung exampl input rung dist output explan current reach first rung ground add rung height climb ladder ladder rung constraint rungslength rungsi dist rung strictli increas ","1455":"integ matrix point 0index start point want maxim number point get matrix gain point must pick cell row pick cell coordin add pointsrc score howev lose point pick cell far cell pick previou row everi adjac row pick cell coordin c1 c2 subtract absc1 c2 score return maximum number point achiev absx defin exampl input point output explan blue cell denot optim cell pick coordin add score howev must subtract abs2 abs1 score final score exampl input point output explan blue cell denot optim cell pick coordin add score howev must subtract abs1 abs1 score final score constraint pointslength pointsrlength pointsrc ","1456":"root tree consist node number node number denot uniqu genet valu ie genet valu node genet differ genet valu defin bitwisexor valu integ array parent parentsi parent node node root tree parentsx also array queri queriesi nodei vali queri find maximum genet differ vali pi pi genet valu node path nodei root includ nodei root formal want maxim vali pi return array an ansi answer ith queri exampl input parent queri output explan queri process follow node maximum genet differ differ node maximum genet differ differ node maximum genet differ differ exampl input parent queri output explan queri process follow node maximum genet differ differ node maximum genet differ differ node maximum genet differ differ constraint parentslength parentsi parentslength everi node root parentsroot querieslength nodei parentslength vali ","1457":"string return true good string fals otherwis string good charact appear number occurr ie frequenc exampl input abacbc output true explan charact appear charact occur time exampl input aaabb output fals explan charact appear occur time occur time number time constraint slength consist lowercas english letter ","1458":"parti friend number attend infinit number chair parti number infin friend arriv parti sit unoccupi chair smallest number exampl chair occupi friend come sit chair number friend leav parti chair becom unoccupi moment leav anoth friend arriv moment sit chair 0index 2d integ array time timesi arrivali leavingi indic arriv leav time ith friend respect integ targetfriend arriv time distinct return chair number friend number targetfriend sit exampl input time targetfriend output explan friend arriv time sit chair friend arriv time sit chair friend leav time chair becom empti friend leav time chair becom empti friend arriv time sit chair sinc friend sat chair return exampl input time targetfriend output explan friend arriv time sit chair friend arriv time sit chair friend arriv time sit chair friend leav time chair becom empti friend leav time chair becom empti friend leav time chair becom empti sinc friend sat chair return constraint timeslength timesilength arrivali leavingi targetfriend arrivali time distinct ","1459":"long thin paint repres number line paint paint multipl overlap segment segment paint uniqu color 2d integ array segment segmentsi starti endi colori repres halfclos segment starti endi colori color color overlap segment paint mix paint color mix form new color repres set mix color exampl color mix result mix color sake simplic output sum element set rather full set want describ paint minimum number nonoverlap halfclos segment mix color segment repres 2d array paint paintingj leftj rightj mixj describ halfclos segment leftj rightj mix color sum mixj exampl paint creat segment describ paint color sum first second segment color second segment return 2d array paint describ finish paint exclud part paint may return segment order halfclos segment section number line point includ point includ point exampl input segment output explan paint describ follow color sum first third segment color sum second third segment exampl input segment output explan paint describ follow color first segment color sum first second segment color second segment color third segment exampl input segment output explan paint describ follow color sum first second segment color sum third fourth segment note return singl segment incorrect mix color set differ constraint segmentslength segmentsilength starti endi colori colori distinct ","1460":"peopl stand queue number left right order array height distinct integ heightsi repres height ith person person see anoth person right queue everybodi shorter formal ith person see jth person minheightsi heightsj maxheightsi1 heightsi2 heightsj1 return array answer length answeri number peopl ith person see right queue exampl input height output explan person see person person see person person see person person see person person see person person see sinc nobodi right exampl input height output constraint heightslength heightsi valu height uniqu ","1461":"string consist lowercas english letter integ task convert string integ special process transform sum digit repeatedli time specif perform follow step convert integ replac letter posit alphabet ie replac transform integ replac sum digit repeat transform oper step time total exampl zbax result integ would follow oper convert zbax transform transform return result integ perform oper describ exampl input iiii output explan oper follow convert iiii transform thu result integ exampl input leetcod output explan oper follow convert leetcod transform transform thu result integ exampl input zbax output constraint slength consist lowercas english letter ","1462":"string num repres larg integ also 0index integ array chang length map digit anoth digit formal digit map digit chang may choos mutat singl substr num mutat substr replac digit numi digit map chang ie replac numi changenumi return string repres largest possibl integ mutat choos singl substr num substr contigu sequenc charact within string exampl input num chang output explan replac substr map change1 thu becom largest number creat return exampl input num chang output explan replac substr map change0 map change2 map change1 thu becom largest number creat return exampl input num chang output explan alreadi largest number creat return constraint numlength num consist digit changelength chang ","1463":"","1464":"due bug mani duplic folder file system 2d array path pathsi array repres absolut path ith folder file system exampl repres path onetwothre folder necessarili level ident contain nonempti set ident subfold underli subfold structur folder need root level ident folder ident mark folder well subfold exampl folder file structur ident well subfold mark ax az howev file structur also includ path folder would ident note ax would still consid ident even ad folder ident folder subfold mark file system delet file system run delet folder becom ident initi delet delet return 2d array an contain path remain folder delet mark folder path may return order exampl input path acdabcbda output dda explan file structur shown folder subfold mark delet contain empti folder name exampl input path acabcbabxabxywwi output ccbaab explan file structur shown folder abx subfold mark delet contain empti folder name note folder ident delet delet mark beforehand exampl input path abcdca output ccdaab explan folder uniqu file system note return array differ order order matter constraint pathslength pathsilength pathsijlength sumpathsijlength pathij consist lowercas english letter path lead folder folder root level parent folder also input ","1465":"garden repres infinit 2d grid appl tree plant everi integ coordin appl tree plant integ coordin appl grow buy axisalign squar plot land center integ neededappl return minimum perimet plot least neededappl appl insid perimet plot valu defin exampl input neededappl output explan squar plot side length contain appl howev squar plot side length appl insid depict imag perimet exampl input neededappl output exampl input neededappl output constraint neededappl ","1466":"sequenc special consist posit number follow posit number posit number exampl special contrast special array num consist integ return number differ subsequ special sinc answer may larg return modulo subsequ array sequenc deriv array delet element without chang order remain element subsequ differ set indic chosen differ exampl input num output explan special subsequ bold exampl input num output explan special subsequ exampl input num output explan special subsequ bold constraint numslength numsi ","1467":"fanci string string consecut charact equal string delet minimum possibl number charact make fanci return final string delet shown answer alway uniqu exampl input leeetcod output leetcod explan remov e first group es creat leetcod consecut charact equal return leetcod exampl input aaabaaaa output aabaa explan remov first group creat aabaaaa remov second group creat aabaa consecut charact equal return aabaa exampl input aab output aab explan consecut charact equal return aab constraint slength consist lowercas english letter ","1468":"0index grid board boardrc repres cell game board board free cell repres white cell repres black cell repres move game consist choos free cell chang color play either white black howev move legal chang cell becom endpoint good line horizont vertic diagon good line line cell includ endpoint endpoint line color remain cell middl opposit color cell line free find exampl good line figur integ rmove cmove charact color repres color play white black return true chang cell rmove cmove color color legal move fals legal exampl input board bwwwwbbwwwbbbw rmove cmove color output true explan repres color blue white black respect cell rmove cmove mark good line chosen cell endpoint annot red rectangl exampl input board bwwwbbwwb rmove cmove color output fals explan good line chosen cell middl cell good line chosen cell endpoint constraint boardlength boardrlength rmove cmove boardrmovecmov color either ","1469":"current design dynam array 0index integ array num numsi number element array time addit integ maximum number time resiz array size size array time sizet must least numst need enough space array hold element space wast time defin sizet numst total space wast sum space wast across everi time numslength return minimum total space wast resiz array time note array size start count toward number resiz oper exampl input num output explan size set initi size total wast space exampl input num output explan size set initi size resiz time total wast space exampl input num output explan size set initi size resiz time resiz time total wast space constraint numslength numsi numslength ","1470":"0index string task find nonintersect palindrom substr odd length product length maxim formal want choos integ slength substr sij skl palindrom odd length sij denot substr index index inclus return maximum possibl product length nonintersect palindrom substr palindrom string forward backward substr contigu sequenc charact string exampl input ababbb output explan substr aba bbb palindrom odd length product exampl input zaaaxbbbi output explan substr aaa bbb palindrom odd length product constraint slength consist lowercas english letter ","1471":"string array string word determin whether prefix string word string prefix string word made concaten first string word posit larger wordslength return true prefix string word fals otherwis exampl input iloveleetcod word iloveleetcodeappl output true explan made concaten love leetcod togeth exampl input iloveleetcod word applesiloveleetcod output fals explan imposs make use prefix arr constraint wordslength wordsilength slength wordsi lowercas english letter ","1472":"0index integ array pile pilesi repres number stone ith pile integ appli follow oper exactli time choos pilesi remov floorpilesi stone notic appli oper pile return minimum possibl total number stone remain appli oper floorx greatest integ smaller equal ie round exampl input pile output explan step possibl scenario appli oper pile result pile appli oper pile result pile total number stone exampl input pile output explan step possibl scenario appli oper pile result pile appli oper pile result pile appli oper pile result pile total number stone constraint pileslength pilesi ","1473":"0index string even length string consist exactli open bracket close bracket string call balanc empti string written ab balanc string written balanc string may swap bracket indic number time return minimum number swap make balanc exampl input output explan make string balanc swap index index result string exampl input output explan follow make string balanc swap index index swap index index result string exampl input output explan string alreadi balanc constraint slength even si either number open bracket equal number close bracket equal ","1474":"want build obstacl cours 0index integ array obstacl length obstaclesi describ height ith obstacl everi index inclus find length longest obstacl cours obstacl choos number obstacl inclus must includ ith obstacl cours must put chosen obstacl order appear obstacl everi obstacl except first taller height obstacl immedi return array an length ansi length longest obstacl cours index describ exampl input obstacl output explan longest valid obstacl cours posit length length length length exampl input obstacl output explan longest valid obstacl cours posit length length length exampl input obstacl output explan longest valid obstacl cours posit length length length also valid length also valid length also valid length constraint obstacleslength obstaclesi ","1475":"sql schema panda schema ","1476":"array string pattern string word return number string pattern exist substr word substr contigu sequenc charact within string exampl input pattern aabcbcd word abc output explan appear substr abc abc appear substr abc appear substr abc appear substr abc string pattern appear substr word exampl input pattern abc word aaaaabbbbb output explan appear substr aaaaabbbbb appear substr aaaaabbbbb appear substr aaaaabbbbb string pattern appear substr word exampl input pattern aaa word ab output explan pattern appear substr word ab constraint patternslength patternsilength wordlength patternsi word lowercas english letter ","1477":"0index array num distinct integ want rearrang element array everi element rearrang array equal averag neighbor formal rearrang array properti everi rang numslength numsi1 numsi1 equal numsi return rearrang num meet requir exampl input num output explan numsi averag neighbor numsi averag neighbor numsi averag neighbor exampl input num output explan numsi averag neighbor numsi averag neighbor numsi averag neighbor constraint numslength numsi ","1478":"posit integ consid array num 1index consist integ inclus rang binari represent allow follow oper number time choos element num choos bit swap correspond bit correspond bit refer bit posit integ exampl swap bit right find minimum nonzero product num perform oper number time return product modulo note answer minimum product modulo oper done exampl input output explan num element product equal element exampl input output explan num swap would either make product stay thu array product alreadi minim exampl input output explan num first oper swap leftmost bit second fifth element result array second oper swap middl bit third fourth element result array array product minimum possibl product constraint ","1479":"1base binari matrix repres land repres water integ row col repres number row column matrix respect initi day entir matrix land howev day new cell becom flood water 1base 2d array cell cellsi ri ci repres ith day cell row column 1base coordin cover water ie chang want find last day possibl walk top bottom walk land cell start cell top row end cell bottom row travel cardin direct left right return last day possibl walk top bottom walk land cell exampl input row col cell output explan imag depict matrix chang day start day last day possibl cross top bottom day exampl input row col cell output explan imag depict matrix chang day start day last day possibl cross top bottom day exampl input row col cell output explan imag depict matrix chang day start day last day possibl cross top bottom day constraint row col row col cellslength row col ri row ci col valu cell uniqu ","1480":"bidirect graph vertic vertex label inclus edg graph repres 2d integ array edg edgesi ui vi denot bidirect edg vertex ui vertex vi everi vertex pair connect edg vertex edg want determin valid path exist vertex sourc vertex destin edg integ sourc destin return true valid path sourc destin fals otherwis exampl input edg sourc destin output true explan path vertex vertex exampl input edg sourc destin output fals explan path vertex vertex constraint edgeslength edgesilength ui vi ui vi sourc destin duplic edg self edg ","1481":"special typewrit lowercas english letter arrang circl pointer charact type pointer point charact pointer initi point charact second may perform follow oper move pointer charact counterclockwis clockwis type charact pointer current string word return minimum number second type charact word exampl input word abc output explan charact print follow type charact second sinc pointer initi move pointer clockwis second type charact second move pointer clockwis second type charact second exampl input word bza output explan charact print follow move pointer clockwis second type charact second move pointer counterclockwis second type charact second move pointer clockwis second type charact second exampl input word zjpc output explan charact print follow move pointer counterclockwis second type charact second move pointer clockwis second type charact second move pointer clockwis second type charact second move pointer counterclockwis second type charact second constraint wordlength word consist lowercas english letter ","1482":"citi consist intersect number bidirect road intersect input gener reach intersect intersect road intersect integ 2d integ array road roadsi ui vi timei mean road intersect ui vi take timei minut travel want know mani way travel intersect intersect shortest amount time return number way arriv destin shortest amount time sinc answer may larg return modulo exampl input road output explan shortest amount time take go intersect intersect minut way get minut exampl input road output explan way go intersect intersect take minut constraint roadslength roadsilength ui vi timei ui vi road connect intersect reach intersect intersect ","1483":"wrote mani posit integ string call num howev realiz forgot add comma seper differ number rememb list integ nondecreas integ lead zero return number possibl list integ could written get string num sinc answer may larg return modulo exampl input num output explan could written number exampl input num output explan number lead zero number must posit exampl input num output explan number lead zero number must posit constraint numlength num consist digit ","1484":"sql schema panda schema ","1485":"integ array num return greatest common divisor smallest number largest number num greatest common divisor number largest posit integ evenli divid number exampl input num output explan smallest number num largest number num greatest common divisor exampl input num output explan smallest number num largest number num greatest common divisor exampl input num output explan smallest number num largest number num greatest common divisor constraint numslength numsi ","1486":"array string num contain uniqu binari string length return binari string length appear num multipl answer may return exampl input num output explan appear num would also correct exampl input num output explan appear num would also correct exampl input num output explan appear num would also correct constraint numslength numsilength numsi either string num uniqu ","1487":"integ matrix mat integ target choos integ row matrix absolut differ target sum chosen element minim return minimum absolut differ absolut differ number absolut valu exampl input mat target output explan possibl choic choos first row choos second row choos third row sum chosen element equal target absolut differ exampl input mat target output explan best possibl choic choos first row choos second row choos third row sum chosen element absolut differ exampl input mat target output explan best choic choos first row absolut differ constraint matlength matilength matij target ","1488":"integ repres length unknown array tri recov also array sum contain valu subset sum unknown array particular order return array an length repres unknown array multipl answer exist return array sub subset array arr sub obtain arr delet possibl element arr sum element sub possibl subset sum arr sum empti array consid note test case gener alway least correct answer exampl input sum output explan abl achiev subset sum sum sum sum sum sum sum sum sum note permut also permut also accept exampl input sum output explan correct answer exampl input sum output explan abl achiev subset sum constraint sumslength sumsi ","1489":"0index integ array num numsi repres score ith student also integ pick score student array differ highest lowest score minim return minimum possibl differ exampl input num output explan way pick score student differ highest lowest score minimum possibl differ exampl input num output explan way pick score student differ highest lowest score differ highest lowest score differ highest lowest score differ highest lowest score differ highest lowest score differ highest lowest score minimum possibl differ constraint numslength numsi ","1490":"array string num integ string num repres integ without lead zero return string repres kth largest integ num note duplic number count distinctli exampl num first largest integ secondlargest integ thirdlargest integ exampl input num output explan number num sort nondecreas order 4th largest integ num exampl input num output explan number num sort nondecreas order 3rd largest integ num exampl input num output explan number num sort nondecreas order largest integ num constraint numslength numsilength numsi consist digit numsi lead zero ","1491":"task assign task time repres integ array task length ith task take tasksi hour finish work session work sessiontim consecut hour take break finish task way satisfi follow condit start task work session must complet work session start new task immedi finish previou may complet task order task sessiontim return minimum number work session need finish task follow condit test gener sessiontim greater equal maximum element tasksi exampl input task sessiontim output explan finish task work session first work session finish first second task hour second work session finish third task hour exampl input task sessiontim output explan finish task work session first work session finish task except last hour second work session finish last task hour exampl input task sessiontim output explan finish task work session constraint taskslength tasksi maxtasksi sessiontim ","1492":"binari string binari subsequ binari consid good empti lead zero except find number uniqu good subsequ binari exampl binari good subsequ uniqu good subsequ note subsequ good lead zero return number uniqu good subsequ binari sinc answer may larg return modulo subsequ sequenc deriv anoth sequenc delet element without chang order remain element exampl input binari output explan good subsequ binari uniqu good subsequ exampl input binari output explan good subsequ binari uniqu good subsequ exampl input binari output explan good subsequ binari uniqu good subsequ constraint binarylength binari consist ","1493":"0index integ array num find leftmost middleindex ie smallest amongst possibl one middleindex index nums0 nums1 numsmiddleindex1 numsmiddleindex1 numsmiddleindex2 numsnumslength1 middleindex left side sum consid similarli middleindex numslength right side sum consid return leftmost middleindex satisfi condit index exampl input num output explan sum number index sum number index exampl input num output explan sum number index sum number index exampl input num output explan valid middleindex constraint numslength numsi note question httpsleetcodecomproblemsfindpivotindex ","1494":"0index binari matrix land repres hectar forest land repres hectar farmland keep land organ design rectangular area hectar entir farmland rectangular area call group group adjac mean farmland group fourdirect adjac anoth farmland differ group land repres coordin system top left corner land bottom right corner land find coordin top left bottom right corner group farmland group farmland top left corner c1 bottom right corner c2 repres 4length array c1 c2 return 2d array contain 4length array describ group farmland land group farmland return empti array may return answer order exampl input land output explan first group top left corner land00 bottom right corner land00 second group top left corner land11 bottom right corner land22 exampl input land output explan first group top left corner land00 bottom right corner land11 exampl input land output explan group farmland constraint landlength landilength land consist group farmland rectangular shape ","1495":"tree node number form parent array parent parenti parent ith node root tree node parent0 sinc parent want design data structur allow user lock unlock upgrad node tree data structur support follow function lock lock node user prevent user lock node may lock node use function node unlock unlock unlock node user may unlock node use function current lock user upgrad lock node user unlock descend regardless lock may upgrad node condit true node unlock least lock descend user lock ancestor implement lockingtre class lockingtreeint parent initi data structur parent array lockint num int user return true possibl user id user lock node num fals otherwis possibl node num becom lock user id user unlockint num int user return true possibl user id user unlock node num fals otherwis possibl node num becom unlock upgradeint num int user return true possibl user id user upgrad node num fals otherwis possibl node num upgrad exampl input lockingtre lock unlock unlock lock upgrad lock output null true fals true true true fals explan lockingtre lockingtre new lockingtree1 lockingtreelock2 return true node unlock node lock user lockingtreeunlock2 return fals user unlock node lock user lockingtreeunlock2 return true node previous lock user node unlock lockingtreelock4 return true node unlock node lock user lockingtreeupgrade0 return true node unlock least lock descend node node lock user node unlock lockingtreelock0 return fals node alreadi lock constraint parentlength parenti parent0 num user parent repres valid tree call total made lock unlock upgrad ","1496":"integ array num call subset num good product repres product distinct prime number exampl num good subset product respect good subset product respect return number differ good subset num modulo subset num array obtain delet possibl none element num subset differ chosen indic delet differ exampl input num output explan good subset product product distinct prime product product distinct prime product product distinct prime product product distinct prime product product distinct prime product product distinct prime exampl input num output explan good subset product product distinct prime product product distinct prime product product distinct prime product product distinct prime product product distinct prime constraint numslength numsi ","1497":"0index integ array num return number distinct quadruplet numsa numsb numsc numsd exampl input num output explan quadruplet satisfi requir exampl input num output explan quadruplet exampl input num output explan quadruplet satisfi requir constraint numslength numsi ","1498":"play game contain multipl charact charact main properti attack defens 2d integ array properti propertiesi attacki defensei repres properti ith charact game charact said weak charact attack defens level strictli greater charact attack defens level formal charact said weak exist anoth charact attackj attacki defensej defensei return number weak charact exampl input properti output explan charact strictli greater attack defens exampl input properti output explan first charact weak second charact strictli greater attack defens exampl input properti output explan third charact weak second charact strictli greater attack defens constraint propertieslength propertiesilength attacki defensei ","1499":"room need visit label day label start go visit room day initi day visit room order visit room come day determin follow rule 0index array nextvisit length assum day visit room room odd number time includ current visit next day visit room lower equal room number specifi nextvis nextvis room even number time includ current visit next day visit room mod return label first day room shown day exist sinc answer may larg return modulo exampl input nextvisit output explan day visit room total time room odd next day visit room nextvisit0 day visit room total time room even next day visit room mod day visit room first day room exampl input nextvisit output explan room visit order day day first day room exampl input nextvisit output explan room visit order day day first day room constraint nextvisitlength nextvis ","1500":"integ array num perform follow oper number time num swap posit element numsi numsj gcdnumsi numsj gcdnumsi numsj greatest common divisor numsi numsj return true possibl sort num nondecreas order use swap method fals otherwis exampl input num output true explan sort perform follow oper swap gcd721 num swap gcd213 num exampl input num output fals explan imposs sort array swap element exampl input num output true sort perform follow oper swap gcd1015 num swap gcd153 num swap gcd1015 num constraint numslength numsi ","1501":"0index string word charact ch revers segment word start index end index first occurr ch inclus charact ch exist word noth exampl word abcdefd ch revers segment start end inclus result string dcbaefd return result string exampl input word abcdefd ch output dcbaefd explan first occurr index revers part word inclus result string dcbaefd exampl input word xyxzx ch output zxyxx explan first occurr index revers part word inclus result string zxyxx exampl input word abcd ch output abcd explan exist word revers oper result string abcd constraint wordlength word consist lowercas english letter ch lowercas english letter ","1502":"string find disjoint palindrom subsequ product length maxim subsequ disjoint pick charact index return maximum possibl product length palindrom subsequ subsequ string deriv anoth string delet charact without chang order remain charact string palindrom read forward backward exampl input leetcodecom output explan optim solut choos ete 1st subsequ cdc subsequ product length exampl input output explan optim solut choos first charact 1st subsequ second charact subsequ product length exampl input accbcaxxcxx output explan optim solut choos accca 1st subsequ xxcxx subsequ product length constraint slength consist lowercas english letter ","1503":"famili tree root consist node number 0index integ array parent parentsi parent node sinc node root parents0 genet valu repres integ inclus rang 0index integ array num numsi distinct genet valu node return array an length ansi smallest genet valu miss subtre root node subtre root node contain node descend node exampl input parent num output explan answer subtre calcul follow subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu exampl input parent num output explan answer subtre calcul follow subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu subtre contain node valu smallest miss valu exampl input parent num output explan valu miss subtre constraint parentslength numslength parentsi parents0 parent repres valid tree numsi numsi distinct ","1504":"integ array num integ return number pair numsi numsj valu defin exampl input num output explan pair absolut differ exampl input num output explan pair absolut differ exampl input num output explan pair absolut differ constraint numslength numsi ","1505":"integ array origin transform doubl array chang append twice valu everi element origin randomli shuffl result array array chang return origin chang doubl array chang doubl array return empti array element origin may return order exampl input chang output explan possibl origin array could twice valu twice valu twice valu origin array could exampl input chang output explan chang doubl array exampl input chang output explan chang doubl array constraint changedlength changedi ","1506":"integ array num oper replac element num integ num consid continu follow condit fulfil element num uniqu differ maximum element minimum element num equal numslength exampl num continu num continu return minimum number oper make num continu exampl input num output explan num alreadi continu exampl input num output explan possibl solut chang last element result array continu exampl input num output explan possibl solut chang second element chang third element chang fourth element result array continu constraint numslength numsi ","1507":"program languag oper variabl increment valu variabl decrement valu variabl initi valu array string oper contain list oper return final valu perform oper exampl input oper output explan oper perform follow initi decrement increment increment exampl input oper output explan oper perform follow initi increment increment increment exampl input oper xxxx output explan oper perform follow initi increment increment decrement decrement constraint operationslength operationsi either ","1508":"0index integ array num index numslength beauti numsi equal numsj numsi numsk numslength numsi numsi numsi previou condit satisfi none previou condit hold return sum beauti numsi numslength exampl input num output explan index rang beauti nums1 equal exampl input num output explan index rang beauti nums1 equal beauti nums2 equal exampl input num output explan index rang beauti nums1 equal constraint numslength numsi ","1509":"stream point xy plane design algorithm add new point stream data structur duplic point allow treat differ point queri point count number way choos point data structur point queri point form axisalign squar posit area axisalign squar squar whose edg length either parallel perpendicular xaxi yaxi implement detectsquar class detectsquar initi object empti data structur void addint point add new point point data structur int countint point count number way form axisalign squar point point describ exampl input detectsquar add add add count count add count output null null null null null explan detectsquar detectsquar new detectsquar detectsquaresadd3 detectsquaresadd11 detectsquaresadd3 detectsquarescount11 return choos first second third point detectsquarescount14 return queri point form squar point data structur detectsquaresadd11 ad duplic point allow detectsquarescount11 return choos first second third point first third fourth point constraint pointlength call total made add count ","1510":"","1511":"0index integ array num size find maximum differ numsi numsj ie numsj numsi numsi numsj return maximum differ exist return exampl input num output explan maximum differ occur numsj numsi note differ numsj numsi valid exampl input num output explan numsi numsj exampl input num output explan maximum differ occur numsj numsi constraint numslength numsi ","1512":"0index 2d array grid size gridrc repres number point posit matrix robot play game matrix robot initi start want reach robot may move right start game first robot move collect point cell path cell travers path gridrc set second robot move collect point path note path may intersect anoth first robot want minim number point collect second robot contrast second robot want maxim number point collect robot play optim return number point collect second robot exampl input grid output explan optim path taken first robot shown red optim path taken second robot shown blue cell visit first robot set second robot collect point exampl input grid output explan optim path taken first robot shown red optim path taken second robot shown blue cell visit first robot set second robot collect point exampl input grid output explan optim path taken first robot shown red optim path taken second robot shown blue cell visit first robot set second robot collect point constraint gridlength gridrlength gridrc ","1513":"matrix board repres current state crossword puzzl crossword contain lowercas english letter solv word repres empti cell repres block cell word place horizont left right right left vertic top bottom bottom top board occupi cell contain charact cell letter place must either empti match letter alreadi board must empti cell lowercas letter directli left right word word place horizont must empti cell lowercas letter directli word word place vertic string word return true word place board fals otherwis exampl input board word abc output true explan word abc place shown top bottom exampl input board word ac output fals explan imposs place word alway spacelett exampl input board word ca output true explan word ca place shown right left constraint boardlength boardilength boardij lowercas english letter wordlength maxm word contain lowercas english letter ","1514":"string contain digit addit symbol multipl symbol repres valid math express singl digit number eg express elementari school student student instruct get answer express follow order oper comput multipl read left right comput addit read left right integ array answer length submit answer student particular order ask grade answer follow rule answer equal correct answer express student reward point otherwis answer could interpret student appli oper wrong order correct arithmet student reward point otherwis student reward point return sum point student exampl input answer output explan illustr correct answer express therefor student reward point student might appli oper wrong order therefor student reward point point student sum point exampl input answer output explan correct answer express therefor student reward point student might appli oper wrong order therefor student reward point point student sum point exampl input answer output explan correct answer express student incorrectli done answer would also rule grade student still reward point got correct answer point point student sum point constraint slength repres valid express contain digit integ operand express inclus rang count oper math express test data gener correct answer express rang answerslength answersi ","1515":"array digit string num digit string target return number pair indic concaten numsi numsj equal target exampl input num target output explan valid pair exampl input num target output explan valid pair exampl input num target output explan valid pair constraint numslength numsilength targetlength numsi target digit numsi target lead zero ","1516":"teacher write test truefals question denot true denot fals want confus student maxim number consecut question answer multipl true multipl fals row string answerkey answerkeyi origin answer ith question addit integ maximum number time may perform follow oper chang answer key question ie set answerkeyi return maximum number consecut answer key perform oper time exampl input answerkey ttff output explan replac make answerkey tttt consecut exampl input answerkey tfft output explan replac first make answerkey altern replac second make answerkey tfff case consecut exampl input answerkey ttfttftt output explan replac first make answerkey tttttftt altern replac second make answerkey ttfttttt case consecut constraint answerkeylength answerkeyi either ","1517":"0index integ array num length number way partit num number pivot indic satisfi condit pivot nums0 nums1 numspivot numspivot numspivot numsn also integ choos chang valu element num leav array unchang return maximum possibl number way partit num satisfi condit chang element exampl input num output explan optim approach chang nums0 array becom way partit array pivot partit exampl input num output explan optim approach leav array unchang way partit array pivot partit pivot partit exampl input num output explan optim approach chang nums2 array becom way partit array constraint numslength numsi ","1518":"string consist charact either move defin select consecut charact convert note move appli charact stay return minimum number move requir charact convert exampl input output explan ooo select charact convert move exampl input xxox output explan xxox ooox oooo select first charact first move convert select last charact convert final string contain os exampl input oooo output explan convert constraint slength si either ","1519":"observ 6side dice roll face number observ went miss observ roll fortun also calcul averag valu roll integ array roll length rollsi valu ith observ also integ mean return array length contain miss observ averag valu roll exactli mean multipl valid answer return array exist return empti array averag valu set number sum number divid note mean integ sum roll divis exampl input roll mean output explan mean roll exampl input roll mean output explan mean roll exampl input roll mean output explan imposs mean matter miss roll constraint rollslength rollsi mean ","1520":"alic bob continu game stone row stone stone associ valu integ array stone stonesi valu ith stone alic bob take turn alic start first turn player may remov stone stone player remov stone lose sum valu remov stone divis bob win automat remain stone even alic turn assum player play optim return true alic win fals bob win exampl input stone output true explan game play follow turn alic remov either stone turn bob remov remain stone sum remov stone divis therefor bob lose alic win game exampl input stone output fals explan alic remov stone sum valu remov stone sinc stone remov sum valu divis bob win game exampl input stone output fals explan bob alway win possibl way bob win shown turn alic remov second stone valu sum remov stone turn bob remov fifth stone valu sum remov stone turn alic remov fourth stone valu sum remov stone turn bob remov third stone valu sum remov stone turn alic remov first stone valu sum remov stone alic lose game sum remov stone divis bob win game constraint stoneslength stonesi ","1521":"string integ letter letter integ repetit return lexicograph smallest subsequ length letter letter appear least repetit time test case gener letter appear least repetit time subsequ string deriv anoth string delet charact without chang order remain charact string lexicograph smaller string first posit differ string letter appear earlier alphabet correspond letter exampl input leet letter e repetit output eet explan subsequ length letter e appear least time lee leet let leet let leet eet leet lexicograph smallest subsequ among eet exampl input leetcod letter e repetit output ecd explan ecd lexicograph smallest subsequ length letter e appear least time exampl input letter repetit output explan subsequ length letter appear least time constraint repetit slength consist lowercas english letter letter lowercas english letter appear least repetit time ","1522":"integ array nums1 nums2 nums3 return distinct array contain valu present least array may return valu order exampl input nums1 nums2 nums3 output explan valu present least array array nums1 nums2 exampl input nums1 nums2 nums3 output explan valu present least array nums2 nums3 nums1 nums2 nums1 nums3 exampl input nums1 nums2 nums3 output explan valu present least array constraint nums1length nums2length nums3length nums1i nums2j nums3k ","1523":"stream record particular stock record contain timestamp correspond price stock timestamp unfortun due volatil natur stock market record come order even wors record may incorrect anoth record timestamp may appear later stream correct price previou wrong record design algorithm updat price stock particular timestamp correct price previou record timestamp find latest price stock base current record latest price price latest timestamp record find maximum price stock base current record find minimum price stock base current record implement stockpric class stockpric initi object price record void updateint timestamp int price updat price stock timestamp int current return latest price stock int maximum return maximum price stock int minimum return minimum price stock exampl input stockpric updat updat current maximum updat maximum updat minimum output null null null null null explan stockpric stockpric new stockpric stockpriceupdate1 timestamp correspond price stockpriceupdate2 timestamp correspond price stockpricecurr return latest timestamp price stockpricemaximum return maximum price timestamp stockpriceupdate1 previou timestamp wrong price updat timestamp correspond price stockpricemaximum return maximum price correct stockpriceupdate4 timestamp correspond price stockpriceminimum return minimum price timestamp constraint timestamp price call made total updat current maximum minimum current maximum minimum call updat call least ","1524":"availab seat student stand room array seat length seatsi posit ith seat also array student length studentsj posit jth student may perform follow move number time increas decreas posit ith student ie move ith student posit return minimum number move requir move student seat student seat note may multipl seat student posit begin exampl input seat student output explan student move follow first student move posit posit use move second student move posit posit use move third student move posit posit use move total move use exampl input seat student output explan student move follow first student move second student move posit posit use move third student move posit posit use move fourth student move posit posit use move total move use exampl input seat student output explan note seat posit seat posit student move follow first student move posit posit use move second student move posit posit use move third student move fourth student move total move use constraint seatslength studentslength seatsi studentsj ","1525":"piec arrang line piec color either string color length colorsi color ith piec alic bob play game take altern turn remov piec line game alic move first alic allow remov piec color neighbor also color allow remov piec color bob allow remov piec color neighbor also color allow remov piec color alic bob remov piec edg line player make move turn player lose player win assum alic bob play optim return true alic win return fals bob win exampl input color aaababb output true explan aaababb aababb alic move first remov second left sinc whose neighbor bob turn bob make move turn sinc whose neighbor thu alic win return true exampl input color output fals explan alic turn first edg line move turn thu bob win return fals exampl input color abbbbbbbaaa output fals explan abbbbbbbaaa abbbbbbbaa alic move first option remov second last right abbbbbbbaa abbbbbbaa next bob turn mani option piec remov pick alic second turn piec remov thu bob win return fals constraint colorslength color consist letter ","1526":"network server label 2d integ array edg edgesi ui vi indic messag channel server ui vi pass number messag directli second also 0index integ array patienc length server connect ie messag pass server server directli indirectli messag channel server label master server rest data server data server need send messag master server process wait repli messag move server optim everi messag take least amount time arriv master server master server process newli arriv messag instantli send repli origin server via revers path messag gone begin second data server send messag process start second begin everi second data server check receiv repli messag sent includ newli arriv repli master server resend messag period data server resend messag everi patiencei second ie data server resend messag patiencei second elaps sinc last time messag sent server otherwis resend occur server network becom idl messag pass server arriv server return earliest second start network becom idl exampl input edg patienc output explan begin second data server send messag denot master server data server send messag denot master server second messag arriv master server master server process messag instantli send repli back server receiv repli second patience1 elaps sinc server sent messag therefor resend messag server receiv repli second patience2 elaps sinc server sent messag therefor resend messag denot 2b second repli arriv server resend occur server messag arriv master server master server process messag instantli send repli back server resend messag denot 2c second repli arriv server resend occur server second repli 2d arriv server start begin second messag pass server arriv server time network becom idl exampl input edg patienc output explan data server receiv repli back begin second begin second network becom idl constraint patiencelength patience0 patiencei edgeslength min105 edgesilength ui vi ui vi duplic edg server directli indirectli reach anoth server ","1527":"sort 0index integ array nums1 nums2 well integ return kth 1base smallest product nums1i nums2j nums1length nums2length exampl input nums1 nums2 output explan smallest product nums10 nums20 nums10 nums21 smallest product exampl input nums1 nums2 output explan smallest product nums10 nums21 nums10 nums20 nums11 nums21 nums11 nums20 nums12 nums20 nums12 nums21 6th smallest product exampl input nums1 nums2 output explan smallest product nums10 nums24 nums10 nums23 nums14 nums20 3rd smallest product constraint nums1length nums2length nums1i nums2j nums1length nums2length nums1 nums2 sort ","1528":"sentenc list token separ singl space lead trail space everi token either posit number consist digit lead zero word consist lowercas english letter exampl puppi eye leg sentenc token number token puppi word string repres sentenc need check number strictli increas left right ie last number number strictli smaller number right return true fals otherwis exampl input box blue red green yellow marbl output true explan number strictli increas left right exampl input hello world output fals explan number strictli increas exampl input sunset overnight low low output fals explan number strictli increas constraint slength consist lowercas english letter space digit inclus number token inclus token separ singl space least number number posit number less lead zero contain lead trail space ","1529":"task write program popular bank autom incom transact transfer deposit withdraw bank account number initi balanc account store 0index integ array balanc 1th account initi balanc balancei execut valid transact transact valid account number amount money withdrawn transfer less equal balanc account implement bank class banklong balanc initi object 0index integ array balanc boolean transferint account1 int account2 long money transfer money dollar account number account1 account number account2 return true transact success fals otherwis boolean depositint account long money deposit money dollar account number account return true transact success fals otherwis boolean withdrawint account long money withdraw money dollar account number account return true transact success fals otherwis exampl input bank withdraw transfer deposit transfer withdraw output null true true true fals fals explan bank bank new bank10 bankwithdraw3 return true account balanc valid withdraw account banktransfer5 return true account balanc valid transfer account account bankdeposit5 return true valid deposit account account banktransfer3 return fals current balanc account invalid transfer bankwithdraw10 return fals invalid account exist constraint balancelength account account1 account2 balancei money call made function transfer deposit withdraw ","1530":"integ array num find maximum possibl bitwis subset num return number differ nonempti subset maximum bitwis array subset array obtain delet possibl element subset consid differ indic element chosen differ bitwis array equal aalength 0index exampl input num output explan maximum possibl bitwis subset subset bitwis exampl input num output explan nonempti subset bitwis total subset exampl input num output explan maximum possibl bitwis subset subset bitwis constraint numslength numsi ","1531":"citi repres bidirect connect graph vertic vertex label inclus edg graph repres 2d integ array edg edgesi ui vi denot bidirect edg vertex ui vertex vi everi vertex pair connect edg vertex edg time taken travers edg time minut vertex traffic signal chang color green red vice versa everi chang minut signal chang time enter vertex time leav vertex signal green wait vertex signal green second minimum valu defin smallest valu strictli larger minimum valu exampl second minimum valu second minimum valu edg time chang return second minimum time take go vertex vertex note go vertex number time includ assum journey start signal turn green exampl input edg time chang output explan figur left show graph blue path figur right minimum time path time taken start time elapsed0 minut time elapsed3 minut time elapsed6 henc minimum time need minut red path show path get second minimum time start time elapsed0 minut time elapsed3 minut time elapsed6 wait minut time elapsed10 minut time elapsed13 henc second minimum time minut exampl input edg time chang output explan minimum time path time minut second minimum time path time minut constraint edgeslength min2 edgesilength ui vi ui vi duplic edg vertex reach directli indirectli everi vertex time chang ","1532":"sentenc consist lowercas letter digit hyphen punctuat mark space sentenc broken token separ space token valid word follow true contain lowercas letter hyphen andor punctuat digit hyphen present must surround lowercas charact ab valid ab ab valid punctuat mark present must end token ab cd valid ab valid exampl valid word includ ab afad bac string sentenc return number valid word sentenc exampl input sentenc cat dog output explan valid word sentenc cat dog exampl input sentenc b8d output explan valid word sentenc invalid start punctuat mark b8d invalid contain digit exampl input sentenc alic bob play stonegame10 output explan valid word sentenc alic bob play stonegame10 invalid contain digit constraint sentencelength sentenc contain lowercas english letter digit least token ","1533":"integ numer balanc everi digit number exactli occurr digit integ return smallest numer balanc number strictli greater exampl input output explan numer balanc sinc digit occur time also smallest numer balanc number strictli greater exampl input output explan numer balanc sinc digit occur time digit occur time also smallest numer balanc number strictli greater note answer appear time exampl input output explan numer balanc sinc digit occur time digit occur time also smallest numer balanc number strictli greater constraint ","1534":"binari tree root consist node node label 0index integ array parent repres tree parentsi parent node sinc node root parents0 node score find score node consid node edg connect remov tree would becom nonempti subtre size subtre number node score node product size subtre return number node highest score exampl input parent output explan score node score node score node score node score node highest score node node node node highest score exampl input parent output explan score node score node score node highest score node node node highest score constraint parentslength parents0 parentsi parent repres valid binari tree ","1535":"integ indic cours label also 2d integ array relat relationsj prevcoursej nextcoursej denot cours prevcoursej complet cours nextcoursej prerequisit relationship furthermor 0index integ array time timei denot mani month take complet i1th cours must find minimum number month need complet cours follow rule may start take cours time prerequisit met number cours taken time return minimum number month need complet cours note test case gener possibl complet everi cours ie graph direct acycl graph exampl input relat time output explan figur repres graph time requir complet cours start cours cours simultan month cours take month cours take month complet respect thu earliest time start cours month total time requir month exampl input relat time output explan figur repres graph time requir complet cours start cours month complet month respect cours taken cours complet ie month complet month cours taken cours complet ie max1237 month thu minimum time need complet cours month constraint relationslength minn relationsjlength prevcoursej nextcoursej prevcoursej nextcoursej pair prevcoursej nextcoursej uniqu timelength timei graph direct acycl graph ","1536":"distinct string string present array array string arr integ return kth distinct string present arr fewer distinct string return empti string note string consid order appear array exampl input arr dbcbca output explan distinct string arr appear 1st 1st distinct string appear distinct string sinc return exampl input arr aaaaaa output aaa explan string arr distinct 1st string aaa return exampl input arr aba output explan distinct string sinc fewer distinct string return empti string constraint arrlength arrilength arri consist lowercas english letter ","1537":"0index 2d integ array event eventsi starttimei endtimei valuei ith event start starttimei end endtimei attend event receiv valu valuei choos nonoverlap event attend sum valu maxim return maximum sum note start time end time inclus attend event start end time specif attend event end time next event must start exampl input event output explan choos green event sum exampl input event output explan choos event sum exampl input event output explan choos event sum constraint eventslength eventsilength starttimei endtimei valuei ","1538":"long tabl line plate candl arrang top 0index string consist charact repres plate repres candl also 0index 2d integ array queri queriesi lefti righti denot substr sleftirighti inclus queri need find number plate candl substr plate consid candl least candl left least candl right substr exampl queri denot substr number plate candl substr plate least candl substr left right return integ array answer answeri answer ith queri exampl input queri output explan queries0 plate candl queries1 plate candl exampl input queri output explan queries0 plate candl queri plate candl constraint slength consist charact querieslength queriesilength lefti righti slength ","1539":"chessboard contain piec rook queen bishop string array piec length piecesi describ type rook queen bishop ith piec addit 2d integ array posit also length positionsi ri ci indic ith piec current 1base coordin ri ci chessboard make move piec choos destin squar piec travel toward stop rook travel horizont vertic direct c1 c1 queen travel horizont vertic diagon direct c1 c1 c1 c1 c1 c1 bishop travel diagon direct c1 c1 c1 c1 must make move everi piec board simultan move combin consist move perform piec everi second piec instantan travel squar toward destin alreadi piec start travel 0th second move combin invalid time piec occupi squar return number valid move combin note piec start squar may choos squar piec alreadi destin piec directli adjac valid move past swap posit second exampl input piec rook posit output explan imag show possibl squar piec move exampl input piec queen posit output explan imag show possibl squar piec move exampl input piec bishop posit output explan imag show possibl squar piec move constraint pieceslength positionslength piec contain string rook queen bishop queen chessboard xi yi positionsi distinct ","1540":"0index integ array num return smallest index num mod numsi index exist mod denot remaind divid exampl input num output explan mod nums0 mod nums1 mod nums2 indic mod numsi return smallest index exampl input num output explan mod nums0 mod nums1 mod nums2 mod nums3 index mod numsi exampl input num output explan index satisfi mod numsi constraint numslength numsi ","1541":"critic point link list defin either local maxima local minima node local maxima current node valu strictli greater previou node next node node local minima current node valu strictli smaller previou node next node note node local maximaminima exist previou node next node link list head return array length contain mindist maxdist mindist minimum distanc distinct critic point maxdist maximum distanc distinct critic point fewer critic point return exampl input head output explan critic point exampl input head output explan critic point third node local minima less fifth node local maxima greater sixth node local minima less minimum distanc fifth sixth node mindist maximum distanc third sixth node maxdist exampl input head output explan critic point second node local maxima greater fifth node local maxima greater minimum maximum distanc second fifth node thu mindist maxdist note last node consid local maxima next node constraint number node list rang nodev ","1542":"0index integ array num contain distinct number integ start integ goal integ initi set start want perform oper convert goal perform follow oper repeatedli number index array numslength set follow numsi numsi numsi bitwisexor note use numsi number time order oper set rang valid oper done afterward return minimum number oper need convert start goal possibl exampl input num start goal output explan go follow oper exampl input num start goal output explan go follow oper note last oper set rang valid exampl input num start goal output explan way convert constraint numslength numsi goal start start goal integ num distinct ","1543":"origin string consist lowercas english letter encod follow step arbitrarili split sequenc number nonempti substr arbitrarili choos element possibl none sequenc replac length numer string concaten sequenc encod string exampl way encod origin string abcdefghijklmnop might split sequenc ab cdefghijklmn choos second third element replac length respect sequenc becom ab concaten element sequenc get encod string ab121p encod string consist lowercas english letter digit inclus return true exist origin string could encod otherwis return fals note test case gener number consecut digit exceed exampl input internation output true explan possibl internation origin string internation split internation replac element concaten internation internation split nternationalizatio replac concaten exampl input l123e output true explan possibl leetcod origin string leetcod split e et cod e replac e concaten l123e leetcod split leet code replac concaten exampl input a5b c5b output fals explan imposs origin string encod must start letter origin string encod must start letter constraint s1length s2length digit inclus lowercas english letter number consecut digit exceed ","1544":"substr contigu nonempti sequenc charact within string vowel substr substr consist vowel e u vowel present string word return number vowel substr word exampl input word aeiouu output explan vowel substr word follow underlin aeiouu aeiouu exampl input word unicornarihan output explan vowel present vowel substr exampl input word cuaieuouac output explan vowel substr word follow underlin cuaieuouac cuaieuouac cuaieuouac cuaieuouac cuaieuouac cuaieuouac cuaieuouac constraint wordlength word consist lowercas english letter ","1545":"string word return sum number vowel e u everi substr word substr contigu nonempti sequenc charact within string note due larg constraint answer may fit sign 32bit integ pleas care calcul exampl input word aba output explan possibl substr ab aba ba vowel ab ba vowel aba vowel henc total sum vowel exampl input word abc output explan possibl substr ab abc ab abc vowel vowel henc total sum vowel exampl input word ltcd output explan vowel substr ltcd constraint wordlength word consist lowercas english letter ","1546":"integ indic specialti retail store product type vari amount 0index integ array quantiti quantitiesi repres number product ith product type need distribut product retail store follow rule store product type amount distribut store number product possibl let repres maximum number product store want small possibl ie want minim maximum number product store return minimum possibl exampl input quantiti output explan optim way product type distribut first store amount product type distribut store amount maximum number product store max2 exampl input quantiti output explan optim way product type distribut first store amount product type distribut next store amount product type distribut last store amount maximum number product store max5 exampl input quantiti output explan optim way product type distribut store maximum number product store max100000 constraint quantitieslength quantitiesi ","1547":"undirect graph node number inclus 0index integ array valu valuesi valu ith node also 0index 2d integ array edg edgesj uj timej indic undirect edg node uj take timej second travel node final integ maxtim valid path graph path start node end node take maxtim second complet may visit node multipl time qualiti valid path sum valu uniqu node visit path node valu ad sum return maximum qualiti valid path note edg connect node exampl input valu edg maxtim output explan possibl path total time taken node visit give maxim path qualiti exampl input valu edg maxtim output explan possibl path total time taken node visit give maxim path qualiti exampl input valu edg maxtim output explan possibl path total time taken node visit give maxim path qualiti constraint valueslength valuesi edgeslength edgesjlength uj timej maxtim pair uj uniqu edg connect node graph may connect ","1548":"string word1 word2 consid almost equival differ frequenc letter word1 word2 string word1 word2 length return true word1 word2 almost equival fals otherwis frequenc letter number time occur string exampl input word1 aaaa word2 bccb output fals explan aaaa bccb differ allow exampl input word1 abcdeef word2 abaaacc output true explan differ frequenc letter word1 word2 appear time word1 time word2 differ appear time word1 time word2 differ appear time word1 time word2 differ appear time word1 time word2 differ e appear time word1 time word2 differ appear time word1 time word2 differ exampl input word1 cccddabba word2 babababab output true explan differ frequenc letter word1 word2 appear time word1 time word2 differ appear time word1 time word2 differ appear time word1 time word2 differ appear time word1 time word2 differ constraint word1length word2length word1 word2 lowercas english letter ","1549":"width height grid xyplan bottomleft cell topright cell width height grid align cardin direct north east south west robot initi cell face direct east robot instruct move specif number step step follow attempt move forward cell direct face cell robot move bound robot instead turn degre counterclockwis retri step robot finish move number step requir stop await next instruct implement robot class robotint width int height initi width height grid robot face east void stepint num instruct robot move forward num step int getpo return current cell robot array length string getdir return current direct robot north east south west exampl input robot step step getpo getdir step step step getpo getdir output null null null east null null null west explan robot robot new robot6 initi grid robot face east robotstep2 move step east face east robotstep2 move step east face east robotgetpo return robotgetdir return east robotstep2 move step east face east move next step east would bound turn face north move step north face north robotstep1 move step north face north west robotstep4 move next step north would bound turn face west move step west face west robotgetpo return robotgetdir return west constraint width height num call total made step getpo getdir ","1550":"2d integ array item itemsi pricei beautyi denot price beauti item respect also 0index integ array queri queriesj want determin maximum beauti item whose price less equal queriesj item exist answer queri return array answer length queri answerj answer jth queri exampl input item queri output explan queries01 item price henc answer queri queries12 item consid maximum beauti among queries23 queries34 item consid maximum beauti among queries45 queries56 item consid henc answer maximum beauti item ie exampl input item queri output explan price everi item equal choos item maximum beauti note multipl item price andor beauti exampl input item queri output explan item price less equal item chosen henc answer queri constraint itemslength querieslength itemsilength pricei beautyi queriesj ","1551":"task worker task strength requir store 0index integ array task ith task requir tasksi strength complet strength worker store 0index integ array worker jth worker workersj strength worker assign singl task must strength greater equal task strength requir ie workersj tasksi addit pill magic pill increas worker strength strength decid worker receiv magic pill howev may give worker magic pill 0index integ array task worker integ pill strength return maximum number task complet exampl input task worker pill strength output explan assign magic pill task follow give magic pill worker assign worker task assign worker task assign worker task exampl input task worker pill strength output explan assign magic pill task follow give magic pill worker assign worker task exampl input task worker pill strength output explan assign magic pill task follow give magic pill worker worker assign worker task assign worker task last pill make worker strong enough last task constraint taskslength workerslength pill tasksi workersj strength ","1552":"peopl line queu buy ticket 0th person front line 1th person back line 0index integ array ticket length number ticket ith person would like buy ticketsi person take exactli second buy ticket person buy ticket time go back end line happen instantan order buy ticket person ticket left buy person leav line return time taken person initi posit 0index finish buy ticket exampl input ticket output explan queue start kth person underlin person front bought ticket queue becom second continu process queue becom second continu process queue becom second continu process queue becom second note person front left queue continu process queue becom second continu process queue becom second kth person bought ticket return exampl input ticket output explan queue start kth person underlin person front bought ticket queue becom second continu process second queue becom second continu process second queue becom second kth person bought ticket return constraint ticketslength ticketsi ","1553":"head link list node link list sequenti assign nonempti group whose length form sequenc natur number length group number node assign word 1st node assign first group 3rd node assign second group 4th 5th 6th node assign third group note length last group may less equal length second last group revers node group even length return head modifi link list exampl input head output explan length first group odd henc revers occur length second group even henc node revers length third group odd henc revers occur length last group even henc node revers exampl input head output explan length first group revers occur length second group node revers length last group revers occur exampl input head output explan length first group revers occur length second group node revers length last group node revers constraint number node list rang nodev ","1554":"string originaltext encod use slant transposit cipher string encodedtext help matrix fix number row row originaltext place first topleft bottomright manner blue cell fill first follow red cell yellow cell reach end originaltext arrow indic order cell fill empti cell fill number column chosen rightmost column empti fill originaltext encodedtext form append charact matrix rowwis fashion charact blue cell append first encodedtext red cell final yellow cell arrow indic order cell access exampl originaltext cipher row encod follow manner blue arrow depict originaltext place matrix red arrow denot order encodedtext form exampl encodedtext ch ie encod string encodedtext number row row return origin string originaltext note originaltext trail space test case gener possibl originaltext exampl input encodedtext ch ie row output cipher explan exampl describ problem descript exampl input encodedtext iveo eed te olc row output love leetcod explan figur denot matrix use encod originaltext blue arrow show find originaltext encodedtext exampl input encodedtext code row output code explan sinc row originaltext encodedtext constraint encodedtextlength encodedtext consist lowercas english letter encodedtext valid encod originaltext trail space row testcas gener possibl originaltext ","1555":"integ indic number peopl network person label also 0index 2d integ array restrict restrictionsi xi yi mean person xi person yi becom friend either directli indirectli peopl initi friend list friend request 0index 2d integ array request requestsj uj friend request person uj person friend request success uj friend friend request process order ie requestsj occur requestsj upon success request uj becom direct friend futur friend request return boolean array result resultj true jth friend request success fals note uj alreadi direct friend request still success exampl input restrict request output truefals explan request person person friend becom direct friend request person person friend sinc person person would indirect friend exampl input restrict request output truefals explan request person person friend becom direct friend request person person friend sinc person person would indirect friend exampl input restrict request output truefalsetruefals explan request person person friend becom direct friend request person person friend sinc directli restrict request person person friend becom direct friend request person person friend sinc person person would indirect friend constraint restrictionslength restrictionsilength xi yi xi yi requestslength requestsjlength uj uj ","1556":"hous evenli line street hous beauti paint 0index integ array color length colorsi repres color ith hous return maximum distanc hous differ color distanc ith jth hous absi absx absolut valu exampl input color output explan imag color blue color red furthest hous differ color hous hous hous color hous color distanc abs0 note hous also produc optim answer exampl input color output explan imag color blue color yellow color green furthest hous differ color hous hous hous color hous color distanc abs0 exampl input color output explan furthest hous differ color hous hous hous color hous color distanc abs0 constraint colorslength colorsi test data gener least hous differ color ","1557":"want water plant garden water plant arrang row label left right ith plant locat river refil water plant need specif amount water water plant follow way water plant order left right water current plant enough water complet water next plant return river fulli refil water refil water earli initi river ie take step move unit xaxi 0index integ array plant integ plantsi amount water ith plant need integ capac repres water capac return number step need water plant exampl input plant capac output explan start river full water walk plant step water water unit water walk plant step water water unit water sinc complet water plant walk back river refil step walk plant step water water unit water sinc complet water plant walk back river refil step walk plant step water step need exampl input plant capac output explan start river full water water plant step return river step water plant step return river step water plant step return river step water plant step step need exampl input plant capac output explan refil water plant step need constraint plantslength plantsi maxplantsi capac ","1558":"design data structur find frequenc valu subarray frequenc valu subarray number occurr valu subarray implement rangefreqqueri class rangefreqqueryint arr construct instanc class 0index integ array arr int queryint left int right int valu return frequenc valu subarray arrleftright subarray contigu sequenc element within array arrleftright denot subarray contain element num indic left right inclus exampl input rangefreqqueri queri queri output null explan rangefreqqueri rangefreqqueri new rangefreqquery12 rangefreqqueryquery1 return valu occur time subarray rangefreqqueryquery0 return valu occur time whole array constraint arrlength arri valu left right arrlength call made queri ","1559":"kmirror number posit integ without lead zero read forward backward base10 well basek exampl 2mirror number represent base10 base2 respect read forward backward contrari 2mirror number represent base2 read forward backward base number return sum smallest kmirror number exampl input output explan smallest 2mirror number represent base2 list follow base10 base2 sum exampl input output explan smallest 3mirror number represent base3 list follow base10 base3 sum exampl input output explan smallest 7mirror number constraint ","1560":"string array words1 words2 return number string appear exactli array exampl input words1 leetcodeisamazingasi words2 amazingleetcodei output explan leetcod appear exactli array count string amaz appear exactli array count string appear array occurr words1 count string appear words1 appear words2 count string thu string appear exactli array exampl input words1 bbbbbb words2 aaaaaa output explan string appear array exampl input words1 aab words2 aaaab output explan string appear exactli array ab constraint words1length words2length words1ilength words2jlength words1i words2j consist lowercas english letter ","1561":"0index string hamster hamstersi either indic hamster index indic index empti add number food bucket empti indic order feed hamster hamster fed least food bucket left right formal hamster index fed place food bucket index andor index return minimum number food bucket place empti indic feed hamster imposs feed exampl input hamster output explan place food bucket indic shown place food bucket hamster fed exampl input hamster output explan place food bucket index exampl input hamster hhh output explan place food bucket everi empti index shown hamster index abl eat constraint hamsterslength hamstersi eitherh ","1562":"grid topleft cell bottomright cell integ array startpo startpo startrow startcol indic initi robot cell startrow startcol also integ array homepo homepo homerow homecol indic home cell homerow homecol robot need go home move cell direct left right move outsid boundari everi move incur cost 0index integ array rowcost length colcost length robot move cell whose row move cost rowcostsr robot move left right cell whose column move cost colcostsc return minimum total cost robot return home exampl input startpo homepo rowcost colcost output explan optim path start goe move cost rowcosts2 goe right move cost colcosts1 goe right move cost colcosts2 goe right move cost colcosts3 total cost exampl input startpo homepo rowcost colcost output explan robot alreadi home sinc move occur total cost constraint rowcostslength colcostslength rowcostsr colcostsc startposlength homeposlength startrow homerow startcol homecol ","1563":"farmer rectangular grid land row column divid unit cell cell either fertil repres barren repres cell outsid grid consid barren pyramid plot land defin set cell follow criteria number cell set greater cell must fertil apex pyramid topmost cell pyramid height pyramid number row cover let apex pyramid height plot compris cell invers pyramid plot land defin set cell similar criteria number cell set greater cell must fertil apex invers pyramid bottommost cell invers pyramid height invers pyramid number row cover let apex pyramid height plot compris cell exampl valid invalid pyramid invers pyramid plot shown black cell indic fertil cell 0index binari matrix grid repres farmland return total number pyramid invers pyramid plot found grid exampl input grid output explan possibl pyramid plot shown blue red respect invers pyramid plot grid henc total number pyramid invers pyramid plot exampl input grid output explan pyramid plot shown blue invers pyramid plot shown red henc total number plot exampl input grid output explan pyramid plot shown 3rd figur invers pyramid plot shown last figur total number plot constraint gridlength gridilength gridij either ","1564":"0index integ array num target element target target index index numsi target return list target indic num sort num nondecreas order target indic return empti list return list must sort increas order exampl input num target output explan sort num indic numsi exampl input num target output explan sort num index numsi exampl input num target output explan sort num index numsi constraint numslength numsi target ","1565":"","1566":"integ indic peopl number also 0index 2d integ array meet meetingsi xi yi timei indic person xi person yi meet timei person may attend multipl meet time final integ firstperson person secret initi share secret person firstperson time secret share everi time meet take place person secret formal everi meet person xi secret timei share secret person yi vice versa secret share instantan person may receiv secret share peopl meet within time frame return list peopl secret meet taken place may return answer order exampl input meet firstperson output explan time person share secret person time person share secret person time person share secret person time person share secret person thu peopl know secret meet exampl input meet firstperson output explan time person share secret person time neither person person know secret time person share secret person person thu peopl know secret meet exampl input meet firstperson output explan time person share secret person time person share secret person person share secret person note person share secret time receiv time person share secret person thu peopl know secret meet constraint meetingslength meetingsilength xi yi xi yi timei firstperson ","1567":"integ array digit element digit array may contain duplic need find uniqu integ requir integ consist concaten element digit arbitrari order integ lead zero integ even exampl digit integ requir return sort array uniqu integ exampl input digit output explan possibl integ requir output array notic odd integ integ lead zero exampl input digit output explan digit use mani time appear digit exampl digit use twice time exampl input digit output explan even integ form use digit constraint digitslength digitsi ","1568":"head link list delet middl node return head modifi link list middl node link list size node start use 0base index \u230ax\u230b denot largest integ less equal middl node respect exampl input head output explan figur repres link list indic node written sinc node valu middl node mark red return new list remov node exampl input head output explan figur repres link list node valu middl node mark red exampl input head output explan figur repres link list node valu middl node mark red node valu node remain remov node constraint number node list rang nodev ","1569":"root binari tree node node uniqu assign valu also integ startvalu repres valu start node differ integ destvalu repres valu destin node find shortest path start node end node gener stepbystep direct path string consist uppercas letter u letter indic specif direct mean go node left child node mean go node right child node u mean go node parent node return stepbystep direct shortest path node node exampl input root 5123null64 startvalu destvalu output uurl explan shortest path exampl input root startvalu destvalu output explan shortest path constraint number node tree nodev valu tree uniqu startvalu destvalu startvalu destvalu ","1570":"0index 2d integ array pair pairsi starti endi arrang pair valid everi index pairslength endi1 starti return valid arrang pair note input gener exist valid arrang pair exampl input pair output explan valid arrang sinc endi1 alway equal starti end0 start1 end1 start2 end2 start3 exampl input pair output explan valid arrang sinc endi1 alway equal starti end0 start1 end1 start2 arrang also valid exampl input pair output explan valid arrang sinc endi1 alway equal starti end0 start1 end1 start2 constraint pairslength pairsilength starti endi starti endi pair exactli exist valid arrang pair ","1571":"integ array num integ want find subsequ num length largest sum return subsequ integ array length subsequ array deriv anoth array delet element without chang order remain element exampl input num output explan subsequ largest sum exampl input num output explan subsequ largest sum exampl input num output explan subsequ largest sum anoth possibl subsequ constraint numslength numsi numslength ","1572":"gang thiev plan rob bank 0index integ array secur securityi number guard duti ith day day number start also integ time ith day good day rob bank least time day ith day number guard bank time day nonincreas number guard bank time day nondecreas formal mean day good day rob bank securityi time securityi time securityi securityi time securityi time return list day 0index good day rob bank order day return matter exampl input secur time output explan day security0 security1 security2 security3 security4 day security1 security2 security3 security4 security5 day satisfi condit day good day rob bank exampl input secur time output explan sinc time equal everi day good day rob bank return everi day exampl input secur time output explan day day nonincreas number guard thu day good day rob bank return empti list constraint securitylength securityi time ","1573":"list bomb rang bomb defin area effect felt area shape circl center locat bomb bomb repres 0index 2d integ array bomb bombsi xi yi ri xi yi denot xcoordin ycoordin locat ith bomb wherea ri denot radiu rang may choos deton singl bomb bomb deton deton bomb lie rang bomb deton bomb lie rang list bomb return maximum number bomb deton allow deton bomb exampl input bomb output explan figur show posit rang bomb deton left bomb right bomb affect deton right bomb bomb deton maximum bomb deton max1 exampl input bomb output explan deton either bomb deton bomb maximum number bomb deton exampl input bomb output explan best bomb deton bomb bomb deton bomb red circl denot rang bomb bomb deton bomb blue circl denot rang bomb bomb deton bomb green circl denot rang bomb thu bomb deton constraint bombslength bombsilength xi yi ri ","1574":"scenic locat repres name attract score name uniqu string among locat score integ locat rank best worst higher score better locat score locat equal locat lexicograph smaller name better build system track rank locat system initi start locat support ad scenic locat time queri ith best locat locat alreadi ad number time system queri includ current queri exampl system queri 4th time return 4th best locat locat alreadi ad note test data gener time number queri exceed number locat ad system implement sortrack class sortrack initi tracker system void addstr name int score add scenic locat name score system string get queri return ith best locat number time method invok includ invoc exampl input sortrack add add get add get add get add get add get get bradford branford alp orland orlando alpin output null null null branford null alp null bradford null bradford null bradford orland explan sortrack tracker new sortrack initi tracker system trackeraddbradford add locat namebradford score2 system trackeraddbranford add locat namebranford score3 system trackerget sort locat best worst branford bradford note branford preced bradford due higher score 1st time get call return best locat branford trackeraddalp add locat namealp score2 system trackerget sort locat branford alp bradford note alp preced bradford even though score alp lexicograph smaller bradford return best locat alp time get call trackeraddorland add locat nameorland score2 system trackerget sort locat branford alp bradford orland return bradford 3rd time get call trackeraddorlando add locat nameorlando score3 system trackerget sort locat branford orlando alp bradford orland return bradford trackeraddalpin add locat namealpin score2 system trackerget sort locat branford orlando alpin alp bradford orland return bradford trackerget sort locat branford orlando alpin alp bradford orland return orland constraint name consist lowercas english letter uniqu among locat namelength score time number call get exceed number call add call total made add get ","1575":"ring ring either red green blue ring distribut across ten rod label string ring length describ ring place onto rod everi charact ring form colorposit pair use describ ring first charact ith pair denot ith ring color second charact ith pair denot rod ith ring place exampl r3g2b1 describ ring red ring place onto rod label green ring place onto rod label blue ring place onto rod label return number rod color ring exampl input ring b0b6g0r6r0r6g9 output explan rod label hold ring color red green blue rod label hold ring red blue rod label hold green ring thu number rod color exampl input ring b0r0g0r9r0b0g0 output explan rod label hold ring color red green blue rod label hold red ring thu number rod color exampl input ring g4 output explan ring thu rod color constraint ringslength ringsi even either 0index ringsi odd digit 0index ","1576":"integ array num rang subarray num differ largest smallest element subarray return sum subarray rang num subarray contigu nonempti sequenc element within array exampl input num output explan subarray num follow rang largest smallest rang rang rang rang rang sum rang exampl input num output explan subarray num follow rang largest smallest rang rang rang rang rang sum rang exampl input num output explan sum subarray rang num constraint numslength numsi followup could find solut time complex ","1577":"alic bob want water plant garden plant arrang row label left right ith plant locat plant need specif amount water alic bob water initi full water plant follow way alic water plant order left right start 0th plant bob water plant order right left start 1th plant begin water plant simultan take amount time water plant regardless much water need alicebob must water plant enough fulli water otherwis first refil instantan water plant case alic bob reach plant water current hisher water water plant amount water alic water plant 0index integ array plant integ plantsi amount water ith plant need integ capacitya capacityb repres capac alic bob water can respect return number time refil water plant exampl input plant capacitya capacityb output explan initi alic bob unit water water can alic water plant bob water plant alic bob unit unit water respect alic enough water plant water bob enough water plant refil water total number time refil water plant exampl input plant capacitya capacityb output explan initi alic bob unit unit water water can respect alic water plant bob water plant alic bob unit water need water plant respect sinc neither enough water current plant refil can water plant total number time refil water plant exampl input plant capacitya capacityb output explan plant alic water unit water wherea bob unit sinc alic water water plant total number time refil constraint plantslength plantsi maxplantsi capacitya capacityb ","1578":"fruit avail posit infinit xaxi 2d integ array fruit fruitsi positioni amounti depict amounti fruit posit positioni fruit alreadi sort positioni ascend order positioni uniqu also integ startpo integ initi posit startpo posit either walk left right take step move unit xaxi walk step total everi posit reach harvest fruit posit fruit disappear posit return maximum total number fruit harvest exampl input fruit startpo output explan optim way move right posit harvest fruit move right posit harvest fruit move step harvest fruit total exampl input fruit startpo output explan move step reach posit optim way harvest fruit start posit move left posit harvest fruit move right posit harvest fruit move right posit harvest fruit move step harvest fruit total exampl input fruit startpo output explan move step reach posit fruit constraint fruitslength fruitsilength startpo positioni positioni1 positioni 0index amounti ","1579":"array string word return first palindrom string array string return empti string string palindrom read forward backward exampl input word abccaradaracecarcool output ada explan first string palindrom ada note racecar also palindrom first exampl input word notapalindromeracecar output racecar explan first string palindrom racecar exampl input word defghi output explan palindrom string empti string return constraint wordslength wordsilength wordsi consist lowercas english letter ","1580":"0index string 0index integ array space describ indic origin string space ad space insert charact index exampl enjoyyourcoffe space place space indic respect thu obtain enjoy coffe return modifi string space ad exampl input leetcodehelpsmelearn space output leetcod help learn explan indic correspond underlin charact leetcodehelpsmelearn place space charact exampl input icodeinpython space output code py explan indic correspond underlin charact icodeinpython place space charact exampl input space space output explan also abl place space first charact string constraint slength consist lowercas uppercas english letter spaceslength spacesi slength valu space strictli increas ","1581":"integ array price repres daili price histori stock pricesi stock price ith day smooth descent period stock consist contigu day price day lower price preced day exactli first day period exempt rule return number smooth descent period exampl input price output explan smooth descent period note period day smooth descent period definit exampl input price output explan smooth descent period note smooth descent period exampl input price output explan smooth descent period constraint priceslength pricesi ","1582":"0index array arr consist posit integ posit integ array arr call kincreas arrik arri hold everi index exampl arr kincreas arr0 arr2 arr1 arr3 arr2 arr4 arr3 arr5 howev arr kincreas arr0 arr1 arr0 arr3 oper choos index chang arri posit integ return minimum number oper requir make array kincreas exampl input arr output explan result array nondecreas kincreas array form requir oper suboptim chang array exampl would take oper shown make array kincreas less oper exampl input arr output explan exampl problem descript everi index arri2 arri sinc array alreadi kincreas need perform oper exampl input arr output explan indic one satisfi arri3 arri way make array kincreas chang arr3 arr5 array note way make array kincreas none requir less oper constraint arrlength arri arrlength ","1583":"sentenc list word separ singl space lead trail space array string sentenc sentencesi repres singl sentenc return maximum number word appear singl sentenc exampl input sentenc alic bob love leetcod think great thank much output explan first sentenc alic bob love leetcod word total second sentenc think word total third sentenc great thank much word total thu maximum number word singl sentenc come third sentenc word exampl input sentenc pleas wait continu fight continu win output explan possibl multipl sentenc contain number word exampl second third sentenc underlin number word constraint sentenceslength sentencesilength sentencesi consist lowercas english letter sentencesi lead trail space word sentencesi separ singl space ","1584":"inform differ recip string array recip 2d string array ingredi ith recip name recipesi creat need ingredi ingredientsi ingredi recip may need creat recip ie ingredientsi may contain string recip also string array suppli contain ingredi initi infinit suppli return list recip creat may return answer order note recip may contain ingredi exampl input recip bread ingredi yeastflour suppli yeastflourcorn output bread explan creat bread sinc ingredi yeast flour exampl input recip breadsandwich ingredi yeastflourbreadmeat suppli yeastflourmeat output breadsandwich explan creat bread sinc ingredi yeast flour creat sandwich sinc ingredi meat creat ingredi bread exampl input recip breadsandwichburg ingredi yeastflourbreadmeatsandwichmeatbread suppli yeastflourmeat output breadsandwichburg explan creat bread sinc ingredi yeast flour creat sandwich sinc ingredi meat creat ingredi bread creat burger sinc ingredi meat creat ingredi bread sandwich constraint recipeslength ingredientslength ingredientsilength supplieslength recipesilength ingredientsijlength suppliesklength recipesi ingredientsij suppliesk lowercas english letter valu recip suppli combin uniqu ingredientsi contain duplic valu ","1585":"parenthes string nonempti string consist valid follow condit true written ab concaten valid parenthes string written valid parenthes string parenthes string string lock length lock binari string consist index lock lockedi chang si lockedi chang si either return true make valid parenthes string otherwis return fals exampl input lock output true explan locked1 locked3 chang chang leav unchang make valid exampl input lock output true explan need make chang alreadi valid exampl input lock output fals explan lock permit us chang chang either make valid constraint slength lockedlength si either lockedi either ","1586":"posit integ left right left right calcul product integ inclus rang left right sinc product may larg abbrevi follow step count trail zero product remov let us denot count exampl trail zero trail zero denot remain number digit product express product presuf pre denot first digit product suf denot last digit product remov trail zero keep unchang exampl express repres final repres product string presufec exampl repres 1234589876e5 return string denot abbrevi product integ inclus rang left right exampl input left right output 24e0 explan product trail zero remain abbrevi end e0 sinc number digit less abbrevi thu final represent 24e0 exampl input left right output 399168e2 explan product trail zero remov get abbrevi end e2 number digit remov trail zero abbrevi henc abbrevi product 399168e2 exampl input left right output 7219856259e3 explan product constraint left right ","1587":"revers integ mean revers digit exampl revers give revers give lead zero retain integ num revers num get reversed1 revers reversed1 get reversed2 return true reversed2 equal num otherwis return fals exampl input num output true explan revers num get revers get equal num exampl input num output fals explan revers num get revers get equal num exampl input num output true explan revers num get revers get equal num constraint num ","1588":"","1589":"0index array integ arr interv element arr defin absolut differ indic formal interv arri arrj return array interv length intervalsi sum interv arri element arr valu arri note absolut valu exampl input arr output explan index anoth found index index anoth found index index found indic index anoth found index index anoth found index index found indic index found indic exampl input arr output explan index found indic index array sum interv ident element index found indic index found indic constraint arrlength arri note question sum distanc ","1590":"alic 0index array arr consist posit integ chose arbitrari posit integ creat new 0index integ array lower higher follow manner loweri arri everi index higheri arri everi index unfortun alic lost array howev rememb integ present array lower higher array integ belong help alic recov origin array array num consist integ exactli integ present lower remain higher return origin array arr case answer uniqu return valid array note test case gener exist least valid array arr exampl input num output explan arr get lower higher combin lower higher give us permut num anoth valid possibl arr case lower higher exampl input num output explan arr get lower higher combin lower higher give us equal num note arr case possibl way obtain invalid sinc must posit exampl input num output explan possibl combin arr use get lower higher constraint numslength numsi test case gener exist least valid array arr ","1591":"string consist charact return true everi appear everi string otherwis return fals exampl input aaabbb output true explan indic indic henc everi appear everi return true exampl input abab output fals explan index index henc everi appear everi return fals exampl input bbb output true explan henc everi appear everi return true constraint slength si either ","1592":"antitheft secur devic activ insid bank 0index binari string array bank repres floor plan bank 2d matrix banki repres ith row consist mean cell empti mean cell secur devic laser beam secur devic condit met devic locat differ row row secur devic ith row laser beam independ ie beam interfer join anoth return total number laser beam bank exampl input bank output explan follow devic pair beam total beam bank01 bank21 bank01 bank23 bank02 bank21 bank02 bank23 bank05 bank21 bank05 bank23 bank21 bank32 bank23 bank32 note beam devic 0th row 3rd row row contain secur devic break second condit exampl input bank output explan exist devic locat differ row constraint banklength bankilength bankij either ","1593":"integ mass repres origin mass planet integ array asteroid asteroidsi mass ith asteroid arrang planet collid asteroid arbitrari order mass planet greater equal mass asteroid asteroid destroy planet gain mass asteroid otherwis planet destroy return true asteroid destroy otherwis return fals exampl input mass asteroid output true explan way order asteroid planet collid asteroid mass new planet mass planet collid asteroid mass new planet mass planet collid asteroid mass new planet mass planet collid asteroid mass new planet mass planet collid asteroid mass new planet mass asteroid destroy exampl input mass asteroid output fals explan planet ever gain enough mass destroy asteroid mass planet destroy asteroid mass less collis would destroy last asteroid constraint mass asteroidslength asteroidsi ","1594":"compani organ meet list employe wait invit arrang larg circular tabl capabl seat number employe employe number employe favorit person attend meet sit next favorit person tabl favorit person employe themself 0index integ array favorit favoritei denot favorit person ith employe return maximum number employe invit meet exampl input favorit output explan figur show compani invit employe seat round tabl employe invit employe sit besid employe simultan note compani also invit employe give desir seat maximum number employe invit meet exampl input favorit output explan employe favorit person least employe way compani invit invit everi employe seat arrang figur exampl employe sit employe employe sit employe employe sit employe maximum number employe invit meet exampl input favorit output explan figur show compani invit employe seat round tabl employe invit spot next favorit employe taken compani leav meet maximum number employe invit meet constraint favoritelength favoritei favoritei ","1595":"string titl consist word separ singl space word consist english letter capit string chang capit word length word letter chang letter lowercas otherwis chang first letter uppercas remain letter lowercas return capit titl exampl input titl capit titl output capit titl explan sinc word length least first letter word uppercas remain letter lowercas exampl input titl first letter word output first letter word explan word length lowercas remain word length least first letter remain word uppercas remain letter lowercas exampl input titl love leetcod output love leetcod explan word length lowercas remain word length least first letter remain word uppercas remain letter lowercas constraint titlelength titl consist word separ singl space without lead trail space word consist uppercas lowercas english letter nonempti ","1596":"link list size even ith node 0index link list known twin node exampl node twin node node twin node node twin twin sum defin sum node twin head link list even length return maximum twin sum link list exampl input head output explan node twin node respect twin sum node twin link list thu maximum twin sum link list exampl input head output explan node twin present link list node twin node twin sum node twin node twin sum thu maximum twin sum link list max7 exampl input head output explan node twin link list twin sum constraint number node list even integ rang nodev ","1597":"array string word element word consist lowercas english letter creat longest possibl palindrom select element word concaten order element select return length longest palindrom creat imposs creat palindrom return palindrom string read forward backward exampl input word lcclgg output explan longest palindrom lc gg cl lcggcl length note clgglc anoth longest palindrom creat exampl input word abtyytlcclab output explan longest palindrom ty lc cl tylcclyt length note lcyttycl anoth longest palindrom creat exampl input word ccllxx output explan longest palindrom cc length note anoth longest palindrom creat xx constraint wordslength wordsilength wordsi consist lowercas english letter ","1598":"binari matrix grid cell either empti occupi stamp size stampheight stampwidth want fit stamp restrict requir cover empti cell cover occupi cell put mani stamp want stamp overlap stamp allow rotat stamp must stay complet insid grid return true possibl fit stamp follow restrict requir otherwis return fals exampl input grid stampheight stampwidth output true explan overlap stamp label imag abl cover empti cell exampl input grid stampheight stampwidth output fals explan way fit stamp onto empti cell without stamp go outsid grid constraint gridlength gridrlength gridrc either stampheight stampwidth ","1599":"matrix valid everi row everi column contain integ inclus integ matrix matrix return true matrix valid otherwis return fals exampl input matrix output true explan case everi row column contain number henc return true exampl input matrix output fals explan case first row first column contain number henc return fals constraint matrixlength matrixilength matrixij ","1600":"swap defin take distinct posit array swap valu circular array defin array consid first element last element adjac binari circular array num return minimum number swap requir group present array togeth locat exampl input num output explan way group togeth use swap use swap use swap use circular properti array way group togeth swap thu minimum number swap requir exampl input num output explan way group togeth use swap use circular properti array use swap way group togeth swap thu minimum number swap requir exampl input num output explan alreadi group togeth due circular properti array thu minimum number swap requir constraint numslength numsi either ","1601":"0index array string startword targetword string consist lowercas english letter string targetword check possibl choos string startword perform convers oper equal targetword convers oper describ follow step append lowercas letter present string end exampl string abc letter e ad ad result string abcd rearrang letter new string arbitrari order exampl abcd rearrang acbd bacd cbda note also rearrang abcd return number string targetword obtain perform oper string startword note verifi string targetword obtain string startword perform oper string startword actual chang process exampl input startword antacttack targetword tackactacti output explan order form targetwords0 tack use startwords1 act append rearrang actk tack string startword use obtain targetwords1 act note act exist startword must append letter string rearrang order form targetwords2 acti use startwords1 act append rearrang acti acti exampl input startword aba targetword abcabcd output explan order form targetwords0 abc use startwords0 ab add rearrang abc string startword use obtain targetwords1 abcd constraint startwordslength targetwordslength startwordsilength targetwordsjlength string startword targetword consist lowercas english letter letter occur string startword targetword ","1602":"string partit group size use follow procedur first group consist first charact string second group consist next charact string charact part exactli group last group string charact remain charact fill use complet group note partit done remov fill charact last group exist concaten group order result string string size group charact fill return string array denot composit everi group divid use procedur exampl input abcdefghi fill output abcdefghi explan first charact abc form first group next charact def form second group last charact ghi form third group sinc group complet fill charact string need use fill thu group form abc def ghi exampl input abcdefghij fill output abcdefghijxx explan similar previou exampl form first group abc def ghi last group use charact string complet group add twice thu group form abc def ghi jxx constraint slength consist lowercas english letter fill lowercas english letter ","1603":"play game integ start integ want reach integ target move either increment current integ ie doubl current integ ie use increment oper number time howev use doubl oper maxdoubl time integ target maxdoubl return minimum number move need reach target start exampl input target maxdoubl output explan keep increment reach target exampl input target maxdoubl output explan initi increment time doubl increment doubl increment exampl input target maxdoubl output explan initi increment doubl increment doubl constraint target maxdoubl ","1604":"comput integ 0index integ array batteri ith batteri run comput batteriesi minut interest run comput simultan use batteri initi insert batteri comput integ time moment remov batteri comput insert anoth batteri number time insert batteri total new batteri batteri anoth comput may assum remov insert process take time note batteri recharg return maximum number minut run comput simultan exampl input batteri output explan initi insert batteri first comput batteri second comput minut remov batteri second comput insert batteri instead note batteri still run minut end third minut batteri drain need remov first comput insert batteri instead end fourth minut batteri also drain first comput longer run run comput simultan minut return exampl input batteri output explan initi insert batteri first comput batteri second comput minut batteri batteri drain need remov insert batteri first comput batteri second comput anoth minut batteri batteri also drain first second comput longer run run comput simultan minut return constraint batterieslength batteriesi ","1605":"shop sell candi discount everi candi sold shop give third candi free custom choos candi take away free long cost chosen candi less equal minimum cost candi bought exampl candi cost custom buy candi cost take candi cost free candi cost 0index integ array cost costi denot cost ith candi return minimum cost buy candi exampl input cost output explan buy candi cost take candi cost free total cost buy candi way buy candi note buy candi cost take candi cost free cost free candi less equal minimum cost purchas candi exampl input cost output explan way get minimum cost describ buy candi cost take candi cost free buy candi cost take last remain candi cost free henc minimum cost buy candi exampl input cost output explan sinc candi buy third candi take free henc minimum cost buy candi constraint costlength costi ","1606":"0index array integ differ describ differ pair consecut integ hidden sequenc length formal call hidden sequenc hidden differencesi hiddeni hiddeni integ lower upper describ inclus rang valu lower upper hidden sequenc contain exampl differ lower upper hidden sequenc sequenc length whose element inclus possibl hidden sequenc possibl sinc contain element greater possibl sinc differ correct return number possibl hidden sequenc possibl sequenc return exampl input differ lower upper output explan possibl hidden sequenc thu return exampl input differ lower upper output explan possibl hidden sequenc thu return exampl input differ lower upper output explan possibl hidden sequenc thu return constraint differenceslength differencesi lower upper ","1607":"0index 2d integ array grid size repres map item shop integ grid repres follow repres wall pass repres empti cell freeli move posit integ repres price item cell may also freeli move item cell take step travel adjac grid cell also integ array price start price low high start row col indic start posit row col interest item price rang low high inclus integ interest posit highestrank item whose price within price rang rank determin first criteria differ distanc defin length shortest path start shorter distanc higher rank price lower price higher rank must price rang row number smaller row number higher rank column number smaller column number higher rank return highestrank item within price rang sort rank highest lowest fewer reachabl item within price rang return exampl input grid price start output explan start price rang take item rank item distanc distanc distanc distanc thu highest rank item price rang exampl input grid price start output explan start price rang take item rank item distanc price distanc price distanc distanc thu highest rank item price rang exampl input grid price start output explan start price rang take item rank item distanc distanc thu highest rank item price rang note reachabl item within price rang constraint gridlength gridilength gridij pricinglength low high startlength row col gridrowcol ","1608":"along long librari corridor line seat decor plant 0index string corridor length consist letter repres seat repres plant room divid alreadi instal left index anoth right index addit room divid instal posit indic divid instal divid corridor nonoverlap section section exactli seat number plant may multipl way perform divis way differ posit room divid instal first way second way return number way divid corridor sinc answer may larg return modulo way return exampl input corridor ssppsp output explan differ way divid corridor black bar imag indic room divid alreadi instal note way section exactli seat exampl input corridor ppspsp output explan way divid corridor instal addit divid instal would creat section exactli seat exampl input corridor output explan way divid corridor alway section exactli seat constraint corridorlength corridori either ","1609":"integ array num return number element strictli smaller strictli greater element appear num exampl input num output explan element element strictli smaller element strictli greater element element strictli smaller element strictli greater total element strictli smaller strictli greater element appear num exampl input num output explan element element strictli smaller element strictli greater sinc element valu total element strictli smaller strictli greater element appear num constraint numslength numsi ","1610":"0index integ array num even length consist equal number posit neg integ return array num array follow condit everi consecut pair integ opposit sign integ sign order present num preserv rearrang array begin posit integ return modifi array rearrang element satisfi aforement condit exampl input num output explan posit integ num neg integ possibl way rearrang satisfi condit way incorrect satisfi condit exampl input num output explan posit integ neg integ num num rearrang constraint numslength numslength even numsi num consist equal number posit neg integ requir modif inplac ","1611":"integ array num number lone appear adjac number ie appear array return lone number num may return answer order exampl input num output explan lone number sinc appear exactli appear num lone number sinc appear exactli appear num lone number sinc appear num vice versa henc lone number num note may also return exampl input num output explan lone number sinc appear exactli appear num lone number sinc appear exactli appear num lone number sinc appear twice henc lone number num note may also return constraint numslength numsi ","1612":"array integ num also integ origin first number need search num follow step origin found num multipli ie set origin origin otherwis stop process repeat process new number long keep find number return final valu origin exampl input num origin output explan found num multipli obtain found num multipli obtain found num multipli obtain found num thu return exampl input num origin output explan found num thu return constraint numslength numsi origin ","1613":"0index binari array num length num divid index array possibl empti numsleft numsright numsleft element num index inclus numsright element num index inclus numsleft empti numsright element num numsleft element num numsright empti divis score index sum number numsleft number numsright return distinct indic highest possibl divis score may return answer order exampl input num output explan divis index numsleft numsright score numsleft numsright score numsleft numsright score numsleft numsright score numsleft numsright score indic highest possibl divis score note answer would also accept exampl input num output explan divis index numsleft numsright score numsleft numsright score numsleft numsright score numsleft numsright score index highest possibl divis score exampl input num output explan divis index numsleft numsright score numsleft numsright score numsleft numsright score index highest possibl divis score constraint numslength numsi either ","1614":"hash 0index string length integ comput use follow function hash vals0 p0 vals1 p1 valsk1 pk1 mod valsi repres index si alphabet vala valz string integ power modulo hashvalu return sub first substr length hashsub power modulo hashvalu test case gener answer alway exist substr contigu nonempti sequenc charact within string exampl input leetcod power modulo hashvalu output ee explan hash ee comput hashe mod mod ee first substr length hashvalu henc return ee exampl input fbxzaad power modulo hashvalu output fbx explan hash fbx comput hashfbx mod mod hash bxz comput hashbxz mod mod fbx first substr length hashvalu henc return fbx note bxz also hash appear later fbx constraint slength power modulo hashvalu modulo consist lowercas english letter test case gener answer alway exist ","1615":"0index array string word string consist lowercas english letter letter occur string word string said connect set letter obtain set letter follow oper ad exactli letter set letter delet exactli letter set letter replac exactli letter set letter letter includ array word divid nonintersect group string belong group follow true connect least string group string present group note string word group manner string belong group connect string present group prove arrang alway uniqu return array an size ans0 maximum number group word divid ans1 size largest group exampl input word ababcd output explan words0 use obtain words1 replac words2 ad words0 connect words1 words2 words1 use obtain words0 replac words2 ad words1 connect words0 words2 words2 use obtain words0 delet words1 delet words2 connect words0 words1 words3 connect string word thu word divid group abab cde size largest group exampl input word aababc output explan words0 connect words1 words1 connect words0 words2 words2 connect words1 sinc string connect group togeth thu size largest group constraint wordslength wordsilength wordsi consist lowercas english letter letter occur wordsi ","1616":"posit integ num consist exactli digit split num new integ new1 new2 use digit found num lead zero allow new1 new2 digit found num must use exampl num follow digit possibl pair new1 new2 return minimum possibl sum new1 new2 exampl input num output explan possibl pair new1 new2 etc minimum sum obtain pair exampl input num output explan possibl pair new1 new2 etc minimum sum obtain pair constraint num ","1617":"0index integ array num integ pivot rearrang num follow condit satisfi everi element less pivot appear everi element greater pivot everi element equal pivot appear element less greater pivot rel order element less pivot element greater pivot maintain formal consid everi pi pj pi new posit ith element pj new posit jth element element less pivot numsi pivot numsj pivot pi pj similarli element greater pivot numsi pivot numsj pivot pi pj return num rearrang exampl input num pivot output explan element less pivot left side array element greater pivot right side array rel order element less greater pivot also maintain respect order exampl input num pivot output explan element less pivot left side array element greater pivot right side array rel order element less greater pivot also maintain respect order constraint numslength numsi pivot equal element num ","1618":"gener microwav support cook time least second minut second set cook time push digit microwav normal push digit prepend zero interpret first digit minut last digit second add cook time exampl push digit normal interpret minut second push digit interpret minut second push interpret minut second push interpret minut second integ startat movecost pushcost targetsecond initi finger digit startat move finger specif digit cost movecost unit fatigu push digit finger cost pushcost unit fatigu multipl way set microwav cook targetsecond second interest way minimum cost return minimum cost set targetsecond second cook time rememb minut consist second exampl input startat movecost pushcost targetsecond output explan follow possibl way set cook time interpret minut second finger alreadi digit push cost move cost push cost push cost push cost cost minimum cost interpret minut second also second finger move cost push cost move cost push cost move cost push cost move cost push cost cost normal interpret minut second finger move cost push cost move cost push cost move cost push cost cost exampl input startat movecost pushcost targetsecond output explan optim way push digit interpret second finger move cost push cost move cost push cost total cost note possibl way none produc minimum cost constraint startat movecost pushcost targetsecond ","1619":"0index integ array num consist element allow remov subsequ element size exactli num remain element divid equal part first element belong first part sum sumfirst next element belong second part sum sumsecond differ sum part denot sumfirst sumsecond exampl sumfirst sumsecond differ similarli sumfirst sumsecond differ return minimum differ possibl sum part remov element exampl input num output explan num element thu remov element num divid array equal part remov nums0 array differ sum part remov nums1 array differ sum part remov nums2 array differ sum part minimum differ sum part min112 exampl input num output explan must remov element divid remain array part contain element remov nums2 nums3 result array differ sum obtain minimum differ remov nums1 nums4 result array becom differ sum part shown possibl obtain differ smaller constraint numslength numsi ","1620":"0index integ array num rearrang valu num accord follow rule sort valu odd indic num nonincreas order exampl num step becom valu odd indic sort nonincreas order sort valu even indic num nondecreas order exampl num step becom valu even indic sort nondecreas order return array form rearrang valu num exampl input num output explan first sort valu present odd indic nonincreas order num chang next sort valu present even indic nondecreas order num chang thu array form rearrang valu exampl input num output explan sinc exactli odd index even index rearrang valu take place result array form initi array constraint numslength numsi ","1621":"integ num rearrang digit num valu minim contain lead zero return rearrang number minim valu note sign number chang rearrang digit exampl input num output explan possibl arrang digit arrang smallest valu contain lead zero exampl input num output explan possibl arrang digit arrang smallest valu contain lead zero constraint num ","1622":"bitset data structur compactli store bit implement bitset class bitsetint size initi bitset size bit void fixint idx updat valu bit index idx valu alreadi chang occur void unfixint idx updat valu bit index idx valu alreadi chang occur void flip flip valu bit bitset word bit valu valu vice versa boolean check valu bit bitset return true satisfi condit fals otherwis boolean check least bit bitset valu return true satisfi condit fals otherwis int count return total number bit bitset valu string tostr return current composit bitset note result string charact ith index coincid valu ith bit bitset exampl input bitset fix fix flip unfix flip unfix count tostr output null null null null fals null null true null explan bitset new bitset5 bitset bsfix3 valu idx updat bitset bsfix1 valu idx updat bitset bsflip valu bit flip bitset bsall return fals valu bitset bsunfix0 valu idx updat bitset bsflip valu bit flip bitset bsone return true least index valu bsunfix0 valu idx updat bitset bscount return bit valu bstostr return composit bitset constraint size idx size call made total fix unfix flip count tostr least call made count tostr call made tostr ","1623":"0index binari string repres sequenc train car si denot ith car contain illeg good si denot ith car contain illeg good train conductor would like get rid car contain illeg good follow oper number time remov train car left end ie remov take unit time remov train car right end ie remov sslength take unit time remov train car anywher sequenc take unit time return minimum time remov car contain illeg good note empti sequenc car consid car contain illeg good exampl input output explan way remov car contain illeg good sequenc remov car left end time time taken remov car right end time taken remov car contain illeg good found middl time taken obtain total time altern way remov car left end time time taken remov car right end time time taken also obtain total time minimum time taken remov car contain illeg good way remov less time exampl input output explan way remov car contain illeg good sequenc remov car left end time time taken obtain total time anoth way remov car contain illeg good sequenc remov car contain illeg good found middl time taken obtain total time anoth way remov car contain illeg good sequenc remov car right end time time taken obtain total time minimum time taken remov car contain illeg good way remov less time constraint slength si either ","1624":"nonneg integ num1 num2 oper num1 num2 must subtract num2 num1 otherwis subtract num1 num2 exampl num1 num2 subtract num2 num1 thu obtain num1 num2 howev num1 num2 oper num1 num2 return number oper requir make either num1 num2 exampl input num1 num2 output explan oper num1 num2 sinc num1 num2 subtract num1 num2 get num1 num2 oper num1 num2 sinc num1 num2 subtract num2 num1 oper num1 num2 sinc num1 num2 subtract num2 num1 num1 num2 sinc num1 need perform oper total number oper requir exampl input num1 num2 output explan oper num1 num2 sinc num1 num2 subtract num2 num1 get num1 num1 num2 sinc num1 done total number oper requir constraint num1 num2 ","1625":"0index array num consist posit integ array num call altern numsi numsi numsi numsi oper choos index chang numsi posit integ return minimum number oper requir make array altern exampl input num output explan way make array altern convert number oper requir case proven possibl make array altern less oper exampl input num output explan way make array altern convert number oper requir case note array convert case nums0 nums1 violat condit altern array constraint numslength numsi ","1626":"array posit integ bean integ repres number magic bean found particular magic bag remov number bean possibl none bag number bean remain nonempti bag still contain least bean equal bean remov bag allow return bag return minimum number magic bean remov exampl input bean output explan remov bean bag bean result remain bag remov bean bag bean result remain bag remov bean bag bean result remain bag remov total bean make remain nonempti bag equal number bean solut remov bean fewer exampl input bean output explan remov bean bag bean result remain bag remov bean bag bean result remain bag remov bean bag bean result remain bag remov total bean make remain nonempti bag equal number bean solut remov bean fewer constraint beanslength beansi ","1627":"0index integ array num length integ return number pair numsi numsj divis exampl input num output explan pair meet requir nums0 nums6 divis nums2 nums3 divis nums2 nums4 divis nums3 nums4 divis exampl input num output explan sinc valu num repeat pair ij meet requir constraint numslength numsi ","1628":"integ num return consecut integ sort array sum num num express sum consecut integ return empti array exampl input num output explan express consecut integ return exampl input num output explan way express sum consecut integ constraint num ","1629":"integ finalsum split sum maximum number uniqu posit even integ exampl finalsum follow split valid uniqu posit even integ sum finalsum among contain maximum number integ note finalsum split number uniqu return list integ repres valid split contain maximum number integ valid split exist finalsum return empti list may return integ order exampl input finalsum output explan follow valid split maximum number integ thu return note etc also accept exampl input finalsum output explan valid split finalsum thu return empti array exampl input finalsum output explan follow valid split maximum number integ thu return note etc also accept constraint finalsum ","1630":"0index array nums1 nums2 length permut good triplet set distinct valu present increas order posit nums1 nums2 word consid pos1v index valu nums1 pos2v index valu nums2 good triplet set pos1x pos1i pos1z pos2x pos2i pos2z return total number good triplet exampl input nums1 nums2 output explan triplet xyz pos1x pos1i pos1z triplet triplet satisfi pos2x pos2i pos2z henc good triplet exampl input nums1 nums2 output explan good triplet constraint nums1length nums2length nums1i nums2i nums1 nums2 permut ","1631":"posit integ num return number posit integ less equal num whose digit sum even digit sum posit integ sum digit exampl input num output explan integ less equal whose digit sum even exampl input num output explan integ less equal whose digit sum even constraint num ","1632":"head link list contain seri integ separ begin end link list nodev everi consecut merg node lie singl node whose valu sum merg node modifi list contain return head modifi link list exampl input head output explan figur repres link list modifi list contain sum node mark green sum node mark red exampl input head output explan figur repres link list modifi list contain sum node mark green sum node mark red sum node mark yellow constraint number node list rang nodev consecut node nodev begin end link list nodev ","1633":"string integ repeatlimit construct new string repeatlimitedstr use charact letter appear repeatlimit time row use charact return lexicograph largest repeatlimitedstr possibl string lexicograph larger string first posit differ string letter appear later alphabet correspond letter first minalength blength charact differ longer string lexicograph larger exampl input cczazcc repeatlimit output zzcccac explan use charact construct repeatlimitedstr zzcccac letter appear time row letter appear time row letter appear time row henc letter appear repeatlimit time row string valid repeatlimitedstr string lexicograph largest repeatlimitedstr possibl return zzcccac note string zzcccca lexicograph larger letter appear time row valid repeatlimitedstr exampl input aababab repeatlimit output bbabaa explan use charact construct repeatlimitedstr bbabaa letter appear time row letter appear time row henc letter appear repeatlimit time row string valid repeatlimitedstr string lexicograph largest repeatlimitedstr possibl return bbabaa note string bbabaaa lexicograph larger letter appear time row valid repeatlimitedstr constraint repeatlimit slength consist lowercas english letter ","1634":"0index integ array num length integ return number pair numsi numsj divis exampl input num output explan pair indic whose correspond product divis product respect pair product respect divis exampl input num output explan exist pair indic whose correspond product divis constraint numslength numsi ","1635":"array string word string pref return number string word contain pref prefix prefix string lead contigu substr exampl input word payattentionpracticeattend pref output explan string contain prefix attent attend exampl input word leetcodewinloopssuccess pref code output explan string contain code prefix constraint wordslength wordsilength preflength wordsi pref lowercas english letter ","1636":"string step append charact either return minimum number step make anagram anagram string string contain charact differ order exampl input leetcod coat output explan step append letter onto leetcod form leetcodea step append letter leed onto coat form coatsleed leetcodea coatsleed anagram use total step shown way make anagram less step exampl input night thing output explan string alreadi anagram thu need step constraint slength tlength lowercas english letter ","1637":"array time timei denot time taken ith bu complet trip bu make multipl trip success next trip start immedi complet current trip also bu oper independ trip bu influenc trip bu also integ totaltrip denot number trip buse make total return minimum time requir buse complet least totaltrip trip exampl input time totaltrip output explan time number trip complet bu total number trip complet time number trip complet bu total number trip complet time number trip complet bu total number trip complet minimum time need buse complet least trip exampl input time totaltrip output explan bu complet first trip minimum time need complet trip constraint timelength timei totaltrip ","1638":"0index 2d integ array tire tiresi fi ri indic ith tire finish xth success lap fi second exampl fi ri tire would finish 1st lap second lap second 3rd lap second etc also integ changetim integ numlap race consist numlap lap may start race tire unlimit suppli tire everi lap may chang tire includ current tire type wait changetim second return minimum time finish race exampl input tire changetim numlap output explan lap start tire finish lap second lap continu tire finish lap second lap chang tire new tire second finish lap anoth second lap continu tire finish lap second total time second minimum time complet race second exampl input tire changetim numlap output explan lap start tire finish lap second lap continu tire finish lap second lap chang tire new tire second finish lap anoth second lap continu tire finish lap second lap chang tire tire second finish lap anoth second total time second minimum time complet race second constraint tireslength tiresilength fi changetim ri numlap ","1639":"0index integ array num also integ key present num everi uniqu integ target num count number time target immedi follow occurr key num word count number indic numslength numsi key numsi target return target maximum count test case gener target maximum count uniqu exampl input num key output explan target occurr indic occurr key integ occurr key return exampl input num key output explan target occurr indic occurr key target occurr index follow occurr key target maximum number occurr follow occurr key return constraint numslength numsi test case gener answer uniqu ","1640":"0index integ array map repres map rule shuffl decim system mappingi mean digit map digit system map valu integ new integ obtain replac occurr digit integ mappingi also anoth integ array num return array num sort nondecreas order base map valu element note element map valu appear rel order input element num sort base map valu replac exampl input map num output explan map number follow mapping9 occurr digit becom mapping1 occurr digit becom therefor map valu map remov lead zero map also remov lead zero sinc share map valu remain rel order come thu sort array exampl input map num output explan map map map thu sort array constraint mappinglength mappingi valu mappingi uniqu numslength numsi ","1641":"posit integ repres number node direct acycl graph dag node number inclus also 2d integ array edg edgesi toi denot unidirect edg toi graph return list answer answeri list ancestor ith node sort ascend order node u ancestor anoth node u reach via set edg exampl input edgelist output explan diagram repres input graph node ancestor node ancestor node ancestor node ancestor node ancestor node ancestor exampl input edgelist output explan diagram repres input graph node ancestor node ancestor node ancestor node ancestor node ancestor constraint edgeslength min2000 edgesilength toi toi duplic edg graph direct acycl ","1642":"string consist lowercas english letter move select adjac charact swap return minimum number move need make palindrom note input gener alway convert palindrom exampl input aabb output explan obtain palindrom abba baab obtain abba move aabb abab abba obtain baab move aabb abab baab thu minimum number move need make palindrom exampl input letelt output explan palindrom obtain move lettel way obtain letelt letetl lettel palindrom tleelt also obtain move shown possibl obtain palindrom less move constraint slength consist lowercas english letter convert palindrom use finit number move ","1643":"cell excel sheet repres string col denot column number cell repres alphabet letter exampl 1st column denot 3rd row row number cell rth row repres integ string format col1row1col2row2 col1 repres column c1 row1 repres row col2 repres column c2 row2 repres row c1 c2 return list cell c1 c2 cell repres string format mention sort nondecreas order first column row exampl input k1l2 output k1k2l1l2 explan diagram show cell present list red arrow denot order cell present exampl input a1f1 output a1b1c1d1e1f1 explan diagram show cell present list red arrow denot order cell present constraint slength consist uppercas english letter digit ","1644":"2d integ array descript descriptionsi parenti childi islefti indic parenti parent childi binari tree uniqu valu furthermor islefti childi left child parenti islefti childi right child parenti construct binari tree describ descript return root test case gener binari tree valid exampl input descript output explan root node node valu sinc parent result binari tree shown diagram exampl input descript output 12nullnull34 explan root node node valu sinc parent result binari tree shown diagram constraint descriptionslength descriptionsilength parenti childi islefti binari tree describ descript valid ","1645":"array integ num perform follow step find adjac number num noncoprim number found stop process otherwis delet number replac lcm least common multipl repeat process long keep find adjac noncoprim number return final modifi array shown replac adjac noncoprim number arbitrari order lead result test case gener valu final array less equal valu noncoprim gcdx gcdx greatest common divisor exampl input num output explan noncoprim lcm6 num noncoprim lcm12 num noncoprim lcm12 num noncoprim lcm6 num adjac noncoprim number num thu final modifi array note way obtain result array exampl input num output explan noncoprim lcm3 num noncoprim lcm3 num noncoprim lcm2 num adjac noncoprim number num thu final modifi array note way obtain result array constraint numslength numsi test case gener valu final array less equal ","1646":"0index integ array num integ key kdistant index index num exist least index numsj key return list kdistant indic sort increas order exampl input num key output explan nums2 key nums5 key index numsj key thu kdistant index index nums2 key kdistant index index nums2 key kdistant index index nums2 key kdistant index index nums5 key kdistant index index nums5 key kdistant index index nums5 key kdistant index thu return sort increas order exampl input num key output explan indic num exist index numsj key everi index kdistant index henc return constraint numslength numsi key integ array num numslength ","1647":"0index grid artifact buri integ 0index 2d integ array artifact describ posit rectangular artifact artifactsi r1i c1i r2i c2i denot ith artifact buri subgrid r1i c1i coordin topleft cell ith artifact r2i c2i coordin bottomright cell ith artifact excav cell grid remov mud cell part artifact buri underneath uncov part artifact uncov extract 0index 2d integ array dig digi ri ci indic excav cell ri ci return number artifact extract test case gener artifact overlap artifact cover cell entri dig uniqu exampl input artifact dig output explan differ color repres differ artifact excav cell label grid artifact extract name red artifact blue artifact part cell remain uncov extract thu return exampl input artifact dig output explan red blue artifact part uncov label extract return constraint artifactslength diglength minn2 artifactsilength digilength r1i c1i r2i c2i ri ci r1i r2i c1i c2i artifact overlap number cell cover artifact entri dig uniqu ","1648":"0index integ array num repres content pile nums0 topmost element pile move perform either follow pile empti remov topmost element pile remov element add back onto pile element becom new topmost element also integ denot total number move made return maximum valu topmost element pile possibl exactli move case possibl obtain nonempti pile move return exampl input num output explan way end top pile move follow step remov topmost element pile becom step remov topmost element pile becom step remov topmost element pile becom step add back onto pile pile becom note way end top pile shown largest answer possibl move exampl input num output explan first move option pop topmost element pile sinc possibl obtain nonempti pile move return constraint numslength numsi ","1649":"integ denot number node weight direct graph node number also 2d integ array edg edgesi toi weighti denot exist direct edg toi weight weighti lastli distinct integ dest denot distinct node graph return minimum weight subgraph graph possibl reach dest via set edg subgraph case subgraph exist return subgraph graph whose vertic edg subset origin graph weight subgraph sum weight constitu edg exampl input edg dest output explan figur repres input graph blue edg repres subgraph yield optim answer note subgraph also yield optim answer possibl get subgraph less weight satisfi constraint exampl input edg dest output explan figur repres input graph seen exist path node node henc subgraph satisfi constraint constraint edgeslength edgesilength toi dest toi dest pairwis distinct weighti ","1650":"integ array num consist integ need divid num pair element belong exactli pair element present pair equal return true num divid pair otherwis return fals exampl input num output true explan element num divid pair num divid pair satisfi condit exampl input num output fals explan way divid num pair pair satisfi everi condit constraint numslength numsi ","1651":"0index string text anoth 0index string pattern length lowercas english letter add either pattern0 pattern1 anywher text exactli note charact ad even begin end text return maximum number time pattern occur subsequ modifi text subsequ string deriv anoth string delet charact without chang order remain charact exampl input text abdcdbc pattern ac output explan add pattern0 text1 text2 get abadcdbc number time ac occur subsequ string subsequ ac ad charact text aabdcdbc abdacdbc howev string abdcadbc abdccdbc abdcdbcc although obtain subsequ ac thu suboptim shown possibl get subsequ ac ad charact exampl input text aabb pattern ab output explan string obtain text subsequ ab aaabb aaabb aabbb constraint textlength patternlength text pattern lowercas english letter ","1652":"array num posit integ oper choos number num reduc exactli half number note may choos reduc number futur oper return minimum number oper reduc sum num least half exampl input num output explan initi sum num equal follow way reduc sum least half pick number reduc pick number reduc pick number reduc final array total sum sum num reduc least half initi sum overal oper use return shown reduc sum least half less oper exampl input num output explan initi sum num equal follow way reduc sum least half pick number reduc pick number reduc pick number reduc final array total sum sum num reduc least half initi sum overal oper use return shown reduc sum least half less oper constraint numslength numsi ","1653":"0index binari string floor repres color tile floor floori denot ith tile floor color black hand floori denot ith tile floor color white also numcarpet carpetlen numcarpet black carpet length carpetlen tile cover tile carpet number white tile still visibl minimum carpet may overlap anoth return minimum number white tile still visibl exampl input floor numcarpet carpetlen output explan figur show way cover tile carpet white tile visibl way cover tile carpet leav less white tile visibl exampl input floor numcarpet carpetlen output explan figur show way cover tile carpet white tile visibl note carpet abl overlap anoth constraint carpetlen floorlength floori either numcarpet ","1654":"0index integ array num index part hill num closest nonequ neighbor smaller numsi similarli index part valley num closest nonequ neighbor larger numsi adjac indic part hill valley numsi numsj note index part hill valley must nonequ neighbor left right index return number hill valley num exampl input num output explan index nonequ neighbor left index neither hill valley index closest nonequ neighbor sinc index hill index closest nonequ neighbor sinc index valley index closest nonequ neighbor sinc index valley note part valley index index closest nonequ neighbor sinc index hill index nonequ neighbor right index neither hill valley hill valley return exampl input num output explan index nonequ neighbor left index neither hill valley index nonequ neighbor left index neither hill valley index closest nonequ neighbor sinc index neither hill valley index closest nonequ neighbor sinc index neither hill valley index closest nonequ neighbor sinc index neither hill valley index nonequ neighbor right index neither hill valley hill valley return constraint numslength numsi ","1655":"car infinit long road car number left right car present uniqu point 0index string direct length directionsi either denot whether ith car move toward left toward right stay current point respect move car speed number collis calcul follow car move opposit direct collid number collis increas move car collid stationari car number collis increas collis car involv longer move stay point collid car chang state direct motion return total number collis happen road exampl input direct rlrsll output explan collis happen road car collid sinc move opposit direct number collis becom car collid sinc car stationari number collis becom car collid sinc car stationari number collis becom car collid car collid car stay point collis get hit car number collis becom thu total number collis happen road exampl input direct llrr output explan car collid thu total number collis happen road constraint directionslength directionsi either ","1656":"alic bob oppon archeri competit competit set follow rule alic first shoot numarrow arrow bob shoot numarrow arrow point calcul follow target integ score section rang inclus section target score say alic bob shot ak arrow section respect ak alic take point ak bob take point howev ak nobodi take point exampl alic bob shot arrow section score alic take point hand alic shot arrow section score bob shot arrow section bob take point integ numarrow integ array alicearrow size repres number arrow alic shot score section bob want maxim total number point obtain return array bobarrow repres number arrow bob shot score section sum valu bobarrow equal numarrow multipl way bob earn maximum total point return exampl input numarrow alicearrow output explan tabl show competit score bob earn total point shown bob obtain score higher point exampl input numarrow alicearrow output explan tabl show competit score bob earn total point shown bob obtain score higher point constraint numarrow alicearrowslength bobarrowslength alicearrowsi bobarrowsi numarrow sumalicearrowsi numarrow ","1657":"0index string also 0index string querycharact length 0index array integ indic queryindic length use describ queri ith queri updat charact index queryindicesi charact querycharactersi return array length length lengthsi length longest substr consist repeat charact ith queri perform exampl input babacc querycharact bcb queryindic output explan 1st queri updat bbbacc longest substr consist repeat charact bbb length queri updat bbbccc longest substr consist repeat charact bbb ccc length 3rd queri updat bbbbcc longest substr consist repeat charact bbbb length thu return exampl input abyzz querycharact queryindic output explan 1st queri updat abazz longest substr consist repeat charact zz length queri updat aaazz longest substr consist repeat charact aaa length thu return constraint slength consist lowercas english letter querycharacterslength queryindiceslength querycharact consist lowercas english letter queryindicesi slength ","1658":"0index integ array nums1 nums2 return list answer size answer0 list distinct integ nums1 present nums2 answer1 list distinct integ nums2 present nums1 note integ list may return order exampl input nums1 nums2 output explan nums1 nums11 present index nums2 wherea nums10 nums12 present nums2 therefor answer0 nums2 nums20 present index nums1 wherea nums21 nums22 present nums2 therefor answer1 exampl input nums1 nums2 output explan nums1 nums12 nums13 present nums2 sinc nums12 nums13 valu includ answer0 everi integ nums2 present nums1 therefor answer1 constraint nums1length nums2length nums1i nums2i ","1659":"integ array queri posit integ intlength return array answer answeri either queriesith smallest posit palindrom length intlength palindrom exist palindrom number read backward forward palindrom lead zero exampl input queri intlength output explan first palindrom length palindrom length exampl input queri intlength output explan first palindrom length constraint querieslength queriesi intlength ","1660":"pile coin tabl pile consist posit number coin assort denomin move choos coin top pile remov add wallet list pile pilesi list integ denot composit ith pile top bottom posit integ return maximum total valu coin wallet choos exactli coin optim exampl input pile output explan diagram show differ way choos coin maximum total obtain exampl input pile output explan maximum total obtain choos coin last pile constraint pileslength pilesij sumpilesilength ","1661":"bit flip number choos bit binari represent flip either exampl binari represent may choos bit includ lead zero shown flip flip first bit right get flip second bit right get flip fifth bit right lead get etc integ start goal return minimum number bit flip convert start goal exampl input start goal output explan binari represent respect convert step flip first bit right flip third bit right flip fourth bit right shown convert less step henc return exampl input start goal output explan binari represent respect convert step flip first bit right flip second bit right flip third bit right shown convert less step henc return constraint start goal note question ham distanc ","1662":"0index binari string repres type build along street si denot ith build offic si denot ith build restaur citi offici would like select build random inspect howev ensur varieti consecut build select build type exampl select 1st 3rd 5th build would form allow due consecut build type return number valid way select build exampl input output explan follow set indic select valid form form form form form form select valid thu total way exampl input output explan shown valid select constraint slength si either ","1663":"build string length charact time prepend new charact front string string label string length label si exampl abaca ca aca etc score si length longest common prefix si note final string return sum score everi si exampl input babab output explan longest common prefix score ab common prefix score bab longest common prefix bab score abab common prefix score babab longest common prefix babab score sum score return exampl input azbazbzaz output explan az longest common prefix az score azbzaz longest common prefix azb score azbazbzaz longest common prefix azbazbzaz score si score sum score return constraint slength consist lowercas english letter ","1664":"string current correct repres 24hour time 24hour time format hhmm earliest 24hour time latest oper increas time current minut perform oper number time return minimum number oper need convert current correct exampl input current correct output explan convert current correct oper follow add minut current current becom add minut current current becom add minut current current becom proven possibl convert current correct fewer oper exampl input current correct output explan add minut current minimum number oper need constraint current correct format hhmm current correct ","1665":"integ array match matchesi winneri loseri indic player winneri defeat player loseri match return list answer size answer0 list player lost match answer1 list player lost exactli match valu list return increas order note consid player play least match testcas gener match outcom exampl input match output explan player lost match player lost match player lost match thu answer0 answer1 exampl input match output explan player lost match player lost match thu answer0 answer1 constraint matcheslength matchesilength winneri loseri winneri loseri matchesi uniqu ","1666":"0index integ array candi element array denot pile candi size candiesi divid pile number sub pile merg pile togeth also integ alloc pile candi children child get number candi child take pile candi pile candi may go unus return maximum number candi child get exampl input candi output explan divid candies1 pile size candies2 pile size pile candi size alloc pile size children proven child receiv candi exampl input candi output explan children candi total imposs ensur child receiv least candi thu child get candi answer constraint candieslength candiesi ","1667":"charact array key contain uniqu charact string array valu contain string length also anoth string array dictionari contain permit origin string decrypt implement data structur encrypt decrypt 0index string string encrypt follow process charact string find index satisfi keysi key replac valuesi string note case charact string present key encrypt process carri empti string return string decrypt follow process substr length occur even index string find valuesi multipl valid choos mean string could multipl possibl string decrypt replac keysi string implement encrypt class encrypterchar key string valu string dictionari initi encrypt class key valu dictionari string encryptstr word1 encrypt word1 encrypt process describ return encrypt string int decryptstr word2 return number possibl string word2 could decrypt also appear dictionari exampl input encrypt encrypt decrypt ei ei abcd acbd adbc badc dacb cadb cbda abad abcd eizfeiam output null eizfeiam explan encrypt encrypt new encryptera ei ei abcd acbd adbc badc dacb cadb cbda abad encrypterencryptabcd return eizfeiam map ei map map ei map encrypterdecrypteizfeiam return ei map map map thu possibl string decrypt abad cbad abcd cbcd string abad abcd appear dictionari answer constraint keyslength valueslength valuesilength dictionarylength dictionaryilength keysi dictionaryi uniqu word1length word2length word1i appear key word2length even key valuesi dictionaryi word1 word2 contain lowercas english letter call made encrypt decrypt total ","1668":"posit integ num may swap digit num pariti ie odd digit even digit return largest possibl valu num number swap exampl input num output explan swap digit digit result number swap digit digit result number note may sequenc swap shown largest possibl number also note may swap digit digit sinc differ pariti exampl input num output explan swap digit digit result number swap first digit digit result number note may sequenc swap shown largest possibl number constraint num ","1669":"0index string express form num1num2 num1 num2 repres posit integ add pair parenthes express addit parenthes express valid mathemat express evalu smallest possibl valu left parenthesi must ad left right parenthesi must ad right return express ad pair parenthes express evalu smallest possibl valu multipl answer yield result return input gener origin valu express valu express ad pair parenthes meet requir fit within sign 32bit integ exampl input express output explan express evalu note invalid right parenthesi must right shown smallest possibl valu exampl input express output explan express evalu exampl input express output explan express evalu constraint expressionlength express consist digit express start end digit express contain exactli origin valu express valu express ad pair parenthes meet requir fit within sign 32bit integ ","1670":"array nonneg integ num integ oper may choos element num increment return maximum product num oper sinc answer may larg return modulo note maxim product take modulo exampl input num output explan increment first number time num product shown maximum product possibl return note may way increment num maximum product exampl input num output explan increment second number time increment fourth number time num product shown maximum product possibl return note may way increment num maximum product constraint numslength numsi ","1671":"alic caretak garden want plant flower maxim total beauti garden 0index integ array flower size flowersi number flower alreadi plant ith garden flower alreadi plant remov anoth integ newflow maximum number flower alic addit plant also integ target full partial garden consid complet least target flower total beauti garden determin sum follow number complet garden multipli full minimum number flower incomplet garden multipli partial incomplet garden valu return maximum total beauti alic obtain plant newflow flower exampl input flower newflow target full partial output explan alic plant flower 0th garden flower 1st garden flower garden flower 3rd garden garden plant total flower garden complet minimum number flower incomplet garden thu total beauti way plant flower obtain total beauti higher exampl input flower newflow target full partial output explan alic plant flower 0th garden flower 1st garden flower garden flower 3rd garden garden plant total flower garden complet minimum number flower incomplet garden thu total beauti way plant flower obtain total beauti higher note alic could make garden complet case would obtain lower total beauti constraint flowerslength flowersi target newflow full partial ","1672":"integ num1 num2 return sum integ exampl input num1 num2 output explan num1 num2 sum return exampl input num1 num2 output explan num1 num2 return constraint num1 num2 ","1673":"root binari tree consist exactli node root left child right child return true valu root equal sum valu children fals otherwis exampl input root output true explan valu root left child right child respect equal return true exampl input root output fals explan valu root left child right child respect equal return fals constraint tree consist root left child right child nodev ","1674":"integ array num size return number valu closest num multipl answer return number largest valu exampl input num output explan distanc distanc distanc distanc distanc thu closest number array exampl input num output explan closest number larger return constraint numsi ","1675":"integ total indic amount money also integ cost1 cost2 indic price pen pencil respect spend part money buy multipl quantiti none kind write utensil return number distinct way buy number pen pencil exampl input total cost1 cost2 output explan price pen price pencil buy pen buy pencil buy pen buy pencil buy pen buy pencil total number way buy pen pencil exampl input total cost1 cost2 output explan price pen pencil cost total buy write utensil therefor way buy pen pencil constraint total cost1 cost2 ","1676":"atm machin store banknot denomin dollar initi atm empti user use machin deposit withdraw amount money withdraw machin priorit use banknot larger valu exampl want withdraw banknot banknot banknot machin use banknot howev tri withdraw banknot banknot withdraw request reject machin first tri use banknot unabl use banknot complet remain note machin allow use banknot instead banknot implement atm class atm initi atm object void depositint banknotescount deposit new banknot order int withdrawint amount return array length number banknot hand user order updat number banknot atm withdraw return possibl withdraw banknot case exampl input atm deposit withdraw deposit withdraw withdraw output null null null explan atm atm new atm atmdeposit00121 deposit banknot banknot banknot atmwithdraw600 return machin use banknot banknot banknot left machin atmdeposit01011 deposit banknot banknot machin atmwithdraw600 return machin tri use banknot unabl complet remain withdraw request reject sinc request reject number banknot machin modifi atmwithdraw550 return machin use banknot banknot constraint banknotescountlength banknotescounti amount call total made withdraw deposit least call made function withdraw deposit sum banknotescounti deposit doesnt exceed ","1677":"undirect graph node number 0index integ array score length scoresi denot score node also 2d integ array edg edgesi ai bi denot exist undirect edg connect node ai bi node sequenc valid meet follow condit edg connect everi pair adjac node sequenc node appear sequenc score node sequenc defin sum score node sequenc return maximum score valid node sequenc length sequenc exist return exampl input score edg output explan figur show graph chosen node sequenc score node sequenc shown node sequenc score note sequenc also valid score sequenc valid sinc edg connect node exampl input score edg output explan figur show graph valid node sequenc length return constraint scoreslength scoresi edgeslength edgesilength ai bi ai bi duplic edg ","1678":"string consist digit integ round complet length greater round follow divid consecut group size first charact first group next charact second group note size last group smaller replac group string repres sum digit exampl replac merg consecut group togeth form new string length string greater repeat step return round complet exampl input output explan first round divid group size calcul digit sum group becom first round second round divid calcul digit sum group becom second round slength return answer exampl input output explan divid calcul digit sum group becom whose length equal return constraint slength consist digit ","1679":"0index integ array task tasksi repres difficulti level task round complet either task difficulti level return minimum round requir complet task possibl complet task exampl input task output explan complet task possibl plan first round complet task difficulti level second round complet task difficulti level third round complet task difficulti level fourth round complet task difficulti level shown task complet fewer round answer exampl input task output explan task difficulti level round complet either task difficulti level henc complet task answer constraint taskslength tasksi note question minimum number oper make array empti ","1680":"2d integ array grid size cell contain posit integ corner path defin set adjac cell turn specif path exclus move either horizont vertic turn without return previous visit cell turn path move exclus altern direct move vertic move horizont vice versa also without return previous visit cell product path defin product valu path return maximum number trail zero product corner path found grid note horizont movement mean move either left right direct vertic movement mean move either direct exampl input grid output explan grid left show valid corner path product trail zero shown maximum trail zero product corner path grid middl corner path turn grid right corner path requir return previous visit cell exampl input grid output explan grid shown figur corner path grid result product trail constraint gridlength gridilength gridij ","1681":"tree ie connect undirect graph cycl root node consist node number tree repres 0index array parent size parenti parent node sinc node root parent0 also string length si charact assign node return length longest path tree pair adjac node path charact assign exampl input parent abacb output explan longest path adjac node differ charact tree path length path return proven longer path satisfi condit exampl input parent aabc output explan longest path adjac node differ charact path length path return constraint parentlength slength parenti parent0 parent repres valid tree consist lowercas english letter ","1682":"2d integ array num numsi nonempti array distinct posit integ return list integ present array num sort ascend order exampl input num output explan integ present nums0 nums1 nums2 return exampl input num output explan exist integ present nums0 nums1 return empti list constraint numslength sumnumsilength numsij valu numsi uniqu ","1683":"2d integ array circl circlesi xi yi ri repres center xi yi radiu ri ith circl drawn grid return number lattic point present insid least circl note lattic point point integ coordin point lie circumfer circl also consid insid exampl input circl output explan figur show circl lattic point present insid circl shown green point shown red consid insid circl henc number lattic point present insid least circl exampl input circl output explan figur show circl exactli lattic point present insid least circl constraint circleslength circlesilength xi yi ri minxi yi ","1684":"2d integ array rectangl rectanglesi li hi indic ith rectangl length li height hi also 2d integ array point pointsj xj yj point coordin xj yj ith rectangl bottomleft corner point coordin topright corner point li hi return integ array count length pointslength countj number rectangl contain jth point ith rectangl contain jth point xj li yj hi note point lie edg rectangl also consid contain rectangl exampl input rectangl point output explan first rectangl contain point second rectangl contain point third rectangl contain point number rectangl contain point number rectangl contain point therefor return exampl input rectangl point output explan first rectangl contain point second rectangl contain point third rectangl contain point number rectangl contain point number rectangl contain point therefor return constraint rectangleslength pointslength rectanglesilength pointsjlength li xj hi yj rectangl uniqu point uniqu ","1685":"0index 2d integ array flower flowersi starti endi mean ith flower full bloom starti endi inclus also 0index integ array peopl size peoplei time ith person arriv see flower return integ array answer size answeri number flower full bloom ith person arriv exampl input flower peopl output explan figur show time flower full bloom peopl arriv person return number flower full bloom arriv exampl input flower peopl output explan figur show time flower full bloom peopl arriv person return number flower full bloom arriv constraint flowerslength flowersilength starti endi peoplelength peoplei ","1686":"string array word string wordsi compris lowercas english letter return number string word prefix prefix string substr occur begin string substr contigu sequenc charact within string exampl input word abcabbcabc abc output explan string word prefix abc ab abc thu number string word prefix exampl input word output explan string prefix note string occur multipl time word count time constraint wordslength wordsilength slength wordsi lowercas english letter ","1687":"0index integ array num length averag differ index absolut differ averag first element num averag last element averag round nearest integ return index minimum averag differ multipl indic return smallest note absolut differ number absolut valu differ averag element sum element divid integ divis averag element consid exampl input num output explan averag differ index averag differ index averag differ index averag differ index averag differ index averag differ index averag differ index minimum averag differ return exampl input num output explan index return averag differ index constraint numslength numsi ","1688":"integ repres 0index grid also 2d integ array guard wall guardsi rowi coli wallsj rowj colj repres posit ith guard jth wall respect guard see everi cell cardin direct north east south west start posit unless obstruct wall anoth guard cell guard least guard see return number unoccupi cell guard exampl input guard wall output explan guard unguard cell shown red green respect diagram total unguard cell return exampl input guard wall output explan unguard cell shown green diagram total unguard cell return constraint guardslength wallslength guardslength wallslength guardsilength wallsjlength rowi rowj coli colj posit guard wall uniqu ","1689":"0index 2d integ array grid size repres field cell valu repres grass repres fire repres wall fire pass situat topleft cell want travel safehous bottomright cell everi minut may move adjac grass cell move everi fire cell spread adjac cell wall return maximum number minut stay initi posit move still safe reach safehous imposs return alway reach safehous regardless minut stay return note even fire spread safehous immedi reach count safe reach safehous cell adjac anoth cell former directli north east south west latter ie side touch exampl input grid output explan figur show scenario stay initi posit minut still abl safe reach safehous stay minut allow safe reach safehous exampl input grid output explan figur show scenario immedi move toward safehous fire spread cell move toward imposs safe reach safehous thu return exampl input grid output explan figur show initi grid notic fire contain wall alway abl safe reach safehous thu return constraint gridlength gridilength gridij either grid00 gridm ","1690":"string number repres posit integ charact digit return result string remov exactli occurr digit number valu result string decim form maxim test case gener digit occur least number exampl input number digit output explan remov result exampl input number digit output explan remov first get remov second get sinc return exampl input number digit output explan remov either first second result string constraint numberlength number consist digit digit digit digit occur least number ","1691":"integ array card cardsi repres valu ith card pair card match card valu return minimum number consecut card pick pair match card among pick card imposs match card return exampl input card output explan pick card contain match pair card valu note pick card also optim exampl input card output explan way pick set consecut card contain pair match card constraint cardslength cardsi ","1692":"integ array num integ return number distinct subarray element divis array nums1 nums2 said distinct differ length exist least index nums1i nums2i subarray defin nonempti contigu sequenc element array exampl input num output explan element indic divis distinct subarray element divis note subarray occur num count subarray count element divis exampl input num output explan element num divis also everi subarray num element divis sinc subarray distinct total number subarray satisfi constraint constraint numslength numsi numslength solv problem time complex ","1693":"appeal string number distinct charact found string exampl appeal abbca distinct charact string return total appeal substr substr contigu sequenc charact within string exampl input abbca output explan follow substr abbca substr length appeal respect sum substr length ab ca appeal respect sum substr length abb bbc bca appeal respect sum substr length abbc bbca appeal respect sum substr length abbca appeal sum total sum exampl input code output explan follow substr code substr length e appeal respect sum substr length co od de appeal respect sum substr length cod ode appeal respect sum substr length code appeal sum total sum constraint slength consist lowercas english letter ","1694":"string num repres larg integ integ good meet follow condit substr num length consist uniqu digit return maximum good integ string empti string integ exist note substr contigu sequenc charact within string may lead zero num good integ exampl input num output explan distinct good integ largest return exampl input num output explan good integ exampl input num output explan substr length consist uniqu digit therefor good integ constraint numlength num consist digit ","1695":"alic text bob use phone map digit letter shown figur order add letter alic press key correspond digit time posit letter key exampl add letter alic press time similarli add letter alic press twice note digit map letter alic use howev due error transmiss bob receiv alic text messag receiv string press key instead exampl alic sent messag bob bob receiv string string pressedkey repres string receiv bob return total number possibl text messag alic could sent sinc answer may larg return modulo exampl input pressedkey output explan possibl text messag alic could sent aaadd abdd badd cdd abe bae ce sinc possibl messag return exampl input pressedkey output explan possibl text messag alic could sent sinc need return answer modulo return constraint pressedkeyslength pressedkey consist digit ","1696":"parenthes string nonempti string consist valid follow condit true written ab concaten valid parenthes string written valid parenthes string matrix parenthes grid valid parenthes string path grid path satisfi follow condit path start upper left cell path end bottomright cell path ever move right result parenthes string form path valid return true exist valid parenthes string path grid otherwis return fals exampl input grid output true explan diagram show possibl path form valid parenthes string first path shown result valid parenthes string second path shown result valid parenthes string note may valid parenthes string path exampl input grid output fals explan possibl path form parenthes string sinc neither valid parenthes string return fals constraint gridlength gridilength gridij either ","1697":"kbeauti integ num defin number substr num read string meet follow condit length divisor num integ num return kbeauti num note lead zero allow divisor valu substr contigu sequenc charact string exampl input num output explan follow substr num length divisor divisor therefor kbeauti exampl input num output explan follow substr num length divisor divisor divisor divisor divisor therefor kbeauti constraint num numlength take num string ","1698":"2d integ array tile tilesi li ri repres everi tile rang li ri color white also integ carpetlen length singl carpet place anywher return maximum number white tile cover carpet exampl input tile carpetlen output explan place carpet start tile cover white tile return note may place carpet cover white tile shown carpet cover white tile exampl input tile carpetlen output explan place carpet start tile cover white tile return constraint tileslength tilesilength li ri carpetlen tile nonoverlap ","1699":"varianc string defin largest differ number occurr charact present string note charact may may string consist lowercas english letter return largest varianc possibl among substr substr contigu sequenc charact within string exampl input aababbb output explan possibl varianc along respect substr list varianc substr ab abab aababb ba bbb varianc substr aab aba abb aabab ababb aababbb bab varianc substr aaba ababbb abbb babb varianc substr babbb sinc largest possibl varianc return exampl input abcd output explan letter occur varianc everi substr constraint slength consist lowercas english letter ","1700":"0index string array word wordsi consist lowercas english letter oper select index wordslength wordsi wordsi anagram delet wordsi word keep perform oper long select index satisfi condit return word perform oper shown select indic oper arbitrari order lead result anagram word phrase form rearrang letter differ word phrase use origin letter exactli exampl dacb anagram abdc exampl input word abbabababbaacdcd output abbacd explan way obtain result array use follow oper sinc words2 bbaa words1 baba anagram choos index delet words2 word abbababacdcd sinc words1 baba words0 abba anagram choos index delet words1 word abbacdcd sinc words2 cd words1 cd anagram choos index delet words2 word abbacd longer perform oper abbacd final answer exampl input word abcd output abcd explan adjac string word anagram oper perform constraint wordslength wordsilength wordsi consist lowercas english letter ","1701":"alic manag compani rent floor build offic space alic decid floor special floor use relax integ bottom top denot alic rent floor bottom top inclus also integ array special speciali denot special floor alic design relax return maximum number consecut floor without special floor exampl input bottom top special output explan follow rang inclus consecut floor without special floor total amount floor total amount floor total amount floor therefor return maximum number floor exampl input bottom top special output explan everi floor rent special floor return constraint speciallength bottom speciali top valu special uniqu ","1702":"bitwis array num bitwis integ num exampl num bitwis equal also num bitwis array posit integ candid evalu bitwis everi combin number candid number candid may use combin return size largest combin candid bitwis greater exampl input candid output explan combin bitwis size combin shown combin size greater bitwis greater note combin may largest size exampl combin bitwis exampl input candid output explan largest combin bitwis size combin return constraint candidateslength candidatesi ","1703":"empti set interv implement data structur add interv set interv count number integ present least interv implement countinterv class countinterv initi object empti set interv void addint left int right add interv left right set interv int count return number integ present least interv note interv left right denot integ left right exampl input countinterv add add count add count output null null null null explan countinterv countinterv new countinterv initi object empti set interv countintervalsadd2 add set interv countintervalsadd7 add set interv countintervalscount return integ present interv integ present interv countintervalsadd5 add set interv countintervalscount return integ present interv integ present interv integ present interv integ present interv constraint left right call total made add count least call made count ","1704":"bag number 0index integ array capac rock ith bag hold maximum capacityi rock current contain rocksi rock also integ additionalrock number addit rock place bag return maximum number bag could full capac place addit rock bag exampl input capac rock additionalrock output explan place rock bag rock bag number rock bag bag full capac bag full capac return shown possibl bag full capac note may way place rock result answer exampl input capac rock additionalrock output explan place rock bag rock bag number rock bag bag full capac bag full capac return shown possibl bag full capac note use addit rock constraint capacitylength rockslength capacityi rocksi capacityi additionalrock ","1705":"2d integ array stockpric stockpricesi dayi pricei indic price stock day dayi pricei line chart creat array plot point xy plane xaxi repres day yaxi repres price connect adjac point exampl shown return minimum number line need repres line chart exampl input stockpric output explan diagram repres input xaxi repres day yaxi repres price follow line drawn repres line chart line red pass line blue line green pass shown possibl repres line chart use less line exampl input stockpric output explan shown diagram line chart repres singl line constraint stockpriceslength stockpricesilength dayi pricei dayi distinct ","1706":"ruler kingdom armi wizard command 0index integ array strength strengthi denot strength ith wizard contigu group wizard ie wizard strength form subarray strength total strength defin product follow valu strength weakest wizard group total individu strength wizard group return sum total strength contigu group wizard sinc answer may larg return modulo subarray contigu nonempti sequenc element within array exampl input strength output explan follow contigu group wizard total strength min1 sum1 total strength min3 sum3 total strength min1 sum1 total strength min2 sum2 total strength min13 sum13 total strength min31 sum31 total strength min12 sum12 total strength min131 sum131 total strength min312 sum312 total strength min1312 sum1312 sum total strength exampl input strength output explan follow contigu group wizard total strength min5 sum5 total strength min4 sum4 total strength min6 sum6 total strength min54 sum54 total strength min46 sum46 total strength min546 sum546 sum total strength constraint strengthlength strengthi ","1707":"0index string num length consist digit return true everi index rang digit occur numi time num otherwis return fals exampl input num output true explan num0 digit occur num num1 digit occur twice num num2 digit occur num num3 digit occur time num condit hold true everi index return true exampl input num output fals explan num0 digit occur time actual occur twice num num1 digit occur time actual occur time num num2 digit occur time num indic violat condit return fals constraint numlength num consist digit ","1708":"chat log messag string array messag sender messagesi messag sent sendersi messag list word separ singl space lead trail space word count sender total number word sent sender note sender may send messag return sender largest word count sender largest word count return lexicograph largest name note uppercas letter come lowercas letter lexicograph order alic alic distinct exampl input messag hello usertwooohi userthreewond day alicenic day userthre sender aliceusertwouserthreealic output alic explan alic send total word usertwo send total word userthre send total word sinc alic largest word count return alic exampl input messag leetcod everyoneleetcod use practic sender bobcharli output charli explan bob send total word charli send total word sinc tie largest word count return sender lexicograph larger name charli constraint messageslength senderslength messagesilength sendersilength messagesi consist uppercas lowercas english letter word messagesi separ singl space messagesi lead trail space sendersi consist uppercas lowercas english letter ","1709":"integ denot number citi countri citi number also 2d integ array road roadsi ai bi denot exist bidirect road connect citi ai bi need assign citi integ valu valu use import road defin sum valu citi connect return maximum total import road possibl assign valu optim exampl input road output explan figur show countri assign valu road import road import road import road import road import road import total import road shown obtain greater total import exampl input road output explan figur show countri assign valu road import road import road import total import road shown obtain greater total import constraint roadslength roadsilength ai bi ai bi duplic road ","1710":"concert hall row number seat number need design ticket system alloc seat follow case group spectat sit togeth row everi member group spectat get seat may may sit togeth note spectat picki henc book seat member group get seat row number less equal maxrow maxrow vari group group case multipl row choos row smallest number chosen multipl seat choos row seat smallest number chosen implement bookmyshow class bookmyshowint int initi object number row number seat per row int gatherint int maxrow return array length denot row seat number respect first seat alloc member group must sit togeth word return smallest possibl seat valid empti row maxrow return case possibl alloc seat group boolean scatterint int maxrow return true member group alloc seat row maxrow may may sit togeth seat alloc alloc seat group smallest row number smallest possibl seat number row otherwis return fals exampl input bookmyshow gather gather scatter scatter output null true fals explan bookmyshow bm new bookmyshow2 row seat bmsgather4 return group book seat row bmsgather2 return seat left row possibl book consecut seat bmsscatter5 return true group book seat row seat row bmsscatter5 return fals seat left hall constraint maxrow call total made gather scatter ","1711":"0index string target take letter rearrang form new string return maximum number copi target form take letter rearrang exampl input ilovecodingonleetcod target code output explan first copi code take letter indic second copi code take letter indic string form ecod code rearrang code make copi code return exampl input abcba target abc output explan make copi abc take letter indic make copi abc return note extra indic reus letter index make second copi abc exampl input abbaccaddaeea target aaaaa output explan make copi aaaaa take letter indic make copi aaaaa return constraint slength targetlength target lowercas english letter note question maximum number balloon ","1712":"sentenc string singlespac separ word word contain digit lowercas letter dollar sign word repres price sequenc digit preced dollar sign exampl repres price 1e5 string sentenc repres sentenc integ discount word repres price appli discount discount price updat word sentenc updat price repres exactli decim place return string repres modifi sentenc note price contain digit exampl input sentenc candi shop discount output candi shop explan word repres price discount yield replac discount yield sinc need exactli decim place price replac exampl input sentenc discount output explan appli discount price result word repres price replac constraint sentencelength sentenc consist lowercas english letter digit sentenc lead trail space word sentenc separ singl space price posit number without lead zero price digit discount ","1713":"0index integ array num step remov element numsi numsi numsi numslength return number step perform num becom nondecreas array exampl input num output explan follow step perform step becom step becom step becom nondecreas array therefor return exampl input num output explan num alreadi nondecreas array therefor return constraint numslength numsi ","1714":"0index 2d integ array grid size cell valu repres empti cell repres obstacl may remov move left right empti cell return minimum number obstacl remov move upper left corner lower right corner exampl input grid output explan remov obstacl creat path shown need remov least obstacl return note may way remov obstacl creat path exampl input grid output explan move without remov obstacl return constraint gridlength gridilength gridij either grid00 gridm ","1715":"integ array num integ may partit num subsequ element num appear exactli subsequ return minimum number subsequ need differ maximum minimum valu subsequ subsequ sequenc deriv anoth sequenc delet element without chang order remain element exampl input num output explan partit num subsequ differ maximum minimum valu first subsequ differ maximum minimum valu second subsequ sinc subsequ creat return shown minimum number subsequ need exampl input num output explan partit num subsequ differ maximum minimum valu first subsequ differ maximum minimum valu second subsequ sinc subsequ creat return note anoth optim solut partit num subsequ exampl input num output explan partit num subsequ differ maximum minimum valu first subsequ differ maximum minimum valu second subsequ differ maximum minimum valu third subsequ sinc subsequ creat return shown minimum number subsequ need constraint numslength numsi ","1716":"0index array num consist distinct posit integ appli oper array ith oper replac number operationsi0 operationsi1 guarante ith oper operationsi0 exist num operationsi1 exist num return array obtain appli oper exampl input num oper output explan perform follow oper num replac number num becom replac number num becom replac number num becom return final array exampl input num oper output explan perform follow oper num replac number num becom replac number num becom replac number num becom return array constraint numslength operationslength valu num distinct operationsilength numsi operationsi0 operationsi1 operationsi0 exist num appli ith oper operationsi1 exist num appli ith oper ","1717":"design text editor cursor follow add text cursor delet text cursor simul backspac key move cursor either left right delet text charact left cursor delet cursor also remain within actual text move beyond formal cursorposit currenttextlength alway hold implement texteditor class texteditor initi object empti text void addtextstr text append text cursor cursor end right text int deletetextint delet charact left cursor return number charact actual delet string cursorleftint move cursor left time return last min10 len charact left cursor len number charact left cursor string cursorrightint move cursor right time return last min10 len charact left cursor len number charact left cursor exampl input texteditor addtext deletetext addtext cursorright cursorleft deletetext cursorleft cursorright leetcod practic output null null null etpractic leet practi explan texteditor texteditor new texteditor current text charact repres cursor texteditoraddtextleetcod current text leetcod texteditordeletetext4 return current text leet charact delet texteditoraddtextpractic current text leetpractic texteditorcursorright3 return etpractic current text leetpractic cursor move beyond actual text thu move etpractic last charact left cursor texteditorcursorleft8 return leet current text leetpractic leet last min10 charact left cursor texteditordeletetext10 return current text practic charact delet texteditorcursorleft2 return current text practic cursor move beyond actual text thu move last min10 charact left cursor texteditorcursorright6 return practi current text practic practi last min10 charact left cursor constraint textlength text consist lowercas english letter call total made addtext deletetext cursorleft cursorright followup could find solut time complex ok per call ","1718":"password said strong satisfi follow criteria least charact contain least lowercas letter contain least uppercas letter contain least digit contain least special charact special charact charact follow string contain charact adjac posit ie aab violat condit aba string password return true strong password otherwis return fals exampl input password ilovele3tcod output true explan password meet requir therefor return true exampl input password meyouismydream output fals explan password contain digit also contain charact adjac posit therefor return fals exampl input password 1ab output fals explan password meet length requir therefor return fals constraint passwordlength password consist letter digit special charact ","1719":"posit integ array spell potion length respect spellsi repres strength ith spell potionsj repres strength jth potion also integ success spell potion pair consid success product strength least success return integ array pair length pairsi number potion form success pair ith spell exampl input spell potion success output explan 0th spell pair success 1st spell pair success spell pair success thu return exampl input spell potion success output explan 0th spell pair success 1st spell pair success spell pair success thu return constraint spellslength potionslength spellsi potionsi success ","1720":"score array defin product sum length exampl score posit integ array num integ return number nonempti subarray num whose score strictli less subarray contigu sequenc element within array exampl input num output explan subarray score less score score score score score score note subarray consid score respect need score strictli less exampl input num output explan everi subarray except score less score greater thu subarray score less constraint numslength numsi ","1721":"0index 2d integ array bracket bracketsi upperi percenti mean ith tax bracket upper bound upperi tax rate percenti bracket sort upper bound ie upperi1 upperi bracketslength tax calcul follow first upper0 dollar earn tax rate percent0 next upper1 upper0 dollar earn tax rate percent1 next upper2 upper1 dollar earn tax rate percent2 integ incom repres amount money earn return amount money pay tax answer within actual answer accept exampl input bracket incom output explan base incom dollar 1st tax bracket dollar tax bracket dollar 3rd tax bracket tax rate tax bracket respect total pay tax exampl input bracket incom output explan base incom dollar 1st tax bracket dollar tax bracket tax rate tax bracket respect total pay tax exampl input bracket incom output explan incom tax pay total tax constraint bracketslength upperi percenti incom upperi sort ascend order valu upperi uniqu upper bound last tax bracket greater equal incom ","1722":"0index integ matrix grid consist distinct integ move matrix cell cell next row cell move cell note possibl move cell last row possibl move cost 0index 2d array movecost size movecostij cost move cell valu cell column next row cost move cell last row grid ignor cost path grid sum valu cell visit plu sum cost move made return minimum cost path start cell first row end cell last row exampl input grid movecost output explan path minimum possibl cost path sum valu cell visit cost move cost move total cost path exampl input grid movecost output explan path minimum possibl cost path sum valu cell visit cost move total cost path constraint gridlength gridilength grid consist distinct integ movecostlength movecostilength movecostij ","1723":"integ array cooki cookiesi denot number cooki ith bag also integ denot number children distribut bag cooki cooki bag must go child split unfair distribut defin maximum total cooki obtain singl child distribut return minimum unfair distribut exampl input cooki output explan optim distribut 1st child receiv total cooki child receiv total cooki unfair distribut max3130 shown distribut unfair less exampl input cooki output explan optim distribut 1st child receiv total cooki child receiv total cooki 3rd child receiv total cooki unfair distribut max777 shown distribut unfair less constraint cookieslength cookiesi cookieslength ","1724":"array string idea repres list name use process name compani process name compani follow choos distinct name idea call ideaa ideab swap first letter ideaa ideab new name found origin idea name ideaa ideab concaten ideaa ideab separ space valid compani name otherwis valid name return number distinct valid name compani exampl input idea coffeedonutstimetoffe output explan follow select valid coffe donut compani name creat doffe conut donut coffe compani name creat conut doffe donut time compani name creat tonut dime donut toffe compani name creat tonut doffe time donut compani name creat dime tonut toffe donut compani name creat doffe tonut therefor total distinct compani name follow exampl invalid select coffe time name toffe form swap alreadi exist origin array time toffe name still swap exist origin array coffe toffe name form swap alreadi exist origin array exampl input idea lackback output explan valid select therefor return constraint ideaslength ideasilength ideasi consist lowercas english letter string idea uniqu ","1725":"integ num consid set posit integ follow properti unit digit integ sum integ num return minimum possibl size set set exist note set contain multipl instanc integ sum empti set consid unit digit number rightmost digit number exampl input num output explan valid set sum integ unit digit anoth valid set shown minimum possibl size valid set exampl input num output explan possibl obtain sum use integ unit digit exampl input num output explan sum empti set consid constraint num ","1726":"binari string posit integ return length longest subsequ make binari number less equal note subsequ contain lead zero empti string consid equal subsequ string deriv anoth string delet charact without chang order remain charact exampl input output explan longest subsequ make binari number less equal number equal decim note also possibl equal decim respect length subsequ return exampl input output explan longest subsequ make binari number less equal number equal decim length subsequ return constraint slength si either ","1727":"integ repres height width rectangular piec wood also 2d integ array price pricesi hi wi pricei indic sell rectangular piec wood height hi width wi pricei dollar cut piec wood must make vertic horizont cut across entir height width piec split smaller piec cut piec wood number smaller piec sell piec accord price may sell multipl piec shape sell shape grain wood make differ rotat piec swap height width return maximum money earn cut piec wood note cut piec wood mani time want exampl input price output explan diagram show possibl scenario consist piec wood shape sell price piec wood shape sell price piec wood shape sell price obtain total money earn shown maximum amount money earn exampl input price output explan diagram show possibl scenario consist piec wood shape sell price piec wood shape sell price obtain total money earn shown maximum amount money earn notic rotat piec wood obtain piec wood constraint priceslength pricesilength hi wi pricei shape wood hi wi pairwis distinct ","1728":"string everi consecut vertic bar group pair word 1st make pair 3rd 4th make pair forth return number exclud pair note belong exactli pair exampl input leetcod output explan consid charact underlin leetcod charact first second exclud answer also charact third fourth exclud answer asterisk consid therefor return exampl input iamprogramm output explan exampl asterisk therefor return exampl input youarebeauti output explan consid charact underlin youarebeauti asterisk consid therefor return constraint slength consist lowercas english letter vertic bar asterisk contain even number vertic bar ","1729":"0index integ array num oper select nonneg integ index updat numsi equal numsi numsi note bitwis oper bitwis oper return maximum possibl bitwis element num appli oper number time exampl input num output explan appli oper num3 num bitwis element shown maximum possibl bitwis note oper may use achiev bitwis exampl input num output explan appli oper time bitwis element shown maximum possibl bitwis constraint numslength numsi ","1730":"integ roll fair 6side dice time determin total number distinct sequenc roll possibl follow condit satisfi greatest common divisor adjac valu sequenc equal least gap roll equal valu roll formal valu ith roll equal valu jth roll absi return total number distinct sequenc possibl sinc answer may larg return modulo sequenc consid distinct least element differ exampl input output explan possibl sequenc etc invalid sequenc invalid sinc first third roll equal valu abs1 1index invalid sinc greatest common divisor total distinct sequenc possibl return exampl input output explan possibl sequenc invalid sequenc sinc greatest common divisor equal total distinct sequenc possibl return constraint ","1731":"squar matrix said xmatrix follow condit hold element diagon matrix nonzero element 2d integ array grid size repres squar matrix return true grid xmatrix otherwis return fals exampl input grid output true explan refer diagram xmatrix green element diagon nonzero red element thu grid xmatrix exampl input grid output fals explan refer diagram xmatrix green element diagon nonzero red element thu grid xmatrix constraint gridlength gridilength gridij ","1732":"street plot plot side street plot side number plot hous place return number way hous place hous adjac side street sinc answer may larg return modulo note hous place ith plot side street hous also place ith plot side street exampl input output explan possibl arrang plot empti hous place side street hous place side street hous place side street exampl input output explan possibl arrang shown diagram constraint ","1733":"0index integ array nums1 nums2 length choos integ left right left right swap subarray nums1leftright subarray nums2leftright exampl nums1 nums2 choos left right nums1 becom nums2 becom may choos appli mention oper anyth score array maximum sumnums1 sumnums2 sumarr sum element array arr return maximum possibl score subarray contigu sequenc element within array arrleftright denot subarray contain element num indic left right inclus exampl input nums1 nums2 output explan choos left right nums1 nums2 score maxsumnums1 sumnums2 max210 exampl input nums1 nums2 output explan choos left right nums1 nums2 score maxsumnums1 sumnums2 max140 exampl input nums1 nums2 output explan choos swap subarray score maxsumnums1 sumnums2 max31 constraint nums1length nums2length nums1i nums2i ","1734":"undirect connect tree node label edg 0index integ array num length numsi repres valu ith node also 2d integ array edg length edgesi ai bi indic edg node ai bi tree remov distinct edg tree form connect compon pair remov edg follow step defin get valu node compon respect differ largest valu smallest valu score pair exampl say compon node valu valu largest valu smallest valu score return minimum score possibl pair edg remov tree exampl input num edg output explan diagram show way make pair remov 1st compon node valu valu compon node valu valu 3rd compon node valu valu score differ largest smallest valu shown pair remov obtain smaller score exampl input num edg output explan diagram show way make pair remov 1st compon node valu valu compon node valu valu 3rd compon node valu valu score differ largest smallest valu obtain smaller score constraint numslength numsi edgeslength edgesilength ai bi ai bi edg repres valid tree ","1735":"string key messag repres cipher key secret messag respect step decod messag follow use first appear lowercas english letter key order substitut tabl align substitut tabl regular english alphabet letter messag substitut use tabl space transform exampl key happi boy actual key would least instanc letter alphabet partial substitut tabl e return decod messag exampl input key quick brown fox jump lazi dog messag vkb suepuv output secret explan diagram show substitut tabl obtain take first appear letter quick brown fox jump lazi dog exampl input key eljuxhpwnyrdgtqkviszcfmabo messag hnfx lqantp mnoeiu ycgk vcnjrdb output box wizard jump quickli explan diagram show substitut tabl obtain take first appear letter eljuxhpwnyrdgtqkviszcfmabo constraint keylength key consist lowercas english letter key contain everi letter english alphabet least messagelength messag consist lowercas english letter ","1736":"day person discov secret integ delay mean person share secret new person everi day start delay day discov secret also integ forget mean person forget secret forget day discov person share secret day forgot day afterward integ return number peopl know secret end day sinc answer may larg return modulo exampl input delay forget output explan day suppos first person name person day person know secret person day share secret new person peopl day share secret new person peopl day forget secret share secret new person peopl day share secret e share secret peopl exampl input delay forget output explan day first person name person day share secret peopl day share secret new peopl peopl day forget secret share secret new peopl peopl constraint delay forget ","1737":"integ matrix grid move cell adjac cell direct return number strictli increas path grid start cell end cell sinc answer may larg return modulo path consid differ exactli sequenc visit cell exampl input grid output explan strictli increas path path length path length path length total number path exampl input grid output explan strictli increas path path length path length total number path constraint gridlength gridilength gridij ","1738":"root full binari tree follow properti leaf node either valu repres fals repres true nonleaf node either valu repres boolean repres boolean evalu node follow node leaf node evalu valu node ie true fals otherwis evalu node children appli boolean oper valu children evalu return boolean result evalu root node full binari tree binari tree node either children leaf node node children exampl input root 213nullnull01 output true explan diagram illustr evalu process node evalu fals true fals node evalu true fals true root node evalu true return true exampl input root output fals explan root node leaf node evalu fals return fals constraint number node tree rang nodev everi node either children leaf node valu nonleaf node valu ","1739":"0index integ array buse length busesi repres departur time ith bu also 0index integ array passeng length passengersj repres arriv time jth passeng bu departur time uniqu passeng arriv time uniqu integ capac repres maximum number passeng get bu passeng arriv wait line next avail bu get bu depart minut arriv minut bu full passeng earliest arriv time get bu first formal bu arriv either capac fewer passeng wait bu get bu capac passeng earliest arriv time get bu return latest time may arriv bu station catch bu arriv time anoth passeng note array buse passeng necessarili sort exampl input buse passeng capac output explan suppos arriv time time first bu depart 0th passeng time second bu depart 1st passeng note may arriv time anoth passeng must arriv 1st passeng catch bu exampl input buse passeng capac output explan suppos arriv time time first bu depart 3rd passeng time second bu depart 5th 1st passeng time third bu depart 0th passeng notic arriv later 6th passeng would taken seat third bu constraint buseslength passengerslength capac busesi passengersi element buse uniqu element passeng uniqu ","1740":"posit 0index integ array nums1 nums2 length sum squar differ array nums1 nums2 defin sum nums1i nums2i2 also posit integ k1 k2 modifi element nums1 k1 time similarli modifi element nums2 k2 time return minimum sum squar differ modifi array nums1 k1 time modifi array nums2 k2 time note allow modifi array element becom neg integ exampl input nums1 nums2 k1 k2 output explan element nums1 nums2 modifi k1 k2 sum squar differ exampl input nums1 nums2 k1 k2 output explan way obtain minimum sum squar differ increas nums10 increas nums22 minimum sum squar differ note way obtain minimum sum squar differ way obtain sum smaller constraint nums1length nums2length nums1i nums2i k1 k2 ","1741":"integ array num integ threshold find subarray num length everi element subarray greater threshold return size subarray subarray return subarray contigu nonempti sequenc element within array exampl input num threshold output explan subarray size everi element greater note valid subarray exampl input num threshold output explan subarray size return note subarray size everi element greater similarli subarray also satisfi condit therefor may also return constraint numslength numsi threshold ","1742":"water dispens dispens cold warm hot water everi second either fill cup differ type water cup type water 0index integ array amount length amount0 amount1 amount2 denot number cold warm hot water cup need fill respect return minimum number second need fill cup exampl input amount output explan way fill cup second fill cold cup warm cup second fill warm cup hot cup second fill warm cup hot cup second fill warm cup proven minimum number second need exampl input amount output explan way fill cup second fill cold cup hot cup second fill cold cup warm cup second fill cold cup warm cup second fill warm cup hot cup second fill cold cup hot cup second fill cold cup warm cup second fill hot cup exampl input amount output explan everi second fill cold cup constraint amountlength amounti ","1743":"set contain posit integ implement smallestinfiniteset class smallestinfiniteset initi smallestinfiniteset object contain posit integ int popsmallest remov return smallest integ contain infinit set void addbackint num add posit integ num back infinit set alreadi infinit set exampl input smallestinfiniteset addback popsmallest popsmallest popsmallest addback popsmallest popsmallest popsmallest output null null null explan smallestinfiniteset smallestinfiniteset new smallestinfiniteset smallestinfinitesetaddback2 alreadi set chang made smallestinfinitesetpopsmallest return sinc smallest number remov set smallestinfinitesetpopsmallest return remov set smallestinfinitesetpopsmallest return remov set smallestinfinitesetaddback1 ad back set smallestinfinitesetpopsmallest return sinc ad back set smallest number remov set smallestinfinitesetpopsmallest return remov set smallestinfinitesetpopsmallest return remov set constraint num call made total popsmallest addback ","1744":"string start target length string consist charact charact repres piec piec move left blank space directli left piec move right blank space directli right charact repres blank space occupi piec return true possibl obtain string target move piec string start number time otherwis return fals exampl input start lrr target lrr output true explan obtain string target start follow move move first piec step left start becom equal lrr move last piec step right start becom equal lrr move second piec step right start becom equal lrr sinc possibl get string target start return true exampl input start target output fals explan piec string start move step right obtain piec move anymor imposs obtain string target start exampl input start target output fals explan piec string start move right imposs obtain string target start constraint startlength targetlength start target charact ","1745":"integ maxvalu use describ ideal array 0index integ array arr length consid ideal follow condit hold everi arri valu maxvalu everi arri divis arri return number distinct ideal array length sinc answer may larg return modulo exampl input maxvalu output explan follow possibl ideal array array start valu array array start valu array array start valu array array start valu array array start valu array total distinct ideal array exampl input maxvalu output explan follow possibl ideal array array start valu array distinct valu array distinct valu array distinct valu array array start valu array array start valu array total distinct ideal array constraint maxvalu ","1746":"0index integ array num oper may follow choos integ num equal remov integ num form pair oper done num mani time possibl return 0index integ array answer size answer0 number pair form answer1 number leftov integ num oper mani time possibl exampl input num output explan form pair nums0 nums3 remov num num form pair nums0 nums2 remov num num form pair nums0 nums1 remov num num pair form total pair form number leftov num exampl input num output explan form pair nums0 nums1 remov num num pair form total pair form number leftov num exampl input num output explan pair form number leftov num constraint numslength numsi ","1747":"0index array num consist posit integ choos indic sum digit number numsi equal numsj return maximum valu numsi numsj obtain possibl indic satisfi condit exampl input num output explan pair satisfi condit number sum digit equal sum number sum digit equal sum maximum sum obtain exampl input num output explan number satisfi condit return constraint numslength numsi ","1748":"posit integ array num numsdivid delet number element num return minimum number delet smallest element num divid element numsdivid possibl return note integ divid exampl input num numsdivid output explan smallest element divid element numsdivid use delet delet element num equal make num smallest element divid element numsdivid shown minimum number delet need exampl input num numsdivid output explan want smallest element num divid element numsdivid way delet element num allow constraint numslength numsdividelength numsi numsdividei ","1749":"integ array rank charact array suit card ith card rank ranksi suit suitsi follow type poker hand make best worst flush card suit kind card rank pair card rank high card singl card return string repres best type poker hand make card note return valu casesensit exampl input rank suit aaaaa output flush explan hand card consist card suit flush exampl input rank suit daabc output kind explan hand first second fourth card consist card rank kind note could also make pair hand kind better hand also note card could use make kind hand exampl input rank suit abcad output pair explan hand first second card consist card rank pair note make flush kind constraint rankslength suitslength ranksi suitsi card rank suit ","1750":"integ array num return number subarray fill subarray contigu nonempti sequenc element within array exampl input num output explan occurr subarray occurr subarray occurr subarray size fill therefor return exampl input num output explan occurr subarray occurr subarray occurr subarray occurr subarray size fill therefor return exampl input num output explan subarray fill therefor return constraint numslength numsi ","1751":"design number contain system follow insert replac number index system return smallest index number system implement numbercontain class numbercontain initi number contain system void changeint index int number fill contain index number alreadi number index replac int findint number return smallest index number index fill number system exampl input numbercontain find chang chang chang chang find chang find output null null null null null null explan numbercontain new numbercontain ncfind10 index fill number therefor return ncchange2 contain index fill number ncchange1 contain index fill number ncchange3 contain index fill number ncchange5 contain index fill number ncfind10 number indic sinc smallest index fill return ncchange1 contain index fill number note index fill replac ncfind10 number indic smallest index fill therefor return constraint index number call made total chang find ","1752":"integ array roll length integ roll side dice number time result ith roll rollsi return length shortest sequenc roll there subsequ roll sequenc roll length len result roll side dice len time exampl input roll output explan everi sequenc roll length taken roll everi sequenc roll length taken roll sequenc taken roll return note sequenc taken roll exampl input roll output explan everi sequenc roll length taken roll sequenc taken roll return note sequenc taken roll shortest exampl input roll output explan sequenc taken roll return note sequenc taken roll shortest constraint rollslength rollsi ","1753":"0index integ matrix grid return number pair ri cj row ri column cj equal row column pair consid equal contain element order ie equal array exampl input grid output explan equal row column pair row column exampl input grid output explan equal row column pair row column row column row column constraint gridlength gridilength gridij ","1754":"","1755":"0index posit integ array num posit integ pair number num1 num2 call excel follow condit satisfi number num1 num2 exist array num sum number set bit num1 num2 num1 num2 greater equal bitwis oper bitwis oper return number distinct excel pair pair consid distinct either exampl distinct note pair num1 num2 num1 num2 also excel least occurr num1 array exampl input num output explan excel pair follow equal binari total number set bit greater equal equal binari equal binari total number set bit equal binari equal binari total number set bit number excel pair exampl input num output explan excel pair array constraint numslength numsi ","1756":"sql schema panda schema ","1757":"nonneg integ array num oper must choos posit integ less equal smallest nonzero element num subtract everi posit element num return minimum number oper make everi element num equal exampl input num output explan first oper choos num second oper choos num third oper choos num exampl input num output explan element num alreadi oper need constraint numslength numsi ","1758":"posit integ array grade repres grade student univers would like enter student competit order nonempti group order meet follow condit sum grade student ith group less sum grade student 1th group group except last total number student ith group less total number student 1th group group except last return maximum number group form exampl input grade output explan follow possibl way form group student 1st group student grade sum grade student count group student grade sum grade student count 3rd group student grade sum grade student count shown possibl form group exampl input grade output explan form group sinc form group would lead equal number student group constraint gradeslength gradesi ","1759":"direct graph node number node outgo edg graph repres 0index array edg size indic direct edg node node edgesi outgo edg edgesi also integ node1 node2 return index node reach node1 node2 maximum distanc node1 node node2 node minim multipl answer return node smallest index possibl answer exist return note edg may contain cycl exampl input edg node1 node2 output explan distanc node node distanc node node maximum distanc proven get node smaller maximum distanc return node exampl input edg node1 node2 output explan distanc node node distanc node maximum distanc proven get node smaller maximum distanc return node constraint edgeslength edgesi edgesi node1 node2 ","1760":"direct graph node number node outgo edg graph repres 0index array edg size indic direct edg node node edgesi outgo edg node edgesi return length longest cycl graph cycl exist return cycl path start end node exampl input edg output explan longest cycl graph cycl length cycl return exampl input edg output explan cycl graph constraint edgeslength edgesi edgesi ","1761":"2d integ array items1 items2 repres set item array item follow properti itemsi valuei weighti valuei repres valu weighti repres weight ith item valu item item uniqu return 2d integ array ret reti valuei weighti weighti sum weight item valu valuei note ret return ascend order valu exampl input items1 items2 output explan item valu occur items1 weight items2 weight total weight item valu occur items1 weight items2 weight total weight item valu occur items1 weight total weight therefor return exampl input items1 items2 output explan item valu occur items1 weight items2 weight total weight item valu occur items1 weight items2 weight total weight item valu occur items1 weight items2 weight total weight therefor return exampl input items1 items2 output explan item valu occur items1 weight items2 weight total weight item valu occur items1 weight items2 weight total weight item valu occur items2 weight total weight therefor return constraint items1length items2length items1ilength items2ilength valuei weighti valuei items1 uniqu valuei items2 uniqu ","1762":"0index integ array num pair indic bad pair numsj numsi return total number bad pair num exampl input num output explan pair bad pair sinc pair bad pair sinc pair bad pair sinc pair bad pair sinc pair bad pair sinc total bad pair return exampl input num output explan bad pair constraint numslength numsi ","1763":"0index array posit integ task repres task need complet order tasksi repres type ith task also posit integ space repres minimum number day must pass complet task anoth task type perform day task complet must either complet next task task take break return minimum number day need complet task exampl input task space output explan way complet task day follow day complet 0th task day complet 1st task day take break day take break day complet task day complet 3rd task day take break day complet 4th task day complet 5th task shown task complet less day exampl input task space output explan way complet task day follow day complet 0th task day complet 1st task day take break day take break day complet task day complet 3rd task shown task complet less day constraint taskslength tasksi space taskslength ","1764":"0index strictli increas integ array num posit integ diff triplet arithmet triplet follow condit met numsj numsi diff numsk numsj diff return number uniqu arithmet triplet exampl input num diff output explan arithmet triplet arithmet triplet exampl input num diff output explan arithmet triplet arithmet triplet constraint numslength numsi diff num strictli increas ","1765":"undirect tree node label edg 2d integ array edg length edgesi ai bi indic edg node ai bi tree also integ array restrict repres restrict node return maximum number node reach node without visit restrict node note node restrict node exampl input edg restrict output explan diagram show tree node reach node without visit restrict node exampl input edg restrict output explan diagram show tree node reach node without visit restrict node constraint edgeslength edgesilength ai bi ai bi edg repres valid tree restrictedlength restrictedi valu restrict uniqu ","1766":"0index integ array num partit array contigu subarray call partit array valid obtain subarray satisfi follow condit subarray consist exactli equal element exampl subarray good subarray consist exactli equal element exampl subarray good subarray consist exactli consecut increas element differ adjac element exampl subarray good subarray return true array least valid partit otherwis return fals exampl input num output true explan array partit subarray partit valid return true exampl input num output fals explan valid partit array constraint numslength numsi ","1767":"string consist lowercas letter integ call string ideal follow condit satisfi subsequ string absolut differ alphabet order everi adjac letter less equal return length longest ideal string subsequ string deriv anoth string delet charact without chang order remain charact note alphabet order cyclic exampl absolut differ alphabet order exampl input acfgbd output explan longest ideal string acbd length string return note acfgbd ideal differ alphabet order exampl input abcd output explan longest ideal string abcd length string return constraint slength consist lowercas english letter ","1768":"integ matrix grid gener integ matrix maxloc size maxlocalij equal largest valu matrix grid center around row column word want find largest valu everi contigu matrix grid return gener matrix exampl input grid output explan diagram show origin matrix gener matrix notic valu gener matrix correspond largest valu contigu matrix grid exampl input grid output explan notic contain within everi contigu matrix grid constraint gridlength gridilength gridij ","1769":"direct graph node label node exactli outgo edg graph repres 0index integ array edg length edgesi indic direct edg node node edgesi edg score node defin sum label node edg point return node highest edg score multipl node edg score return node smallest index exampl input edg output explan node edg point node edg score node node edg point node edg score node node edg point node edg score node node edg point node edg score node node highest edg score return exampl input edg output explan node edg point node edg score node node edg point node edg score node node edg score sinc node smaller index return constraint edgeslength edgesi edgesi ","1770":"0index string pattern length consist charact mean increas mean decreas 0index string num length creat use follow condit num consist digit digit use patterni numi numi patterni numi numi return lexicograph smallest possibl string num meet condit exampl input pattern iiididdd output explan indic must numi numi1 indic must numi numi1 possibl valu num proven smallest possibl num meet condit note possibl digit use exampl input pattern output explan possibl valu num proven smallest possibl num meet condit constraint patternlength pattern consist letter ","1771":"call posit integ special digit distinct posit integ return number special integ belong interv exampl input output explan integ except special thu special integ exampl input output explan integ special exampl input output explan integ special integ special constraint ","1772":"0index string block length blocksi either repres color ith block charact denot color white black respect also integ desir number consecut black block oper recolor white block becom black block return minimum number oper need least occurr consecut black block exampl input block wbbwwbbwbw output explan way achiev consecut black block recolor 0th 3rd 4th block block bbbbbbbwbw shown way achiev consecut black block less oper therefor return exampl input block wbwbbbw output explan chang need made sinc consecut black block alreadi exist therefor return constraint blockslength blocksi either ","1773":"binari string second occurr simultan replac process repeat occurr exist return number second need complet process exampl input output explan second becom anoth second becom third second becom fourth second becom occurr exist longer process need second complet return exampl input output explan occurr exist process need second complet return constraint slength si either solv problem time complex ","1774":"string lowercas english letter 2d integ array shift shiftsi starti endi directioni everi shift charact index starti index endi inclus forward directioni shift charact backward directioni shift charact forward mean replac next letter alphabet wrap around becom similarli shift charact backward mean replac previou letter alphabet wrap around becom return final string shift appli exampl input abc shift output ace explan firstli shift charact index index backward zac secondli shift charact index index forward zbd final shift charact index index forward ace exampl input dztz shift output catz explan firstli shift charact index index backward cztz final shift charact index index forward catz constraint slength shiftslength shiftsilength starti endi slength directioni consist lowercas english letter ","1775":"enter competit posit integ initialenergi initialexperi denot initi energi initi experi respect also 0index integ array energi experi length face oppon order energi experi ith oppon denot energyi experiencei respect face oppon need strictli greater experi energi defeat move next oppon avail defeat ith oppon increas experi experiencei decreas energi energyi start competit train number hour hour train either choos increas initi experi increas initi energi return minimum number train hour requir defeat oppon exampl input initialenergi initialexperi energi experi output explan increas energi hour train experi hour train face oppon follow order energi experi 0th oppon win energi becom experi becom energi experi 1st oppon win energi becom experi becom energi experi oppon win energi becom experi becom energi experi 3rd oppon win energi becom experi becom total hour train competit return proven smaller answer exist exampl input initialenergi initialexperi energi experi output explan need addit energi experi win competit return constraint energylength experiencelength initialenergi initialexperi energyi experiencei ","1776":"string num consist digit return largest palindrom integ form string form use digit taken num contain lead zero note need use digit num must use least digit digit reorder exampl input num output explan use digit form palindrom integ shown largest palindrom integ form exampl input num output explan shown largest palindrom integ form note integ return contain lead zero constraint numlength num consist digit ","1777":"root binari tree uniqu valu integ start minut infect start node valu start minut node becom infect node current uninfect node adjac infect node return number minut need entir tree infect exampl input root 153null410692 start output explan follow node infect minut node minut node minut node minut node minut node take minut whole tree infect return exampl input root start output explan minut node tree infect return constraint number node tree rang nodev node uniqu valu node valu start exist tree ","1778":"integ array num posit integ choos subsequ array sum element togeth defin ksum array kth largest subsequ sum obtain necessarili distinct return ksum array subsequ array deriv anoth array delet element without chang order remain element note empti subsequ consid sum exampl input num output explan possibl subsequ sum obtain follow sort decreas order 5sum array exampl input num output explan 16sum array constraint numslength numsi min2000 ","1779":"integ array num length integ array queri length return array answer length answeri maximum size subsequ take num sum element less equal queriesi subsequ array deriv anoth array delet element without chang order remain element exampl input num queri output explan answer queri follow subsequ sum less equal proven maximum size subsequ answer0 subsequ sum less equal proven maximum size subsequ answer1 subsequ sum less equal proven maximum size subsequ answer2 exampl input num queri output explan empti subsequ subsequ sum less equal answer0 constraint numslength querieslength numsi queriesi ","1780":"string contain star oper choos star remov closest nonstar charact left well remov star return string star remov note input gener oper alway possibl shown result string alway uniqu exampl input leetcod output leco explan perform remov left right closest charact 1st star leetcod becom leecod closest charact star e leecod becom lecod closest charact 3rd star lecod becom leco star return leco exampl input eras output explan entir string remov return empti string constraint slength consist lowercas english letter star oper perform ","1781":"0index array string garbag garbagei repres assort garbag ith hous garbagei consist charact repres unit metal paper glass garbag respect pick unit type garbag take minut also 0index integ array travel trave number minut need go hous hous garbag truck citi respons pick type garbag garbag truck start hous must visit hous order howev need visit everi hous garbag truck may use moment truck drive pick garbag truck anyth return minimum number minut need pick garbag exampl input garbag gpgpgg travel output explan paper garbag truck travel hous hous collect paper garbag hous travel hous hous collect paper garbag hous altogeth take minut pick paper garbag glass garbag truck collect glass garbag hous travel hous hous travel hous hous collect glass garbag hous travel hous hous collect glass garbag hous altogeth take minut pick glass garbag sinc metal garbag need consid metal garbag truck therefor take total minut collect garbag exampl input garbag mmmpgmgp travel output explan metal garbag truck take minut pick metal garbag paper garbag truck take minut pick paper garbag glass garbag truck take minut pick glass garbag take total minut collect garbag constraint garbagelength garbagei consist letter garbageilength travellength garbagelength trave ","1782":"posit integ also 2d integ array rowcondit size rowconditionsi 2d integ array colcondit size colconditionsi lefti righti array contain integ build matrix contain number exactli remain cell valu matrix also satisfi follow condit number appear row strictli row number appear number lefti appear column strictli left column number righti appear return matrix satisfi condit answer exist return empti matrix exampl input rowcondit colcondit output explan diagram show valid exampl matrix satisfi condit row condit follow number row number row matrix number row number row matrix column condit follow number column number column left matrix number column number column left matrix note may multipl correct answer exampl input rowcondit colcondit output explan first condit third condit need satisfi matrix satisfi condit return empti matrix constraint rowconditionslength colconditionslength rowconditionsilength colconditionsilength lefti righti lefti righti ","1783":"0index integ array num determin whether exist subarray length equal sum note subarray must begin differ indic return true subarray exist fals otherwis subarray contigu nonempti sequenc element within array exampl input num output true explan subarray element sum exampl input num output fals explan subarray size sum exampl input num output true explan subarray nums0nums1 nums1nums2 sum note even though subarray content subarray consid differ differ posit origin array constraint numslength numsi ","1784":"integ strictli palindrom everi base inclus string represent integ base palindrom integ return true strictli palindrom fals otherwis string palindrom read forward backward exampl input output fals explan base base palindrom base base palindrom therefor strictli palindrom return fals note base also palindrom exampl input output fals explan consid base base palindrom therefor return fals constraint ","1785":"binari matrix matrix integ numselect goal select exactli numselect distinct column matrix cover mani row possibl row consid cover row also part column select row also consid cover formal let us consid select c1 c2 cnumselect set column select row cover select cell matrixij column select cell row valu return maximum number row cover set numselect column exampl input matrix numselect output explan possibl way cover row shown diagram choos row cover occurr row cover column valu ie present row cover matrix21 present row cover matrix22 present thu cover row note also cover row shown row cover exampl input matrix numselect output explan select column result row cover sinc entir matrix select constraint matrixlength matrixilength matrixij either numselect ","1786":"robot 0index integ array chargetim runningcost length ith robot cost chargetimesi unit charg cost runningcostsi unit run also integ budget total cost run chosen robot equal maxchargetim sumrunningcost maxchargetim largest charg cost among robot sumrunningcost sum run cost among robot return maximum number consecut robot run total cost exceed budget exampl input chargetim runningcost budget output explan possibl run individu consecut pair robot within budget obtain answer consid first robot total cost max361 sum213 less shown possibl run consecut robot within budget return exampl input chargetim runningcost budget output explan robot run exceed budget return constraint chargetimeslength runningcostslength chargetimesi runningcostsi budget ","1787":"0index string consist lowercas english letter letter appear exactli twice also 0index integ array distanc length letter alphabet number ie wellspac string number letter occurr ith letter distancei ith letter appear distancei ignor return true wellspac string otherwis return fals exampl input abaccb distanc output true explan appear indic satisfi distance0 appear indic satisfi distance1 appear indic satisfi distance2 note distance3 sinc appear ignor return true wellspac string exampl input distanc output fals explan appear indic letter distance0 wellspac string constraint slength consist lowercas english letter letter appear exactli twice distancelength distancei ","1788":"posit integ startpo endpo initi stand posit startpo infinit number line step move either posit left posit right posit integ return number differ way reach posit endpo start startpo perform exactli step sinc answer may larg return modulo way consid differ order step made exactli note number line includ neg integ exampl input startpo endpo output explan reach posit exactli step way proven way possibl return exampl input startpo endpo output explan imposs reach posit posit exactli step constraint startpo endpo ","1789":"integ room number 2d integ array meet meetingsi starti endi mean meet held halfclos time interv starti endi valu starti uniqu meet alloc room follow manner meet take place unus room lowest number avail room meet delay room becom free delay meet durat origin meet room becom unus meet earlier origin start time room return number room held meet multipl room return room lowest number halfclos interv interv includ includ exampl input meet output explan time room use first meet start room time room use second meet start room time room use third meet delay time room use fourth meet delay time meet room finish third meet start room time period time meet room finish fourth meet start room time period room held meet return exampl input meet output explan time room use first meet start room time room use second meet start room time room use third meet start room time room use fourth meet delay time meet room finish fourth meet start room time period time room use fifth meet delay time meet room finish fifth meet start room time period room held meet room held meet return constraint meetingslength meetingsilength starti endi valu starti uniqu ","1790":"string partit string substr charact substr uniqu letter appear singl substr return minimum number substr partit note charact belong exactli substr partit exampl input abacaba output explan possibl partit abacaba abacaba shown minimum number substr need exampl input ssssss output explan valid partit ssssss constraint slength consist english lowercas letter ","1791":"2d integ array interv intervalsi lefti righti repres inclus interv lefti righti divid interv group interv exactli group interv group intersect return minimum number group need make interv intersect least common number exampl interv intersect exampl input interv output explan divid interv follow group group group group proven possibl divid interv fewer group exampl input interv output explan none interv overlap put group constraint intervalslength intervalsilength lefti righti ","1792":"integ array num integ find longest subsequ num meet follow requir subsequ strictli increas differ adjac element subsequ return length longest subsequ meet requir subsequ array deriv anoth array delet element without chang order remain element exampl input num output explan longest subsequ meet requir subsequ length return note subsequ meet requir larger exampl input num output explan longest subsequ meet requir subsequ length return exampl input num output explan longest subsequ meet requir subsequ length return constraint numslength numsi ","1793":"alic bob travel rome separ busi meet string arrivealic leavealic arrivebob leavebob alic citi date arrivealic leavealic inclus bob citi date arrivebob leavebob inclus 5charact string format mmdd correspond month day date return total number day alic bob rome togeth assum date occur calendar year leap year note number day per month repres exampl input arrivealic leavealic arrivebob leavebob output explan alic rome august august bob rome august august rome togeth august answer exampl input arrivealic leavealic arrivebob leavebob output explan day alic bob rome togeth return constraint date provid format mmdd alic bob arriv date earlier equal leav date date valid date nonleap year ","1794":"0index integ array player playersi repres abil ith player also 0index integ array trainer trainersj repres train capac jth trainer ith player match jth trainer player abil less equal trainer train capac addit ith player match trainer jth trainer match player return maximum number match player trainer satisfi condit exampl input player trainer output explan way form match follow players0 match trainers0 sinc players1 match trainers3 sinc proven maximum number match form exampl input player trainer output explan trainer match player player match trainer maximum answer constraint playerslength trainerslength playersi trainersj note question assign cooki ","1795":"0index array num length consist nonneg integ index must determin size minimum size nonempti subarray num start inclus maximum possibl bitwis word let bij bitwis subarray numsij need find smallest subarray start bitwis subarray equal maxbik bitwis array bitwis number return integ array answer size answeri length minimum size subarray start maximum bitwis subarray contigu nonempti sequenc element within array exampl input num output explan maximum possibl bitwis start index start index shortest subarray yield start index shortest subarray yield maximum bitwis start index shortest subarray yield maximum bitwis start index shortest subarray yield maximum bitwis start index shortest subarray yield maximum bitwis therefor return exampl input num output explan start index shortest subarray yield maximum bitwis length start index shortest subarray yield maximum bitwis length therefor return constraint numslength numsi ","1796":"0index 2d integ array transact transactionsi costi cashbacki array describ transact transact must complet exactli order moment certain amount money order complet transact money costi must hold true perform transact money becom money costi cashbacki return minimum amount money requir transact transact complet regardless order transact exampl input transact output explan start money transact perform order shown start money fail complet transact order exampl input transact output explan transact order minimum money requir complet transact transact order minimum money requir complet transact thu start money transact perform order constraint transactionslength transactionsilength costi cashbacki ","1797":"posit integ return smallest posit integ multipl exampl input output explan smallest multipl exampl input output explan smallest multipl note number multipl constraint ","1798":"alphabet continu string string consist consecut letter alphabet word substr string abcdefghijklmnopqrstuvwxyz exampl abc alphabet continu string acb za string consist lowercas letter return length longest alphabet continu substr exampl input abacaba output explan distinct continu substr ab ab longest continu substr exampl input abcd output explan abcd longest continu substr constraint slength consist english lowercas letter ","1799":"root perfect binari tree revers node valu odd level tree exampl suppos node valu level becom return root revers tree binari tree perfect parent node children leav level level node number edg along path root node exampl input root output explan tree odd level node level respect revers becom exampl input root output explan node level revers becom exampl input root output explan odd level nonzero valu node level revers node level revers constraint number node tree rang nodev root perfect binari tree ","1800":"array word size consist nonempti string defin score string term number string wordsi term prefix wordsi exampl word ab abc cab score ab sinc ab prefix ab abc return array answer size answeri sum score everi nonempti prefix wordsi note string consid prefix exampl input word abcabbcb output explan answer string follow abc prefix ab abc string prefix string prefix ab string prefix abc total answer0 ab prefix ab string prefix string prefix ab total answer1 prefix string prefix string prefix total answer2 prefix string prefix total answer3 exampl input word abcd output explan abcd prefix ab abc abcd prefix score total answer0 constraint wordslength wordsilength wordsi consist lowercas english letter ","1801":"array string name array height consist distinct posit integ array length index namesi heightsi denot name height ith person return name sort descend order peopl height exampl input name maryjohnemma height output maryemmajohn explan mari tallest follow emma john exampl input name alicebobbob height output bobalicebob explan first bob tallest follow alic second bob constraint nameslength heightslength namesilength heightsi namesi consist lower upper case english letter valu height distinct ","1802":"integ array num size consid nonempti subarray num maximum possibl bitwis word let maximum valu bitwis subarray num subarray bitwis equal consid return length longest subarray bitwis array bitwis number subarray contigu sequenc element within array exampl input num output explan maximum possibl bitwis subarray longest subarray valu return exampl input num output explan maximum possibl bitwis subarray longest subarray valu return constraint numslength numsi ","1803":"0index integ array num size posit integ call index rang good follow condit satisfi element index nonincreas order element index nondecreas order return array good indic sort increas order exampl input num output explan good indic array index subarray nonincreas order subarray nondecreas order index subarray nonincreas order subarray nondecreas order note index good nondecreas exampl input num output explan good indic array constraint numslength numsi ","1804":"tree ie connect undirect graph cycl consist node number exactli edg 0index integ array val length valsi denot valu ith node also 2d integ array edg edgesi ai bi denot exist undirect edg connect node ai bi good path simpl path satisfi follow condit start node end node valu node start node end node valu less equal start node ie start node valu maximum valu along path return number distinct good path note path revers count path exampl consid singl node also consid valid path exampl input val edg output explan good path consist singl node addit good path revers path treat note good path vals2 vals0 exampl input val edg output explan good path consist singl node addit good path exampl input val edg output explan tree consist node good path constraint valslength valsi edgeslength edgesilength ai bi ai bi edg repres valid tree ","1805":"0index string word consist lowercas english letter need select index remov letter index word frequenc everi letter present word equal return true possibl remov letter frequenc letter word equal fals otherwis note frequenc letter number time occur string must remov exactli letter choos noth exampl input word abcc output true explan select index delet word becom abc charact frequenc exampl input word aazz output fals explan must delet charact either frequenc frequenc vice versa imposs make present letter equal frequenc constraint wordlength word consist lowercas english letter ","1806":"stream video repres distinct number need upload server need implement data structur calcul length longest upload prefix variou point upload process consid upload prefix video rang inclus upload server longest upload prefix maximum valu satisfi definit implement luprefix class luprefixint initi object stream video void uploadint video upload video server int longest return length longest upload prefix defin exampl input luprefix upload longest upload longest upload longest output null null null null explan luprefix server new luprefix4 initi stream video serverupload3 upload video serverlongest sinc video upload yet prefix return serverupload1 upload video serverlongest prefix longest upload prefix return serverupload2 upload video serverlongest prefix longest upload prefix return constraint video valu video distinct call total made upload longest least call made longest ","1807":"0index array nums1 nums2 consist nonneg integ exist anoth array nums3 contain bitwis pair integ nums1 nums2 everi integ nums1 pair everi integ nums2 exactli return bitwis integ nums3 exampl input nums1 nums2 output explan possibl nums3 array bitwis number return exampl input nums1 nums2 output explan possibl pair bitwis xor nums10 nums20 nums10 nums21 nums11 nums20 nums11 nums21 thu possibl nums3 array return constraint nums1length nums2length nums1i nums2j ","1808":"0index integ array nums1 nums2 size integ diff find number pair nums1i nums1j nums2i nums2j diff return number pair satisfi condit exampl input nums1 nums2 diff output explan pair satisfi condit sinc pair satisfi condit sinc pair satisfi condit sinc pair satisfi condit therefor return exampl input nums1 nums2 diff output explan sinc exist pair satisfi condit return constraint nums1length nums2length nums1i nums2i diff ","1809":"posit integ return number common factor integ common factor divid exampl input output explan common factor exampl input output explan common factor constraint ","1810":"integ matrix grid defin hourglass part matrix follow form return maximum sum element hourglass note hourglass rotat must entir contain within matrix exampl input grid output explan cell shown repres hourglass maximum sum exampl input grid output explan hourglass matrix sum constraint gridlength gridilength gridij ","1811":"posit integ num1 num2 find posit integ number set bit num2 valu num1 minim note bitwis oper return integ test case gener uniqu determin number set bit integ number binari represent exampl input num1 num2 output explan binari represent num1 num2 respect integ number set bit num2 valu minim exampl input num1 num2 output explan binari represent num1 num2 respect integ number set bit num2 valu minim constraint num1 num2 ","1812":"string consist lowercas english letter oper delet entir string delet first letter first letter equal follow letter rang slength exampl ababc oper could delet first letter get abc sinc first letter follow letter equal ab return maximum number oper need delet exampl input abcabcdabc output explan delet first letter abc sinc next letter equal abcdabc delet letter use oper return proven maximum number oper need note second oper delet abc next occurr abc happen next letter exampl input aaabaab output explan delet first letter sinc next letter equal aabaab delet first letter aab sinc next letter equal aab delet first letter sinc next letter equal ab delet letter use oper return proven maximum number oper need exampl input aaaaa output explan oper delet first letter constraint slength consist lowercas english letter ","1813":"employe uniqu id 2d integ array log logsi idi leavetimei idi id employe work ith task leavetimei time employe finish ith task valu leavetimei uniqu note ith task start moment right 1th task end 0th task start time return id employe work task longest time tie employe return smallest id among exampl input log output explan task start end unit time task start end unit time task start end unit time task start end unit time task longest time task employe id work return exampl input log output explan task start end unit time task start end unit time task start end unit time task start end unit time task longest time task employe work return exampl input log output explan task start end unit time task start end unit time task longest time task employe work return smallest id constraint logslength logsilength idi leavetimei idi leavetimei sort strictli increas order ","1814":"integ array pref size find return array arr size satisfi prefi arr0 arr1 arri note denot bitwisexor oper proven answer uniqu exampl input pref output explan array follow pref0 pref1 pref2 pref3 pref4 exampl input pref output explan pref0 arr0 constraint preflength prefi ","1815":"string robot current hold empti string appli follow oper empti remov first charact string give robot robot append charact string remov last charact string give robot robot write charact paper return lexicograph smallest string written paper exampl input zza output azz explan let denot written string initi szza perform first oper time tzza perform second oper time pazz exampl input bac output abc explan let denot written string perform first oper twice tba perform second oper twice pab perform first oper pab perform second oper pabc exampl input bdda output addb explan let denot written string initi sbdda perform first oper time tbdda perform second oper time paddb constraint slength consist english lowercas letter ","1816":"0index integ matrix grid integ current posit want reach posit move right return number path sum element path divis sinc answer may larg return modulo exampl input grid output explan path sum element path divis first path highlight red sum divis second path highlight blue sum divis exampl input grid output explan path highlight red sum divis exampl input grid output explan everi integ divis sum element everi possibl path divis constraint gridlength gridilength gridij ","1817":"posit integ exist 0index array call power compos minimum number power sum array sort nondecreas order way form array also 0index 2d integ array queri queriesi lefti righti queriesi repres queri find product powersj lefti righti return array answer equal length queri answersi answer ith queri sinc answer ith queri may larg answersi return modulo exampl input queri output explan power shown power smaller size answer 1st queri powers0 powers1 answer queri powers2 answer 3rd queri powers0 powers1 powers2 powers3 answer modulo yield answer return exampl input queri output explan power answer queri powers0 answer modulo return constraint querieslength starti endi powerslength ","1818":"0index array num compris nonneg integ oper must choos integ numsi decreas numsi increas numsi return minimum possibl valu maximum integ num perform number oper exampl input num output explan set optim oper follow choos num becom choos num becom choos num becom maximum integ num shown maximum number less therefor return exampl input num output explan optim leav num sinc maximum valu return constraint numslength numsi ","1819":"undirect tree node label 0index integ array num length numsi repres valu ith node also 2d integ array edg length edgesi ai bi indic edg node ai bi tree allow delet edg split tree multipl connect compon let valu compon sum numsi node compon return maximum number edg delet everi connect compon tree valu exampl input num edg output explan figur show delet edg creat compon node sum valu compon equal proven better delet exist answer exampl input num edg output explan edg delet constraint numslength numsi edgeslength edgesilength edgesi0 edgesi1 edg repres valid tree ","1820":"integ array num contain zero find largest posit integ also exist array return posit integ integ return exampl input num output explan valid find array exampl input num output explan correspond neg valu array larger valu exampl input num output explan singl valid return constraint numslength numsi numsi ","1821":"array num consist posit integ take integ array revers digit add end array appli oper origin integ num return number distinct integ final array exampl input num output explan includ revers number result array revers integ ad end array underlin note integ revers becom number distinct integ array number exampl input num output explan includ revers number result array number distinct integ array number constraint numslength numsi ","1822":"nonneg integ num return true num express sum nonneg integ revers fals otherwis exampl input num output true explan return true exampl input num output fals explan express sum nonneg integ revers return fals exampl input num output true explan return true note number revers may lead zero constraint num ","1823":"integ array num integ mink maxk fixedbound subarray num subarray satisfi follow condit minimum valu subarray equal mink maximum valu subarray equal maxk return number fixedbound subarray subarray contigu part array exampl input num mink maxk output explan fixedbound subarray exampl input num mink maxk output explan everi subarray num fixedbound subarray possibl subarray constraint numslength numsi mink maxk ","1824":"array string repres inclus event happen day event1 event2 event1 starttime1 endtime1 event2 starttime2 endtime2 event time valid hour format form hhmm conflict happen event nonempti intersect ie moment common event return true conflict event otherwis return fals exampl input event1 event2 output true explan event intersect time exampl input event1 event2 output true explan event intersect start exampl input event1 event2 output fals explan event intersect constraint event1length event2length event1ilength event2ilength starttime1 endtime1 starttime2 endtime2 event time hhmm format ","1825":"integ array num integ return number subarray num greatest common divisor subarray element subarray contigu nonempti sequenc element within array greatest common divisor array largest integ evenli divid array element exampl input num output explan subarray num greatest common divisor subarray element exampl input num output explan subarray num greatest common divisor subarray element constraint numslength numsi ","1826":"0index array num cost consist posit integ follow oper number time increas decreas element array num cost oper ith element costi return minimum total cost element array num becom equal exampl input num cost output explan make element equal follow way increas 0th element time cost decreas 1st element time cost decreas element time cost total cost shown make array equal smaller cost exampl input num cost output explan element alreadi equal oper need constraint numslength costlength numsi costi test case gener way output doesnt exceed ","1827":"posit integ array num target length oper choos distinct indic numslength set numsi numsi set numsj numsj array consid similar frequenc element return minimum number oper requir make num similar target test case gener num alway similar target exampl input num target output explan possibl make num similar target oper choos num choos num shown minimum number oper need exampl input num target output explan make num similar target oper choos num exampl input num target output explan array num alreadi similiar target constraint numslength targetlength numsi targeti possibl make num similar target ","1828":"array equallength string word assum length string string wordsi convert differ integ array differencei length differenceij wordsij1 wordsij note differ letter differ posit alphabet ie posit exampl string acb differ integ array string word differ integ array except find string return string word differ differ integ array exampl input word adcwzyabc output abc explan differ integ array adc differ integ array differ integ array abc odd array return correspond string abc exampl input word aaabobcccddd output bob explan integ array except bob correspond constraint wordslength wordsilength wordsi consist lowercas english letter ","1829":"string array queri dictionari word array compris lowercas english letter length edit take word queri chang letter letter find word queri maximum edit equal word dictionari return list word queri match word dictionari maximum edit return word order appear queri exampl input queri wordnoteantswood dictionari woodjokemoat output wordnotewood explan chang word allow equal dictionari word wood chang note chang joke would take edit ant equal dictionari word wood remain unchang edit match correspond dictionari word thu return wordnotewood exampl input queri ye dictionari output explan appli edit ye make equal thu return empti array constraint querieslength dictionarylength queriesilength dictionaryjlength queriesi dictionaryj compos lowercas english letter ","1830":"0index array num consist posit integ repres target number line also integ space machin destroy target seed machin numsi allow destroy target valu repres numsi space nonneg integ want destroy maximum number target num return minimum valu numsi seed machin destroy maximum number target exampl input num space output explan seed machin nums3 destroy target equal case would destroy total target except nums2 imposs destroy target return nums3 exampl input num space output explan seed machin nums0 nums3 destroy target possibl destroy target sinc nums0 minim integ destroy target return exampl input num space output explan whatev initi seed select destroy target minim seed nums1 constraint numslength numsi space ","1831":"0index array nonneg integ num integ num must find respect second greater integ second greater integ numsi numsj numsj numsi exist exactli index numsk numsi numsj second greater integ consid exampl array second greater integ return integ array answer answeri second greater integ numsi exampl input num output explan 0th index first integ greater second integ greater right 1st index first second integ greater right index first second integ greater right 3rd index integ greater right second greater integ consid 4th index integ greater right second greater integ consid thu return exampl input num output explan return sinc neither integ integ greater constraint numslength numsi ","1832":"integ array num posit integ return averag valu even integ divis note averag element sum element divid round nearest integ exampl input num output explan even number divis exampl input num output explan singl number satisfi requir return constraint numslength numsi ","1833":"string array creator id integ array view length ith video platform creat creatorsi id idsi viewsi view popular creator sum number view creator video find creator highest popular id view video multipl creator highest popular find multipl video highest view count creator find lexicograph smallest id note possibl differ video id mean id uniqu identifi video exampl video id consid distinct video viewcount return 2d array string answer answeri creatorsi idi mean creatorsi highest popular idi id popular video answer return order exampl input creator alicebobalicechri id onetwothreefour view output aliceonebobtwo explan popular alic popular bob popular chri alic bob popular creator bob video highest view count alic video highest view count sinc lexicograph smaller includ answer exampl input creator alicealicealic id abc view output aliceb explan video id highest view count sinc lexicograph smaller includ answer constraint creatorslength idslength viewslength creatorsilength idsilength creatorsi idsi lowercas english letter viewsi ","1834":"posit integ target integ consid beauti sum digit less equal target return minimum nonneg integ beauti input gener alway possibl make beauti exampl input target output explan initi digit sum ad becom digit sum becom shown make beauti ad nonneg integ less exampl input target output explan initi digit sum ad becom digit sum becom shown make beauti ad nonneg integ less exampl input target output explan initi digit sum alreadi smaller equal target constraint target input gener alway possibl make beauti ","1835":"root binari tree node node assign uniqu valu also array queri size perform independ queri tree ith queri follow remov subtre root node valu queriesi tree guarante queriesi equal valu root return array answer size answeri height tree perform ith queri note queri independ tree return initi state queri height tree number edg longest simpl path root node tree exampl input root 1342null65nullnullnullnullnull7 queri output explan diagram show tree remov subtre root node valu height tree path exampl input root queri output explan follow queri remov subtre root node valu height tree becom path remov subtre root node valu height tree becom path remov subtre root node valu height tree becom path remov subtre root node valu height tree becom path constraint number node tree nodev valu tree uniqu querieslength minn queriesi queriesi rootval ","1836":"0index array num size consist nonneg integ need appli oper array ith oper 0index appli follow ith element num numsi numsi multipli numsi set numsi otherwis skip oper perform oper shift end array exampl array shift end return result array note oper appli sequenti exampl input num output explan follow oper nums0 nums1 equal skip oper nums1 nums2 equal multipli nums1 chang nums2 array becom nums2 nums3 equal skip oper nums3 nums4 equal multipli nums3 chang nums4 array becom nums4 nums5 equal multipli nums4 chang nums5 array becom shift end give array exampl input num output explan oper appli shift end constraint numslength numsi ","1837":"integ array num integ find maximum subarray sum subarray num meet follow condit length subarray element subarray distinct return maximum subarray sum subarray meet condit subarray meet condit return subarray contigu nonempti sequenc element within array exampl input num output explan subarray num length meet requir sum meet requir sum meet requir sum meet requir element repeat meet requir element repeat return maximum subarray sum subarray meet condit exampl input num output explan subarray num length meet requir element repeat return subarray meet condit constraint numslength numsi ","1838":"0index integ array cost costsi cost hire ith worker also integ candid want hire exactli worker accord follow rule run session hire exactli worker session hire session choos worker lowest cost either first candid worker last candid worker break tie smallest index exampl cost candid first hire session choos 4th worker lowest cost second hire session choos 1st worker lowest cost 4th worker smallest index pleas note index may chang process fewer candid worker remain choos worker lowest cost among break tie smallest index worker chosen return total cost hire exactli worker exampl input cost candid output explan hire worker total total cost initi first hire round choos worker lowest cost break tie smallest index total cost second hire round choos worker lowest cost index total cost third hire round choos worker lowest cost index total cost notic worker index common first last worker total hire cost exampl input cost candid output explan hire worker total total cost initi first hire round choos worker lowest cost break tie smallest index total cost notic worker index common first last worker second hire round choos worker lowest cost index total cost third hire round less candid choos worker remain worker lowest cost index total cost total hire cost constraint costslength costsi candid costslength ","1839":"robot factori xaxi integ array robot roboti posit ith robot also 2d integ array factori factoryj positionj limitj indic positionj posit jth factori jth factori repair limitj robot posit robot uniqu posit factori also uniqu note robot posit factori initi robot initi broken keep move direct direct could neg posit direct xaxi robot reach factori reach limit factori repair robot stop move moment set initi direct move robot target minim total distanc travel robot return minimum total distanc travel robot test case gener robot repair note robot move speed robot move direct never collid robot move opposit direct meet point collid cross robot pass factori reach limit cross exist robot move posit posit distanc move exampl input robot factori output explan shown figur first robot posit move posit direct repair first factori second robot posit move neg direct repair first factori third robot posit repair second factori need move limit first factori fix robot limit second factori fix robot total distanc shown achiev better total distanc exampl input robot factori output explan shown figur first robot posit move posit direct repair second factori second robot posit move neg direct repair first factori limit first factori fix robot limit second factori fix robot total distanc shown achiev better total distanc constraint robotlength factorylength factoryjlength roboti positionj limitj robotlength input gener alway possibl repair everi robot ","1840":"0index integ array num even length long num empti must repetit find minimum number num remov find maximum number num remov calcul averag remov number averag number exampl averag return number distinct averag calcul use process note tie minimum maximum number remov exampl input num output explan remov averag num remov averag num remov averag sinc distinct number among return exampl input num output explan averag calcul remov return constraint numslength numslength even numsi ","1841":"integ low high construct string start empti string step perform either follow append charact time append charact time perform number time good string string construct process length low high inclus return number differ good string construct satisfi properti sinc answer larg return modulo exampl input low high output explan possibl valid good string construct follow binari string good string exampl exampl input low high output explan good string constraint low high low ","1842":"undirect tree node label root node 2d integ array edg length edgesi ai bi indic edg node ai bi tree everi node gate also array even integ amount amounti repres price need open gate node amounti neg cash reward obtain open gate node otherwis game goe follow initi alic node bob node bob everi second alic bob move adjac node alic move toward leaf node bob move toward node everi node along path alic bob either spend money open gate node accept reward note gate alreadi open price requir cash reward alic bob reach node simultan share pricereward open gate word price open gate alic bob pay similarli reward gate receiv alic reach leaf node stop move similarli bob reach node stop move note event independ return maximum net incom alic travel toward optim leaf node exampl input edg bob amount output explan diagram repres tree game goe follow alic initi node bob node open gate respect node alic net incom alic bob move node sinc reach simultan open gate togeth share reward alic net incom becom alic move node sinc bob alreadi open gate alic incom remain unchang bob move node stop move alic move node open gate net incom becom neither alic bob make move game end possibl alic get higher net incom exampl input edg bob amount output explan alic follow path wherea bob follow path thu alic open gate node henc net incom constraint edgeslength edgesilength ai bi ai bi edg repres valid tree bob amountlength amounti even integ rang ","1843":"nonneg float point number round decim place celsiu denot temperatur celsiu convert celsiu kelvin fahrenheit return array an kelvin fahrenheit return array an answer within actual answer accept note kelvin celsiu fahrenheit celsiu exampl input celsiu output explan temperatur celsiu convert kelvin convert fahrenheit exampl input celsiu output explan temperatur celsiu convert kelvin convert fahrenheit constraint celsiu ","1844":"integ array num integ return number subarray num least common multipl subarray element subarray contigu nonempti sequenc element within array least common multipl array smallest posit integ divis array element exampl input num output explan subarray num least common multipl subarray element exampl input num output explan subarray num least common multipl subarray element constraint numslength numsi ","1845":"root binari tree uniqu valu oper choos node level swap valu return minimum number oper need make valu level sort strictli increas order level node number edg along path root node exampl input root 1437685nullnullnullnull9null10 output explan swap level becom swap 3rd level becom swap 3rd level becom use oper return proven minimum number oper need exampl input root output explan swap level becom swap 3rd level becom swap 3rd level becom use oper return proven minimum number oper need exampl input root output explan level alreadi sort increas order return constraint number node tree rang nodev valu tree uniqu ","1846":"string posit integ select set nonoverlap substr string satisfi follow condit length substr least substr palindrom return maximum number substr optim select substr contigu sequenc charact within string exampl input abaccdbbd output explan select substr underlin abaccdbbd aba palindrom length least shown find select valid substr exampl input adbcda output explan palindrom substr length least string constraint slength consist lowercas english letter ","1847":"0index array posit integ num find number triplet meet follow condit numslength numsi numsj numsk pairwis distinct word numsi numsj numsi numsk numsj numsk return number triplet meet condit exampl input num output explan follow triplet meet condit sinc triplet return note valid triplet exampl input num output explan triplet meet condit return constraint numslength numsi ","1848":"root binari search tree array queri size consist posit integ find 2d array answer size answeri mini maxi mini largest valu tree smaller equal queriesi valu exist add instead maxi smallest valu tree greater equal queriesi valu exist add instead return array answer exampl input root 621314915nullnullnullnullnullnull14 queri output explan answer queri follow way largest number smaller equal tree smallest number greater equal still answer first queri largest number smaller equal tree smallest number greater equal answer second queri largest number smaller equal tree smallest number greater equal exist answer third queri exampl input root 4null9 queri output explan largest number smaller equal tree exist smallest number greater equal answer queri constraint number node tree rang nodev querieslength queriesi ","1849":"tree ie connect undirect graph cycl structur countri network consist citi number exactli road capit citi citi 2d integ array road roadsi ai bi denot exist bidirect road connect citi ai bi meet repres citi meet capit citi car citi integ seat indic number seat car repres use car citi travel chang car ride anoth repres cost travel citi liter fuel return minimum number liter fuel reach capit citi exampl input road seat output explan representative1 goe directli capit liter fuel representative2 goe directli capit liter fuel representative3 goe directli capit liter fuel cost liter fuel minimum proven minimum number liter fuel need exampl input road seat output explan representative2 goe directli citi liter fuel representative2 representative3 go togeth citi liter fuel representative2 representative3 go togeth capit liter fuel representative1 goe directli capit liter fuel representative5 goe directli capit liter fuel representative6 goe directli citi liter fuel representative4 representative6 go togeth capit liter fuel cost liter fuel minimum proven minimum number liter fuel need exampl input road seat output explan repres need travel capit citi constraint roadslength roadsilength ai bi ai bi road repres valid tree seat ","1850":"string consist digit integ minlength partit call beauti partit nonintersect substr substr length least minlength substr start prime digit end nonprim digit prime digit rest digit nonprim return number beauti partit sinc answer may larg return modulo substr contigu sequenc charact within string exampl input minlength output explan exist way creat beauti partit exampl input minlength output explan exist way creat beauti partit exampl input minlength output explan exist way creat beauti partit constraint minlength slength consist digit ","1851":"valid cut circl cut repres straight line touch point edg circl pass center cut repres straight line touch point edg circl center valid invalid cut shown figur integ return minimum number cut need divid circl equal slice exampl input output explan figur show cut circl twice middl divid equal slice exampl input output explan least cut need divid circl equal slice shown less cut result slice equal size shape also note first cut divid circl distinct part constraint ","1852":"0index binari matrix grid 0index differ matrix diff creat follow procedur let number one ith row onesrowi let number one jth column onescolj let number zero ith row zerosrowi let number zero jth column zeroscolj diffij onesrowi onescolj zerosrowi zeroscolj return differ matrix diff exampl input grid output explan diff00 onesrow0 onescol0 zerosrow0 zeroscol0 diff01 onesrow0 onescol1 zerosrow0 zeroscol1 diff02 onesrow0 onescol2 zerosrow0 zeroscol2 diff10 onesrow1 onescol0 zerosrow1 zeroscol0 diff11 onesrow1 onescol1 zerosrow1 zeroscol1 diff12 onesrow1 onescol2 zerosrow1 zeroscol2 diff20 onesrow2 onescol0 zerosrow2 zeroscol0 diff21 onesrow2 onescol1 zerosrow2 zeroscol1 diff22 onesrow2 onescol2 zerosrow2 zeroscol2 exampl input grid output explan diff00 onesrow0 onescol0 zerosrow0 zeroscol0 diff01 onesrow0 onescol1 zerosrow0 zeroscol1 diff02 onesrow0 onescol2 zerosrow0 zeroscol2 diff10 onesrow1 onescol0 zerosrow1 zeroscol0 diff11 onesrow1 onescol1 zerosrow1 zeroscol1 diff12 onesrow1 onescol2 zerosrow1 zeroscol2 constraint gridlength gridilength gridij either ","1853":"string digit return number palindrom subsequ length sinc answer may larg return modulo note string palindrom read forward backward subsequ string deriv anoth string delet charact without chang order remain charact exampl input output explan possibl subsequ length equal palindrom exampl input output explan subsequ palindrom exampl input output explan palindrom subsequ constraint slength consist digit ","1854":"posit integ find pivot integ sum element inclus equal sum element inclus return pivot integ integ exist return guarante pivot index input exampl input output explan pivot integ sinc exampl input output explan pivot integ sinc exampl input output explan prove integ exist constraint ","1855":"string consist lowercas english letter return minimum number charact need append end becom subsequ subsequ string deriv anoth string delet charact without chang order remain charact exampl input coach code output explan append charact ding end coachingd subsequ coachingd shown append charact end never make subsequ exampl input abcd output explan alreadi subsequ abcd exampl input abcd output explan append charact abcd end zabcd subsequ zabcd shown append charact end never make subsequ constraint slength tlength lowercas english letter ","1856":"head link list remov everi node node greater valu anywher right side return head modifi link list exampl input head output explan node remov node right node node right node node right node exampl input head output explan everi node valu node remov constraint number node list rang nodev ","1857":"array num size consist distinct integ posit integ return number nonempti subarray num median equal note median array middl element sort array ascend order array even length median left middl element exampl median median subarray contigu part array exampl input num output explan subarray median equal exampl input num output explan subarray median equal constraint numslength numsi integ num distinct ","1858":"sentenc list word separ singl space lead trail space exampl hello world hello hello world hello world sentenc word uppercas lowercas english letter uppercas lowercas english letter consid differ sentenc circular last charact word equal first charact next word last charact last word equal first charact first word exampl leetcod exercis sound delight eetcod leetcod eat soul circular sentenc howev leetcod cool happi leetcod leetcod like leetcod circular sentenc string sentenc return true circular otherwis return fals exampl input sentenc leetcod exercis sound delight output true explan word sentenc leetcod exercis sound delight leetcod last charact equal exercisess first charact exercisess last charact equal sound first charact sound last charact equal delight first charact delight last charact equal leetcod first charact sentenc circular exampl input sentenc eetcod output true explan word sentenc eetcod eetcod last charact equal eetcod first charact sentenc circular exampl input sentenc leetcod cool output fals explan word sentenc leetcod cool leetcod last charact equal iss first charact sentenc circular constraint sentencelength sentenc lowercas uppercas english letter space word sentenc separ singl space lead trail space ","1859":"posit integ array skill even length skilli denot skill ith player divid player team size total skill team equal chemistri team equal product skill player team return sum chemistri team return way divid player team total skill team equal exampl input skill output explan divid player follow team team total skill sum chemistri team exampl input skill output explan player form team total skill chemistri team exampl input skill output explan way divid player team total skill team equal constraint skilllength skilllength even skilli ","1860":"posit integ repres number node undirect graph node label also 2d integ array edg edgesi ai bi indic bidirect edg node ai bi notic graph may disconnect divid node graph group 1index node graph belong exactli group everi pair node graph connect edg ai bi ai belong group index bi belong group index return maximum number group ie maximum divid node return imposs group node condit exampl input edg output explan shown imag add node first group add node second group add node third group add node fourth group see everi edg satisfi shown creat fifth group move node third fourth group least edg satisfi exampl input edg output explan add node first group node second group node third group satisfi first edg see third edg satisfi shown group possibl constraint edgeslength edgesilength ai bi ai bi edg pair vertic ","1861":"valu alphanumer string defin numer represent string base compris digit length string otherwis array str alphanumer string return maximum valu string str exampl input str alic3bob3400000 output explan alic3 consist letter digit valu length ie bob consist letter valu also length ie consist digit valu numer equival ie also consist digit valu consist digit valu henc maximum valu alic3 exampl input str output explan string array valu henc return constraint strslength strsilength strsi consist lowercas english letter digit ","1862":"undirect graph consist node number 0index integ array val length valsi denot valu ith node also 2d integ array edg edgesi ai bi denot exist undirect edg connect node ai bi star graph subgraph graph center node contain neighbor word subset edg graph exist common node edg imag show star graph neighbor respect center blue node star sum sum valu node present star graph integ return maximum star sum star graph contain edg exampl input val edg output explan diagram repres input graph star graph maximum star sum denot blue center includ neighbor shown possibl get star graph sum greater exampl input val edg output explan possibl star graph node henc return constraint valslength valsi edgeslength minn edgesilength ai bi ai bi ","1863":"0index integ array stone sort strictli increas order repres posit stone river frog initi first stone want travel last stone return first stone howev jump stone length jump absolut differ posit stone frog current posit stone frog jump formal frog stonesi jump stonesj length jump stonesi stonesj cost path maximum length jump among jump path return minimum cost path frog exampl input stone output explan figur repres optim path frog take cost path maximum length jump sinc possibl achiev cost less return exampl input stone output explan frog jump directli last stone come back first stone case length jump cost path max9 shown minimum achiev cost constraint stoneslength stonesi stones0 stone sort strictli increas order ","1864":"0index integ array nums1 nums2 equal length oper swap valu indic nums1 cost oper sum indic find minimum total cost perform oper number time nums1i nums2i perform oper return minimum total cost nums1 nums2 satisfi condit case possibl return exampl input nums1 nums2 output explan way perform oper swap valu indic incur cost nums1 swap valu indic incur cost nums1 swap valu indic incur cost nums1 see index nums1i nums2i cost requir note way swap valu proven possibl obtain cost less exampl input nums1 nums2 output explan way perform oper swap valu indic incur cost nums1 swap valu indic incur cost nums1 total cost need minimum possibl exampl input nums1 nums2 output explan shown possibl satisfi condit irrespect number oper perform henc return constraint nums1length nums2length nums1i nums2i ","1865":"matrix grid consist posit integ perform follow oper grid becom empti delet element greatest valu row multipl element exist delet add maximum delet element answer note number column decreas oper return answer perform oper describ exampl input grid output explan diagram show remov valu step first oper remov first row second row notic cell valu remov add answer second oper remov first row second row add answer third oper remov first row second row add answer final answer exampl input grid output explan diagram show remov valu step first oper remov first row add answer final answer constraint gridlength gridilength gridij ","1866":"integ array num subsequ num call squar streak length subsequ least sort subsequ element except first element squar previou number return length longest squar streak num return squar streak subsequ array deriv anoth array delet element without chang order remain element exampl input num output explan choos subsequ sort becom therefor squar streak shown everi subsequ length squar streak exampl input num output explan squar streak num return constraint numslength numsi ","1867":"integ repres size 0index memori array memori unit initi free memori alloc follow function alloc block size consecut free memori unit assign id mid free memori unit id mid note multipl block alloc mid free memori unit mid even alloc differ block implement alloc class allocatorint initi alloc object memori array size int allocateint size int mid find leftmost block size consecut free memori unit alloc id mid return block first index block exist return int freeint mid free memori unit id mid return number memori unit freed exampl input alloc alloc alloc alloc free alloc alloc alloc free alloc free output null explan alloc loc new allocator10 initi memori array size memori unit initi free locallocate1 leftmost block first index memori array becom return locallocate1 leftmost block first index memori array becom return locallocate1 leftmost block first index memori array becom return locfree2 free memori unit mid memori array becom return sinc unit mid locallocate3 leftmost block first index memori array becom return locallocate1 leftmost block first index memori array becom return locallocate1 leftmost block first index memori array becom return locfree1 free memori unit mid memori array becom return sinc unit mid locallocate10 find free block consecut free memori unit return locfree7 free memori unit mid memori array remain sinc memori unit mid return constraint size mid call made alloc free ","1868":"integ matrix grid array queri size find array answer size integ queriesi start top left cell matrix repeat follow process queriesi strictli greater valu current cell get point first time visit cell move adjac cell direct left right otherwis get point end process process answeri maximum number point get note queri allow visit cell multipl time return result array answer exampl input grid queri output explan diagram show cell visit get point queri exampl input grid queri output explan get point valu top left cell alreadi greater equal constraint gridlength gridilength querieslength gridij queriesi ","1869":"0index string array word string similar charact exampl abca cba similar sinc charact howev abacba bcfd similar sinc charact return number pair wordlength string wordsi wordsj similar exampl input word abaaabbabcdbacaabc output explan pair satisfi condit words0 words1 charact words3 words4 charact exampl input word aabbabba output explan pair satisfi condit words0 words1 charact words0 words2 charact words1 words2 charact exampl input word nbacbadba output explan sinc exist pair satisfi condit return constraint wordslength wordsilength wordsi lowercas english letter ","1870":"posit integ continu replac sum prime factor note prime factor divid multipl time includ sum mani time divid return smallest valu take exampl input output explan initi replac replac replac smallest valu take exampl input output explan initi smallest valu take constraint ","1871":"undirect graph consist node number integ 2d array edg edgesi ai bi indic edg node ai bi graph disconnect add addit edg possibl none graph repeat edg selfloop return true possibl make degre node graph even otherwis return fals degre node number edg connect exampl input edg output true explan diagram show valid way ad edg everi node result graph connect even number edg exampl input edg output true explan diagram show valid way ad edg exampl input edg output fals explan possibl obtain valid graph ad edg constraint edgeslength edgesilength ai bi ai bi repeat edg ","1872":"integ complet binari tree node root tree node valu everi node valu val rang children left node valu val right node valu val also 2d integ array queri length queriesi ai bi queri solv follow problem add edg node valu ai bi find length cycl graph remov ad edg node valu ai bi note cycl path start end node edg path visit length cycl number edg visit cycl could multipl edg node tree ad edg queri return array answer length answeri answer ith queri exampl input queri output explan diagram show tree node node color red describ node cycl ad edg ad edg node graph contain cycl node thu answer first queri delet ad edg process next queri ad edg node graph contain cycl node thu answer second queri delet ad edg process next queri ad edg node graph contain cycl node thu answer third queri delet ad edg exampl input queri output explan diagram show tree node node color red describ node cycl ad edg ad edg node graph contain cycl node thu answer first queri delet ad edg constraint querieslength queriesilength ai bi ai bi ","1873":"0index integ array fort length repres posit sever fort fortsi repres fort ith posit indic enemi fort ith posit indic fort ith posit command decid move armi fort posit empti posit armi travel enemi fort formal minij maxij fortsk move armi enemi fort come way captur return maximum number enemi fort captur case imposs move armi fort command return exampl input fort output explan move armi posit posit captur enemi fort move armi posit posit captur enemi fort sinc maximum number enemi fort captur return exampl input fort output explan sinc enemi fort captur return constraint fortslength fortsi ","1874":"string array positivefeedback negativefeedback contain word denot posit neg feedback respect note word posit neg initi everi student point posit word feedback report increas point student wherea neg word decreas point feedback report repres 0index string array report 0index integ array studentid studentidi repres id student receiv feedback report reporti id student uniqu integ return top student rank nonincreas order point case student point lower id rank higher exampl input positivefeedback smartbrilliantstudi negativefeedback report student studiousth student smart studentid output explan student posit feedback point sinc student lower id rank higher exampl input positivefeedback smartbrilliantstudi negativefeedback report student studiousth student smart studentid output explan student id posit feedback neg feedback point student id posit feedback point sinc student point return constraint positivefeedbacklength negativefeedbacklength positivefeedbackilength negativefeedbackjlength positivefeedbacki negativefeedbackj consist lowercas english letter word present positivefeedback negativefeedback reportlength studentidlength reporti consist lowercas english letter space singl space consecut word reporti reportilength studentidi valu studentidi uniqu ","1875":"array arr1 arr2 initi empti need add posit integ satisfi follow condit arr1 contain uniquecnt1 distinct posit integ divis divisor1 arr2 contain uniquecnt2 distinct posit integ divis divisor2 integ present arr1 arr2 divisor1 divisor2 uniquecnt1 uniquecnt2 return minimum possibl maximum integ present either array exampl input divisor1 divisor2 uniquecnt1 uniquecnt2 output explan distribut first natur number arr1 arr2 arr1 arr2 see array satisfi condit sinc maximum valu return exampl input divisor1 divisor2 uniquecnt1 uniquecnt2 output explan arr1 arr2 satisfi condit sinc maximum valu return exampl input divisor1 divisor2 uniquecnt1 uniquecnt2 output explan final possibl array arr1 arr2 shown possibl obtain lower maximum satisfi condit constraint divisor1 divisor2 uniquecnt1 uniquecnt2 uniquecnt1 uniquecnt2 ","1876":"string contain word everi consecut pair word separ singl space string anagram string ith word permut ith word exampl acb dfe anagram abc def def cab adc bef return number distinct anagram sinc answer may larg return modulo exampl input hot output explan anagram string hot oot hot oto toh toh exampl input output explan anagram possibl string constraint slength consist lowercas english letter space singl space consecut word ","1877":"0index circular string array word string target circular array mean array end connect array begin formal next element wordsi wordsi previou element wordsi wordsi length word start startindex move either next word previou word step time return shortest distanc need reach string target string target exist word return exampl input word helloiamleetcodehello target hello startindex output explan start index reach hello move unit right reach index move unit left reach index move unit right reach index move unit left reach index shortest distanc reach hello exampl input word ableetcod target leetcod startindex output explan start index reach leetcod move unit right reach index move unit left reach index shortest distanc reach leetcod exampl input word ieatleetcod target ate startindex output explan sinc ate exist word return constraint wordslength wordsilength wordsi target lowercas english letter startindex wordslength ","1878":"string consist charact nonneg integ minut may take either leftmost charact rightmost charact return minimum number minut need take least charact return possibl take charact exampl input aabaaaacaabc output explan take charact left charact charact take charact right charact charact charact total minut need proven minimum number minut need exampl input output explan possibl take return constraint slength consist letter slength ","1879":"array posit integ price pricei denot price ith candi posit integ store sell basket distinct candi tasti candi basket smallest absolut differ price candi basket return maximum tasti candi basket exampl input price output explan choos candi price tasti candi basket min13 min8 proven maximum tasti achiev exampl input price output explan choos candi price tasti candi basket min1 min2 proven maximum tasti achiev exampl input price output explan choos distinct candi candi result tasti constraint pricelength pricei ","1880":"array num consist posit integ integ partit array order group element exactli group partit call great sum element group greater equal return number distinct great partit sinc answer may larg return modulo partit consid distinct element numsi differ group partit exampl input num output explan great partit exampl input num output explan great partit array exampl input num output explan either put nums0 first partit second partit great partit constraint numslength numsi ","1881":"integ num return number digit num divid num integ val divid num num val exampl input num output explan divid henc answer exampl input num output explan divis sinc occur twice digit return exampl input num output explan divis digit henc answer constraint num num contain digit ","1882":"array posit integ num return number distinct prime factor product element num note number greater call prime divis integ val1 factor anoth integ val2 val2 val1 integ exampl input num output explan product element num distinct prime factor return exampl input num output explan product element num distinct prime factor return constraint numslength numsi ","1883":"string consist digit integ partit string call good digit part exactli substr valu substr less equal return minimum number substr good partit good partit exist return note valu string result interpret integ exampl valu valu substr contigu sequenc charact within string exampl input output explan partit string substr substr valu less equal shown partit string less substr exampl input output explan good partit string constraint slength si digit ","1884":"posit integ left right find integ num1 num2 left num1 num2 right num1 num2 prime number num2 num1 minimum amongst pair satisfi condit return posit integ array an num1 num2 multipl pair satisfi condit return minimum num1 valu number exist number greater call prime divis exampl input left right output explan prime number closest gap pair achiev sinc smaller return first pair exampl input left right output explan exist prime number rang condit satisfi constraint left right ","1885":"integ length width height mass repres dimens mass box respect return string repres categori box box bulki dimens box greater equal volum box greater equal mass box greater equal heavi box bulki heavi categori box neither bulki heavi categori neither box bulki heavi categori bulki box heavi bulki categori heavi note volum box product length width height exampl input length width height mass output heavi explan none dimens box greater equal volum categor bulki howev mass box heavi sinc box bulki heavi return heavi exampl input length width height mass output neither explan none dimens box greater equal volum categor bulki mass also less categor heavi either sinc neither categori return neither constraint length width height mass ","1886":"stream integ implement data structur check last integ pars stream equal valu implement datastream class datastreamint valu int initi object empti integ stream integ valu boolean consecint num add num stream integ return true last integ equal valu fals otherwis less integ condit hold true return fals exampl input datastream consec consec consec consec output null fals fals true fals explan datastream datastream new datastream4 valu datastreamconsec4 integ pars return fals datastreamconsec4 integ pars sinc less return fals datastreamconsec4 integ pars equal valu return true datastreamconsec3 last integ pars stream sinc equal valu return fals constraint valu num call made consec ","1887":"0index integ array num effect valu indic defin numsi numsj numsk xorbeauti array xore effect valu possibl triplet indic return xorbeauti num note val1 val2 bitwis val1 val2 val1 val2 bitwis val1 val2 exampl input num output explan triplet correspond effect valu list effect valu effect valu effect valu effect valu effect valu effect valu effect valu effect valu xorbeauti array bitwis beauti exampl input num output explan xorbeauti array constraint numslength numsi ","1888":"0index integ array station length stationsi repres number power station ith citi power station provid power everi citi fix rang word rang denot power station citi provid power citi note denot absolut valu exampl power citi total number power station provid power govern sanction build power station built citi rang preexist one integ return maximum possibl minimum power citi addit power station built optim note build power station multipl citi exampl input station output explan optim way instal power station citi station becom citi provid power station citi provid power station citi provid power station citi provid power station citi provid power station minimum power citi sinc possibl obtain larger power return exampl input station output explan prove make minimum power citi greater constraint stationslength stationsi ","1889":"array num sort nondecreas order return maximum number posit integ number neg integ word number posit integ num po number neg integ neg return maximum po neg note neither posit neg exampl input num output explan posit integ neg integ maximum count among exampl input num output explan posit integ neg integ maximum count among exampl input num output explan posit integ neg integ maximum count among constraint numslength numsi num sort nondecreas order solv problem ologn time complex ","1890":"0index integ array num integ start score oper choos index numslength increas score numsi replac numsi ceilnumsi return maximum possibl score attain appli exactli oper ceil function ceilval least integ greater equal val exampl input num output explan appli oper array element exactli final score exampl input num output explan follow oper oper select num becom score increas oper select num becom score increas oper select num becom score increas final score constraint numslength numsi ","1891":"0index string word1 word2 move consist choos indic word1length word2length swap word1i word2j return true possibl get number distinct charact word1 word2 equal exactli move return fals otherwis exampl input word1 ac word2 output fals explan pair swap would yield distinct charact first string second string exampl input word1 abcc word2 aab output true explan swap index first string index second string result string word1 abac word2 cab distinct charact exampl input word1 abcd word2 fghij output true explan result string distinct charact regardless indic swap constraint word1length word2length word1 word2 lowercas english letter ","1892":"worker want move box right old warehous left new warehous integ 2d integ array time size timei righti picki lefti puti warehous separ river connect bridg initi worker wait left side bridg move box ith worker follow cross bridg right side righti minut pick box right warehous picki minut cross bridg left side lefti minut put box left warehous puti minut ith worker less effici jth worker either condit met lefti righti leftj rightj lefti righti leftj rightj follow rule regul movement worker bridg worker use bridg time bridg unus priorit least effici worker right side cross worker right side priorit least effici worker left side cross enough worker alreadi dispatch left side pick remain box worker sent left side return elaps minut last box reach left side bridg exampl input time output explan minut worker cross bridg right minut worker pick box right warehous minut worker cross bridg left minut worker put box left warehous whole process end minut return problem ask instanc time last worker reach left side bridg exampl input time output explan worker cross bridg right worker pick box right warehous worker cross bridg right worker pick box right warehous worker cross bridg left worker put box left warehous worker cross bridg left worker put box left warehous worker cross bridg right worker pick box right warehous worker cross bridg left constraint timelength timeilength lefttorighti pickoldi righttolefti putnewi ","1893":"posit integ array num element sum sum element num digit sum sum digit necessarili distinct appear num return absolut differ element sum digit sum num note absolut differ integ defin exampl input num output explan element sum num digit sum num absolut differ element sum digit sum exampl input num output explan element sum num digit sum num absolut differ element sum digit sum constraint numslength numsi ","1894":"posit integ indic initi 0index integ matrix mat fill zero also 2d integ array queri queryi row1i col1i row2i col2i follow oper add everi element submatrix top left corner row1i col1i bottom right corner row2i col2i add matxi row1i row2i col1i col2i return matrix mat perform everi queri exampl input queri output explan diagram show initi matrix matrix first queri matrix second queri first queri add everi element submatrix top left corner bottom right corner second queri add everi element submatrix top left corner bottom right corner exampl input queri output explan diagram show initi matrix matrix first queri first queri add everi element matrix constraint querieslength row1i row2i col1i col2i ","1895":"integ array num integ return number good subarray num subarray arr good least pair indic arri arrj subarray contigu nonempti sequenc element within array exampl input num output explan good subarray array num exampl input num output explan differ good subarray pair pair pair pair constraint numslength numsi ","1896":"exist undirect initi unroot tree node index integ 2d integ array edg length edgesi ai bi indic edg node ai bi tree node associ price integ array price pricei price ith node price sum path sum price node lie path tree root node root choic incur cost choos root differ maximum minimum price sum amongst path start root return maximum possibl cost amongst possibl root choic exampl input edg price output explan diagram denot tree root node first part color red show path maximum price sum second part color blue show path minimum price sum first path contain node price sum price second path contain node price differ maximum minimum price sum prove maximum cost exampl input edg price output explan diagram denot tree root node first part color red show path maximum price sum second part color blue show path minimum price sum first path contain node price sum price second path contain node price differ maximum minimum price sum prove maximum cost constraint edgeslength ai bi edg repres valid tree pricelength pricei ","1897":"integ array nums1 nums2 sort nondecreas order return minimum integ common array common integ amongst nums1 nums2 return note integ said common nums1 nums2 array least occurr integ exampl input nums1 nums2 output explan smallest element common array return exampl input nums1 nums2 output explan common element array smallest return constraint nums1length nums2length nums1i nums2j nums1 nums2 sort nondecreas order ","1898":"integ array nums1 nums2 equal length integ perform follow oper nums1 choos index increment nums1i decrement nums1j word nums1i nums1i nums1j nums1j nums1 said equal nums2 indic nums1i nums2i return minimum number oper requir make nums1 equal nums2 imposs make equal return exampl input nums1 nums2 output explan oper transform nums1 nums2 1st oper appli oper nums1 oper appli oper nums1 prove imposs make array equal fewer oper exampl input nums1 nums2 output explan prove imposs make array equal constraint nums1length nums2length nums1i nums2j ","1899":"0index integ array nums1 nums2 equal length posit integ must choos subsequ indic nums1 length chosen indic ik score defin sum select element nums1 multipli minimum select element nums2 defin simpli nums1i0 nums1i1 nums1ik minnums2i0 nums2i1 nums2ik return maximum possibl score subsequ indic array set deriv set delet element exampl input nums1 nums2 output explan possibl subsequ score choos indic score min213 choos indic score min214 choos indic score min234 choos indic score min134 therefor return max score exampl input nums1 nums2 output explan choos index optim nums12 nums22 maximum possibl score constraint nums1length nums2length nums1i nums2j ","1900":"exist infinit larg grid current point need reach point targetx targeti use finit number step step move point follow point integ targetx targeti repres xcoordin ycoordin final posit return true reach point use number step fals otherwis exampl input targetx targeti output fals explan imposs reach use sequenc move fals return exampl input targetx targeti output true explan path constraint targetx targeti ","1901":"posit integ digit sign accord follow rule signific digit assign posit sign digit opposit sign adjac digit return sum digit correspond sign exampl input output explan exampl input output explan exampl input output explan constraint ","1902":"class student exam 0index integ matrix score row repres student scoreij denot score ith student got jth exam matrix score contain distinct integ also integ sort student ie row matrix score kth 0index exam highest lowest return matrix sort exampl input score output explan diagram denot student e denot exam student index score exam highest score got first place student index score exam second highest score got second place student index score exam lowest score got third place exampl input score output explan diagram denot student e denot exam student index score exam highest score got first place student index score exam lowest score got second place constraint scorelength scoreilength scoreij score consist distinct integ ","1903":"0index binari string target length follow oper number time choos differ indic simultan replac si si si exampl choos simultan replac return true make string equal target fals otherwis exampl input target output true explan follow oper choos choos sinc make equal target return true exampl input target output fals explan possibl make equal target number oper constraint slength targetlength target digit ","1904":"integ array num integ split array number nonempti subarray cost split sum import valu subarray split let trimmedsubarray version subarray number appear remov exampl trimmed312434 import valu subarray trimmedsubarraylength exampl subarray trimmed1233344 33344the import valu subarray return minimum possibl cost split num subarray contigu nonempti sequenc element within array exampl input num output explan split num subarray import valu import valu cost split shown minimum possibl cost among possibl split exampl input num output explan split num subarray import valu import valu cost split shown minimum possibl cost among possibl split exampl input num output explan split num subarray import valu cost split shown minimum possibl cost among possibl split constraint numslength numsi numslength ","1905":"posit integ initi place board everi day day perform follow procedur number present board find number place number board return number distinct integ present board day elaps note number place board remain end stand modulo oper exampl exampl input output explan initi present board next day ad sinc day ad board end billion day distinct number board exampl input output explan sinc ad board billion day distinct number board constraint ","1906":"regular convex polygon vertic vertic label clockwis direct vertex exactli monkey follow figur show convex polygon vertic simultan monkey move neighbor vertex collis happen least monkey resid vertex movement intersect edg return number way monkey move least collis happen sinc answer may larg return modulo exampl input output explan total possibl movement way collid point monkey move clockwis direct monkey move anticlockwis direct monkey move clockwis direct monkey collid monkey move anticlockwis direct monkey move anticlockwis direct monkey move clockwis direct monkey collid exampl input output constraint ","1907":"bag 0index integ array weight weightsi weight ith marbl also integ divid marbl bag accord follow rule bag empti ith marbl jth marbl bag marbl index ith jth indic also bag bag consist marbl index inclus cost bag weightsi weightsj score distribut marbl sum cost bag return differ maximum minimum score among marbl distribut exampl input weight output explan distribut result minim score distribut result maxim score thu return differ exampl input weight output explan distribut possibl sinc maxim minim score return constraint weightslength weightsi ","1908":"0index integ array num size contain number return number increas quadruplet quadruplet increas numsi numsk numsj numsl exampl input num output explan numsi numsk numsj numsl numsi numsk numsj numsl quadruplet return exampl input num output explan exist quadruplet sinc numsj numsk return constraint numslength numsi numslength integ num uniqu num permut ","1909":"array posit integ num return array answer consist digit integ num separ order appear num separ digit integ get digit order exampl integ separ digit exampl input num output explan separ separ separ separ answer note answer contain separ order exampl input num output explan separ integ num answer constraint numslength numsi ","1910":"integ array ban integ maxsum choos number integ follow rule chosen integ rang integ chosen chosen integ array ban sum chosen integ exceed maxsum return maximum number integ choos follow mention rule exampl input ban maxsum output explan choos integ rang appear ban sum exceed maxsum exampl input ban maxsum output explan choos integ follow mention condit exampl input ban maxsum output explan choos integ rang appear ban sum exceed maxsum constraint bannedlength bannedi maxsum ","1911":"prize xaxi integ array prizeposit sort nondecreas order prizepositionsi posit ith prize could differ prize posit line also integ allow select segment integ endpoint length segment must collect prize whose posit fall within least select segment includ endpoint segment select segment may intersect exampl choos segment win prize satisfi prizepositionsi prizepositionsi return maximum number prize win choos segment optim exampl input prizeposit output explan exampl win prize select segment exampl input prizeposit output explan exampl choic segment abl get prize constraint prizepositionslength prizepositionsi prizeposit sort nondecreas order ","1912":"0index binari matrix grid move cell row col cell row col row col valu matrix disconnect path flip valu possibl none cell flip cell return true possibl make matrix disconnect fals otherwis note flip cell chang valu exampl input grid output true explan chang cell shown diagram path result grid exampl input grid output fals explan possibl chang cell path constraint gridlength gridilength gridij either grid00 gridm ","1913":"integ array gift denot number gift variou pile everi second follow choos pile maximum number gift pile maximum number gift choos leav behind floor squar root number gift pile take rest gift return number gift remain second exampl input gift output explan gift taken follow way first second last pile chosen gift left behind second pile chosen gift left behind first pile chosen gift left behind final last pile chosen gift left behind final remain gift total number gift remain exampl input gift output explan case regardless pile choos leav behind gift pile cant take pile total gift remain constraint giftslength giftsi ","1914":"0index array string word 2d array integ queri queri queriesi li ri ask us find number string present rang li ri inclus word start end vowel return array an size querieslength ansi answer ith queri note vowel letter e u exampl input word ababcbeceaa queri output explan string start end vowel aba ece e answer queri string aba ece queri string ece e queri return exampl input word aei queri output explan everi string satisfi condit return constraint wordslength wordsilength wordsi consist lowercas english letter sumwordsilength querieslength li ri wordslength ","1915":"sever consecut hous along street money insid also robber want steal money home refus steal adjac home capabl robber maximum amount money steal hous hous rob integ array num repres much money stash hous formal ith hous left numsi dollar also integ repres minimum number hous robber steal alway possibl steal least hous return minimum capabl robber possibl way steal least hous exampl input num output explan way rob least hous rob hous indic capabl maxnums0 nums2 rob hous indic capabl maxnums0 nums3 rob hous indic capabl maxnums1 nums3 therefor return min5 exampl input num output explan way rob hous way lead minimum capabl rob hous index return maxnums0 nums4 constraint numslength numsi numslength ","1916":"fruit basket contain fruit 0index integ array basket1 basket2 repres cost fruit basket want make basket equal use follow oper mani time want chose indic swap ith fruit basket1 jth fruit basket2 cost swap minbasket1ibasket2j basket consid equal sort accord fruit cost make exactli basket return minimum cost make basket equal imposs exampl input basket1 basket2 output explan swap index basket1 index basket2 cost basket1 basket2 rearrang array make equal exampl input basket1 basket2 output explan shown imposs make basket equal constraint basket1length basket2length basket1length basket1ibasket2i ","1917":"0index integ array num concaten number number form concaten numer exampl concaten concaten valu num initi equal perform oper num becom empti exist number num pick first element last element num respect add valu concaten concaten valu num delet first last element num element exist add valu concaten valu num delet return concaten valu num exampl input num output explan perform oper num concaten valu first oper pick first element last element concaten add concaten valu becom equal delet num num becom equal second oper pick first element last element concaten add concaten valu becom equal delet num num becom empti sinc concaten valu answer exampl input num output explan perform oper num concaten valu first oper pick first element last element concaten add concaten valu becom equal delet num num becom equal second oper pick first element last element concaten add concaten valu becom equal delet num num becom equal third oper num element pick add concaten valu becom equal delet num num becom empti sinc concaten valu answer constraint numslength numsi ","1918":"0index integ array num size integ lower upper return number fair pair pair fair lower numsi numsj upper exampl input num lower upper output explan fair pair exampl input num lower upper output explan singl fair pair constraint numslength numslength numsi lower upper ","1919":"binari string 2d integ array queri queriesi firsti secondi ith queri find shortest substr whose decim valu val yield secondi bitwis xore firsti word val firsti secondi answer ith queri endpoint 0index substr lefti righti substr exist multipl answer choos minimum lefti return array an ansi lefti righti answer ith queri substr contigu nonempti sequenc charact within string exampl input queri output explan first queri substr rang decim valu henc answer first queri second queri substr rang decim valu return second queri exampl input queri output explan exampl substr answer queri henc return exampl input queri output explan exampl substr rang decim valu answer constraint slength si either querieslength firsti secondi ","1920":"string allow remov number charact string score string charact remov string otherwis let left minimum index among remov charact let right maximum index among remov charact score string right left return minimum possibl score make subsequ subsequ string new string form origin string delet none charact without disturb rel posit remain charact ie ace subsequ abcd aec exampl input abacaba bzaa output explan exampl remov charact index 0index string becom baa subsequ string abacaba score proven minimum score achiev exampl input cde xyz output explan exampl remov charact indic 0index string becom subsequ string cde score proven minimum score achiev constraint slength tlength lowercas english letter ","1921":"integ num know bob sneakili remap possibl digit anoth digit return differ maximum minimum valu bob make remap exactli digit num note bob remap digit anoth digit bob replac occurr num bob remap digit case num chang bob remap differ digit obtain minimum maximum valu respect result number remap contain lead zero exampl input num output explan achiev maximum valu bob remap digit digit yield achiev minimum valu bob remap digit digit yield differ number exampl input num output explan maximum valu return function replac minimum valu return function replac thu return constraint num ","1922":"integ array num low score num minimum absolut differ integ high score num maximum absolut differ integ score num sum high low score return minimum score chang element num exampl input num output explan chang nums0 nums1 num becom low score minimum absolut differ high score maximum absolut differ sum high low score exampl input num output explan chang nums1 nums2 num becom sum maximum absolut differ minimum absolut differ constraint numslength numsi ","1923":"0index integ array num say integ express num exist integ index1 index2 indexk numslength numsindex1 numsindex2 numsindexk word integ express written bitwis subsequ num return minimum posit nonzero integ express num exampl input num output explan alreadi present array know express sinc nums0 nums1 sinc express return exampl input num output explan show smallest number express constraint numslength numsi ","1924":"0index array nums1 nums2 2d array queri queri type queri queri type queriesi flip valu nums1 index index 0index queri type queriesi everi index set nums2i nums2i nums1i queri type queriesi find sum element nums2 return array contain answer third type queri exampl input nums1 nums2 queri output explan first queri nums1 becom second queri nums2 becom answer third queri thu return exampl input nums1 nums2 queri output explan first queri nums2 remain answer second queri thu return constraint nums1lengthnums2length nums1length nums2length querieslength queriesilength nums1length nums1i nums2i ","1925":"2d integ array nums1 nums2 nums1i idi vali indic number id idi valu equal vali nums2i idi vali indic number id idi valu equal vali array contain uniqu id sort ascend order id merg array array sort ascend order id respect follow condit id appear least array includ result array id includ valu sum valu id array id exist array valu array consid return result array return array must sort ascend order id exampl input nums1 nums2 output explan result array contain follow id valu id id valu id id valu id id valu id exampl input nums1 nums2 output explan common id includ id valu result list constraint nums1length nums2length nums1ilength nums2jlength idi vali array contain uniqu id array strictli ascend order id ","1926":"posit integ follow oper number time add subtract power return minimum number oper make equal number power exampl input output explan follow oper add subtract subtract shown minimum number oper need make equal exampl input output explan follow oper add add subtract minimum number oper constraint ","1927":"posit integ 0index array num subset array num squarefre product element squarefre integ squarefre integ integ divis squar number return number squarefre nonempti subset array num sinc answer may larg return modulo nonempti subset num array obtain delet possibl none element num subset differ chosen indic delet differ exampl input num output explan squarefre subset exampl subset consist 0th element product element squarefre integ subset consist 3rd element product element squarefre integ subset consist 0th 3rd element product element squarefre integ proven squarefre subset array exampl input num output explan squarefre subset exampl subset consist 0th element product element squarefre integ proven squarefre subset array constraint numslength numsi ","1928":"defin lcp matrix 0index string word lowercas english letter grid lcpij equal length longest common prefix substr wordin1 wordjn1 matrix lcp return alphabet smallest string word correspond lcp string return empti string string lexicograph smaller string length first posit differ string letter appear earlier alphabet correspond letter exampl aabd lexicograph smaller aaca first posit differ third letter come exampl input lcp output abab explan lcp correspond letter string altern letter lexicograph smallest abab exampl input lcp output aaaa explan lcp correspond letter string singl distinct letter lexicograph smallest aaaa exampl input lcp output explan lcp33 equal sinc word33 consist singl letter thu answer exist constraint lcplength lcpilength lcpij ","1929":"0index integ array num find 0index integ array answer answerlength numslength answeri leftsumi rightsumi leftsumi sum element left index array num element leftsumi rightsumi sum element right index array num element rightsumi return array answer exampl input num output explan array leftsum array rightsum array answer exampl input num output explan array leftsum array rightsum array answer constraint numslength numsi ","1930":"0index string word length consist digit posit integ divis array div word integ array length divi numer valu word0i divis divi otherwis return divis array word exampl input word output explan prefix divis exampl input word output explan prefix divis constraint wordlength word consist digit ","1931":"0index integ array num initi indic unmark allow make oper number time pick differ unmark indic numsi numsj mark return maximum possibl number mark indic num use oper number time exampl input num output explan first oper pick oper allow nums2 nums1 mark index shown there valid oper answer exampl input num output explan first oper pick oper allow nums3 nums0 mark index second oper pick oper allow nums1 nums2 mark index sinc oper answer exampl input num output explan valid oper answer constraint numslength numsi ","1932":"matrix grid consist nonneg integ gridrowcol repres minimum time requir abl visit cell row col mean visit cell row col time visit greater equal gridrowcol stand topleft cell matrix 0th second must move adjac cell direct left right move make take second return minimum time requir visit bottomright cell matrix visit bottomright cell return exampl input grid output explan path take follow cell move cell possibl grid01 move cell possibl grid11 move cell possibl grid12 move cell possibl grid11 move cell possibl grid12 move cell possibl grid13 move cell possibl grid23 final time shown minimum time possibl exampl input grid output explan path top left bottomright cell constraint gridlength gridilength gridij grid00 ","1933":"posit integ num split nonneg integ num1 num2 concaten num1 num2 permut num word sum number occurr digit num1 num2 equal number occurr digit num num1 num2 contain lead zero return minimum possibl sum num1 num2 note guarante num contain lead zero order occurr digit num1 num2 may differ order occurr num exampl input num output explan split num1 num2 give sum prove inde minim possibl sum exampl input num output explan split num1 num2 would give optim sum constraint num ","1934":"exist infinit larg twodimension grid uncolor unit cell posit integ indic must follow routin minut first minut color arbitrari unit cell blue everi minut thereaft color blue everi uncolor cell touch blue cell pictori represent state grid minut return number color cell end minut exampl input output explan minut blue cell return exampl input output explan minut color cell boundari center return constraint ","1935":"2d integ array rang rangesi starti endi denot integ starti endi inclus contain ith rang split rang possibl empti group rang belong exactli group overlap rang must belong group rang said overlap exist least integ present rang exampl overlap occur rang return total number way split rang group sinc answer may larg return modulo exampl input rang output explan rang overlap must group thu possibl way put rang togeth group put rang togeth group exampl input rang output explan rang overlap must group rang also overlap must also group thu possibl way group rang group rang group rang group group rang group group constraint rangeslength rangesilength starti endi ","1936":"alic undirect tree node label tree repres 2d integ array edg length edgesi ai bi indic edg node ai bi tree alic want bob find root tree allow bob make sever guess tree guess follow choos distinct integ u exist edg u tree tell alic u parent tree bob guess repres 2d integ array guess guessesj uj indic bob guess uj parent alic lazi repli bob guess say least guess true 2d integ array edg guess integ return number possibl node root alic tree tree return exampl input edg guess output explan root correct guess root correct guess root correct guess root correct guess root correct guess consid root node lead correct guess exampl input edg guess output explan root correct guess root correct guess root correct guess root correct guess root correct guess consid node root give least correct guess constraint edgeslength guesseslength ai bi uj ai bi uj edg repres valid tree guessesj edg tree guess uniqu guesseslength ","1937":"peopl stand line label first person line hold pillow initi everi second person hold pillow pass next person stand line pillow reach end line direct chang peopl continu pass pillow opposit direct exampl pillow reach nth person pass 1th person 2th person posit integ time return index person hold pillow time second exampl input time output explan peopl pass pillow follow way second person hold pillow exampl input time output explan peopl pass pillow follow way second 3rd person hold pillow constraint time note question find child ball second ","1938":"root binari tree posit integ level sum tree sum valu node level return kth largest level sum tree necessarili distinct fewer level tree return note node level distanc root exampl input root output explan level sum follow level level level level largest level sum exampl input root 12null3 output explan largest level sum constraint number node tree nodev ","1939":"0index integ array num length split index call valid product first element product remain element coprim exampl num split index valid coprim split index valid coprim split index valid return smallest index array split validli split valu val1 val2 coprim gcdval1 val2 gcdval1 val2 greatest common divisor val1 val2 exampl input num output explan tabl show valu product first element remain element gcd index valid split index exampl input num output explan tabl show valu product first element remain element gcd index valid split constraint numslength numsi ","1940":"test type question integ target 0index 2d integ array type typesi counti marksi indic counti question ith type worth marksi point return number way earn exactli target point exam sinc answer may larg return modulo note question type indistinguish exampl question type solv 1st question solv 1st 3rd question 3rd question exampl input target type output explan earn point way solv question 0th type solv question 0th type question 1st type solv question 0th type question 1st type solv question 0th type question type solv question 0th type question 1st type question type solv question 1st type solv question type exampl input target type output explan earn point way solv question 0th type solv question 0th type question 1st type solv question 0th type question 1st type solv question type exampl input target type output explan earn point answer question constraint target typeslength typesilength counti marksi ","1941":"0index array string word integ left right string call vowel string start vowel charact end vowel charact vowel charact e u return number vowel string wordsi belong inclus rang left right exampl input word areamyu left right output explan vowel string start end e ami vowel string end vowel u vowel string start u end u number vowel string mention rang exampl input word heyaeomuoooartro left right output explan aeo vowel string start end mu vowel string start vowel ooo vowel string start end artro vowel string start end number vowel string mention rang constraint wordslength wordsilength wordsi consist lowercas english letter left right wordslength ","1942":"0index integ array num rearrang element num order includ order let prefix array contain prefix sum num rearrang word prefixi sum element num rearrang score num number posit integ array prefix return maximum score achiev exampl input num output explan rearrang array num prefix score shown maximum score obtain exampl input num output explan rearrang array result score constraint numslength numsi ","1943":"0index integ array num oper choos differ indic numslength choos nonneg integ kth bit 0index binari represent numsi numsj subtract 2k numsi numsj subarray beauti possibl make element equal appli oper number time return number beauti subarray array num subarray contigu nonempti sequenc element within array exampl input num output explan beauti subarray num make element subarray equal follow way choos subtract number subarray becom choos subtract number subarray becom make element subarray equal follow way choos subtract number subarray becom choos subtract number subarray becom choos subtract number subarray becom exampl input num output explan beauti subarray num constraint numslength numsi ","1944":"comput run unlimit number task time 2d integ array task tasksi starti endi durationi indic ith task run total durationi second necessarili continu within inclus time rang starti endi may turn comput need run task also turn idl return minimum time comput turn complet task exampl input task output explan first task run inclus time rang second task run inclus time rang third task run inclus time rang comput total second exampl input task output explan first task run inclus time rang second task run inclus time rang third task run inclus time rang comput total second constraint taskslength tasksilength starti endi durationi endi starti ","1945":"integ money denot amount money dollar anoth integ children denot number children must distribut money distribut money accord follow rule money must distribut everyon must receiv least dollar nobodi receiv dollar return maximum number children may receiv exactli dollar distribut money accord aforement rule way distribut money return exampl input money children output explan maximum number children dollar way distribut money dollar first child dollar second child dollar third child proven distribut exist number children get dollar greater exampl input money children output explan child dollar constraint money children ","1946":"0index integ array num allow permut num new array perm choos defin great num number indic numslength permi numsi return maximum possibl great achiev permut num exampl input num output explan optim rearrang perm indic permi numsi henc return exampl input num output explan prove optim perm indic permi numsi henc return constraint numslength numsi ","1947":"array num consist posit integ start score appli follow algorithm choos smallest integ array mark tie choos smallest index add valu chosen integ score mark chosen element adjac element exist repeat array element mark return score get appli algorithm exampl input num output explan mark element follow smallest unmark element mark adjac element smallest unmark element mark left adjac element remain unmark element mark score exampl input num output explan mark element follow smallest unmark element mark adjac element smallest unmark element sinc choos leftmost mark index right adjac element remain unmark element mark score constraint numslength numsi ","1948":"integ array rank repres rank mechan ranksi rank ith mechan mechan rank repair car minut also integ car repres total number car wait garag repair return minimum time taken repair car note mechan repair car simultan exampl input rank car output explan first mechan repair car time requir minut second mechan repair car time requir minut third mechan repair car time requir minut fourth mechan repair car time requir minut prove car repair less minut exampl input rank car output explan first mechan repair car time requir minut second mechan repair car time requir minut third mechan repair car time requir minut prove car repair less minut constraint rankslength ranksi car ","1949":"posit integ let even denot number even indic binari represent valu let odd denot number odd indic binari represent valu note bit index right left binari represent number return array even odd exampl input output explan binari represent contain indic exampl input output explan binari represent contain index constraint ","1950":"knight chessboard valid configur knight start topleft cell board visit everi cell board exactli integ matrix grid consist distinct integ rang gridrowcol indic cell row col gridrowcolth cell knight visit move 0index return true grid repres valid configur knight movement fals otherwis note valid knight move consist move squar vertic squar horizont squar horizont squar vertic figur illustr possibl move knight cell exampl input grid output true explan diagram repres grid shown valid configur exampl input grid output fals explan diagram repres grid 8th move knight valid consid posit 7th move constraint gridlength gridilength gridrowcol integ grid uniqu ","1951":"array num posit integ posit integ subset num beauti contain integ absolut differ equal return number nonempti beauti subset array num subset num array obtain delet possibl none element num subset differ chosen indic delet differ exampl input num output explan beauti subset array num prove beauti subset array exampl input num output explan beauti subset array num prove beauti subset array constraint numslength numsi ","1952":"bag consist item item number written nonneg integ numon numzero numnegon bag initi contain numon item written numzero item written numnegon item written want pick exactli item among avail item return maximum possibl sum number written item exampl input numon numzero numnegon output explan bag item number written take item written get sum total proven maximum possibl sum exampl input numon numzero numnegon output explan bag item number written take item written item written get sum total proven maximum possibl sum constraint numon numzero numnegon numon numzero numnegon ","1953":"array num consist posit integ also integ array queri size ith queri want make element num equal queriesi perform follow oper array number time increas decreas element array return array answer size answeri minimum number oper make element num equal queriesi note queri array reset origin state exampl input num queri output explan first queri follow oper decreas nums0 time num decreas nums2 time num decreas nums3 time num total number oper first queri second queri follow oper increas nums0 time num increas nums1 time num decreas nums2 time num decreas nums3 time num total number oper second queri exampl input num queri output explan increas valu array total number oper constraint numslength querieslength numsi queriesi ","1954":"exist undirect unroot tree node index integ 2d integ array edg length edgesi ai bi indic edg node ai bi tree also array coin size coinsi either indic presenc coin vertex initi choos start vertex tree perform follow oper number time collect coin distanc current vertex move adjac vertex tree find minimum number edg need go collect coin go back initi vertex note pass edg sever time need count answer sever time exampl input coin edg output explan start vertex collect coin vertex move vertex collect coin vertex move back vertex exampl input coin edg output explan start vertex collect coin vertic move vertex collect coin vertex move back vertex constraint coinslength coinsi edgeslength edgesilength ai bi ai bi edg repres valid tree ","1955":"array uniqu digit nums1 nums2 return smallest number contain least digit array exampl input nums1 nums2 output explan number contain digit nums1 digit nums2 proven smallest number exampl input nums1 nums2 output explan number contain digit exist array constraint nums1length nums2length nums1i nums2i digit array uniqu ","1956":"bidirect graph vertic vertex label edg graph repres 2d integ array edg edgesi ui vi denot edg vertex ui vertex vi everi vertex pair connect edg vertex edg return length shortest cycl graph cycl exist return cycl path start end node edg path use exampl input edg output explan cycl smallest length exampl input edg output explan cycl graph constraint edgeslength edgesilength ui vi ui vi repeat edg ","1957":"binari string consist zero one substr consid balanc zero one number zero equal number one insid substr notic empti substr consid balanc substr return length longest balanc substr substr contigu sequenc charact within string exampl input output explan longest balanc substr length exampl input output explan longest balanc substr length exampl input output explan balanc substr except empti substr answer constraint slength si ","1958":"integ array num need creat 2d array num satisfi follow condit 2d array contain element array num row 2d array contain distinct integ number row 2d array minim return result array multipl answer return note 2d array differ number element row exampl input num output explan creat 2d array contain follow row element num use row 2d array contain distinct integ valid answer shown less row valid array exampl input num output explan element array distinct keep first row 2d array constraint numslength numsi numslength ","1959":"mice differ type chees type chees eaten exactli mous point chees index 0index reward1i first mous eat reward2i second mous eat posit integ array reward1 posit integ array reward2 nonneg integ return maximum point mice achiev first mous eat exactli type chees exampl input reward1 reward2 output explan exampl first mous eat 0index 3rd type chees second mous eat 0th 1st type chees total point proven maximum total point mice achiev exampl input reward1 reward2 output explan exampl first mous eat 0th 0index 1st type chees second mous eat chees total point proven maximum total point mice achiev constraint reward1length reward2length reward1i reward2i ","1960":"integ integ repres array arr length element set except posit set also integ array ban contain restrict posit perform follow oper arr revers subarray size singl set posit ban return integ array answer result ith result minimum number oper need bring singl posit arr imposs exampl input ban output explan initi place posit number oper need posit never place ban posit answer posit perform oper size revers whole array singl oper posit answer posit exampl input ban output explan initi place posit number oper need posit perform oper subarray posit posit ban set posit imposs set posit oper exampl input ban output explan perform oper size never chang posit constraint bannedlength bannedi bannedi valu ban uniqu ","1961":"0index integ array num exist array arr length numslength arri sum numsj numsi set arri return array arr exampl input num output explan nums0 nums2 nums0 nums3 therefor arr0 arr1 index valu nums2 nums0 nums2 nums3 therefor arr2 nums3 nums0 nums3 nums2 therefor arr3 arr4 index valu exampl input num output explan sinc element num distinct arri constraint numslength numsi note question interv ident element ","1962":"0index integ matrix grid initi posit topleft cell start cell move follow cell cell gridij rightward movement cell gridij downward movement return minimum number cell need visit reach bottomright cell valid path return exampl input grid output explan imag show path visit exactli cell exampl input grid output explan imag show path visit exactli cell exampl input grid output explan proven path exist constraint gridlength gridilength gridij gridm ","1963":"write function check valu instanc class superclass problem object consid instanc class object access classs method constraint data type pass function exampl valu class could undefin exampl input func checkifinstanceofnew date date output true explan object return date constructor definit instanc date exampl input func class anim class dog extend anim return checkifinstanceofnew dog anim output true explan class anim class dog extend anim checkifinstanceofnew dog anim true dog subclass anim therefor dog object instanc dog anim exampl input func checkifinstanceofd date output fals explan date constructor logic instanc exampl input func checkifinstanceof5 number output true explan number note instanceof keyword would return fals howev still consid instanc number access number method exampl tofix ","1964":"write code enhanc array call arraylast method array return last element element array return may assum array output jsonpars exampl input num null output explan call numslast return last element exampl input num output explan element return constraint arr valid json array arrlength ","1965":"integ return counter function counter function initi return return previou valu everi subsequ time call etc exampl input callcallcal output explan counter first time counter call return counter return previou time counter return previou time exampl input callcallcallcallcal output explan counter initi return increas sebsequ call constraint callslength callsi call ","1966":"posit integ milli write asynchron function sleep milli millisecond resolv valu exampl input milli output explan return promis resolv 100m let datenow sleep100then consolelogdatenow exampl input milli output explan return promis resolv 200m constraint milli ","1967":"write class allow get set keyvalu pair howev time expir associ key class public method setkey valu durat accept integ key integ valu durat millisecond durat elaps key inaccess method return true unexpir key alreadi exist fals otherwis valu durat overwritten key alreadi exist getkey unexpir key exist return associ valu otherwis return count return count unexpir key exampl input action timelimitedcach set get count get valu timedelay output null fals explan cach construct keyvalu pair ad time limit 100m valu doesnt exist fals return key1 request valu return count call activ key cach t100 key1 expir t150 get1 call return cach empti exampl input action timelimitedcach set set get get get count valu timedelay output null fals true explan cach construct keyvalu pair ad time limit 50m valu doesnt exist fals return keyvalu pair ad time limit 100m nonexpir valu alreadi exist true return old valu overwritten get1 call return t120 get1 call return t140 key1 expir t200 get1 call cach empti return t250 count return cach empti constraint key valu durat actionslength actionslength valueslength actionslength timedelayslength timedelaysi actionsi timelimitedcach set get count first action alway timelimitedcach must execut immedi 0millisecond delay ","1968":"function return memoiz version function memoiz function function never call twice input instead return cach valu assum possibl input function sum fib factori sum accept integ return assum valu alreadi cach argument use argument exampl argument separ call made fib accept singl integ return fibn fibn otherwis factori accept singl integ return factorialn otherwis exampl input fnname sum action callcallgetcallcountcallgetcallcount valu output explan const sum const memoizedsum memoizesum memoizedsum2 call return sum call seen memoizedsum2 call return howev sum call input seen getcallcount total call count memoizedsum1 call return sum call seen getcallcount total call count exampl input fnname factori action callcallcallgetcallcountcallgetcallcount valu output explan const factori factorialn const memofactori memoizefactori memofactorial2 call return memofactorial3 call return memofactorial2 call return howev factori call seen getcallcount total call count memofactorial3 call return howev factori call seen getcallcount total call count exampl input fnname fib action callgetcallcount valu output explan fib5 call getcallcount total call count constraint actionslength actionslength valueslength actionsi call getcallcount fnname sum factori fib ","1969":"write code enhanc array call snailrowscount colscount method transform 1d array 2d array organis pattern known snail travers order invalid input valu output empti array rowscount colscount numslength input consid invalid snail travers order start top left cell first valu current array move entir first column top bottom follow move next column right travers bottom top pattern continu altern direct travers column entir current array cover exampl input array rowscount colscount desir output matrix shown note iter matrix follow arrow correspond order number origin array exampl input num rowscount colscount output exampl input num rowscount colscount output exampl input num rowscount colscount output explan multipli origin array length therefor input invalid constraint numslength numsi rowscount colscount ","1970":"multidimension array arr depth return flatten version array multidimension array recurs data structur contain integ multidimension array flatten array version array subarray remov replac actual element subarray flatten oper done current depth nest less depth element first array consid pleas solv without builtin arrayflat method exampl input arr output explan pass depth alway result origin array smallest possibl depth subarray less thu subarray flatten exampl input arr output explan subarray start flatten depth less howev remain unflatten depth exampl input arr output explan maximum depth subarray thu flatten constraint count number arr count subarray arr maxdepth number ","1971":"integ array num reduc function initi valu init return final result obtain execut function element array sequenti pass return valu calcul preced element result achiev follow oper val fninit nums0 val fnval nums1 val fnval nums2 everi element array process ultim valu val return length array function return init pleas solv without use builtin arrayreduc method exampl input num function sumaccum curr return accum curr init output explan initi valu init0 nums0 nums1 nums2 nums3 final answer exampl input num function sumaccum curr return accum curr curr init output explan initi valu init100 nums0 nums0 nums1 nums1 nums2 nums2 nums3 nums3 final answer exampl input num function sumaccum curr return init output explan empti array answer alway init constraint numslength numsi init ","1972":"function time millisecond return debounc version function debounc function function whose execut delay millisecond whose execut cancel call within window time debounc function also receiv pass paramet exampl let say 50m function call 30m 60m 100m first function call would cancel 3rd function call would execut 150m instead 35m 1st call would cancel would execut 95m 3rd would execut 135m diagram show debounc transform event rectangl repres 100m debounc time 400m color repres differ set input pleas solv without use lodash debounc function exampl input call input input output input explan let start datenow function loginput consolelogdatenow start input const dlog debouncelog settimeout dlog1 settimeout dlog2 1st call cancel call call occur 100m call delay 50m execut 125m input exampl input call input input output input input explan 1st call delay 70m input call delay 120m input exampl input call input input input output input input explan 1st call delay 150m ran 200m input call cancel 3rd call 3rd call delay 150m ran 450m input constraint callslength callsit callsiinputslength ","1973":"array function f1 f2 f3 return new function function composit array function function composit fx gx fnx fghx function composit empti list function ident function fx may assum function array accept integ input return integ output exampl input function output explan evalu right left start exampl input function output explan evalu right left exampl input function output explan composit function ident function constraint functionslength function accept return singl integ ","1974":"function return memoiz version function memoiz function function never call twice input instead return cach valu function constraint type valu accept input consid ident exampl input getinput function return output val4calls1val4calls1val3calls2 explan const input getinput const memoiz memoizefn const arr input memoizedarr input requir call input input seen call requir input requir anoth call total exampl input getinput function return output valcalls1valcalls2valcalls3 explan merg empti object alway result empti object may seem like call cachehit howev none object exampl input getinput const return oooooo function return output valcalls1valcalls1valcalls1 explan merg empti object alway result empti object 3rd third function call result cachehit everi object pass ident constraint inputslength inputsflatlength inputsij nan ","1975":"write code enhanc array call arraygroupbyfn method array return group version array group array object key output fnarri valu array contain item origin array gener key provid callback accept item array return string key order valu list order item appear array order key accept pleas solv without lodash groupbi function exampl input array id1 id1 id2 function item return itemid output id id id explan output arraygroupbyfn selector function get id item array object id object put first array object id object put second array exampl input array function list return stringlist0 output explan array type case selector function defin key first element array array first element group togeth exampl input array function return stringn output true fals explan selector function split array whether number greater constraint arraylength return string ","1976":"integ array arr filter function return filter array filteredarr function take argument arri number arr index arri filteredarr contain element arr express fnarri evalu truthi valu truthi valu valu booleanvalu return true pleas solv without builtin arrayfilt method exampl input arr function greaterthan10n return output explan const newarray filterarr function filter valu greater exampl input arr function firstindexn return output explan also accept index element case function remov element index exampl input arr function plusonen return output explan falsey valu filter constraint arrlength arri ","1977":"integ array arr map function return new array transform appli element return array creat returnedarrayi fnarri pleas solv without builtin arraymap method exampl input arr function plusonen return output explan const newarray maparr pluson function increas valu array exampl input arr function plusin return output explan function increas valu index resid exampl input arr function constant return output explan function alway return constraint arrlength arri return number ","1978":"asynchron function time millisecond return new time limit version input function take argument provid time limit function time limit function rule complet within time limit millisecond time limit function resolv result execut exce time limit time limit function reject string time limit exceed exampl input async await new promiser settimeoutr return input output rejectedtim limit exceededtime50 explan const limit timelimitfn const start performancenow let result tri const re await limitedinput result resolv re time mathfloorperformancenow start catch err result reject err time mathfloorperformancenow start consolelogresult output provid function set resolv 100m howev time limit set 50m reject t50m time limit reach exampl input async await new promiser settimeoutr return input output resolved25time100 explan function resolv t100m time limit never reach exampl input async await new promiser settimeoutr return input output resolved15time120 explan function resolv t120m time limit never reach exampl input async throw error input output rejectederrortime0 explan function immedi throw error constraint inputslength return promis ","1979":"0index integ matrix grid width column maximum length integ exampl grid width column sinc length return integ array an size ansi width ith column length integ len digit equal len nonneg len otherwis exampl input grid output explan 0th column length exampl input grid output explan 0th column length 1st column integ length column length constraint gridlength gridilength gridrc ","1980":"defin convers array conver array arr follow converi arri maxarr0i maxarr0i maximum valu arrj also defin score array arr sum valu convers array arr 0index integ array num length return array an length ansi score prefix nums0i exampl input num output explan prefix convers array henc score prefix convers array henc score prefix convers array henc score prefix convers array henc score prefix convers array henc score exampl input num output explan prefix convers array henc score prefix convers array henc score prefix convers array henc score prefix convers array henc score prefix convers array henc score prefix convers array henc score constraint numslength numsi ","1981":"root binari tree replac valu node tree sum cousin valu node binari tree cousin depth differ parent return root modifi tree note depth node number edg path root node exampl input root 549110null7 output 00077null11 explan diagram show initi binari tree binari tree chang valu node node valu cousin sum node valu cousin sum node valu cousin sum node valu cousin valu sum node valu cousin valu sum node valu cousin valu sum exampl input root output explan diagram show initi binari tree binari tree chang valu node node valu cousin sum node valu cousin sum node valu cousin sum constraint number node tree rang nodev ","1982":"direct weight graph consist node number edg graph initi repres array edg edgesi toi edgecosti mean edg toi cost edgecosti implement graph class graphint int edg initi object node edg addedgeint edg add edg list edg edg edgecost guarante edg node ad int shortestpathint node1 int node2 return minimum cost path node1 node2 path exist return cost path sum cost edg path exampl input graph shortestpath shortestpath addedg shortestpath output null null explan graph new graph4 gshortestpath3 return shortest path first diagram total cost gshortestpath0 return path gaddedge1 add edg node node get second diagram gshortestpath0 return shortest path total cost constraint edgeslength edgesilength edgelength toi node1 node2 edgecosti edgecost repeat edg selfloop graph point call made addedg call made shortestpath ","1983":"binari matrix mat find 0index posit row contain maximum count one number one row case multipl row maximum count one row smallest row number select return array contain index row number one exampl input mat output explan row number return index smaller row maximum count one answer exampl input mat output explan row index maximum count one return index count answer exampl input mat output explan row index maximum count one answer constraint matlength matilength matij either ","1984":"integ array num divisor divis score divisorsi number indic numsj divis divisorsi return integ divisorsi maximum divis score multipl integ maximum score return smallest exampl input num divisor output explan divis score divisors0 sinc nums2 nums3 divis divis score divisors1 sinc nums1 nums2 divis divis score divisors2 sinc none number num divis divis score divisors3 sinc nums0 nums3 divis divisors0 divisors1 divisors3 divis score return smaller divisors3 exampl input num divisor output explan divis score divisors0 sinc none number num divis divis score divisors1 sinc nums0 divis divis score divisors2 sinc nums2 nums3 nums4 divis exampl input num divisor output explan divis score divisors0 sinc nums0 nums3 divis divis score divisors1 sinc none number num divis divis score divisors2 sinc nums0 divis constraint numslength divisorslength numsi divisorsi ","1985":"string word insert letter anywher number time return minimum number letter must insert word becom valid string call valid form concaten string abc sever time exampl input word output explan insert letter right letter right next obtain valid string abc exampl input word aaa output explan insert letter next obtain valid string abcabcabc exampl input word abc output explan word alreadi valid modif need constraint wordlength word consist letter ","1986":"exist undirect unroot tree node index integ 2d integ array edg length edgesi ai bi indic edg node ai bi tree node associ price integ array price pricei price ith node price sum path sum price node lie path addit 2d integ array trip tripsi starti endi indic start ith trip node starti travel node endi path like perform first trip choos nonadjac node halv price return minimum total price sum perform trip exampl input edg price trip output explan diagram denot tree root node first part show initi tree second part show tree choos node make price half 1st trip choos path price sum path trip choos path price sum path 3rd trip choos path price sum path total price sum trip proven minimum answer achiev exampl input edg price trip output explan diagram denot tree root node first part show initi tree second part show tree choos node make price half 1st trip choos path price sum path total price sum trip proven minimum answer achiev constraint edgeslength ai bi edg repres valid tree pricelength pricei even integ pricei tripslength starti endi ","1987":"write gener function return gener object yield fibonacci sequenc fibonacci sequenc defin relat first number seri exampl input callcount output explan const gen fibgener gennextvalu gennextvalu gennextvalu gennextvalu gennextvalu exampl input callcount output explan gennext never call noth output constraint callcount ","1988":"sometim long run task may wish cancel complet help goal write function cancel accept gener object return array valu cancel function promis may assum gener function yield promis function respons pass valu resolv promis back gener promis reject function throw error back gener cancel callback call gener done function throw error back gener error string cancel error object error caught return promis resolv next valu yield return otherwis promis reject thrown error code execut gener done promis function return resolv valu gener return howev gener throw error return promis reject error exampl code would use function task const val yield new promiseresolv resolve2 yield new promiseresolv settimeoutresolv return val calcul shouldnt done const cancel promis cancellabletask settimeoutcancel promisecatchconsolelog log cancel t50m instead cancel call call t100m promis would resolv exampl input generatorfunct function return cancelledat output resolv explan const gener generatorfunct const cancel promis cancellablegener settimeoutcancel promisethenconsolelog resolv t0m gener immedi yield finish return promis immedi resolv note cancel finish gener noth exampl input generatorfunct function const msg yield new promiser reshello throw error msg cancelledat null output reject error hello explan promis yield function handl wait resolv pass resolv valu back gener error thrown effect caus promis reject thrown error exampl input generatorfunct function yield new promiser settimeoutr return success cancelledat output reject cancel explan function wait yield promis resolv cancel call caus error messag sent back gener sinc error uncaught return promis reject error exampl input generatorfunct function let result yield new promiser settimeoutr result yield new promiser res1 yield new promiser settimeoutr result yield new promiser res1 return result cancelledat null output resolv explan promis yield promis valu ad result 200m gener finish valu valu resolv return promis exampl input generatorfunct function let result tri yield new promiser settimeoutr result yield new promiser res1 yield new promiser settimeoutr result yield new promiser res1 catch return result return result cancelledat output resolv explan first yield promis resolv caus result increment howev t150m gener cancel error sent gener caught result return final resolv return promis exampl input generatorfunct function tri yield new promiseresolv reject rejectpromis reject catch let yield new promiseresolv resolve2 let yield new promiseresolv resolve2 return cancelledat null output resolv explan first yield promis immedi reject error caught gener hasnt cancel execut continu usual end resolv constraint cancelledat null cancelledat generatorfunct return gener object ","1989":"posit integ arrivaltim denot arriv time train hour anoth posit integ delayedtim denot amount delay hour return time train arriv station note time problem 24hour format exampl input arrivaltim delayedtim output explan arriv time train hour delay hour reach hour exampl input arrivaltim delayedtim output explan arriv time train hour delay hour reach denot hour format return constraint arrivaltim delayedtim ","1990":"posit integ find sum integ rang inclus divis return integ denot sum number rang satisfi constraint exampl input output explan number rang divis sum number exampl input output explan number rang divis sum number exampl input output explan number rang divis sum number constraint ","1991":"integ array num contain integ find beauti subarray size beauti subarray xth smallest integ subarray neg fewer neg integ return integ array contain integ denot beauti subarray order first index array subarray contigu nonempti sequenc element within array exampl input num output explan subarray size first subarray smallest neg integ second subarray smallest neg integ third subarray smallest neg integ exampl input num output explan subarray size smallest neg integ smallest neg integ smallest neg integ smallest neg integ exampl input num output explan subarray size 1st smallest neg integ neg integ beauti 1st smallest neg integ 1st smallest neg integ 1st smallest neg integ constraint numslength numsi ","1992":"0index array num consisit posit integ follow oper array number time select index replac either numsi numsi1 gcd valu return minimum number oper make element num equal imposs return gcd integ greatest common divisor integ exampl input num output explan follow oper choos index replac nums2 gcd34 num choos index replac nums1 gcd61 num choos index replac nums0 gcd21 num choos index replac nums3 gcd14 num exampl input num output explan shown imposs make element equal constraint numslength numsi ","1993":"0index integ array num integ task perform follow oper exactli time order maxim score select element num remov select element array add new element valu array increas score return maximum score achiev perform oper exactli time exampl input num output explan need choos exactli element num maxim sum first iter choos sum num second iter choos sum num third iter choos sum num return proven maximum answer achiev exampl input num output explan need choos exactli element num maxim sum first iter choos sum num second iter choos sum num return proven maximum answer achiev constraint numslength numsi ","1994":"0index integ permut length prefix common array array ci equal count number present index return prefix common array sequenc integ call permut contain integ exactli exampl input output explan number common c0 common c1 common c2 common c3 exampl input output explan number common c0 common c1 common c2 constraint alength blength ai bi guarante permut integ ","1995":"0index 2d matrix grid size repres land cell gridrc water cell contain gridrc fish gridrc fisher start water cell follow oper number time catch fish cell move adjac water cell return maximum number fish fisher catch choos start cell optim water cell exist adjac cell cell cell exist exampl input grid output explan fisher start cell collect fish move cell collect fish exampl input grid output explan fisher start cell collect singl fish constraint gridlength gridilength gridij ","1996":"integ array num contain distinct number perform follow oper array empti first element smallest valu remov otherwis put first element end array return integ denot number oper take make num empti exampl input num output oper array exampl input num output oper array exampl input num output oper array constraint numslength numsi valu num distinct ","1997":"0index integ array player1 player2 repres number pin player player hit bowl game respect bowl game consist turn number pin turn exactli assum player hit xi pin ith turn valu ith turn player 2xi player hit pin either 1th 2th turn otherwis xi score player sum valu turn return score player score player score player score player case draw exampl input player1 player2 output explan score player score player exampl input player1 player2 output explan score player score player exampl input player1 player2 output explan score player1 score player2 exampl input player1 player2 output explan score player1 score player2 constraint player1length player2length player1i player2i ","1998":"0index integ array arr integ matrix mat arr mat contain integ rang go index arr start index paint cell mat contain integ arri return smallest index either row column complet paint mat exampl input arr mat output explan move shown order first row second column matrix becom fulli paint arr2 exampl input arr mat output explan second column becom fulli paint arr3 constraint matlength matilength arrlength arri matrc integ arr uniqu integ mat uniqu ","1999":"array start start startx starti repres initi posit startx starti 2d space also array target target targetx targeti repres target posit targetx targeti cost go posit x1 y1 posit space x2 y2 x2 x1 y2 y1 also special road 2d array specialroad specialroadsi x1i y1i x2i y2i costi indic ith special road goe direct x1i y1i x2i y2i cost equal costi use special road number time return minimum cost requir go startx starti targetx targeti exampl input start target specialroad output explan cost use specialroads0 cost cost use specialroads1 cost total cost exampl input start target specialroad output explan optim use special edg go directli start end posit cost note specialroads0 direct exampl input start target specialroad output explan cost use specialroads1 cost cost constraint startlength targetlength startx targetx starti targeti specialroadslength specialroadsilength startx x1i x2i targetx starti y1i y2i targeti costi ","2000":"string beauti consist first letter english lowercas alphabet contain substr length palindrom beauti string length posit integ return lexicograph smallest string length larger beauti string return empti string string lexicograph larger string length first posit differ charact strictli larger correspond charact exampl abcd lexicograph larger abcc first posit differ fourth charact greater exampl input abcz output abda explan string abda beauti lexicograph larger string abcz proven string lexicograph larger string abcz beauti lexicograph smaller string abda exampl input output explan proven string lexicograph larger string beauti constraint slength beauti string ","2001":"write function createcount accept initi integ init return object function function increment increas current valu return decrement reduc current valu return reset set current valu init return exampl input init call incrementresetdecr output explan const counter createcounter5 counterincr counterreset counterdecr exampl input init call incrementincrementdecrementresetreset output explan const counter createcounter0 counterincr counterincr counterdecr counterreset counterreset constraint init callslength callsi increment decrement reset ","2002":"function return new function ident origin function except ensur call first time return function call return result everi subsequ time call return undefin exampl input abc call output calls1value6 explan const oncefn1 oncefn2 undefin call exampl input abc call output calls1value140 explan const oncefn5 oncefn2 undefin call oncefn4 undefin call constraint call valid json array callslength callsilength jsonstringifycallslength ","2003":"write function createhelloworld return new function alway return hello world exampl input arg output hello world explan const createhelloworld hello world function return createhelloworld alway return hello world exampl input arg null42 output hello world explan const createhelloworld null hello world argument could pass function still alway return hello world constraint argslength ","2004":"0index array num length distinct differ array num array diff length diffi equal number distinct element suffix numsi subtract number distinct element prefix nums0 return distinct differ array num note numsi denot subarray num start index end index inclus particularli numsi denot empti subarray exampl input num output explan index element prefix distinct element suffix thu diff0 index distinct element prefix distinct element suffix thu diff1 index distinct element prefix distinct element suffix thu diff2 index distinct element prefix distinct element suffix thu diff3 index distinct element prefix element suffix thu diff4 exampl input num output explan index element prefix distinct element suffix thu diff0 index distinct element prefix distinct element suffix thu diff1 index distinct element prefix distinct element suffix thu diff2 index distinct element prefix distinct element suffix thu diff3 index distinct element prefix element suffix thu diff4 constraint numslength numsi ","2005":"design data structur keep track valu answer queri regard frequenc implement frequencytrack class frequencytrack initi frequencytrack object empti array initi void addint number add number data structur void deleteoneint number delet occurr number data structur data structur may contain number case noth delet bool hasfrequencyint frequenc return true number data structur occur frequenc number time otherwis return fals exampl input frequencytrack add add hasfrequ output null null null true explan frequencytrack frequencytrack new frequencytrack frequencytrackeradd3 data structur contain frequencytrackeradd3 data structur contain frequencytrackerhasfrequency2 return true occur twice exampl input frequencytrack add deleteon hasfrequ output null null null fals explan frequencytrack frequencytrack new frequencytrack frequencytrackeradd1 data structur contain frequencytrackerdeleteone1 data structur becom empti frequencytrackerhasfrequency1 return fals data structur empti exampl input frequencytrack hasfrequ add hasfrequ output null fals null true explan frequencytrack frequencytrack new frequencytrack frequencytrackerhasfrequency2 return fals data structur empti frequencytrackeradd3 data structur contain frequencytrackerhasfrequency1 return true occur constraint number frequenc call made add deleteon hasfrequ total ","2006":"integ repres array color length element set mean uncolor also 2d integ array queri queriesi indexi colori ith queri set colorsindexi colori count adjac pair color set color regardless colori return array answer length queri answeri answer ith queri exampl input queri output explan initi array color denot uncolor element array 1st queri color count adjac pair color queri color count adjac pair color 3rd queri color count adjac pair color 4th queri color count adjac pair color 5th queri color count adjac pair color exampl input queri output explan 1st queri color count adjac pair color constraint querieslength queriesilength indexi colori ","2007":"integ repres number node perfect binari tree consist node number root tree node node tree children left child node right child node tree also cost repres 0index integ array cost size costi cost node allow increment cost node number time return minimum number increment need make cost path root leaf node equal note perfect binari tree tree node except leaf node exactli children cost path sum cost node path exampl input cost output explan follow increment increas cost node time increas cost node time increas cost node time path root leaf total cost total increment shown minimum answer achiev exampl input cost output explan path alreadi equal total cost increment need constraint power costlength costi ","2008":"0index array string detail element detail provid inform passeng compress string length system first ten charact phone number passeng next charact denot gender person follow charact use indic age person last charact determin seat allot person return number passeng strictli year old exampl input detail 7868190130m75225303914400f92119273338290f4010 output explan passeng indic age thu peopl year old exampl input detail 1313579440f20362921522980m5644 output explan none passeng older constraint detailslength detailsilength detailsi consist digit detailsi10 either phone number seat number passeng distinct ","2009":"0index 2d integ array num initi score perform follow oper matrix becom empti row matrix select largest number remov case tie matter number chosen identifi highest number amongst remov step add number score return final score exampl input num output explan first oper remov add score next remov add score lastli remov add score thu final score exampl input num output explan remov add answer return constraint numslength numsilength numsij ","2010":"0index integ array num length integ oper choos element multipli return maximum possibl valu nums0 nums1 numsn obtain appli oper num time note denot bitwis integ exampl input num output explan appli oper index new array num equal thu return bitwis exampl input num output explan appli oper twice index yield new array thu return constraint numslength numsi ","2011":"0index integ array num repres strength hero power group hero defin follow let ik indic hero group power group maxnumsi0 numsi1 numsik2 minnumsi0 numsi1 numsik return sum power nonempti group hero possibl sinc sum could larg return modulo exampl input num output explan 1st group power group power 3rd group power 4th group power 5th group power 6th group power 7th group power sum power group exampl input num output explan total group possibl power group therefor sum power group constraint numslength numsi ","2012":"friend play game friend sit circl number clockwis order formal move clockwis ith friend bring i1th friend move clockwis nth friend bring 1st friend rule game follow 1st friend receiv ball 1st friend pass friend step away clockwis direct friend receiv ball pass friend step away clockwis direct friend receiv ball pass friend step away clockwis direct forth word ith turn friend hold ball pass friend step away clockwis direct game finish friend receiv ball second time loser game friend receiv ball entir game number friend integ return array answer contain loser game ascend order exampl input output explan game goe follow start 1st friend pass ball friend step away 3rd friend 3rd friend pass ball friend step away friend friend pass ball friend step away 3rd friend game end 3rd friend receiv ball second time exampl input output explan game goe follow start 1st friend pass ball friend step away 1st friend game end 1st friend receiv ball second time constraint ","2013":"0index array deriv length deriv comput bitwis adjac valu binari array origin length specif index rang derivedi originali original0 otherwis derivedi originali originali array deriv task determin whether exist valid binari array origin could form deriv return true array exist fals otherwis binari array array contain exampl input deriv output true explan valid origin array give deriv derived0 original0 original1 derived1 original1 original2 derived2 original2 original0 exampl input deriv output true explan valid origin array give deriv derived0 original0 original1 derived1 original1 original0 exampl input deriv output fals explan valid origin array give deriv constraint derivedlength valu deriv either ","2014":"0index matrix grid consist posit integ start cell first column matrix travers grid follow way cell row col move cell row col row col row col valu cell move strictli bigger valu current cell return maximum number move perform exampl input grid output explan start cell make follow move shown maximum number move made exampl input grid output explan start cell first column perform move constraint gridlength gridilength gridij ","2015":"integ undirect graph vertic number 2d integ array edg edgesi ai bi denot exist undirect edg connect vertic ai bi return number complet connect compon graph connect compon subgraph graph exist path vertic vertex subgraph share edg vertex outsid subgraph connect compon said complet exist edg everi pair vertic exampl input edg output explan pictur see compon graph complet exampl input edg output explan compon contain vertic complet sinc edg everi pair vertic hand compon contain vertic complet sinc edg vertic thu number complet compon graph constraint edgeslength edgesilength ai bi ai bi repeat edg ","2016":"enhanc function callpolyfil method method accept object obj first paramet number addit argument obj becom context function addit argument pass function callpolyfil method belong exampl function function taxpric taxrat const totalcost price taxrat consolelogth cost thisitem totalcost call function like tax10 log cost undefin context defin howev call function like taxcallpolyfillitem salad log cost salad context appropri set function log appropri output pleas solv without use builtin functioncal method exampl input function addb return thisa arg output explan fncallpolyfilla callpolyfil set context pass argument exampl input function taxpric taxrat return cost thisitem price taxrat arg item burger output cost burger explan callpolyfil set context item burger pass addit argument constraint typeof args0 object args0 null argslength jsonstringifyargs0length ","2017":"design eventemitt class interfac similar differ found nodej event target interfac dom eventemitt allow subscrib event emit eventemitt class follow method subscrib method take argument name event string callback function callback function later call event emit event abl multipl listen event emit event multipl callback call order subscrib array result return assum callback pass subscrib referenti ident subscrib method also return object unsubscrib method enabl user unsubscrib call callback remov list subscript undefin return emit method take argument name event string option array argument pass callback callback subscrib event return empti array otherwis return array result callback call order subscrib exampl input action eventemitt emit subscrib subscrib emit valu firstev firstev function cb1 return firstev function cb1 return firstev output emittedsubscribedsubscribedemitted56 explan const emitt new eventemitt emitteremitfirstev callback subscrib yet emittersubscribefirstev function cb1 return emittersubscribefirstev function cb2 return emitteremitfirstev return output cb1 cb2 exampl input action eventemitt subscrib emit emit valu firstev function cb1arg return argsjoin firstev firstev output subscribedemitted123emitted346 explan note emit method abl accept option array argument const emitt new eventemitt emittersubscribefirstev function cb1arg return argsjoin emitteremitfirstev emitteremitfirstev exampl input action eventemitt subscrib emit unsubscrib emit valu firstev arg argsjoin firstev firstev output subscribedemitted123unsubscribed0emit explan const emitt new eventemitt const sub emittersubscribefirstev arg argsjoin emitteremitfirstev subunsubscrib undefin emitteremitfirstev subscript exampl input action eventemitt subscrib subscrib unsubscrib emit valu firstev firstev firstev output subscribedemitted123unsubscribed0emitted7 explan const emitt new eventemitt const sub1 emittersubscribefirstev const sub2 emittersubscribefirstev sub1unsubscrib undefin emitteremitfirstev constraint actionslength valueslength actionslength test case valid eg dont need handl scenario unsubscrib nonexist subscript differ action eventemitt emit subscrib unsubscrib eventemitt action doesnt take argument emit action take either argument first argument name event want emit argument pass callback function subscrib action take argument first event name second callback function unsubscrib action take argument 0index order subscript made ","2018":"creat class arraywrapp accept array integ constructor class featur instanc class ad togeth oper result valu sum element array string function call instanc return comma separ string surround bracket exampl exampl input num oper add output explan const obj1 new arraywrapper12 const obj2 new arraywrapper34 obj1 obj2 exampl input num oper string output explan const obj new arraywrapper23984270 stringobj exampl input num oper add output explan const obj1 new arraywrapp const obj2 new arraywrapp obj1 obj2 constraint numslength numsi note num array pass constructor ","2019":"string consist uppercas english letter appli oper string oper remov occurr substr ab cd return minimum possibl length result string obtain note string concaten remov substr could produc new ab cd substr exampl input abfcacdb output explan follow oper remov substr abfcacdb fcacdb remov substr fcacdb fcab remov substr fcab fc result length string shown minimum length obtain exampl input acbbd output explan oper string length remain constraint slength consist uppercas english letter ","2020":"string consist lowercas english letter allow perform oper oper replac charact anoth lowercas english letter task make palindrom minimum number oper possibl multipl palindrom made use minimum number oper make lexicograph smallest string lexicograph smaller string length first posit differ string letter appear earlier alphabet correspond letter return result palindrom string exampl input egcf output efcf explan minimum number oper make egcf palindrom lexicograph smallest palindrom string get modifi charact efcf chang exampl input abcd output abba explan minimum number oper make abcd palindrom lexicograph smallest palindrom string get modifi charact abba exampl input output neven explan minimum number oper make palindrom lexicograph smallest palindrom string get modifi charact neven constraint slength consist lowercas english letter ","2021":"posit integ return punish number punish number defin sum squar integ decim represent partit contigu substr sum integ valu substr equal exampl input output explan exactli integ satisfi condit statement sinc sinc partit sinc partit henc punish number exampl input output explan exactli integ satisfi condit statement sinc sinc partit sinc partit sinc partit henc punish number constraint ","2022":"undirect weight connect graph contain node label integ array edg edgesi ai bi wi indic edg node ai bi weight wi edg weight wi other posit weight wi task modifi edg weight assign posit integ valu rang shortest distanc node sourc destin becom equal integ target multipl modif make shortest distanc sourc destin equal target consid correct return array contain edg even unmodifi one order possibl make shortest distanc sourc destin equal target empti array imposs note allow modifi weight edg initi posit weight exampl input edg sourc destin target output explan graph show possibl modif edg make distanc equal exampl input edg sourc destin target output explan graph contain initi edg possibl make distanc equal modifi edg weight empti array return exampl input edg sourc destin target output explan graph show modifi graph shortest distanc constraint edgeslength edgesilength ai bi wi wi ai bi sourc destin sourc destin target graph connect selfloop repeat edg ","2023":"write function argumentslength return count argument pass exampl input arg output explan argumentslength5 valu pass function return exampl input arg null output explan argumentslength null valu pass function return constraint arg valid json array argslength ","2024":"write function expect help develop test code take valu val return object follow function tobev accept anoth valu return true valu equal throw error equal nottobev accept anoth valu return true valu equal throw error equal exampl input func expect5tobe5 output valu true explan express return true exampl input func expect5tobenul output error equal explan null express throw error equal exampl input func expect5nottobenul output valu true explan null express return true ","2025":"object array obj return compact object compact object origin object except key contain falsi valu remov oper appli object nest object array consid object indic key valu consid falsi booleanvalu return fals may assum obj output jsonpars word valid json exampl input obj null fals output explan falsi valu remov array exampl input obj null fals output explan obja objb0 falsi valu remov exampl input obj null fals output explan obj0 obj1 obj30 obj40 falsi remov constraint obj valid json object jsonstringifyobjlength ","2026":"integ array price repres price variou chocol store also singl integ money repres initi amount money must buy exactli chocol way still nonneg leftov money would like minim sum price chocol buy return amount money leftov buy chocol way buy chocol without end debt return money note leftov must nonneg exampl input price money output explan purchas chocol price unit respect unit money afterward thu return exampl input price money output explan buy chocol without go debt return constraint priceslength pricesi money ","2027":"0index string dictionari word dictionari break nonoverlap substr substr present dictionari may extra charact present substr return minimum number extra charact left break optim exampl input leetscod dictionari leetcodeleetcod output explan break substr leet index code index unus charact index return exampl input sayhelloworld dictionari helloworld output explan break substr hello index world index charact indic use substr thu consid extra charact henc return constraint slength dictionarylength dictionaryilength dictionaryi consist lowercas english letter dictionari contain distinct word ","2028":"0index integ array num repres score student exam teacher would like form nonempti group student maxim strength strength group student indic ik defin numsi0 numsi1 numsi2 numsik return maximum strength group teacher creat exampl input num output explan way form group maxim strength group student indic strength show optim exampl input num output explan group student indic result strength achiev greater strength constraint numslength numsi ","2029":"posit integ num repres string return integ num without trail zero string exampl input num output explan integ trail zero remov return integ exampl input num output explan integ trail zero return integ constraint numlength num consist digit num doesnt lead zero ","2030":"2d grid size find matrix answer size cell answerrc calcul look diagon valu cell gridrc let leftaboverc number distinct valu diagon left cell gridrc includ cell gridrc let rightbelowrc number distinct valu diagon right cell gridrc includ cell gridrc answerrc leftaboverc rightbelowrc matrix diagon diagon line cell start cell either topmost row leftmost column go bottomright direct end matrix reach exampl diagram diagon highlight use cell indic color gray redcolor cell left cell bluecolor cell right cell return matrix answer exampl input grid output output explan calcul answer cell answer leftabov element leftabov rightbelow element rightbelow leftabov rightbelow grid11 grid22 grid12 grid21 grid00 grid22 grid01 grid10 grid00 grid11 exampl input grid output output constraint gridlength gridilength gridij ","2031":"0index binari string length appli type oper choos index invert charact index index inclus cost choos index invert charact index index inclus cost return minimum cost make charact string equal invert charact mean valu becom viceversa exampl input output explan appli second oper obtain cost shown minimum cost make charact equal exampl input output explan appli first oper obtain cost appli first oper obtain cost appli first oper obtain cost appli second oper obtain cost appli second oper obtain cost total cost make charact equal shown minimum cost make charact equal constraint slength si either ","2032":"1index integ matrix mat select cell matrix start cell start cell move cell row column valu destin cell strictli greater valu current cell repeat process mani time possibl move cell cell longer make move task find maximum number cell visit matrix start cell return integ denot maximum number cell visit exampl input mat output explan imag show visit cell start row column shown visit cell matter start answer exampl input mat output explan sinc cell must strictli increas visit cell exampl exampl input mat output explan imag show visit cell start row column shown visit cell matter start answer constraint matlength matilength matij ","2033":"function array argument arg timeout millisecond return cancel function cancelfn delay canceltimem return cancel function cancelfn invok settimeoutcancelfn canceltimem initi execut function delay millisecond delay millisecond function cancelfn invok cancel delay execut otherwis cancelfn invok within specifi delay execut provid arg argument exampl input arg output time return explan const canceltimem const cancelfn cancellablex settimeoutcancelfn canceltimem cancel schedul occur delay canceltimem 50m happen execut fn2 20m exampl input x2 arg output explan const canceltimem const cancelfn cancellablex x2 settimeoutcancelfn canceltimem cancel schedul occur delay canceltimem 50m happen execut fn2 100m result fn2 never call exampl input x1 x2 x1 x2 arg output time return explan const canceltimem const cancelfn cancellablex1 x2 x1 x2 settimeoutcancelfn canceltimem cancel schedul occur delay canceltimem 100m happen execut fn24 30m constraint function arg valid json array argslength canceltimem ","2034":"string type oper choos index string let charact posit delet closest occurr left exist choos index string let charact posit delet closest occurr right exist task minim length perform oper time return integ denot length minim string exampl input aaabc output explan oper choos remov closest charact right becom aabc oper choos remov closest charact left becom abc exampl input cbbd output explan oper choos remov closest charact left becom cbd exampl input baadccab output explan oper choos remov closest charact left becom badccab oper choos remov closest charact right becom badcca fter oper choos remov closest charact right becom badca oper choos remov closest charact left becom bdca constraint slength contain lowercas english letter ","2035":"0index permut integ num permut call semiord first number equal last number equal perform oper mani time want make num semiord permut pick adjac element num swap return minimum number oper make num semiord permut permut sequenc integ length contain number exactli exampl input num output explan make permut semiord use sequenc oper swap permut becom swap permut becom prove sequenc less oper make num semiord permut exampl input num output explan make permut semiord use sequenc oper swap permut becom swap permut becom swap permut becom prove sequenc less oper make num semiord permut exampl input num output explan permut alreadi semiord permut constraint numslength numsi num permut ","2036":"integ 0index 2d array queri queriesi typei indexi vali initi 0index matrix fill queri must appli follow chang typei set valu row indexi vali overwrit previou valu typei set valu column indexi vali overwrit previou valu return sum integ matrix queri appli exampl input queri output explan imag describ matrix queri sum matrix queri appli exampl input queri output explan imag describ matrix queri sum matrix queri appli constraint querieslength queriesilength typei indexi vali ","2037":"numer string num1 num2 integ maxsum minsum denot integ good num1 num2 minsum digitsumx maxsum return number good integ sinc answer may larg return modulo note digitsumx denot sum digit exampl input num1 num2 minsum maxsum output explan integ whose sum digit lie thu return exampl input num1 num2 minsum maxsum output explan integ whose sum digit lie thu return constraint num1 num2 minsum maxsum ","2038":"array asynchron function function return new promis promis function array accept argument return promis promis execut parallel promis resolv promis return function resolv success parallel resolv valu promis array resolv valu promis order function promis resolv asynchron function array complet execut parallel promis reject promis return function reject promis also reject reason first reject pleas solv without use builtin promiseal function exampl input function new promiseresolv settimeout resolve5 output resolv explan promiseallfunctionsthenconsolelog singl function resolv 200m valu exampl input function new promiseresolv settimeout resolve1 new promiseresolv reject settimeout rejecterror output reject error explan sinc promis reject return promis also reject error time exampl input function new promiseresolv settimeout resolve4 new promiseresolv settimeout resolve10 new promiseresolv settimeout resolve16 output resolv explan promis resolv valu return promis resolv last promis resolv constraint function array function return promis functionslength ","2039":"array arr1 arr2 return new array joinedarray object input array contain id field integ valu joinedarray array form merg arr1 arr2 base id key length joinedarray length uniqu valu id return array sort ascend order base id key id exist array singl object id includ result array without modif object share id properti merg singl object key exist object singl keyvalu pair includ object key includ object valu object arr2 overrid valu arr1 exampl input arr1 id id arr2 id output id id id explan duplic id arr1 simpli concaten arr2 exampl input arr1 id id arr2 id id output id id id explan object id1 id3 includ result array without modifict object id2 merg togeth key arr2 overrid valu arr1 exampl input arr1 id 94v arr2 id output id explan object id1 merg togeth key valu arr2 use sinc key exist arr1 valu taken form arr1 constraint arr1 arr2 valid json array object arr1 arr2 uniqu integ id key jsonstringifyarr1length jsonstringifyarr2length ","2040":"promis promise1 promise2 return new promis promise1 promise2 resolv number return promis resolv sum number exampl input promise1 new promiseresolv settimeout resolve2 promise2 new promiseresolv settimeout resolve5 output explan input promis resolv valu respect return promis resolv valu time return promis resolv judg problem exampl input promise1 new promiseresolv settimeout resolve10 promise2 new promiseresolv settimeout resolve12 output explan input promis resolv valu respect return promis resolv valu constraint promise1 promise2 promis resolv number ","2041":"array arr function return sort array sortedarr assum return number number determin sort order sortedarr sortedarr must sort ascend order output may assum never duplic number array exampl input arr output explan simpli return number pass array sort ascend order exampl input arr output explan return valu key array sort base valu exampl input arr x1 output explan arr sort ascend order number index1 constraint arr valid json array function return number arrlength ","2042":"function array argument arg interv time return cancel function cancelfn delay canceltimem return cancel function cancelfn invok settimeoutcancelfn canceltimem function call arg immedi call everi millisecond cancelfn call canceltimem exampl input arg output time return time return time return time return time return time return explan const canceltimem const cancelfn cancellablex settimeoutcancelfn canceltimem everi 35m fn4 call t190m cancel 1st call 0m fn4 return call 35m fn4 return 3rd call 70m fn4 return 4th call 105m fn4 return 5th call 140m fn4 return 6th call 175m fn4 return cancel 190m exampl input x1 x2 x1 x2 arg output time return time return time return time return time return time return explan const canceltimem const cancelfn cancellablex1 x2 x1 x2 settimeoutcancelfn canceltimem everi 30m fn2 call t165m cancel 1st call 0m call 30m 3rd call 60m 4th call 90m 5th call 120m 6th call 150m cancel 165m exampl input x1 x2 x3 x1 x2 x3 arg output time return time return time return time return explan const canceltimem const cancelfn cancellablex1 x2 x3 x1 x2 x3 settimeoutcancelfn canceltimem everi 50m fn5 call t180m cancel 1st call 0m call 50m 3rd call 100m 4th call 150m cancel 180m constraint function arg valid json array argslength canceltimem ","2043":"design calcul class class provid mathemat oper addit subtract multipl divis exponenti also allow consecut oper perform use method chain calcul class constructor accept number serv initi valu result calcul class follow method add method add number valu result return updat calcul subtract method subtract number valu result return updat calcul multipli method multipli result number valu return updat calcul divid method divid result number valu return updat calcul pass valu error divis allow thrown power method rais result power number valu return updat calcul getresult method return result solut within actual result consid correct exampl input action calcul add subtract getresult valu output explan new calculator10add5subtract7getresult exampl input action calcul multipli power getresult valu output explan new calculator2multiply5power2getresult exampl input action calcul divid getresult valu output divis allow explan new calculator20divide0getresult error thrown divid constraint action valid json array string valu valid json array number actionslength valueslength actionsi calcul add subtract multipli divid power getresult first action alway calcul last action alway getresult ","2044":"object array return empti empti object contain keyvalu pair empti array contain element may assum object array output jsonpars exampl input obj output fals explan object keyvalu pair empti exampl input obj output true explan object doesnt keyvalu pair empti exampl input obj null fals output fals explan array element empti constraint obj valid json object array jsonstringifyobjlength solv time ","2045":"integ consist exactli digit call number fascin follow modif result number contain digit exactli contain concaten number return true fascin fals otherwis concaten number mean join togeth exampl concaten exampl input output true explan concaten number result number number contain digit exactli exampl input output fals explan concaten number result number number satisfi condit constraint ","2046":"digit string consist digit string call semirepetit adjac pair digit exampl semirepetit follow adjac digit pair adjac digit pair return length longest semirepetit substr exampl input output explan longest semirepetit substr pick whole string adjac digit pair allow exampl input output explan semirepetit string exampl input output explan longest semirepetit substr pick substr adjac digit pair allow constraint slength si ","2047":"robot stand infinit number line initi coordin 0index integ array num start move command move robot move unit distanc second string denot direct robot move command mean robot move toward left side neg side number line wherea mean robot move toward right side posit side number line robot collid start move opposit direct return sum distanc pair robot second command sinc sum larg return modulo note robot index pair ij pair ji consid pair robot collid instantli chang direct without wast time collis happen robot share place moment exampl robot posit go right anoth posit go left next second theyll chang direct next second first head left anoth head right exampl robot posit go right anoth posit go left next second first head left anoth head right exampl input num output explan second posit robot index move left robot index move right second posit robot index move left robot index move right second posit distanc robot index abs3 distanc robot index abs3 distanc robot index abs1 sum pair distanc exampl input num output explan second posit second posit distanc robot abs2 constraint numslength numsi numslength slength consist numsi uniqu ","2048":"0index binari matrix grid let us call nonempti subset row good sum column subset half length subset formal length chosen subset row sum column floork return integ array contain row indic good subset sort ascend order multipl good subset return good subset return empti array subset row matrix grid matrix obtain delet possibl none row grid exampl input grid output explan choos 0th 1st row creat good subset row length chosen subset sum 0th column half length subset sum 1st column half length subset sum column half length subset sum 3rd column half length subset exampl input grid output explan choos 0th row creat good subset row length chosen subset sum 0th column half length subset exampl input grid output explan imposs choos subset row creat good subset constraint gridlength gridilength gridij either ","2049":"integ array num contain distinct posit integ find return number array neither minimum maximum valu array number return select integ exampl input num output explan exampl minimum valu maximum valu therefor either valid answer exampl input num output explan sinc number num neither maximum minimum select number satisfi condit therefor answer exampl input num output explan sinc neither maximum minimum valu num valid answer constraint numslength numsi valu num distinct ","2050":"0index integ array num size repres cost collect differ chocol cost collect chocol index numsi chocol differ type initi chocol index ith type oper follow incur cost simultan chang chocol ith type mod nth type chocol return minimum cost collect chocol type perform mani oper would like exampl input num output explan initi chocol type buy 1st type chocol cost perform oper cost type chocol becom buy type chocol cost perform oper cost chocol type becom buy 0th type chocol cost thu total cost becom prove optim exampl input num output explan collect type chocol price without perform oper therefor total cost constraint numslength numsi ","2051":"0index integ array nums1 nums2 length 1index 2d array queri queriesi xi yi ith queri find maximum valu nums1j nums2j among indic nums1j xi nums2j yi satisfi constraint return array answer answeri answer ith queri exampl input nums1 nums2 queri output explan 1st queri xi yi select index sinc nums1j nums2j sum nums1j nums2j show maximum obtain queri xi yi select index sinc nums1j nums2j sum nums1j nums2j show maximum obtain 3rd queri xi yi select index sinc nums1j nums2j sum nums1j nums2j show maximum obtain therefor return exampl input nums1 nums2 queri output explan exampl use index queri sinc satisfi constraint queri exampl input nums1 nums2 queri output explan queri exampl xi yi everi index either nums1j xi nums2j yi henc solut constraint nums1length nums2length nums1length nums1i nums2i querieslength queriesilength xi queriesi1 yi queriesi2 xi yi ","2052":"truck fuel tank integ maintank repres fuel present main tank liter additionaltank repres fuel present addit tank liter truck mileag per liter whenev liter fuel get use main tank addit tank least liter fuel liter fuel transfer addit tank main tank return maximum distanc travel note inject addit tank continu happen suddenli immedi everi liter consum exampl input maintank additionaltank output explan spend litr fuel fuel remain litr distanc travel 50km spend anoth litr fuel fuel get inject main tank main tank becom empti total distanc travel 60km exampl input maintank additionaltank output explan spend litr fuel main tank becom empti total distanc travel 10km constraint maintank additionaltank ","2053":"posit integ array num partit num array nums1 nums2 element array num belong either array nums1 array nums2 array nonempti valu partit minim valu partit maxnums1 minnums2 maxnums1 denot maximum element array nums1 minnums2 denot minimum element array nums2 return integ denot valu partit exampl input num output explan partit array num nums1 nums2 maximum element array nums1 equal minimum element array nums2 equal valu partit proven minimum valu partit exampl input num output explan partit array num nums1 nums2 maximum element array nums1 equal minimum element array nums2 equal valu partit proven minimum valu partit constraint numslength numsi ","2054":"0index integ array num contain distinct posit integ permut num call special index either numsi numsi1 numsi1 numsi return total number special permut answer could larg return modulo exampl input num output explan special permut num exampl input num output explan special permut num constraint numslength numsi ","2055":"0index array word consist distinct string string wordsi pair string wordsj string wordsi equal revers string wordsj wordslength return maximum number pair form array word note string belong pair exampl input word cdacdccazz output explan exampl form pair string follow way pair 0th string string revers string word0 equal words2 pair 1st string 3rd string revers string word1 ca equal words3 proven maximum number pair form exampl input word abbacc output explan exampl form pair string follow way pair 0th string 1st string revers string words1 ab equal words0 proven maximum number pair form exampl input word aaab output explan exampl unabl form pair string constraint wordslength wordsilength word consist distinct string wordsi contain lowercas english letter ","2056":"integ string equal string equal string equal ab want choos possibl none string concaten order form new string new string must contain aaa bbb substr return maximum possibl length new string substr contigu nonempti sequenc charact within string exampl input output explan concacten string ab order new string bbaabbaabbab string length show imposs construct string longer length exampl input output explan concacten string ab ab order new string ababaabbaabbaa string length show imposs construct string longer length constraint ","2057":"0index array word contain string let defin join oper joinx string concaten xy howev last charact equal first charact delet exampl joinab ba aba joinab cde abcd perform join oper let str0 words0 start ith oper follow make stri joinstri wordsi make stri joinwordsi stri task minim length strn return integ denot minimum possibl length strn exampl input word aaabbc output explan exampl perform join oper follow order minim length str2 str0 str1 joinstr0 ab aab str2 joinstr1 aabc shown minimum possibl length str2 exampl input word abb output explan exampl str0 ab way get str1 joinstr0 ab joinb str0 bab first string ab minimum length henc answer exampl input word aaacaba output explan exampl perform join oper follow order minim length str2 str0 aaa str1 joinstr0 aaac str2 joinaba str1 abaaac shown minimum possibl length str2 constraint wordslength wordsilength charact wordsi english lowercas letter ","2058":"integ denot total number server 2d 0index integ array log logsi serverid time denot server id serverid receiv request time time also integ 0index integ array queri return 0index integ array arr length querieslength arri repres number server receiv request time interv queriesi queriesi note time interv inclus exampl input log queri output explan queries0 server id get request durat henc server get request queries1 server id get request durat henc server id server receiv request time period exampl input log queri output explan queries0 server get least request durat queries1 server id get request durat constraint logslength querieslength logsilength logsi0 logsi1 queriesi ","2059":"0index integ array num pair indic numslength call beauti first digit numsi last digit numsj coprim return total number beauti pair num integ coprim integ greater divid word coprim gcdx gcdx greatest common divisor exampl input num output explan beauti pair num first digit nums0 last digit nums1 confirm coprim sinc gcd25 first digit nums0 last digit nums2 inde gcd21 first digit nums1 last digit nums2 inde gcd51 first digit nums1 last digit nums3 inde gcd54 first digit nums2 last digit nums3 inde gcd14 thu return exampl input num output explan beauti pair first digit nums0 last digit nums1 inde gcd11 first digit nums0 last digit nums2 inde gcd12 thu return constraint numslength numsi numsi ","2060":"integ num1 num2 oper choos integ rang subtract num2 num1 return integ denot minimum number oper need make num1 equal imposs make num1 equal return exampl input num1 num2 output explan make equal follow oper choos substract choos substract choos substract proven minimum number oper need perform exampl input num1 num2 output explan proven imposs make equal oper constraint num1 num2 ","2061":"binari array num subarray array good contain exactli element valu return integ denot number way split array num good subarray number may larg return modulo subarray contigu nonempti sequenc element within array exampl input num output explan way split num good subarray exampl input num output explan way split num good subarray constraint numslength numsi ","2062":"1index robot posit line health movement direct 0index integ array posit health string direct directionsi either left right integ posit uniqu robot start move line simultan speed direct robot ever share posit move collid robot collid robot lower health remov line health robot decreas surviv robot continu direct go robot health remov line task determin health robot surviv collis order robot ie final health robot surviv final health robot surviv survivor return empti array return array contain health remain robot order input collis occur note posit may unsort exampl input posit health direct rrrrr output explan collis occur exampl sinc robot move direct health robot order first robot return exampl input posit health direct output explan collis exampl firstli robot robot collid sinc health remov line next robot robot collid sinc robot health smaller get remov robot health becom robot remain return exampl input posit health direct output explan robot robot collid sinc health remov robot collid sinc health remov return empti array constraint positionslength healthslength directionslength positionsi healthsi directionsi directionsi valu posit distinct ","2063":"0index integ array num integ threshold find length longest subarray num start index end index numslength satisfi follow condit numsl indic rang numsi numsi indic rang numsi threshold return integ denot length longest subarray note subarray contigu nonempti sequenc element within array exampl input num threshold output explan exampl select subarray start end subarray satisfi condit henc answer length subarray show maximum possibl achiev length exampl input num threshold output explan exampl select subarray start end satisfi condit show maximum possibl achiev length exampl input num threshold output explan exampl select subarray start end satisfi condit henc answer length subarray show maximum possibl achiev length constraint numslength numsi threshold ","2064":"integ say integ form prime number pair prime number return 2d sort list prime number pair xi yi list sort increas order xi prime number pair return empti array note prime number natur number greater factor exampl input output explan exampl prime pair satisfi criteria pair return sort order describ problem statement exampl input output explan show prime number pair give sum return empti array constraint ","2065":"0index integ array num subarray num call continu let indic subarray pair indic numsi1 numsi2 return total number continu subarray subarray contigu nonempti sequenc element within array exampl input num output explan continu subarray size continu subarray size continu subarray size therear subarri size total continu subarray shown continu subarray exampl input num output explan continu subarray size continu subarray size continu subarray size total continu subarray constraint numslength numsi ","2066":"0index integ array num subarray length call altern greater 0index subarray look like s1sm1 word return maximum length altern subarray present num subarray exist subarray contigu nonempti sequenc element within array exampl input num output explan altern subarray longest length exampl input num output explan altern subarray length constraint numslength numsi ","2067":"0index integ array num repres initi posit marbl also 0index integ array movefrom moveto equal length throughout movefromlength step chang posit marbl ith step move marbl posit movefromi posit movetoi complet step return sort list occupi posit note call posit occupi least marbl posit may multipl marbl singl posit exampl input num movefrom moveto output explan initi marbl posit 0th step move marbl posit posit posit occupi 1st step move marbl posit posit posit occupi step move marbl posit posit posit occupi end final posit contain least marbl exampl input num movefrom moveto output explan initi marbl posit 0th step move marbl posit posit marbl posit 1st step move marbl posit posit marbl posit sinc occupi posit return constraint numslength movefromlength movefromlength movetolength numsi movefromi movetoi test case gener least marbl movefromi moment want appli ith move ","2068":"binari string partit string substr substr beauti string beauti doesnt contain lead zero binari represent number power return minimum number substr partit imposs partit string beauti substr return substr contigu sequenc charact string exampl input output explan paritit string string contain lead zero binari represent integ string contain lead zero binari represent integ shown minimum number beauti substr partit exampl input output explan paritit string string contain lead zero binari represent integ shown minimum number beauti substr partit exampl input output explan partit string beauti substr constraint slength si either ","2069":"integ repres dimens 0index grid also 0index 2d integ matrix coordin coordinatesi indic cell coordin color black cell grid appear coordin white block defin submatrix grid formal block cell topleft corner contain coordin return 0index integ array arr size arri number block contain exactli black cell exampl input coordin output explan grid look like block black cell block start cell block start cell black cell thu return exampl input coordin output explan grid look like block black cell one start cell coordin block start cell coordin black cell therefor return constraint coordinateslength coordinatesilength coordinatesi0 coordinatesi1 guarante coordin contain pairwis distinct coordin ","2070":"integ num number achiev becom equal num appli follow oper increas decreas number simultan increas decreas num return maximum achiev number appli oper time exampl input num output explan appli follow oper make maximum achiev number equal num decreas maximum achiev number increas num exampl input num output explan appli follow oper twice make maximum achiev number equal num decreas maximum achiev number increas num constraint num ","2071":"0index array num integ integ target initi posit index step jump index index target numsj numsi target return maximum number jump make reach index way reach index return exampl input num target output explan go index index maximum number jump perform follow jump sequenc jump index index jump index index jump index index proven jump sequenc goe jump henc answer exampl input num target output explan go index index maximum number jump perform follow jump sequenc jump index index jump index index jump index index jump index index jump index index proven jump sequenc goe jump henc answer exampl input num target output explan proven jump sequenc goe henc answer constraint numslength numsi target ","2072":"0index integ array nums1 nums2 length let defin anoth 0index integ array nums3 length index rang assign either nums1i nums2i nums3i task maxim length longest nondecreas subarray nums3 choos valu optim return integ repres length longest nondecreas subarray nums3 note subarray contigu nonempti sequenc element within array exampl input nums1 nums2 output explan way construct nums3 nums3 nums10 nums21 nums22 subarray start index end index form nondecreas subarray length show maximum achiev length exampl input nums1 nums2 output explan way construct nums3 nums3 nums10 nums21 nums22 nums23 entir array form nondecreas subarray length make maximum achiev length exampl input nums1 nums2 output explan way construct nums3 nums3 nums10 nums11 entir array form nondecreas subarray length make maximum achiev length constraint nums1length nums2length nums1i nums2i ","2073":"1index integ array num length element numsi num call special divid ie return sum squar special element num exampl input num output explan exactli special element num nums1 sinc divid nums2 sinc divid nums4 sinc divid henc sum squar special element num nums1 nums1 nums2 nums2 nums4 nums4 exampl input num output explan exactli special element num nums1 sinc divid nums2 sinc divid nums3 sinc divid nums6 sinc divid henc sum squar special element num nums1 nums1 nums2 nums2 nums3 nums3 nums6 nums6 constraint numslength numsi ","2074":"0index array num nonneg integ oper follow choos index hasnt chosen rang numslength replac numsi integ rang numsi numsi beauti array length longest subsequ consist equal element return maximum possibl beauti array num appli oper number time note appli oper index subsequ array new array gener origin array delet element possibl none without chang order remain element exampl input num output explan exampl appli follow oper choos index replac rang num choos index replac rang num appli oper beauti array num subsequ consist indic proven maximum possibl length achiev exampl input num output explan exampl dont appli oper beauti array num whole array constraint numslength numsi ","2075":"element integ array arr length domin freqx freqx number occurr arr note definit impli arr domin element 0index integ array num length domin element split num index array nums0 numsi split valid nums0 numsi domin element numsi denot subarray num start index end index end inclus particularli numsi denot empti subarray return minimum index valid split valid split exist return exampl input num output explan split array index obtain array array element domin sinc occur twice array array element domin sinc occur array domin element num valid split shown index minimum index valid split exampl input num output explan split array index obtain array array element domin sinc occur thrice array array element domin sinc occur thrice array domin element num valid split shown index minimum index valid split exampl input num output explan shown valid split constraint numslength numsi num exactli domin element ","2076":"string word array string forbidden string call valid none substr present forbidden return length longest valid substr string word substr contigu sequenc charact string possibl empti exampl input word cbaaaabc forbidden aaacb output explan valid substr word ba baa aab ab abc aabc length longest valid substr shown substr contain either aaa cb substr exampl input word leetcod forbidden dele output explan valid substr word co od cod tcod length longest valid substr shown substr contain either de le e substr constraint wordlength word consist lowercas english letter forbiddenlength forbiddenilength forbiddeni consist lowercas english letter ","2077":"integ array num consid array good permut array basen basen word array length contain exactli plu occurr exampl base1 base3 return true array good otherwis return fals note permut integ repres arrang number exampl input num output fals explan sinc maximum element array candid array could permut basen howev base3 element array num therefor permut base3 answer fals exampl input num output true explan sinc maximum element array candid array could permut basen seen num permut base3 swap second fourth element num reach base3 therefor answer true exampl input num output true explan sinc maximum element array candid array could permut basen seen num permut base1 therefor answer true exampl input num output fals explan sinc maximum element array candid array could permut basen howev base4 element array num therefor permut base4 answer fals constraint numslength numi ","2078":"0index string permut get new string conson remain origin place formal index slength si conson ti si vowel must sort nondecreas order ascii valu formal pair indic slength si vowel ti must higher ascii valu return result string vowel e u appear lowercas uppercas conson compris letter vowel exampl input leetcod output leotced explan e e vowel conson vowel sort accord ascii valu conson remain place exampl input lymph output lymph explan vowel charact conson return lymph constraint slength consist letter english alphabet uppercas lowercas ","2079":"0index integ array num posit integ initi posit array visit posit accord follow rule current posit move posit posit visit get score numsi move posit posit pariti numsi numsj differ lose score return maximum total score get note initi nums0 point exampl input num output explan visit follow posit array correspond valu sinc integ differ pariti move make lose score total score exampl input num output explan integ array pariti visit without lose score total score constraint numslength numsi ","2080":"posit integ return number way express sum xth power uniqu posit integ word number set uniqu integ n1x n2x nkx sinc result larg return modulo exampl way express exampl input output explan express follow shown way express sum power uniqu integ exampl input output explan express follow way constraint ","2081":"array string word charact separ split string word separ return array string contain new string form split exclud empti string note separ use determin split occur includ part result string split may result string result string must maintain order initi exampl input word onetwothreefourfivesix separ output onetwothreefourfivesix explan exampl split follow onetwothre split fourfiv split split henc result array onetwothreefourfivesix exampl input word easyproblem separ output easyproblem explan exampl split follow easi split easi exclud empti string problem split problem exclud empti string henc result array easyproblem exampl input word separ output explan exampl result split contain empti string return empti array constraint wordslength wordsilength charact wordsi either lowercas english letter charact string exclud quot separ charact string exclud quot ","2082":"0index array num consist posit integ follow oper array number time choos integ numslength numsi numsi replac element numsi numsi numsi delet element numsi array return valu largest element possibl obtain final array exampl input num output explan appli follow oper array choos result array num choos result array num choos result array num largest element final array shown obtain larger element exampl input num output explan follow oper array choos result array num choos result array num element final array constraint numslength numsi ","2083":"0index array usagelimit length task creat group use number ensur number use usagelimitsi time total across group must also satisfi follow condit group must distinct number mean duplic number allow within singl group group except first must length strictli greater previou group return integ denot maximum number group creat satisfi condit exampl input usagelimit output explan exampl use twice time way creat maximum number group satisfi condit group contain number group contain number group contain number shown maximum number group output exampl input usagelimit output explan exampl use twice twice way creat maximum number group satisfi condit group contain number group contain number shown maximum number group output exampl input usagelimit output explan exampl use way creat maximum number group satisfi condit group contain number shown maximum number group output constraint usagelimitslength usagelimitsi ","2084":"tree ie connect undirect graph cycl root node consist node number tree repres 0index array parent size parenti parent node sinc node root parent0 also string length si charact assign edg parenti ignor return number pair node u u charact assign edg path u rearrang form palindrom string palindrom read backward forward exampl input parent acaabc output explan valid pair pair result charact alway palindrom pair result string aca palindrom pair result string cac palindrom pair result string acac rearrang palindrom acca exampl input parent aaaaa output explan pair node uv u valid constraint parentlength slength parenti parent0 parent repres valid tree consist lowercas english letter ","2085":"employe compani number employe work hoursi hour compani compani requir employe work least target hour 0index array nonneg integ hour length nonneg integ target return integ denot number employe work least target hour exampl input hour target output explan compani want employe work least hour employe work hour didnt meet target employe work hour didnt meet target employe work hour met target employe work hour met target employe work hour met target employe met target exampl input hour target output explan compani want employe work least hour employe met target constraint hourslength hoursi target ","2086":"array num consist posit integ call subarray array complet follow condit satisfi number distinct element subarray equal number distinct element whole array return number complet subarray subarray contigu nonempti part array exampl input num output explan complet subarray follow exampl input num output explan array consist integ subarray complet number subarray choos constraint numslength numsi ","2087":"string task find string minimum length contain string substr multipl string return lexicograph smallest return string denot answer problem note string lexicograph smaller string length first posit differ string letter appear earlier alphabet correspond letter substr contigu sequenc charact within string exampl input abc bca aaa output aaabca explan show aaabca contain string ans24 ans35 ans02 shown length result string would least aaabca lexicograph smallest exampl input ab ba aba output aba explan show string aba contain string ans01 ans12 ans02 sinc length length result string would least shown aba lexicograph smallest constraint alength blength clength lowercas english letter ","2088":"posit integ low high repres string find count step number inclus rang low high step number integ adjac digit absolut differ exactli return integ denot count step number inclus rang low high sinc answer may larg return modulo note step number lead exampl input low high output explan step number rang total step number rang henc output exampl input low high output explan step number rang total step number rang henc output constraint intlow inthigh lowlength highlength low high digit low high dont lead zero ","2089":"initi bank account balanc dollar integ purchaseamount repres amount spend purchas dollar word price make purchas first purchaseamount round nearest multipl let us call valu roundedamount roundedamount dollar remov bank account return integ denot final bank account balanc purchas note consid multipl problem round round upward round round exampl input purchaseamount output explan nearest multipl account balanc becom exampl input purchaseamount output explan nearest multipl account balanc becom exampl input purchaseamount output explan multipl account balanc becom constraint purchaseamount ","2090":"head link list head node contain integ valu everi pair adjac node insert new node valu equal greatest common divisor return link list insert greatest common divisor number largest posit integ evenli divid number exampl input head output explan 1st diagram denot initi link list diagram denot link list insert new node node blue insert node insert greatest common divisor 1st node insert greatest common divisor 3rd node insert greatest common divisor 3rd 4th node adjac node return link list exampl input head output explan 1st diagram denot initi link list diagram denot link list insert new node pair adjac node return initi link list constraint number node list rang nodev ","2091":"0index array num contain integ second perform follow oper array everi index rang replac numsi either numsi numsi numsi note element get replac simultan return minimum number second need make element array num equal exampl input num output explan equal array second follow way 1st second replac valu index nums3nums1nums3nums3 replac num proven second minimum amount second need equal array exampl input num output explan equal array second follow way 1st second replac valu index nums0nums2nums2nums2nums3 replac num second replac valu index nums1nums1nums2nums3nums4 replac num proven second minimum amount second need equal array exampl input num output explan dont need perform oper element initi array constraint numslength numsi ","2092":"0index integ array nums1 nums2 equal length everi second indic nums1length valu nums1i increment nums2i done follow oper choos index nums1length make nums1i also integ return minimum time make sum element nums1 less equal possibl exampl input nums1 nums2 output explan 1st second appli oper therefor nums1 second appli oper therefor nums1 3rd second appli oper therefor nums1 sum nums1 shown oper optim return exampl input nums1 nums2 output explan shown sum nums1 alway greater matter oper perform constraint nums1length nums1i nums2i nums1length nums2length ","2093":"laptop keyboard faulti whenev type charact revers string written type charact work expect 0index string type charact use faulti keyboard return final string present laptop screen exampl input string output rtsng explan type first charact text screen second charact text third charact text str sinc fourth charact text get revers becom fifth charact text rtsn sixth charact text rtsng therefor return rtsng exampl input poiinter output ponter explan first charact text screen second charact text po sinc third charact type text get revers becom op sinc fourth charact type text get revers becom po fifth charact text pon sixth charact text pont seventh charact text pont eighth charact text ponter therefor return ponter constraint slength consist lowercas english letter ","2094":"array num length integ need determin possibl split array array size perform seri step array call good length array sum element array greater equal step select exist array may result previou step length least split array result array good return true split array array otherwis return fals exampl input num output true explan split array length array sum element equal good array split array length good array exampl input num output fals explan first move either follow split array neither length sum element greater equal split array neither length sum element greater equal move invalid divid array good array unabl split num array size exampl input num output true explan split split split split constraint numslength numsi ","2095":"0index 2d matrix grid size repres cell contain thief gridrc empti cell gridrc initi posit cell move move adjac cell grid includ cell contain thiev safe factor path grid defin minimum manhattan distanc cell path thief grid return maximum safe factor path lead cell adjac cell cell cell exist manhattan distanc cell equal val denot absolut valu val exampl input grid output explan path go thiev cell exampl input grid output explan path depict pictur safe factor sinc closest cell path thief cell cell distanc shown path higher safe factor exampl input grid output explan path depict pictur safe factor sinc closest cell path thief cell cell distanc closest cell path thief cell cell distanc shown path higher safe factor constraint gridlength gridilength gridij either least thief grid ","2096":"0index 2d integ array item length integ itemsi profiti categoryi profiti categoryi denot profit categori ith item respect let defin eleg subsequ item totalprofit distinctcategories2 totalprofit sum profit subsequ distinctcategori number distinct categori categori select subsequ task find maximum eleg subsequ size item return integ denot maximum eleg subsequ item size exactli note subsequ array new array gener origin array delet element possibl none without chang remain element rel order exampl input item output explan exampl select subsequ size select items0 items2 total profit subsequ subsequ contain distinct categori henc eleg show maximum achiev eleg exampl input item output explan exampl select subsequ size select items0 items2 items3 total profit subsequ subsequ contain distinct categori henc eleg show maximum achiev eleg exampl input item output explan exampl select subsequ size select item total profit subsequ contain distinct categori henc maximum eleg constraint itemslength itemsilength itemsi0 profiti itemsi1 categoryi profiti categoryi ","2097":"integ array num find maximum sum pair number num largest digit number equal exampl made distinct digit largest among return maximum sum pair exist exampl input num output explan number largest digit order exampl input num output explan number largest digit answer exampl input num output explan number largest digit order possibl pair constraint numslength numsi ","2098":"head nonempti link list repres nonneg integ without lead zero return head link list doubl exampl input head output explan figur correspond link list repres number henc return link list repres number exampl input head output explan figur correspond link list repres number henc return link list reprers number constraint number node list rang nodev input gener list repres number lead zero except number ","2099":"0index integ array num integ find minimum absolut differ element array least indic apart word find indic absi absnumsi numsj minim return integ denot minimum absolut differ element least indic apart exampl input num output explan select nums0 nums3 least indic apart absolut differ minimum shown optim answer exampl input num output explan select nums1 nums2 least index apart absolut differ minimum shown optim answer exampl input num output explan select nums0 nums3 least indic apart absolut differ minimum shown optim answer constraint numslength numsi numslength ","2100":"array num posit integ integ initi start score maxim score appli follow oper time choos nonempti subarray numsl havent chosen previous choos element numsl highest prime score multipl element exist choos smallest index multipli score numsl denot subarray num start index end index end inclus prime score integ equal number distinct prime factor exampl prime score sinc return maximum possibl score appli oper sinc answer may larg return modulo exampl input num output explan get score appli follow oper choos subarray nums2 nums2 element subarray henc multipli score nums2 score becom choos subarray nums2 nums2 nums3 prime score nums2 smaller index henc multipli score nums2 score becom proven highest score obtain exampl input num output explan get score appli follow oper choos subarray nums0 nums0 element subarray henc multipli score nums0 score becom choos subarray nums5 nums5 element subarray henc multipli score nums5 score becom choos subarray nums2 nums2 nums3 prime score nums2 smaller index henc multipi score nums2 score becom proven highest score obtain constraint numslength numsi minn ","2101":"0index integ array num length integ target return number pair numsi numsj target exampl input num target output explan pair indic satisfi condit statement sinc nums0 nums1 target sinc nums0 nums2 target sinc nums0 nums4 target note count sinc nums0 nums3 strictli less target exampl input num target output explan pair indic satisfi condit statement sinc nums0 nums1 target sinc nums0 nums3 target sinc nums0 nums4 target sinc nums0 nums5 target sinc nums0 nums6 target sinc nums1 nums4 target sinc nums3 nums4 target sinc nums3 nums5 target sinc nums4 nums5 target sinc nums4 nums6 target constraint numslength numsi target ","2102":"0index string str1 str2 oper select set indic str1 index set increment str1i next charact cyclic becom becom becom return true possibl make str2 subsequ str1 perform oper fals otherwis note subsequ string new string form origin string delet possibl none charact without disturb rel posit remain charact exampl input str1 abc str2 ad output true explan select index str1 increment str12 becom henc str1 becom abd str2 subsequ therefor true return exampl input str1 zc str2 ad output true explan select indic str1 increment str10 becom increment str11 becom henc str1 becom ad str2 subsequ therefor true return exampl input str1 ab str2 output fals explan exampl shown imposs make str2 subsequ str1 use oper therefor fals return constraint str1length str2length str1 str2 lowercas english letter ","2103":"integ array num element num oper remov element num return minimum number oper make num nondecreas exampl input num output explan optim solut remov nums0 nums2 nums3 exampl input num output explan optim solut remov nums1 nums2 exampl input num output explan num alreadi nondecreas constraint numslength numsi followup come algorithm run time complex ","2104":"posit integ low high number beauti meet follow condit count even digit number equal count odd digit number divis return number beauti integ rang low high exampl input low high output explan beauti integ rang beauti contain odd digit even digit divis beauti contain odd digit even digit divis addit see beauti divis beauti contain equal count even odd digit shown beauti integ rang exampl input low high output explan beauti integ rang beauti contain odd digit even digit divis shown beauti integ rang exampl input low high output explan beauti integ rang beauti divis contain equal even odd digit constraint low high ","2105":"array string word string determin acronym word string consid acronym word form concaten first charact string word order exampl ab form appl banana cant form bear aardvark return true acronym word fals otherwis exampl input word alicebobcharli abc output true explan first charact word alic bob charli respect henc abc acronym exampl input word anappl output fals explan first charact word appl respect acronym form concaten charact henc acronym exampl input word nevergonnagiveupony ngguoy output true explan concaten first charact word array get string ngguoy henc ngguoy acronym constraint wordslength wordsilength slength wordsi lowercas english letter ","2106":"integ array distinct posit integ call kavoid array exist pair distinct element sum return minimum possibl sum kavoid array length exampl input output explan consid kavoid array sum proven kavoid array sum less exampl input output explan construct array sum proven kavoid array sum less constraint ","2107":"integ repres number hous number line number addit 2d integ array offer offersi starti endi goldi indic ith buyer want buy hous starti endi goldi amount gold salesman goal maxim earn strateg select sell hous buyer return maximum amount gold earn note differ buyer cant buy hous hous may remain unsold exampl input offer output explan hous number purchas offer sell hous rang 1st buyer gold hous rang 3rd buyer gold proven maximum amount gold achiev exampl input offer output explan hous number purchas offer sell hous rang buyer gold proven maximum amount gold achiev constraint offerslength offersilength starti endi goldi ","2108":"0index integ array num integ subarray call equal element equal note empti subarray equal subarray return length longest possibl equal subarray delet element num subarray contigu possibl empti sequenc element within array exampl input num output explan optim delet element index index delet num becom equal longest equal subarray start end length equal proven longer equal subarray creat exampl input num output explan optim delet element index index delet num becom equal array equal subarray answer proven longer equal subarray creat constraint numslength numsi numslength numslength ","2109":"string move length consist charact string repres movement number line start origin ith move choos follow direct move left movesi movesi move right movesi movesi return distanc origin furthest point get move exampl input move lrlr output explan furthest point reach origin point follow sequenc move llrlllr exampl input move output explan furthest point reach origin point follow sequenc move lrlllll exampl input move output explan furthest point reach origin point follow sequenc move rrrrrrr constraint moveslength move consist charact ","2110":"posit integ target array num beauti meet follow condit numslength num consist pairwis distinct posit integ doesnt exist distinct indic rang numsi numsj target return minimum possibl sum beauti array could modulo exampl input target output explan see num beauti array num length array num consist pairwis distinct posit integ doesnt exist distinct indic numsi numsj proven minimum possibl sum beauti array could exampl input target output explan see num beauti array num length array num consist pairwis distinct posit integ doesnt exist distinct indic numsi numsj proven minimum possibl sum beauti array could exampl input target output explan see num beauti constraint target ","2111":"0index array num consist nonneg power integ target oper must appli follow chang array choos element array numsi numsi remov numsi array add occurr numsi end num return minimum number oper need perform num contain subsequ whose element sum target imposs obtain subsequ return subsequ array deriv anoth array delet element without chang order remain element exampl input num target output explan first oper choos element nums2 array becom equal num stage num contain subsequ sum shown shorter sequenc oper result subsequnc sum exampl input num target output explan first oper choos element nums1 array becom equal num second oper choos element nums3 array becom equal num stage num contain subsequ sum shown shorter sequenc oper result subsequ sum exampl input num target output explan shown sequenc oper result subsequ sum constraint numslength numsi num consist nonneg power target ","2112":"integ array receiv length integ player play ballpass game choos start player game proce follow player pass ball player receiveri pass receiverreceiveri pass total game score sum indic player touch ball includ repetit ie receiveri receiverreceiveri receiverki return maximum possibl score note receiv may contain duplic receiveri may equal exampl input receiv output explan start player initi score pass sender index receiv index score exampl input receiv output explan start player initi score pass sender index receiv index score constraint receiverlength receiveri ","2113":"string length consist lowercas english letter appli follow oper string number time choos indic swap charact indic string return true make string equal fals otherwis exampl input abcd cdab output true explan follow oper choos indic result string cbad choos indic result string cdab exampl input abcd dacb output fals explan possibl make string equal constraint s1length s2length lowercas english letter ","2114":"","2115":"integ array num posit integ return maximum sum almost uniqu subarray length num subarray exist return subarray num almost uniqu contain least distinct element subarray contigu nonempti sequenc element within array exampl input num output explan almost uniqu subarray size subarray among subarray maximum sum sum exampl input num output explan almost uniqu subarray size subarray among subarray maximum sum sum exampl input num output explan subarray size contain least distinct element array therefor almost uniqu subarray exist maximum sum constraint numslength numslength numsi ","2116":"string integ ksubsequ subsequ length charact uniqu ie everi charact occur let fc denot number time charact occur beauti ksubsequ sum fc everi charact ksubsequ exampl consid abbbdd fa fb fd ksubsequ abbbdd ab beauti fa fb abbbdd ad beauti fa fd abbbdd beauti fb fd return integ denot number ksubsequ whose beauti maximum among ksubsequ sinc answer may larg return modulo subsequ string new string form origin string delet possibl none charact without disturb rel posit remain charact note fc number time charact occur ksubsequ ksubsequ consid differ form index present ksubsequ may form string exampl input bcca output explan fa fb fc ksubsequ bcca beauti fb fc bcca beauti fb fc bcca beauti fb fa bcca beauti fc fa bcca beauti fc fa ksubsequ maximum beauti henc answer exampl input abbcd output explan fa fb fc fd ksubsequ abbcd beauti fa fb fc fd abbcd beauti fa fb fc fd ksubsequ maximum beauti henc answer constraint slength slength consist lowercas english letter ","2117":"posit integ low high integ consist digit symmetr sum first digit equal sum last digit number odd number digit never symmetr return number symmetr integ rang low high exampl input low high output explan symmetr integ exampl input low high output explan symmetr integ constraint low high ","2118":"0index integ array num integ modulo integ task find count subarray interest subarray numslr interest follow condit hold let cnt number indic rang numsi modulo cnt modulo return integ denot count interest subarray note subarray contigu nonempti sequenc element within array exampl input num modulo output explan exampl interest subarray subarray nums00 index rang satisfi numsi modulo henc cnt cnt modulo subarray nums01 index rang satisfi numsi modulo henc cnt cnt modulo subarray nums02 index rang satisfi numsi modulo henc cnt cnt modulo shown interest subarray answer exampl input num modulo output explan exampl interest subarray subarray nums03 indic rang satisfi numsi modulo henc cnt cnt modulo subarray nums11 index rang satisfi numsi modulo henc cnt cnt modulo shown interest subarray answer constraint numslength numsi modulo modulo ","2119":"undirect tree node label integ 2d integ array edg length edgesi ui vi wi indic edg node ui vi weight wi tree also 2d integ array queri length queriesi ai bi queri find minimum number oper requir make weight everi edg path ai bi equal oper choos edg tree chang weight valu note queri independ mean tree return initi state new queri path ai bi sequenc distinct node start node ai end node bi everi adjac node sequenc share edg tree return array answer length answeri answer ith queri exampl input edg queri output explan first queri edg path weight henc answer second queri edg path weight henc answer third queri chang weight edg oper edg path weight henc answer fourth queri chang weight edg oper edg path weight henc answer queriesi shown answeri minimum number oper need equal edg weight path ai bi exampl input edg queri output explan first queri chang weight edg oper edg path weight henc answer second queri chang weight edg oper edg path weight henc answer third queri chang weight edg oper edg path weight henc answer fourth queri chang weight edg oper edg path weight henc answer queriesi shown answeri minimum number oper need equal edg weight path ai bi constraint edgeslength edgesilength ui vi wi input gener edg repres valid tree querieslength queriesilength ai bi ","2120":"0index 2d integ array num repres coordin car park number line index numsi starti endi starti start point ith car endi end point ith car return number integ point line cover part car exampl input num output explan point intersect least car therefor answer would exampl input num output explan point intersect least car total point therefor answer would constraint numslength numsilength starti endi ","2121":"integ sy fx fy nonneg integ infinit 2d grid start cell sy second must move adjac cell return true reach cell fx fy exactli second fals otherwis cell adjac cell cell around share least corner visit cell sever time exampl input sy fx fy output true explan start cell reach cell exactli second go cell depict pictur exampl input sy fx fy output fals explan start cell take least second reach cell go cell depict pictur henc reach cell third second constraint sy fx fy ","2122":"0index 2d integ matrix grid size repres number stone cell grid contain exactli stone multipl stone singl cell move move singl stone current cell cell cell share side return minimum number move requir place stone cell exampl input grid output explan possibl sequenc move place stone cell move stone cell cell move stone cell cell move stone cell cell total take move place stone cell grid shown minimum number move requir place stone cell exampl input grid output explan possibl sequenc move place stone cell move stone cell cell move stone cell cell move stone cell cell move stone cell cell total take move place stone cell grid shown minimum number move requir place stone cell constraint gridlength gridilength gridij sum grid equal ","2123":"string equal length perform follow oper string remov suffix length append start exampl let abcd oper remov suffix cd append front make cdab also integ return number way transform exactli oper sinc answer larg return modulo exampl input abcd cdab output explan first way first oper choos suffix index result dabc second oper choos suffix index result cdab second way first oper choos suffix index result bcda second oper choos suffix index result cdab exampl input ababab ababab output explan first way choos suffix index result ababab second way choos suffix index result ababab constraint slength slength tlength lowercas english alphabet ","2124":"0index array num length contain distinct posit integ return minimum number right shift requir sort num possibl right shift defin shift element index index indic exampl input num output explan first right shift num second right shift num num sort therefor answer exampl input num output explan num alreadi sort therefor answer exampl input num output explan imposs sort array use right shift constraint numslength numsi num contain distinct integ ","2125":"integ array num sort nondecreas order perform follow oper number time choos indic numsi numsj remov element indic num remain element retain origin order array reindex return minimum length num appli oper time exampl input num output explan exampl input num output explan exampl input num output explan sinc number equal remov exampl input num output explan constraint numslength numsi num sort nondecreas order ","2126":"2d integ array coordin integ coordinatesi xi yi coordin ith point 2d plane defin distanc point x1 y1 x2 y2 x1 x2 y1 y2 bitwis oper return number pair distanc point equal exampl input coordin output explan choos follow pair exampl input coordin output explan chosen pair distanc way choos pair constraint coordinateslength xi yi ","2127":"0index integ array num length total number student class class teacher tri select group student student remain happi ith student becom happi condit met student select total number select student strictli greater numsi student select total number select student strictli less numsi return number way select group student everyon remain happi exampl input num output explan possibl way class teacher select student class teacher select student form group class teacher select student form group student happi therefor possibl way exampl input num output explan possibl way class teacher select student index form group class teacher select student index form group class teacher select student form group constraint numslength numsi numslength ","2128":"owner compani creat alloy use variou type metal differ type metal avail access machin use creat alloy machin requir specif amount metal type creat alloy ith machin creat alloy need compositionij unit metal type initi stocki unit metal type purchas unit metal type cost costi coin integ budget 1index 2d array composit 1index array stock cost goal maxim number alloy compani creat stay within budget budget coin alloy must creat machin return maximum number alloy compani creat exampl input budget composit stock cost output explan optim use 1st machin creat alloy creat alloy need buy unit metal 1st type unit metal type unit metal 3rd type total need coin smaller equal budget notic unit metal type buy requir unit metal proven creat alloy exampl input budget composit stock cost output explan optim use machin creat alloy creat alloy need buy unit metal 1st type unit metal type unit metal 3rd type total need coin smaller equal budget proven creat alloy exampl input budget composit stock cost output explan optim use 3rd machin creat alloy creat alloy need buy unit metal 1st type unit metal type total need coin smaller equal budget proven creat alloy constraint budget compositionlength compositionilength compositionij stocklength costlength stocki costi ","2129":"1index array num task select complet subset num everi pair select indic multipli perfect squar e select ai aj must perfect squar return sum complet subset maximum sum exampl input num output explan select element indic perfect squar exampl input num output explan select element indic perfect squar constraint numslength numsi ","2130":"binari string contain least rearrang bit way result binari number maximum odd binari number creat combin return string repres maximum odd binari number creat combin note result string lead zero exampl input output explan must last posit answer exampl input output explan must last posit maximum number made remain digit answer constraint slength consist contain least ","2131":"array height integ repres number brick consecut tower task remov brick form mountainshap tower arrang arrang tower height nondecreas reach maximum peak valu multipl consecut tower nonincreas return maximum possibl sum height mountainshap tower arrang exampl input height output explan remov brick make height peak index exampl input height output explan remov brick make height peak index exampl input height output explan remov brick make height peak index constraint heightslength heightsi ","2132":"0index array maxheight integ task build tower coordin line ith tower built coordin height heightsi configur tower beauti follow condit hold heightsi maxheightsi height mountain array array height mountain exist index heightsj heightsj heightsk heightsk return maximum possibl sum height beauti configur tower exampl input maxheight output explan beauti configur maximum sum height configur beauti sinc heightsi maxheightsi height mountain peak shown exist beauti configur sum height greater exampl input maxheight output explan beauti configur maximum sum height configur beauti sinc heightsi maxheightsi height mountain peak shown exist beauti configur sum height greater exampl input maxheight output explan beauti configur maximum sum height configur beauti sinc heightsi maxheightsi height mountain peak note configur also consid peak shown exist beauti configur sum height greater constraint maxheightslength maxheightsi ","2133":"undirect tree node label integ 2d integ array edg length edgesi ui vi indic edg node ui vi tree return number valid path tree path valid exist exactli prime number among node label path note path sequenc distinct node start node end node everi adjac node sequenc share edg tree path path consid count exampl input edg output explan pair exactli prime number path sinc path contain prime number sinc path contain prime number sinc path contain prime number sinc path contain prime number shown valid path exampl input edg output explan pair exactli prime number path sinc path contain prime number sinc path contain prime number sinc path contain prime number sinc path contain prime number sinc path contain prime number sinc path contain prime number shown valid path constraint edgeslength edgesilength ui vi input gener edg repres valid tree ","2134":"array num posit integ integ oper remov last element array add collect return minimum number oper need collect element exampl input num output explan oper collect element order collect contain element henc answer exampl input num output explan oper collect element order collect contain element henc answer exampl input num output explan oper collect element order collect contain element henc answer constraint numslength numsi numslength numslength input gener collect element ","2135":"0index array num consist posit integ type oper appli array number time choos element equal valu delet array choos element equal valu delet array return minimum number oper requir make array empti possibl exampl input num output explan appli follow oper make array empti appli first oper element indic result array num appli first oper element indic result array num appli second oper element indic result array num appli first oper element indic result array num shown make array empti less oper exampl input num output explan imposs empti array constraint numslength numsi note question minimum round complet task ","2136":"array num consist nonneg integ defin score subarray numslr numsl numsl numsr bitwis oper consid split array subarray follow condit satisfi element array belong exactli subarray sum score subarray minimum possibl return maximum number subarray split satisfi condit subarray contigu part array exampl input num output explan split array follow subarray score subarray score subarray score subarray sum score minimum possibl score obtain shown split array subarray total score return exampl input num output explan split array subarray score minimum possibl score obtain shown split array subarray total score return constraint numslength numsi ","2137":"undirect tree node label integ 2d integ array edg length edgesi ai bi indic edg node ai bi tree also 0index integ array valu length valuesi valu associ ith node integ valid split tree obtain remov set edg possibl empti tree result compon valu divis valu connect compon sum valu node return maximum number compon valid split exampl input edg valu output explan remov edg connect node result split valid valu compon contain node values1 values3 valu compon contain node values0 values2 values4 shown valid split connect compon exampl input edg valu output explan remov edg connect node edg connect node result split valid valu compon contain node values0 valu compon contain node values2 values5 values6 valu compon contain node values1 values3 values4 shown valid split connect compon constraint edgeslength edgesilength ai bi valueslength valuesi sum valu divis input gener edg repres valid tree ","2138":"0index integ array num return maximum valu triplet indic triplet neg valu return valu triplet indic equal numsi numsj numsk exampl input num output explan valu triplet nums0 nums2 nums4 shown order triplet indic valu greater exampl input num output explan valu triplet nums1 nums2 nums4 shown order triplet indic valu greater exampl input num output explan order triplet indic neg valu nums0 nums1 nums2 henc answer would constraint numslength numsi ","2139":"0index integ array num return maximum valu triplet indic triplet neg valu return valu triplet indic equal numsi numsj numsk exampl input num output explan valu triplet nums0 nums2 nums4 shown order triplet indic valu greater exampl input num output explan valu triplet nums1 nums2 nums4 shown order triplet indic valu greater exampl input num output explan order triplet indic neg valu nums0 nums1 nums2 henc answer would constraint numslength numsi ","2140":"0index array num integ target 0index array infinitenum gener infinit append element num return length shortest subarray array infinitenum sum equal target subarray return exampl input num target output explan exampl infinitenum subarray rang sum equal target length proven shortest length subarray sum equal target exampl input num target output explan exampl infinitenum subarray rang sum equal target length proven shortest length subarray sum equal target exampl input num target output explan exampl infinitenum proven subarray sum equal target constraint numslength numsi target ","2141":"direct graph consist node number direct edg 0index array edg edgesi indic edg node node edgesi consid follow process graph start node keep visit node edg reach node alreadi visit process return array answer answeri number differ node visit perform process start node exampl input edg output explan perform process start node follow way start node visit node number differ node visit start node visit node number differ node visit start node visit node number differ node visit start node visit node number differ node visit exampl input edg output explan start node visit everi node graph process constraint edgeslength edgesi edgesi ","2142":"write solut creat datafram 2d list call studentdata 2d list contain id age student datafram column studentid age order origin 2d list result format follow exampl exampl input studentdata output studentid age explan datafram creat top studentdata column name studentid age ","2143":"datafram player column name type playerid int name object age int posit object write solut calcul display number row column player return result array number row number column result format follow exampl exampl input playerid name age posit team mason forward realmadrid riley winger barcelona bob striker manchesterunit isabella goalkeep liverpool zachari midfield bayernmunich ava defend chelsea violet striker juventu thoma striker parissaintgermain jack midfield manchesterc charli centerback arsen output explan datafram contain row column ","2144":"datafram employe column name type employeeid int name object depart object salari int write solut display first row datafram exampl input datafram employe employeeid name depart salari bob oper alic sale tatiana engin annabel informationtechnolog jonathan humanresourc khale administr output employeeid name depart salari bob oper alic sale tatiana engin explan first row display ","2145":"datafram student column name type studentid int name object age int write solut select name age student studentid result format follow exampl exampl input studentid name age ulyss william henri henri output name age ulyss explan student ulyss studentid select name age ","2146":"datafram employe column name type name object salari int compani plan provid employe bonu write solut creat new column name bonu contain doubl valu salari column result format follow exampl exampl input datafram employe name salari piper grace georgia willow finn thoma output name salari bonu piper grace georgia willow finn thoma explan new column bonu creat doubl valu column salari ","2147":"datafram custom column name type customerid int name object email object duplic row datafram base email column write solut remov duplic row keep first occurr result format follow exampl exampl input customerid name email ella emilyexamplecom david michaelexamplecom zachari sarahexamplecom alic johnexamplecom finn johnexamplecom violet aliceexamplecom output customerid name email ella emilyexamplecom david michaelexamplecom zachari sarahexamplecom alic johnexamplecom violet aliceexamplecom explan alic customerid finn customerid use johnexamplecom first occurr email retain ","2148":"datafram student column name type studentid int name object age int row miss valu name column write solut remov row miss valu result format follow exampl exampl input studentid name age piper none georgia willow output studentid name age piper georgia willow explan student id empti valu name column remov ","2149":"datafram employe column name type name object salari int compani intend give employe pay rise write solut modifi salari column multipli salari result format follow exampl exampl input datafram employe name salari jack piper mia ulyss output name salari jack piper mia ulyss explan everi salari doubl ","2150":"datafram student column name type id int first object last object age int write solut renam column follow id studentid first firstnam last lastnam age ageinyear result format follow exampl exampl input id first last age mason king ava wright taylor hall georgia thompson thoma moor output studentid firstnam lastnam ageinyear mason king ava wright taylor hall georgia thompson thoma moor explan column name chang accordingli ","2151":"datafram student column name type studentid int name object age int grade float write solut correct error grade column store float convert integ result format follow exampl exampl input datafram student studentid name age grade ava kate output studentid name age grade ava kate explan data type column grade convert int ","2152":"datafram product column name type name object quantiti int price int write solut fill miss valu quantiti column result format follow exampl exampl input name quantiti price wristwatch none wirelessearbud none golfclub printer output name quantiti price wristwatch wirelessearbud golfclub printer explan quantiti wristwatch wirelessearbud fill ","2153":"datafram column name type studentid int name object age int datafram column name type studentid int name object age int write solut concaten datafram vertic datafram result format follow exampl exampl input studentid name age mason ava taylor georgia studentid name age leo alex output studentid name age mason ava taylor georgia leo alex explan dataframess stack vertic row combin ","2154":"datafram weather column name type citi object month object temperatur int write solut pivot data row repres temperatur specif month citi separ column result format follow exampl exampl input citi month temperatur jacksonvil januari jacksonvil februari jacksonvil march jacksonvil april jacksonvil may elpaso januari elpaso februari elpaso march elpaso april elpaso may output month elpaso jacksonvil april februari januari march may explan tabl pivot column repres citi row repres specif month ","2155":"datafram report column name type product object quarter1 int quarter2 int quarter3 int quarter4 int write solut reshap data row repres sale data product specif quarter result format follow exampl exampl input product quarter1 quarter2 quarter3 quarter4 umbrella sleepingbag output product quarter sale umbrella quarter1 sleepingbag quarter1 umbrella quarter2 sleepingbag quarter2 umbrella quarter3 sleepingbag quarter3 umbrella quarter4 sleepingbag quarter4 explan datafram reshap wide long format row repres sale product quarter ","2156":"datafram anim column name type name object speci object age int weight int write solut list name anim weigh strictli kilogram return anim sort weight descend order result format follow exampl exampl input datafram anim name speci age weight tatiana snake khale giraff alex leopard jonathan monkey stefan bear tommi panda output name tatiana jonathan tommi alex explan anim weigh includ result tabl tatiana weight jonathan weight tommi weight alex weight result sort descend order weight panda method chain enabl us perform oper datafram without break oper separ line creat multipl temporari variabl complet task line code use method chain ","2157":"posit integ defin integ follow num1 sum integ rang inclus divis num2 sum integ rang inclus divis return integ num1 num2 exampl input output explan exampl integ rang divis num1 sum integ integ rang divis num2 sum integ return answer exampl input output explan exampl integ rang divis num1 sum integ integ rang divis num2 sum integ return answer exampl input output explan exampl integ rang divis num1 sum integ integ rang divis num2 sum integ return answer constraint ","2158":"certain number processor core number task execut time number processor task must assign uniqu core core use array processortim repres time processor becom avail array task repres long task take complet return minimum time need complet task exampl input processortim task output explan assign task indic first processor becom avail time task indic second processor becom avail time time taken first processor finish execut task max8 time taken second processor finish execut task max10 exampl input processortim task output explan assign task indic first processor other second processor time taken first processor finish execut task max10 time taken second processor finish execut task max20 constraint processortimelength taskslength processortimei tasksi taskslength ","2159":"0index integ array num posit integ follow oper array number time choos distinct indic simultan updat valu numsi numsi numsj numsj numsi numsj denot bitwis oper denot bitwis oper choos element final array calcul sum squar return maximum sum squar achiev sinc answer larg return modulo exampl input num output explan follow oper array choos chang nums0 nums3 result array num choos chang nums2 nums3 result array num choos element final array sum squar shown maximum valu get exampl input num output explan need appli oper choos element sum squar shown maximum valu get constraint numslength numsi ","2160":"integ array num numsi either posit integ need find respect posit integ call last visit integ achiev goal let defin empti array seen an start iter begin array num posit integ encount prepend front seen encount let number consecut seen far includ current less equal length seen append kth element seen an strictli greater length seen append an return array an exampl input num output explan start seen an process nums0 first element num prepend front seen seen process nums1 next element prepend front seen seen process nums2 next element first occurr look first element seen append an an process nums3 anoth second consecut second element seen append an an process nums4 anoth third row make howev seen element sinc greater number element seen append an final an exampl input num output explan start seen an process nums0 first element num prepend front seen seen process nums1 next element first occurr look first element seen append an an process nums2 next element prepend front seen seen process nums3 next element consecut first sinc thu reset first element seen append an an process nums4 anoth consecut previou second element seen append an final an constraint numslength numsi numsi ","2161":"string array word binari array group length wordsi associ groupsi task select longest altern subsequ word subsequ word altern consecut string sequenc correspond element binari array group differ essenti choos string adjac element nonmatch correspond bit group array formal need find longest subsequ array indic denot ik1 groupsij groupsij1 find word correspond indic return select subsequ multipl answer return note element word distinct exampl input word eab group output eb explan subsequ select eb groups0 groups2 anoth subsequ select ab groups1 groups2 demonstr length longest subsequ indic satisfi condit exampl input word abcd group output abc explan subsequ select abc groups0 groups1 groups1 groups2 anoth subsequ select abd groups0 groups1 groups1 groups3 shown length longest subsequ indic satisfi condit constraint wordslength groupslength wordsilength groupsi either word consist distinct string wordsi consist lowercas english letter ","2162":"string array word array group array length ham distanc string equal length number posit correspond charact differ need select longest subsequ array indic subsequ denot ik1 length follow hold adjac indic subsequ correspond group unequ ie groupsij groupsij1 wordsij wordsij1 equal length ham distanc indic subsequ return string array contain word correspond indic order select subsequ multipl answer return note string word may unequ length exampl input word babdabcab group output babcab explan subsequ select groups0 groups2 words0length words2length ham distanc valid answer words0words2 babcab anoth subsequ select groups0 groups1 words0length words1length ham distanc anoth valid answer words0words1 babdab shown length longest subsequ indic satisfi condit exampl input word abcd group output abcd explan select subsequ satisfi condit henc answer words0words1words2words3 abcd longest length among subsequ indic satisfi condit henc answer constraint wordslength groupslength wordsilength groupsi word consist distinct string wordsi consist lowercas english letter ","2163":"0index array num nonneg integ integ return count submultiset within num sum element subset fall within inclus rang sinc answer may larg return modulo submultiset unord collect element array valu occur time number occurr array note submultiset sort submultiset result ident multiset sum empti multiset exampl input num output explan subset num sum exampl input num output explan subset num sum within rang exampl input num output explan subset num sum within rang constraint numslength numsi sum num exceed ","2164":"0index integ array num length integ indexdiffer integ valuediffer task find indic rang satisfi follow condit absi indexdiffer absnumsi numsj valuediffer return integ array answer answer indic answer otherwis multipl choic indic return note may equal exampl input num indexdiffer valuediffer output explan exampl select abs0 absnums0 nums3 henc valid answer also valid answer exampl input num indexdiffer valuediffer output explan exampl select abs0 absnums0 nums0 henc valid answer valid answer exampl input num indexdiffer valuediffer output explan exampl shown imposs find indic satisfi condit henc return constraint numslength numsi indexdiffer valuediffer ","2165":"binari string posit integ substr beauti number exactli let len length shortest beauti substr return lexicograph smallest beauti substr string length equal len doesnt contain beauti substr return empti string string lexicograph larger string length first posit differ charact strictli larger correspond charact exampl abcd lexicograph larger abcc first posit differ fourth charact greater exampl input output explan beauti substr exampl substr substr substr substr substr substr substr length shortest beauti substr lexicograph smallest beauti substr length substr exampl input output explan beauti substr exampl substr substr substr length shortest beauti substr lexicograph smallest beauti substr length substr exampl input output explan beauti substr exampl constraint slength slength ","2166":"0index integ array num length integ indexdiffer integ valuediffer task find indic rang satisfi follow condit absi indexdiffer absnumsi numsj valuediffer return integ array answer answer indic answer otherwis multipl choic indic return note may equal exampl input num indexdiffer valuediffer output explan exampl select abs0 absnums0 nums3 henc valid answer also valid answer exampl input num indexdiffer valuediffer output explan exampl select abs0 absnums0 nums0 henc valid answer valid answer exampl input num indexdiffer valuediffer output explan exampl shown imposs find indic satisfi condit henc return constraint numslength numsi indexdiffer valuediffer ","2167":"0index 2d integ matrix grid size defin 0index 2d matrix size product matrix grid follow condit met element pij calcul product element grid except element gridij product taken modulo return product matrix grid exampl input grid output explan p00 grid01 grid10 grid11 p01 grid00 grid10 grid11 p10 grid00 grid01 grid11 p11 grid00 grid01 grid10 answer exampl input grid output explan p00 grid01 grid02 p01 grid00 grid02 p01 p02 grid00 grid01 p02 answer constraint gridlength gridilength gridij ","2168":"0index array num integ triplet indic mountain numsi numsj numsk numsj return minimum possibl sum mountain triplet num triplet exist return exampl input num output explan triplet mountain triplet sum sinc nums2 nums3 nums4 nums3 sum triplet nums2 nums3 nums4 shown mountain triplet sum less exampl input num output explan triplet mountain triplet sum sinc nums1 nums3 nums5 nums3 sum triplet nums1 nums3 nums5 shown mountain triplet sum less exampl input num output explan shown mountain triplet num constraint numslength numsi ","2169":"collect number ball instruct sort box nearli balanc distribut rule must ball box must valu ball number put differ box biggest box ball smallest box return fewest number box sort ball follow rule exampl input ball output explan sort ball box follow size differ box doesnt exceed exampl input ball output explan sort ball box follow cant use fewer box still follow rule exampl put ball number box would break rule maximum size differ box constraint numslength numsi ","2170":"string integ partit substr letter chang need make substr semipalindrom minim return minimum number letter chang requir semipalindrom special type string divid palindrom base repeat pattern check string semipalindrom choos posit divisor string length rang includ string length string length valid divisor per definit sinc divisor length allow divisor divid string group group contain charact string repeat pattern length specif first group consist charact posit 2d second group includ charact posit 2d etc string consid semipalindrom group form palindrom consid string abcabc length abcabc valid divisor entir string abcabc form group palindrom group posit acb group posit bac neither group form palindrom group posit group posit group posit cc group form palindrom therefor abcabc semipalindrom exampl input abcac output explan divid ab cac cac alreadi semipalindrom chang ab becom semipalindrom exampl input abcdef output explan divid substr abc def need chang becom semipalindrom exampl input aabbaa output explan divid substr alreadi semipalindrom constraint slength slength contain lowercas english letter ","2171":"0index integ array num distinct count subarray num defin let numsij subarray num consist indic numslength number distinct valu numsij call distinct count numsij return sum squar distinct count subarray num subarray contigu nonempti sequenc element within array exampl input num output explan possibl subarray distinct valu distinct valu distinct valu distinct valu distinct valu distinct valu sum squar distinct count subarray equal exampl input num output explan possibl subarray distinct valu distinct valu distinct valu sum squar distinct count subarray equal constraint numslength numsi ","2172":"0index binari string even length string beauti possibl partit substr substr even length substr contain chang charact return minimum number chang requir make string beauti exampl input output explan chang get string seen string beauti partit proven minimum number chang need make string beauti exampl input output explan chang get string seen string beauti partit proven minimum number chang need make string beauti exampl input output explan dont need make chang string beauti alreadi constraint slength even length si either ","2173":"0index array integ num integ target return length longest subsequ num sum target subsequ exist return subsequ array deriv anoth array delet element without chang order remain element exampl input num target output explan subsequ sum equal longest subsequ henc answer exampl input num target output explan subsequ sum equal longest subsequ henc answer exampl input num target output explan shown num subsequ sum constraint numslength numsi target ","2174":"0index integ array num distinct count subarray num defin let numsij subarray num consist indic numslength number distinct valu numsij call distinct count numsij return sum squar distinct count subarray num sinc answer may larg return modulo subarray contigu nonempti sequenc element within array exampl input num output explan possibl subarray distinct valu distinct valu distinct valu distinct valu distinct valu distinct valu sum squar distinct count subarray equal exampl input num output explan possibl subarray distinct valu distinct valu distinct valu sum squar distinct count subarray equal constraint numslength numsi ","2175":"0index integ array num length integ perform follow increment oper number time includ choos index rang increas numsi array consid beauti subarray size maximum element greater equal return integ denot minimum number increment oper need make num beauti subarray contigu nonempti sequenc element within array exampl input num output explan perform follow increment oper make num beauti choos index increas nums1 choos index increas nums4 choos index increas nums4 subarray size subarray maximum element equal num beauti shown num made beauti fewer increment oper henc answer exampl input num output explan perform follow increment oper make num beauti choos index increas nums2 choos index increas nums2 subarray size subarray maximum element equal num beauti shown num made beauti fewer increment oper henc answer exampl input num output explan subarray size exampl maximum element alreadi greater dont need increment oper henc answer constraint numslength numsi ","2176":"exist undirect tree root node node label 2d integ array edg length edgesi ai bi indic edg node ai bi tree also 0index array coin size coinsi indic number coin vertex integ start root collect coin coin node collect coin ancestor alreadi collect coin nodei collect follow way collect coin get coinsi point coinsi neg lose abscoinsi point collect coin get floorcoinsi point way use nodej present subtre nodei coinsj get reduc floorcoinsj return maximum point get collect coin tree node exampl input edg coin output explan collect coin node use first way total point collect coin node use first way total point collect coin node use second way coin left node floor3 total point floor3 collect coin node use second way total point floor1 shown maximum point get collect coin node exampl input edg coin output explan coin collect node use first way therefor total point constraint coinslength coinsi edgeslength edgesi0 edgesi1 ","2177":"team number tournament 0index 2d boolean matrix grid size team stronger team gridij otherwis team stronger team team champion tournament team stronger team return team champion tournament exampl input grid output explan team tournament grid01 mean team stronger team team champion exampl input grid output explan team tournament grid10 mean team stronger team grid12 mean team stronger team team champion constraint gridlength gridilength gridij either gridii gridij gridji input gener team stronger team team stronger team team stronger team ","2178":"team number tournament team also node dag integ 0index 2d integ array edg length repres dag edgesi ui vi indic direct edg team ui team vi graph direct edg graph mean team stronger team team weaker team team champion tournament team stronger team return team champion tournament uniqu champion otherwis return note cycl seri node node node node node distinct direct edg node ai node ai1 everi rang dag direct graph cycl exampl input edg output explan team weaker team team weaker team champion team exampl input edg output explan team weaker team team team weaker team team team weaker team answer constraint edgeslength edgesilength edgeij edgesi0 edgesi1 input gener team stronger team team stronger team input gener team stronger team team stronger team team stronger team ","2179":"undirect tree node label root node 2d integ array edg length edgesi ai bi indic edg node ai bi tree also 0index integ array valu length valuesi valu associ ith node start score oper pick node add valuesi score set valuesi tree healthi sum valu path root leaf node differ return maximum score obtain perform oper tree number time remain healthi exampl input edg valu output explan choos node valu root nonzero henc sum valu path root leaf differ therefor tree healthi score values1 values2 values3 values4 values5 shown maximum score obtain number oper tree exampl input edg valu output explan choos node sum valu path equal sum valu path equal sum valu path equal sum valu path equal therefor tree healthi score values0 values2 values3 values4 shown maximum score obtain number oper tree constraint edgeslength edgesilength ai bi valueslength valuesi input gener edg repres valid tree ","2180":"0index integ array num subsequ num length consist indic ik1 balanc follow hold numsij numsij1 ij ij1 everi rang subsequ num length consid balanc return integ denot maximum possibl sum element balanc subsequ num subsequ array new nonempti array form origin array delet possibl none element without disturb rel posit remain element exampl input num output explan exampl subsequ consist indic select nums2 nums0 nums3 nums2 henc balanc subsequ sum maximum among balanc subsequ num subsequ consist indic also valid shown possibl get balanc subsequ sum greater exampl input num output explan exampl subsequ consist indic select nums3 nums0 henc balanc subsequ sum maximum among balanc subsequ num shown possibl get balanc subsequ sum greater exampl input num output explan exampl subsequ select balanc subsequ sum maximum among balanc subsequ num constraint numslength numsi ","2181":"posit integ limit return total number way distribut candi among children child get limit candi exampl input limit output explan way distribut candi child get candi exampl input limit output explan way distribut candi child get candi constraint limit ","2182":"posit integ limit return total number way distribut candi among children child get limit candi exampl input limit output explan way distribut candi child get candi exampl input limit output explan way distribut candi child get candi constraint limit ","2183":"integ string call good contain lowercas english charact possibl rearrang charact new string contain leet substr exampl string lteer good rearrang form leetr letl good rearrang contain leet substr return total number good string length sinc answer may larg return modulo substr contigu sequenc charact within string exampl input output explan string rearrang leet substr eelt eetl elet elt etel etl leet lete ltee teel tele tlee exampl input output explan number string length rearrang leet substr henc answer constraint ","2184":"0index integ matrix valu repres valu differ item differ shop shop item jth item ith shop valu valuesij addit item ith shop sort nonincreas order valu valuesij valuesij day would like buy singl item shop specif dth day pick shop buy rightmost avail item price valuesij find greatest index item never bought buy price valuesij note item pairwis differ exampl bought item shop still buy item shop return maximum amount money spent buy product exampl input valu output explan first day buy product shop price values12 second day buy product shop price values02 third day buy product shop price values22 fourth day buy product shop price values11 fifth day buy product shop price values01 sixth day buy product shop price values10 seventh day buy product shop price values21 eighth day buy product shop price values00 ninth day buy product shop price values20 henc total spend equal shown maximum amount money spent buy product exampl input valu output explan first day buy product shop price values04 second day buy product shop price values14 third day buy product shop price values13 fourth day buy product shop price values03 fifth day buy product shop price values12 sixth day buy product shop price values02 seventh day buy product shop price values11 eighth day buy product shop price values01 ninth day buy product shop price values10 tenth day buy product shop price values00 henc total spend equal shown maximum amount money spent buy product constraint valueslength valuesilength valuesij valuesi sort nonincreas order ","2185":"0index integ array num pair integ call strong pair satisfi condit minx need select integ num form strong pair bitwis maximum among strong pair array return maximum valu possibl strong pair array num note pick integ twice form pair exampl input num output explan strong pair array num maximum possibl pair exampl input num output explan strong pair array num maximum possibl pair sinc pair also give exampl input num output explan strong pair array num maximum possibl pair sinc nonzero valu constraint numslength numsi ","2186":"2d 0index array string accesstim size accesstimesi0 repres name employe accesstimesi1 repres access time employe entri accesstim within day access time repres digit use 24hour time format exampl employe said highaccess access system time within onehour period time exactli hour differ consid part onehour period exampl part onehour period access time start end day count within onehour period exampl part onehour period return list contain name highaccess employe order want exampl input accesstim a0549b0457a0532a0621b0540 output explan access time onehour period access time answer exampl input accesstim d0002c0808c0829e0215d1508d1444d1410c0809 output cd explan access time onehour period also access time onehour period howev e access time answer final answer cd exampl input accesstim cd1025ab1025cd1046cd1055ab1124ab1120 output abcd explan ab access time onehour period cd also access time onehour period answer abcd constraint accesstimeslength accesstimesilength accesstimesi0length accesstimesi0 consist english small letter accesstimesi1length accesstimesi1 24hour time format accesstimesi1 consist ","2187":"0index integ array nums1 nums2 length allow perform seri oper possibl none oper select index rang swap valu nums1i nums2i task find minimum number oper requir satisfi follow condit nums1n equal maximum valu among element nums1 ie nums1n maxnums10 nums11 nums1n nums2n equal maximum valu among element nums2 ie nums2n maxnums20 nums21 nums2n return integ denot minimum number oper need meet condit imposs satisfi condit exampl input nums1 nums2 output explan exampl oper perform use index nums12 nums22 swap nums1 becom nums2 becom condit satisfi shown minimum number oper need perform answer exampl input nums1 nums2 output explan exampl follow oper perform first oper use index nums14 nums24 swap nums1 becom nums2 becom anoth oper use index nums13 nums23 swap nums1 becom nums2 becom condit satisfi shown minimum number oper need perform answer exampl input nums1 nums2 output explan exampl possibl satisfi condit answer constraint nums1length nums2length nums1i nums2i ","2188":"0index integ array num pair integ call strong pair satisfi condit minx need select integ num form strong pair bitwis maximum among strong pair array return maximum valu possibl strong pair array num note pick integ twice form pair exampl input num output explan strong pair array num maximum possibl pair exampl input num output explan strong pair array num maximum possibl pair sinc pair also give exampl input num output explan strong pair array num maximum possibl pair sinc nonzero valu constraint numslength numsi ","2189":"string oper choos string delet rightmost charact note complet empti string return minimum number oper requir make string equal imposs make equal return exampl input abc abb ab output explan delet rightmost charact result equal string exampl input dac bac cac output explan sinc first letter differ made equal constraint s1length s2length s3length lowercas english letter ","2190":"ball tabl ball color black white 0index binari string length repres black white ball respect step choos adjac ball swap return minimum number step group black ball right white ball left exampl input output explan group black ball right follow way swap initi group togeth requir least step group right exampl input output explan group black ball right follow way swap swap proven minimum number step need exampl input output explan black ball alreadi group right constraint slength si either ","2191":"integ return maximum valu sinc answer may larg return modulo note bitwis oper exampl input output explan henc shown maximum valu exampl input output explan henc shown maximum valu exampl input output explan henc shown maximum valu constraint ","2192":"0index array height posit integ heightsi repres height ith build person build move build heightsi heightsj also anoth array queri queriesi ai bi ith queri alic build ai bob build bi return array an ansi index leftmost build alic bob meet ith queri alic bob move common build queri set ansi exampl input height queri output explan first queri alic bob move build sinc heights0 heights2 heights1 heights2 second queri alic bob move build sinc heights0 heights5 heights3 heights5 third queri alic meet bob sinc alic move build fourth queri alic bob move build sinc heights3 heights5 heights4 heights5 fifth queri alic bob alreadi build ansi shown ansi leftmost build alic bob meet ansi shown build alic bob meet exampl input height queri output explan first queri alic directli move bob build sinc heights0 heights7 second queri alic bob move build sinc heights3 heights6 heights5 heights6 third queri alic meet bob sinc bob move build fourth queri alic bob move build sinc heights3 heights4 heights0 heights4 fifth queri alic directli move bob build sinc heights1 heights6 ansi shown ansi leftmost build alic bob meet ansi shown build alic bob meet constraint heightslength heightsi querieslength queriesi ai bi ai bi heightslength ","2193":"0index array string word charact return array indic repres word contain charact note return array may order exampl input word leetcod e output explan e occur word leet code henc return indic exampl input word abcbcdaaaacbc output explan occur abc aaaa henc return indic exampl input word abcbcdaaaacbc output explan occur word henc return empti array constraint wordslength wordsilength lowercas english letter wordsi consist lowercas english letter ","2194":"integ integ array hbar vbar grid horizont vertic bar creat unit cell bar index start remov bar hbar horizont bar bar vbar vertic bar note bar fix remov return integ denot maximum area squareshap hole grid remov bar possibl none exampl input hbar vbar output explan left imag show initi grid form bar horizont bar vertic bar way get maximum squareshap hole remov horizont bar vertic bar exampl input hbar vbar output explan get maximum squareshap hole remov horizont bar vertic bar exampl input hbar vbar output explan way get maximum squareshap hole remov horizont bar vertic bar constraint hbarslength hbarsi vbarslength vbarsi valu hbar distinct valu vbar distinct ","2195":"integ array price pricesi denot number coin need purchas ith fruit fruit market follow reward fruit purchas ith fruit pricesi coin get number next fruit free note even take fruit free still purchas pricesj coin receiv reward return minimum number coin need acquir fruit exampl input price output explan purchas 1st fruit prices0 coin allow take fruit free purchas fruit prices1 coin allow take 3rd fruit free take 3rd fruit free note even though could take fruit free reward buy 1st fruit purchas receiv reward optim exampl input price output explan purchas 1st fruit prices0 coin allow take fruit free take fruit free purchas 3rd fruit prices2 coin allow take 4th fruit free take 4th fruit free exampl input price output explan purchas 1st fruit prices0 coin allow take fruit free take fruit free purchas 3rd fruit prices2 coin allow take 4th 5th 6th next fruit free take 4th fruit free take 5th fruit free purchas 6th fruit prices5 coin allow take 8th 9th fruit free take 7th fruit free take 8th fruit free note even though could take 6th fruit free reward buy 3rd fruit purchas receiv reward optim constraint priceslength pricesi ","2196":"0index integ array num perform number oper oper involv select subarray array replac sum element exampl array select subarray array convert return maximum length nondecreas array made appli oper subarray contigu nonempti sequenc element within array exampl input num output explan array length nondecreas way make array length first choos subarray convert array second choos subarray convert array way array nondecreas choos subarray replac becom nondecreas answer exampl input num output explan array nondecreas answer exampl input num output explan replac convert array nondecreas array nondecreas maximum possibl answer constraint numslength numsi ","2197":"integ matrix mat integ matrix row 0index follow proccess happen time evenindex row cyclic shift left oddindex row cyclic shift right return true final modifi matrix step ident origin matrix fals otherwis exampl input mat output fals explan step left shift appli row even indic right shift row odd index exampl input mat output true explan exampl input mat output true explan valu equal matrix even perform cyclic shift matrix remain constraint matlength matilength matij ","2198":"string posit integ let vowel conson number vowel conson string string beauti vowel conson vowel conson term multipl vowel conson divis return number nonempti beauti substr string substr contigu sequenc charact string vowel letter english e u conson letter english everi letter except vowel exampl input baeyh output explan beauti substr string substr baeyh vowel ae conson yh see string beauti vowel conson vowel conson substr baeyh vowel ae conson see string baey beauti vowel conson vowel conson shown beauti substr string exampl input abba output explan beauti substr string substr abba vowel conson substr abba vowel conson substr abba vowel conson shown beauti substr string exampl input bcdf output explan beauti substr string constraint slength consist english lowercas letter ","2199":"0index array posit integ num posit integ limit oper choos indic swap numsi numsj numsi numsj limit return lexicograph smallest array obtain perform oper number time array lexicograph smaller array first posit differ array element less correspond element exampl array lexicograph smaller array differ index exampl input num limit output explan appli oper time swap nums1 nums2 array becom swap nums3 nums4 array becom obtain lexicograph smaller array appli oper note may possibl get result differ oper exampl input num limit output explan appli oper time swap nums1 nums2 array becom swap nums0 nums4 array becom swap nums0 nums5 array becom obtain lexicograph smaller array appli oper exampl input num limit output explan lexicograph smallest array obtain appli oper indic constraint numslength numsi limit ","2200":"string posit integ let vowel conson number vowel conson string string beauti vowel conson vowel conson term multipl vowel conson divis return number nonempti beauti substr string substr contigu sequenc charact string vowel letter english e u conson letter english everi letter except vowel exampl input baeyh output explan beauti substr string substr baeyh vowel ae conson yh see string beauti vowel conson vowel conson substr baeyh vowel ae conson see string baey beauti vowel conson vowel conson shown beauti substr string exampl input abba output explan beauti substr string substr abba vowel conson substr abba vowel conson substr abba vowel conson shown beauti substr string exampl input bcdf output explan beauti substr string constraint slength consist english lowercas letter ","2201":"0index array mountain task find peak mountain array return array consist indic peak array order note peak defin element strictli greater neighbor element first last element array peak exampl input mountain output explan mountain0 mountain2 peak first last element array mountain1 also peak strictli greater mountain2 answer exampl input mountain output explan mountain0 mountain4 peak first last element array mountain2 also peak strictli greater mountain3 mountain1 mountain mountain3 strictli greater neighbor element answer constraint mountainlength mountaini ","2202":"0index integ array coin repres valu coin avail integ target integ obtain exist subsequ coin sum return minimum number coin valu need ad array everi integ rang target obtain subsequ array new nonempti array form origin array delet possibl none element without disturb rel posit remain element exampl input coin target output explan need add coin result array shown integ obtain result array minimum number coin need ad array exampl input coin target output explan need add coin result array shown integ obtain result array minimum number coin need ad array exampl input coin target output explan need add coin result array shown integ obtain result array minimum number coin need ad array constraint target coinslength coinsi target ","2203":"string word integ substr word complet charact occur exactli time differ adjac charact adjac charact c1 c2 absolut differ posit alphabet return number complet substr word substr nonempti contigu sequenc charact string exampl input word igige output explan complet substr charact appear exactli twice differ adjac charact igige igige igige exampl input word aaabbbccc output explan complet substr charact appear exactli time differ adjac charact aaabbbccc aaabbbccc aaabbbccc aaabbbccc aaabbbccc aaabbbccc constraint wordlength word consist lowercas english letter wordlength ","2204":"integ array sick sort increas order repres posit infect peopl line peopl step uninfect person adjac infect person get infect process continu everyon infect infect sequenc order uninfect peopl becom infect exclud initi infect return number differ infect sequenc possibl modulo exampl input sick output explan total differ sequenc overal valid infect sequenc valid infect sequenc person index infect first step exampl input sick output explan total differ sequenc overal valid infect sequenc valid infect sequenc infect start person index order infect henc infect earlier constraint sicklength sicki sick sort increas order ","2205":"integ array nums1 nums2 size respect calcul follow valu answer1 number indic nums1i exist nums2 answer2 number indic nums2i exist nums1 return answer1answer2 exampl input nums1 nums2 output explan exampl input nums1 nums2 output explan element indic nums1 exist nums2 well answer1 element indic nums2 exist nums1 answer2 exampl input nums1 nums2 output explan number common nums1 nums2 answer constraint nums1length nums2length nums1i nums2i ","2206":"0index string word oper pick index word chang wordi lowercas english letter return minimum number oper need remov adjac almostequ charact word charact almostequ adjac alphabet exampl input word aaaaa output explan chang word acaca adjac almostequ charact shown minimum number oper need remov adjac almostequ charact word exampl input word abddez output explan chang word ybdoez adjac almostequ charact shown minimum number oper need remov adjac almostequ charact word exampl input word zyxyxyz output explan chang word zaxaxaz adjac almostequ charact shown minimum number oper need remov adjac almostequ charact word constraint wordlength word consist lowercas english letter ","2207":"integ array num integ frequenc element number time occur array array call good frequenc element array less equal return length longest good subarray num subarray contigu nonempti sequenc element within array exampl input num output explan longest possibl good subarray sinc valu occur twice subarray note subarray also good shown good subarray length exampl input num output explan longest possibl good subarray sinc valu occur subarray note subarray also good shown good subarray length exampl input num output explan longest possibl good subarray sinc valu occur time subarray shown good subarray length constraint numslength numsi numslength ","2208":"compani branch across countri connect road initi branch reachabl travel road compani realiz spend excess amount time travel branch result decid close branch possibl none howev want ensur remain branch distanc maxdist distanc branch minimum total travel length need reach branch anoth integ maxdist 0index 2d array road roadsi ui vi wi repres undirect road branch ui vi length wi return number possibl set close branch branch distanc maxdist note close branch compani longer access road connect note multipl road allow exampl input maxdist road output explan possibl set close branch set close activ branch reachabl within distanc set close activ branch set close activ branch set close activ branch set close activ branch proven possibl set close branch exampl input maxdist road output explan possibl set close branch set close activ branch reachabl within distanc set close activ branch reachabl within distanc set close activ branch reachabl within distanc set close activ branch set close activ branch set close activ branch set close activ branch proven possibl set close branch exampl input maxdist road output explan possibl set close branch set close activ branch set close activ branch proven possibl set close branch constraint maxdist roadslength roadsilength ui vi ui vi wi branch reachabl travel road ","2209":"0index integ array batterypercentag length denot batteri percentag 0index devic task test devic order perform follow test oper batterypercentagesi greater increment count test devic decreas batteri percentag devic indic rang ensur batteri percentag never goe ie batterypercentagesj max0 batterypercentagesj move next devic otherwis move next devic without perform test return integ denot number devic test perform test oper order exampl input batterypercentag output explan perform test oper order start devic devic batterypercentages0 test devic batterypercentag becom devic batterypercentages1 move next devic without test devic batterypercentages2 test devic batterypercentag becom devic batterypercentages3 move next devic without test devic batterypercentages4 test devic batterypercentag stay answer exampl input batterypercentag output explan perform test oper order start devic devic batterypercentages0 move next devic without test devic batterypercentages1 test devic batterypercentag becom devic batterypercentages2 test devic batterypercentag stay answer constraint batterypercentageslength batterypercentagesi ","2210":"0index 2d array variabl variablesi ai bi ci mi integ target index good follow formula hold variableslength aibi 10ci mi target return array consist good indic order exampl input variabl target output explan index variabl array index variables0 index variables1 index variables2 therefor return answer exampl input variabl target output explan index variabl array index variables0 therefor return answer constraint variableslength variablesi ai bi ci mi ai bi ci mi target ","2211":"integ array num posit integ return number subarray maximum element num appear least time subarray subarray contigu sequenc element within array exampl input num output explan subarray contain element least time exampl input num output explan subarray contain element least time constraint numslength numsi ","2212":"0index array num consist posit integ partit array contigu subarray call good subarray contain number return total number good partit num sinc answer may larg return modulo exampl input num output explan possibl good partit exampl input num output explan possibl good partit exampl input num output explan possibl good partit constraint numslength numsi ","2213":"0index 2d integ matrix grid size valu rang integ appear exactli except appear twice miss task find repeat miss number return 0index integ array an size ans0 equal ans1 equal exampl input grid output explan number repeat number miss answer exampl input grid output explan number repeat number miss answer constraint gridlength gridilength gridij exactli equal grid member exactli equal exactli grid member except exatli pair gridij ","2214":"integ array num size multipl posit integ divid array num array size satisfi follow condit differ element array less equal return 2d array contain array imposs satisfi condit return empti array multipl answer return exampl input num output explan differ element array less equal exampl input num output explan differ way divid num array size permut permut array element matter divid sinc condit satisfi valid divis exampl input num output explan differ element array less equal constraint numslength multipl numsi ","2215":"0index integ array num length allow perform special move number time includ num special move perform follow step order choos index rang posit integ add numsi total cost chang valu numsi palindrom number posit integ remain digit revers exampl palindrom number wherea palindrom number array consid equalindrom element array equal integ palindrom number less return integ denot minimum possibl total cost make num equalindrom perform number special move exampl input num output explan make array equalindrom chang element palindrom number cost chang array use special move shown chang element palindrom number achiev lower cost exampl input num output explan make array equalindrom chang element palindrom number cost chang array use special move shown chang element palindrom number achiev lower cost exampl input num output explan make array equalindrom chang element palindrom number cost chang array use special move shown chang element palindrom number achiev lower cost constraint numsi ","2216":"0index array posit integ num subarray num call incremov num becom strictli increas remov subarray exampl subarray incremov subarray remov subarray chang array strictli increas return total number incremov subarray num note empti array consid strictli increas subarray contigu nonempti sequenc element within array exampl input num output explan incremov subarray remov subarray num becom strictli increas note select empti subarray exampl input num output explan incremov subarray shown incremov subarray num exampl input num output explan incremov subarray note incremov subarray remov num becom sort ascend order strictli increas constraint numslength numsi ","2217":"array posit integ num length polygon close plane figur least side longest side polygon smaller sum side convers posit real number ak ak ak1 ak alway exist polygon side whose length ak perimet polygon sum length side return largest possibl perimet polygon whose side form num possibl creat polygon exampl input num output explan possibl polygon made num side perimet exampl input num output explan polygon largest perimet made num side perimet polygon either longest side possibl includ smaller side greater sum either shown largest possibl perimet exampl input num output explan possibl way form polygon num polygon least side constraint numsi ","2218":"0index array posit integ num subarray num call incremov num becom strictli increas remov subarray exampl subarray incremov subarray remov subarray chang array strictli increas return total number incremov subarray num note empti array consid strictli increas subarray contigu nonempti sequenc element within array exampl input num output explan incremov subarray remov subarray num becom strictli increas note select empti subarray exampl input num output explan incremov subarray shown incremov subarray num exampl input num output explan incremov subarray note incremov subarray remov num becom sort ascend order strictli increas constraint numslength numsi ","2219":"undirect tree node label root node 2d integ array edg length edgesi ai bi indic edg node ai bi tree also 0index integ array cost length costi cost assign ith node need place coin everi node tree number coin place node calcul size subtre node less place coin otherwis place amount coin equal maximum product cost valu assign distinct node subtre node product neg place coin return array coin size coini number coin place node exampl input edg cost output explan node place coin node leav subtre size place coin exampl input edg cost output explan coin place node place coin node place coin node place coin node node leav subtre size place coin exampl input edg cost output explan node leav subtre size place coin node possibl product cost henc place coin node constraint edgeslength edgesilength ai bi costlength costi input gener edg repres valid tree ","2220":"larg rectangular field corner contain horizont vertic fenc array hfenc vfenc respect horizont fenc coordin hfencesi hfencesi vertic fenc coordin vfencesi vfencesi return maximum area squar field form remov fenc possibl none imposs make squar field sinc answer may larg return modulo note field surround horizont fenc coordin vertic fenc coordin fenc remov exampl input hfenc vfenc output explan remov horizont fenc vertic fenc give squar field area exampl input hfenc vfenc output explan prove way creat squar field remov fenc constraint hfenceslength vfenceslength hfencesi vfencesi hfenc vfenc uniqu ","2221":"0index string sourc target length consist lowercas english letter also 0index charact array origin chang integ array cost costi repres cost chang charact originali charact changedi start string sourc oper pick charact string chang charact cost exist index costj originalj changedj return minimum cost convert string sourc string target use number oper imposs convert sourc target return note may exist indic originalj originali changedj changedi exampl input sourc abcd target acb origin abc chang bcbebe cost output explan convert string abcd string acb chang valu index cost chang valu index e cost chang valu index e cost chang valu index e cost total cost incur shown minimum possibl cost exampl input sourc aaaa target bbbb origin ac chang cb cost output explan chang charact chang charact cost follow chang charact cost total cost chang occurr total cost incur exampl input sourc abcd target abc origin chang e cost output explan imposs convert sourc target valu index chang e constraint sourcelength targetlength sourc target lowercas english letter costlength originallength changedlength originali changedi lowercas english letter costi originali changedi ","2222":"0index string sourc target length consist lowercas english charact also 0index string array origin chang integ array cost costi repres cost convert string originali string changedi start string sourc oper pick substr string chang cost exist index costj originalj changedj allow number oper pair oper must satisfi either condit substr pick oper sourceab sourcecd either word indic pick oper disjoint substr pick oper sourceab sourcecd word indic pick oper ident return minimum cost convert string sourc string target use number oper imposs convert sourc target return note may exist indic originalj originali changedj changedi exampl input sourc abcd target acb origin abc chang bcbebe cost output explan convert abcd acb follow oper chang substr source11 cost chang substr source22 e cost chang substr source22 e cost chang substr source33 e cost total cost incur shown minimum possibl cost exampl input sourc abcdefgh target acdeeghh origin bcdfghthh chang cdethhghh cost output explan convert abcdefgh acdeeghh follow oper chang substr source13 bcd cde cost chang substr source57 fgh cost oper indic disjoint indic pick first oper chang substr source57 ghh cost oper indic disjoint indic pick first oper ident indic pick second oper total cost incur shown minimum possibl cost exampl input sourc abcdefgh target addddddd origin bcddefgh chang dddddddd cost output explan imposs convert abcdefgh addddddd select substr source13 first oper chang abcdefgh adddefgh select substr source37 second oper common index first oper select substr source37 first oper chang abcdefgh abcddddd select substr source13 second oper common index first oper constraint sourcelength targetlength sourc target lowercas english charact costlength originallength changedlength originalilength changedilength sourcelength originali changedi lowercas english charact originali changedi costi ","2223":"array posit integ num check possibl select element array bitwis select element least trail binari represent exampl binari represent trail zero wherea binari represent trail zero return true possibl select element whose bitwis trail zero return fals otherwis exampl input num output true explan select element bitwis binari represent trail exampl input num output true explan select element bitwis binari represent trail possibl way select element trail zero binari represent bitwis exampl input num output fals explan possibl way select element trail zero binari represent bitwis constraint numslength numsi ","2224":"string consist lowercas english letter string call special made singl charact exampl string abc special wherea string zz special return length longest special substr occur least thrice special substr occur least thrice substr contigu nonempti sequenc charact within string exampl input aaaa output explan longest special substr occur thrice substr aaaa aaaa aaaa shown maximum length achiev exampl input abcdef output explan exist special substr occur least thrice henc return exampl input abcaba output explan longest special substr occur thrice substr abcaba abcaba abcaba shown maximum length achiev constraint slength consist lowercas english letter ","2225":"string consist lowercas english letter string call special made singl charact exampl string abc special wherea string zz special return length longest special substr occur least thrice special substr occur least thrice substr contigu nonempti sequenc charact within string exampl input aaaa output explan longest special substr occur thrice substr aaaa aaaa aaaa shown maximum length achiev exampl input abcdef output explan exist special substr occur least thrice henc return exampl input abcaba output explan longest special substr occur thrice substr abcaba abcaba abcaba shown maximum length achiev constraint slength consist lowercas english letter ","2226":"0index string even length also 0index 2d integ array queri queriesi ai bi ci di queri allow perform follow oper rearrang charact within substr saibi ai bi rearrang charact within substr scidi ci di queri task determin whether possibl make palindrom perform oper queri answer independ other return 0index array answer answeri true possibl make palindrom perform oper specifi ith queri fals otherwis substr contigu sequenc charact within string sxi repres substr consist charact index index inclus exampl input abcabc queri output truetru explan exampl queri first queri c0 allow rearrang abcabc abcabc make palindrom rearrang becom abccba palindrom answer0 true second queri c1 allow rearrang abcabc abcabc make palindrom rearrang becom cbaabc palindrom answer1 true exampl input abbcdecbba queri output fals explan exampl queri c0 allow rearrang abbcdecbba abbcdecbba possibl make palindrom rearrang substr palindrom answer0 fals exampl input acbcab queri output true explan exampl queri c0 allow rearrang acbcab acbcab make palindrom rearrang becom abccab rearrang becom abccba palindrom answer0 true constraint slength querieslength queriesilength ai queriesi0 bi queriesi1 ci queriesi2 di queriesi3 ai bi ci di even consist lowercas english letter ","2227":"0index integ array num posit integ appli follow oper array number time choos element array flip bit binari represent flip bit mean chang vice versa return minimum number oper requir make bitwis element final array equal note flip lead bit binari represent element exampl number flip fourth bit obtain exampl input num output explan follow oper choos element flip first bit obtain num becom choos element flip third bit obtain num becom element final array shown make equal less oper exampl input num output explan element array oper need constraint numslength numsi ","2228":"posit integ oper follow oper divid multipl divid multipl decrement increment return minimum number oper requir make equal exampl input output explan make equal appli follow oper decrement divid divid shown minimum number oper requir make equal exampl input output explan make equal appli follow oper increment divid divid increment shown minimum number oper requir make equal exampl input output explan make equal appli follow oper increment increment increment increment increment shown minimum number oper requir make equal constraint ","2229":"integ start finish limit also 0index string repres posit integ posit integ call power end word suffix digit limit return total number power integ rang startfinish string suffix string substr start index includ extend index ylength exampl suffix wherea exampl input start finish limit output explan power integ rang integ digit suffix note power integ first digit greater shown power integ rang exampl input start finish limit output explan power integ rang integ digit suffix shown power integ rang exampl input start finish limit output explan integ rang smaller henc suffix integ rang constraint start finish limit slength floorlog10finish consist numer digit limit lead zero ","2230":"2d 0index integ array dimens indic dimensionslength dimensionsi0 repres length dimensionsi1 repres width rectangl return area rectangl longest diagon multipl rectangl longest diagon return area rectangl maximum area exampl input dimens output explan index length width diagon length sqrt9 sqrt90 index length width diagon length sqrt8 sqrt100 rectangl index greater diagon length therefor return area exampl input dimens output explan length diagon maximum area constraint dimensionslength dimensionsilength dimensionsi0 dimensionsi1 ","2231":"1index chessboard contain piec integ e denot posit white rook denot posit white bishop e denot posit black queen move white piec return minimum number move requir captur black queen note rook move number squar either vertic horizont jump piec bishop move number squar diagon jump piec rook bishop captur queen locat squar move queen move exampl input e output explan captur black queen move move white rook imposs captur black queen less move sinc attack piec begin exampl input e output explan captur black queen singl move follow move white rook move white bishop constraint e piec squar ","2232":"0index integ array nums1 nums2 even length must remov element nums1 element nums2 remov insert remain element nums1 nums2 set return maximum possibl size set exampl input nums1 nums2 output explan remov occur nums1 nums2 remov array becom equal nums1 nums2 therefor shown maximum possibl size set remov exampl input nums1 nums2 output explan remov nums1 well occurr nums2 remov array becom equal nums1 nums2 therefor shown maximum possibl size set remov exampl input nums1 nums2 output explan remov nums1 well nums2 remov array becom equal nums1 nums2 therefor shown maximum possibl size set remov constraint nums1length nums2length even nums1i nums2i ","2233":"string integ first allow chang index anoth lowercas english letter follow partit oper empti choos longest prefix contain distinct charact delet prefix increas number partit remain charact maintain initi order return integ denot maximum number result partit oper optim choos index chang exampl input accca output explan optim way chang someth exampl becom acbca perform oper longest prefix contain distinct charact ac remov becom bca longest prefix contain distinct charact remov becom final remov becom empti procedur end oper string divid partit answer exampl input aabaab output explan initi contain distinct charact whichev charact chang contain distinct charact longest prefix distinct charact would alway therefor answer exampl input xxyz output explan optim way chang someth charact exampl chang becom wxyz consist distinct charact divid partit constraint slength consist lowercas english letter ","2234":"array num consist posit integ return total frequenc element num element maximum frequenc frequenc element number occurr element array exampl input num output explan element frequenc maximum frequenc array number element array maximum frequenc exampl input num output explan element array frequenc maximum number element array maximum frequenc constraint numslength numsi ","2235":"0index string string string integ index beauti slength alength sii alength exist index slength blength sjj blength return array contain beauti indic sort order smallest largest exampl input isawsquirrelnearmysquirrelhouseohmi squirrel output explan beauti indic index beauti s1617 exist index s411 squirrel index beauti s3334 exist index s1825 squirrel thu return result exampl input abcd output explan beauti index index beauti exist index thu return result constraint slength alength blength contain lowercas english letter ","2236":"integ integ price number num calcul count set bit posit 2x 3x etc binari represent start least signific bit follow tabl contain exampl price calcul num binari represent price accumul price num total price number num num consid cheap accumul price less equal return greatest cheap number exampl input output explan shown tabl greatest cheap number num binari represent price accumul price exampl input output explan shown tabl greatest cheap number num binari represent price accumul price constraint ","2237":"0index string string string integ index beauti slength alength sii alength exist index slength blength sjj blength return array contain beauti indic sort order smallest largest exampl input isawsquirrelnearmysquirrelhouseohmi squirrel output explan beauti indic index beauti s1617 exist index s411 squirrel index beauti s3334 exist index s1825 squirrel thu return result exampl input abcd output explan beauti index index beauti exist index thu return result constraint slength alength blength contain lowercas english letter ","2238":"array integ num length cost array valu first element exampl cost cost need divid num disjoint contigu subarray return minimum possibl sum cost subarray exampl input num output explan best possibl way form subarray total cost possibl way form subarray total cost total cost exampl input num output explan best possibl way form subarray total cost shown minimum cost achiev exampl input num output explan best possibl way form subarray total cost shown minimum cost achiev constraint numsi ","2239":"0index array posit integ num oper swap adjac element number set bit allow oper number time includ return true sort array els return fals exampl input num output true explan let look binari represent everi element number set bit binari represent respect number set bit binari represent sort array use oper swap nums0 nums1 oper valid set bit array becom swap nums1 nums2 oper valid set bit array becom swap nums0 nums1 oper valid set bit array becom swap nums3 nums4 oper valid set bit array becom array becom sort henc return true note may sequenc oper also sort array exampl input num output true explan array alreadi sort henc return true exampl input num output fals explan shown possibl sort input array use number oper constraint numslength numsi ","2240":"0index integ array num contain posit integ task minim length num perform follow oper number time includ select distinct indic num numsi numsj insert result numsi numsj end num delet element indic num return integ denot minimum length num perform oper number time exampl input num output explan way minim length array follow oper select indic insert nums2 nums1 end becom delet element indic num becom oper select indic insert nums1 nums2 end becom delet element indic num becom oper select indic insert nums1 nums0 end becom delet element indic num becom length num reduc henc answer shown minimum achiev length exampl input num output explan way minim length array follow oper select indic insert nums0 nums3 end becom delet element indic num becom oper select indic insert nums2 nums3 end becom delet element indic num becom oper select indic insert nums0 nums1 end becom delet element indic num becom length num reduc henc answer shown minimum achiev length exampl input num output explan way minim length array follow oper select indic insert nums1 nums2 end becom delet element indic num becom oper select indic insert nums1 nums0 end becom delet element indic num becom length num reduc henc answer shown minimum achiev length constraint numslength numsi ","2241":"0index array integ num length posit integ dist cost array valu first element exampl cost cost need divid num disjoint contigu subarray differ start index second subarray start index kth subarray less equal dist word divid num subarray nums0i1 numsi1i2 numsik1n ik1 dist return minimum possibl sum cost subarray exampl input num dist output explan best possibl way divid num subarray choic valid ik1 equal dist total cost nums0 nums2 nums5 shown possibl way divid num subarray cost lower exampl input num dist output explan best possibl way divid num subarray choic valid ik1 less dist total cost nums0 nums1 nums2 nums3 divis valid differ ik1 greater dist shown possibl way divid num subarray cost lower exampl input num dist output explan best possibl way divid num subarray choic valid ik1 equal distth total cost nums0 nums1 nums2 divis valid differ ik1 greater dist shown possibl way divid num subarray cost lower constraint numsi dist ","2242":"string word contain distinct lowercas english letter telephon keypad key map distinct collect lowercas english letter use form word push exampl key map abc need push key time type time type time type allow remap key number distinct collect letter key remap amount letter letter must map exactli key need find minimum number time key push type string word return minimum number push need type word remap key exampl map letter key telephon keypad note map letter exampl input word abcd output explan remap keypad imag provid minimum cost push key push key push key push key e push key total cost shown map provid lower cost exampl input word xycdefghij output explan remap keypad imag provid minimum cost push key push key push key push key e push key push key push key push key push key push key total cost shown map provid lower cost constraint wordlength word consist lowercas english letter letter word distinct ","2243":"posit integ citi exist hous number connect street street connect hous number hous number addit street connect hous number hous number need find number pair hous house1 house2 minimum number street need travel reach house2 house1 return 1index array result length resultk repres total number pair hous minimum street requir reach hous note equal exampl input output explan let look pair hous pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli exampl input output explan distanc pair pair pair pair pair exampl input output explan distanc pair pair pair pair pair constraint ","2244":"string word contain lowercas english letter telephon keypad key map distinct collect lowercas english letter use form word push exampl key map abc need push key time type time type time type allow remap key number distinct collect letter key remap amount letter letter must map exactli key need find minimum number time key push type string word return minimum number push need type word remap key exampl map letter key telephon keypad note map letter exampl input word abcd output explan remap keypad imag provid minimum cost push key push key push key push key e push key total cost shown map provid lower cost exampl input word xyzxyzxyzxyz output explan remap keypad imag provid minimum cost push key push key push key total cost shown map provid lower cost note key map letter necessari map letter everi key map letter exampl input word aabbccddeeffgghhiiiiii output explan remap keypad imag provid minimum cost push key push key push key push key e push key push key push key push key push key total cost shown map provid lower cost constraint wordlength word consist lowercas english letter ","2245":"posit integ citi exist hous number connect street street connect hous number hous number addit street connect hous number hous number need find number pair hous house1 house2 minimum number street need travel reach house2 house1 return 1index array result length resultk repres total number pair hous minimum street requir reach hous note equal exampl input output explan let look pair hous pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli pair go hous hous directli exampl input output explan distanc pair pair pair pair pair exampl input output explan distanc pair pair pair pair pair constraint ","2246":"0index string type user chang key defin use key differ last use key exampl ab chang key bbbb return number time user chang key note modifi like shift cap lock wont count chang key user type letter letter consid chang key exampl input aabbcc output explan chang key cap lock shift count chang key chang key cap lock shift count chang key chang key cap lock shift count exampl input aaaaaaaa output explan chang key sinc letter press requir chang key constraint slength consist upper case lower case english letter ","2247":"alic bob play turnbas game circular field surround flower circl repres field flower clockwis direct alic bob flower anticlockwis direct game proce follow alic take first turn turn player must choos either clockwis anticlockwis direct pick flower side end turn flower left current player captur oppon win game integ task comput number possibl pair satisfi condit alic must win game accord describ rule number flower clockwis direct must rang number flower anticlockwis direct must rang return number possibl pair satisfi condit mention statement exampl input output explan follow pair satisfi condit describ statement exampl input output explan pair satisfi condit describ statement constraint ","2248":"0index integ array num integ oper pick index num numslength replac numsi numsi singl occurr numsi numsi repres bitwis oper return minimum possibl valu bitwis remain element num appli oper exampl input num output explan let follow oper replac nums0 nums1 nums0 nums1 num becom equal replac nums2 nums3 nums2 nums3 num becom equal bitwiseor final array shown minimum possibl valu bitwis remain element num appli oper exampl input num output explan let follow oper replac nums0 nums1 nums0 nums1 num becom equal replac nums0 nums1 nums0 nums1 num becom equal replac nums0 nums1 nums0 nums1 num becom equal replac nums1 nums2 nums1 nums2 num becom equal bitwiseor final array shown minimum possibl valu bitwis remain element num appli oper exampl input num output explan without appli oper bitwiseor num shown minimum possibl valu bitwis remain element num appli oper constraint numslength numsi numslength ","2249":"0index integ array num size form side triangl triangl call equilater side equal length triangl call isoscel exactli side equal length triangl call scalen side differ length return string repres type triangl form none form triangl exampl input num output equilater explan sinc side equal length therefor form equilater triangl exampl input num output scalen explan nums0 nums1 greater nums2 nums0 nums2 greater nums1 nums1 nums2 greater nums0 sinc sum side greater third side case therefor form triangl side differ length form scalen triangl constraint numslength numsi ","2250":"2d array point size repres integ coordin point 2d plane pointsi xi yi count number pair point upper left side point rectangl line make includ border return count exampl input point output explan way choos upper left side exampl input point output explan left pair points1 points0 points1 upper left side points0 rectangl empti middl pair points2 points1 left valid pair right pair points2 points0 points2 upper left side points0 points1 insid rectangl valid pair exampl input point output explan left pair points2 points0 points2 upper left side points0 point line form note valid state point form line middl pair points1 points2 valid pair left right pair points1 points0 valid pair points2 border rectangl constraint pointsilength pointsi0 pointsi1 pointsi distinct ","2251":"array num length posit integ subarray num call good absolut differ first last element exactli word subarray numsij good numsi numsj return maximum sum good subarray num good subarray return exampl input num output explan absolut differ first last element must good subarray good subarray maximum subarray sum subarray exampl input num output explan absolut differ first last element must good subarray good subarray maximum subarray sum subarray exampl input num output explan absolut differ first last element must good subarray good subarray maximum subarray sum subarray constraint numslength numsi ","2252":"2d array point size repres integ coordin point 2dplane pointsi xi yi defin right direct posit xaxi increas xcoordin left direct neg xaxi decreas xcoordin similarli defin direct posit yaxi increas ycoordin direct neg yaxi decreas ycoordin place peopl includ alic bob point exactli person everi point alic want alon bob alic build rectangular fenc alic posit upper left corner bob posit lower right corner fenc note fenc might enclos area ie line person alic bob either insid fenc fenc alic sad return number pair point place alic bob alic becom sad build fenc note alic build fenc alic posit upper left corner bob posit lower right corner exampl alic build either fenc pictur corner alic bob alic posit upper left corner bob posit lower right corner fenc alic bob bob posit lower right corner fenc exampl input point output explan way place alic bob alic build fenc alic posit upper left corner bob posit lower right corner henc return exampl input point output explan way place alic bob alic sad place alic bob place alic bob place alic bob person insid fenc exampl input point output explan way place alic bob alic sad place alic bob place alic bob place alic bob person fenc note matter fenc enclos area first second fenc imag valid constraint pointsilength pointsi0 pointsi1 pointsi distinct ","2253":"ant boundari sometim goe left sometim right array nonzero integ num ant start read num first element end step move accord valu current element numsi move left numsi unit numsi move right numsi unit return number time ant return boundari note infinit space side boundari check whether ant boundari move numsi unit word ant cross boundari movement count exampl input num output explan first step ant step right boundari second step ant step right boundari third step ant boundari answer exampl input num output explan first step ant step right boundari second step ant step right boundari third step ant step right boundari fourth step ant step left boundari ant never return boundari answer constraint numslength numsi numsi ","2254":"0index string word integ everi second must perform follow oper remov first charact word add charact end word note necessarili need add charact remov howev must perform oper everi second return minimum time greater requir word revert initi state exampl input word abacaba output explan 1st second remov charact aba prefix word add charact bac end word thu word becom equal cababac second remov charact cab prefix word add aba end word thu word becom equal abacaba revert initi state shown second minimum time greater requir word revert initi state exampl input word abacaba output explan 1st second remov charact abac prefix word add charact caba end word thu word becom equal abacaba revert initi state shown second minimum time greater requir word revert initi state exampl input word abcbabcd output explan everi second remov first charact word add charact end word second word becom equal abcbabcd revert initi state shown second minimum time greater requir word revert initi state constraint wordlength wordlength word consist lowercas english letter ","2255":"grid imag repres grayscal imag imageij repres pixel intens rang also nonneg integ threshold pixel adjac share edg region subgrid absolut differ intens adjac pixel less equal threshold pixel region belong region note pixel belong multipl region need calcul grid result resultij averag intens region imageij belong round nearest integ imageij belong multipl region resultij averag roundeddown averag intens region round nearest integ imageij belong region resultij equal imageij return grid result exampl input imag threshold output explan region illustr averag intens first region averag intens second region round averag intens region pixel belong either region region intens everi pixel result pleas note roundeddown valu use calcul averag multipl region henc calcul done use averag intens region exampl input imag threshold output explan region illustr averag intens first region averag intens second region averag intens region round pixel row imag belong region henc pixel row result similarli pixel row result pixel row imag belong region region henc assign valu result exampl input imag threshold output explan subgrid condit differ adjac pixel exampl differ image00 image10 threshold none belong valid region result imag constraint imageij threshold ","2256":"0index integ matrix matrix creat new 0index matrix call answer make answer equal matrix replac element valu maximum element respect column return matrix answer exampl input matrix output explan diagram show element chang blue replac valu cell maximum valu column replac valu cell maximum valu column exampl input matrix output explan diagram show element chang blue constraint matrixlength matrixilength matrixij input gener column contain least nonneg integ ","2257":"0index integ array num size 0index integ array pattern size consist integ subarray numsij size said match pattern follow condit hold element patternk numsi numsi patternk numsi numsi patternk numsi numsi patternk return count subarray num match pattern exampl input num pattern output explan pattern indic look strictli increas subarray size array num subarray match pattern henc subarray num match pattern exampl input num pattern output explan pattern indic look sequenc first number smaller second second equal third third greater fourth array num subarray match pattern henc subarray num match pattern constraint numslength numsi patternlength patterni ","2258":"0index string array word length contain 0index string allow perform follow oper number time includ choos integ wordsilength wordsjlength swap charact wordsix wordsji return integ denot maximum number palindrom word contain perform oper note may equal oper exampl input word abbbbaaa output explan exampl way get maximum number palindrom choos swap words00 words10 word becom bbbbaaaa string word palindrom henc maximum number palindrom achiev exampl input word abcab output explan exampl way get maximum number palindrom choos swap words01 words10 word becom aacbb choos swap words01 words02 word becom acabb string palindrom henc maximum number palindrom achiev exampl input word cdefa output explan exampl need perform oper palindrom word shown possibl get palindrom number oper henc answer constraint wordslength wordsilength wordsi consist lowercas english letter ","2259":"array integ num consid follow oper delet first element num defin score oper sum element perform oper num contain fewer element addit score must achiev oper return maximum number oper perform exampl input num output explan perform first oper score oper num perform second oper score previou oper oper num fewer element cant perform oper exampl input num output explan perform first oper score oper num perform second oper score previou oper oper num perform next oper score differ previou score exampl input num output constraint numslength numsi ","2260":"string consid perform follow oper becom empti everi alphabet charact remov first occurr charact exist exampl let initi aabcbbca follow oper remov underlin charact aabcbbca result string abbca remov underlin charact abbca result string ba remov underlin charact ba result string return valu string right appli last oper exampl answer ba exampl input aabcbbca output ba explan explain statement exampl input abcd output abcd explan follow oper remov underlin charact abcd result string string last oper abcd constraint slength consist lowercas english letter ","2261":"array integ call num perform follow oper num contain least element choos first element num delet choos last element num delet choos first last element num delet score oper sum delet element task find maximum number oper perform oper score return maximum number oper possibl satisfi condit mention exampl input num output explan perform follow oper delet first element score num delet first last element score num delet first last element score num unabl perform oper num empti exampl input num output explan perform follow oper delet first element score num delet last element score num proven perform oper constraint numslength numsi ","2262":"0index array num consist posit integ initi increas valu element array need select element final array element consecut sort increas order exampl element consecut return maximum number element select exampl input num output explan increas element indic result array num select element sort obtain consecut shown select consecut element exampl input num output explan maximum consecut element select constraint numslength numsi ","2263":"0index string array word let defin boolean function isprefixandsuffix take string str1 str2 isprefixandsuffixstr1 str2 return true str1 prefix suffix str2 fals otherwis exampl isprefixandsuffixaba ababa true aba prefix ababa also suffix isprefixandsuffixabc abcd fals return integ denot number index pair isprefixandsuffixwordsi wordsj true exampl input word aabaababaaa output explan exampl count index pair isprefixandsuffixa aba true isprefixandsuffixa ababa true isprefixandsuffixa true isprefixandsuffixaba ababa true therefor answer exampl input word papapamamama output explan exampl count index pair isprefixandsuffixpa papa true isprefixandsuffixma mama true therefor answer exampl input word ababab output explan exampl valid index pair isprefixandsuffixabab ab fals therefor answer constraint wordslength wordsilength wordsi consist lowercas english letter ","2264":"array posit integ arr1 arr2 prefix posit integ integ form digit start leftmost digit exampl prefix integ common prefix integ integ prefix exampl common prefix common prefix need find length longest common prefix pair integ belong arr1 belong arr2 return length longest common prefix among pair common prefix exist among return exampl input arr1 arr2 output explan pair arr1i arr2j longest common prefix longest common prefix longest common prefix longest common prefix length exampl input arr1 arr2 output explan exist common prefix pair arr1i arr2j henc return note common prefix element array count constraint arr1length arr2length arr1i arr2i ","2265":"0index 2d matrix mat everi cell creat number follow way could path cell name east southeast south southwest west northwest north northeast select path append digit path number form travel direct note number gener everi step exampl digit along path number gener along way return frequent prime number greater number creat travers matrix prime number exist multipl prime number highest frequenc return largest among note invalid chang direct move exampl input mat output explan cell possibl direct number greater creat direct east southeast south number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct frequent prime number among creat number exampl input mat output explan number form prime number howev greater return exampl input mat output explan number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct number greater creat cell possibl direct frequent prime number among creat number constraint matlength matilength matij ","2266":"integ array num even length split array part nums1 nums2 nums1length nums2length numslength nums1 contain distinct element nums2 also contain distinct element return true possibl split array fals otherwis exampl input num output true explan possibl way split num nums1 nums2 exampl input num output fals explan possibl way split num nums1 nums2 nums1 nums2 contain distinct element therefor return fals constraint numslength numslength numsi ","2267":"exist rectangl 2d plane edg parallel axi 2d integ array bottomleft topright bottomlefti ai bi toprighti ci di repres bottomleft topright coordin ith rectangl respect need find maximum area squar fit insid intersect region least rectangl return squar exist exampl input bottomleft topright output explan squar side length fit insid either intersect region rectangl intersect region rectangl henc maximum area shown squar greater side length fit insid intersect region rectangl exampl input bottomleft topright output explan squar side length fit insid either intersect region rectangl intersect region rectangl henc maximum area shown squar greater side length fit insid intersect region rectangl exampl input bottomleft topright output explan squar side length fit insid intersect region rectangl also larger squar maximum area note region form intersect rectangl exampl input bottomleft topright output explan pair rectangl intersect henc answer constraint bottomleftlength toprightlength bottomleftilength toprightilength bottomlefti0 bottomlefti1 toprighti0 toprighti1 bottomlefti0 toprighti0 bottomlefti1 toprighti1 ","2268":"1index integ array num changeindic length respect initi indic num unmark task mark indic num second order inclus perform follow oper choos index rang decrement numsi numschangeindicess equal mark index changeindicess noth return integ denot earliest second rang indic num mark choos oper optim imposs exampl input num changeindic output explan exampl second follow oper perform mark indic second choos index decrement nums1 num becom second choos index decrement nums1 num becom second choos index decrement nums2 num becom second choos index decrement nums2 num becom second mark index changeindices5 mark index sinc nums3 equal second mark index changeindices6 mark index sinc nums2 equal second noth second mark index changeindices8 mark index sinc nums1 equal indic mark shown possibl mark indic earlier 8th second henc answer exampl input num changeindic output explan exampl second follow oper perform mark indic second choos index decrement nums2 num becom second choos index decrement nums2 num becom second choos index decrement nums2 num becom second mark index changeindices4 mark index sinc nums2 equal second choos index decrement nums1 num becom second mark index changeindices6 mark index sinc nums1 equal indic mark shown possibl mark indic earlier 6th second henc answer exampl input num changeindic output explan exampl imposs mark indic index isnt changeindic henc answer constraint numslength numsi changeindiceslength changeindicesi ","2269":"1index integ array num changeindic length respect initi indic num unmark task mark indic num second order inclus perform follow oper choos index rang decrement numsi set numschangeindicess nonneg valu choos index rang numsi equal mark index noth return integ denot earliest second rang indic num mark choos oper optim imposs exampl input num changeindic output explan exampl second follow oper perform mark indic second set numschangeindices1 num becom second set numschangeindices2 num becom second set numschangeindices3 num becom second mark index sinc nums1 equal second mark index sinc nums2 equal second mark index sinc nums3 equal indic mark shown possibl mark indic earlier 6th second henc answer exampl input num changeindic output explan exampl second follow oper perform mark indic second mark index sinc nums1 equal second mark index sinc nums2 equal second decrement index num becom second decrement index num becom second decrement index num becom second mark index sinc nums3 equal second mark index sinc nums4 equal indic mark shown possibl mark indic earlier 7th second henc answer exampl input num changeindic output explan exampl shown imposs mark indic dont enough second henc answer constraint numslength numsi changeindiceslength changeindicesi ","2270":"0index integ array num integ oper remov occurr smallest element num return minimum number oper need element array greater equal exampl input num output explan oper num becom equal oper num becom equal oper num becom equal stage element num greater equal stop shown minimum number oper need element array greater equal exampl input num output explan element array greater equal need appli oper num exampl input num output explan singl element num greater equal need appli oper time num constraint numslength numsi input gener least index numsi ","2271":"0index integ array num integ oper take smallest integ num remov num add minx maxx anywher array note appli describ oper num contain least element return minimum number oper need element array greater equal exampl input num output explan first oper remov element add num num becom equal second oper remov element add num num becom equal stage element num greater equal stop shown minimum number oper need element array greater equal exampl input num output explan oper num becom equal oper num becom equal oper num becom equal oper num becom equal stage element num greater stop shown minimum number oper need element array greater equal constraint numslength numsi input gener answer alway exist exist sequenc oper element array greater equal ","2272":"unroot weight tree vertic repres server number array edg edgesi ai bi weighti repres bidirect edg vertic ai bi weight weighti also integ signalspe server connect server distanc divis signalspe distanc divis signalspe path path share edg return integ array count length counti number server pair connect server exampl input edg signalspe output explan sinc signalspe countc equal number pair path start share edg case path graph countc equal number server left multipli server right exampl input edg signalspe output explan server pair connect server server pair connect server shown server connect server constraint edgeslength edgesilength ai bi edgesi ai bi weighti weighti signalspe input gener edg repres valid tree ","2273":"exist undirect tree node number 0index 2d integ array edg length edgesi ui vi indic edg node ui vi tree also posit integ 0index array nonneg integ num length numsi repres valu node number alic want sum valu tree node maximum alic perform follow oper number time includ tree choos edg u connect node u updat valu follow numsu numsu numsv numsv return maximum possibl sum valu alic achiev perform oper number time exampl input num edg output explan alic achiev maximum sum use singl oper choos edg nums0 nums2 becom array num becom total sum valu shown maximum achiev sum valu exampl input num edg output explan alic achiev maximum sum use singl oper choos edg nums0 becom nums1 becom array num becom total sum valu shown maximum achiev sum valu exampl input num edg output explan maximum achiev sum achiev alic perform oper constraint numslength numsi edgeslength edgesilength edgesi0 edgesi1 input gener edg repres valid tree ","2274":"1index array distinct integ num length need distribut element num array arr1 arr2 use oper first oper append nums1 arr1 second oper append nums2 arr2 afterward ith oper last element arr1 greater last element arr2 append numsi arr1 otherwis append numsi arr2 array result form concaten array arr1 arr2 exampl arr1 arr2 result return array result exampl input num output explan first oper arr1 arr2 3rd oper last element arr1 greater last element arr2 append nums3 arr1 oper arr1 arr2 henc array result form concaten exampl input num output explan first oper arr1 arr2 3rd oper last element arr1 greater last element arr2 append nums3 arr1 henc arr1 becom 4th oper last element arr2 greater last element arr1 append nums4 arr2 henc arr2 becom oper arr1 arr2 henc array result form concaten constraint numsi element num distinct ","2275":"1index array integ num length defin function greatercount greatercountarr val return number element arr strictli greater val need distribut element num array arr1 arr2 use oper first oper append nums1 arr1 second oper append nums2 arr2 afterward ith oper greatercountarr1 numsi greatercountarr2 numsi append numsi arr1 greatercountarr1 numsi greatercountarr2 numsi append numsi arr2 greatercountarr1 numsi greatercountarr2 numsi append numsi array lesser number element still tie append numsi arr1 array result form concaten array arr1 arr2 exampl arr1 arr2 result return integ array result exampl input num output explan first oper arr1 arr2 3rd oper number element greater array also length equal henc append nums3 arr1 4th oper number element greater array length arr2 lesser henc append nums4 arr2 oper arr1 arr2 henc array result form concaten exampl input num output explan first oper arr1 arr2 3rd oper number element greater array also length equal henc append nums3 arr1 4th oper number element greater greater arr1 arr2 henc append nums4 arr1 5th oper number element greater greater arr1 arr2 henc append nums5 arr1 oper arr1 arr2 henc array result form concaten exampl input num output explan end oper arr1 arr2 henc array result form concaten constraint numsi ","2276":"array appl size array capac size pack ith pack contain applei appl box well ith box capac capacityi appl return minimum number box need select redistribut pack appl box note appl pack distribut differ box exampl input appl capac output explan use box capac possibl distribut appl total capac greater equal total number appl exampl input appl capac output explan need use box constraint applelength capacitylength applei capacityi input gener possibl redistribut pack appl box ","2277":"array arr size consist nonempti string find string array answer size answeri shortest substr arri occur substr string arr multipl substr exist answeri lexicograph smallest substr exist answeri empti string return array answer exampl input arr cabadbadc output abba explan follow string cab shortest substr occur string either ca ab choos lexicograph smaller substr ab string ad substr occur string string bad shortest substr occur string ba string substr occur string exampl input arr abcbcdabcd output abcd explan follow string abc substr occur string string bcd substr occur string string abcd shortest substr occur string abcd constraint arrlength arrilength arri consist lowercas english letter ","2278":"array integ num length posit odd integ select exactli disjoint subarray sub1 sub2 subk num last element subi appear first element subi1 k1 goal maxim combin strength strength select subarray defin strength sumsub1 sumsub2 sumsub3 sumsubk1 sumsubk sumsubi sum element ith subarray return maximum possibl strength obtain select exactli disjoint subarray num note chosen subarray dont need cover entir array exampl input num output explan best possibl way select subarray nums02 nums33 nums44 strength calcul follow strength exampl input num output explan possibl way select disjoint subarray nums00 nums11 nums22 nums33 nums44 strength calcul follow strength exampl input num output explan best possibl way select subarray nums00 strength constraint numsi odd ","2279":"integ array num contain posit integ defin function encrypt encryptx replac everi digit largest digit exampl encrypt523 encrypt213 return sum encrypt element exampl input num output explan encrypt element sum encrypt element exampl input num output explan encrypt element sum encrypt element constraint numslength numsi ","2280":"0index array num size consist posit integ also 2d array queri size queriesi indexi ki initi element array unmark need appli queri array order ith queri follow mark element index indexi alreadi mark mark ki unmark element array smallest valu multipl element exist mark one smallest indic less ki unmark element exist mark return array answer size answeri sum unmark element array ith queri exampl input num queri output explan follow queri array mark element index smallest unmark element smallest indic exist mark element num sum unmark element mark element index sinc alreadi mark skip mark smallest unmark element smallest indic mark element num sum unmark element mark element index sinc alreadi mark skip mark smallest unmark element smallest indic exist mark element num sum unmark element exampl input num queri output explan queri mark element index mark smallest element among unmark element mark element num sum unmark element constraint numslength querieslength numsi queriesilength indexi ki ","2281":"string si either lowercas english letter string length contain lowercas english letter defin function costi index number charact equal ti appear ie rang valu sum costi indic exampl string aab cost0 cost1 cost2 henc valu aab task replac occurr lowercas english letter valu minim return string denot modifi string replac occurr multipl string result minimum valu return lexicograph smallest exampl input output abc explan exampl replac occurr make equal abc abc cost0 cost1 cost2 valu abc modif valu cba abz hey among choos lexicograph smallest exampl input output abac explan exampl occurr replac make equal abac abac cost0 cost1 cost2 cost3 valu abac constraint slength si either lowercas english letter ","2282":"integ array num length posit integ power array integ defin number subsequ sum equal return sum power subsequ num sinc answer may larg return modulo exampl input num output explan subsequ num nonzero power subsequ subsequ sum subsequ subsequ sum subsequ subsequ sum subsequ subsequ sum subsequ subsequ sum henc answer exampl input num output explan subsequ num nonzero power subsequ subsequ sum subsequ subsequ sum subsequ subsequ sum henc answer exampl input num output explan exist subsequ sum henc subsequ num power constraint numsi ","2283":"string find substr length also present revers return true substr exist fals otherwis exampl input leetcod output true explan substr ee length also present revers edocteel exampl input abcba output true explan substr length ab cb ba also present revers abcba exampl input abcd output fals explan substr length also present revers constraint slength consist lowercas english letter ","2284":"string charact return total number substr start end exampl input abada output explan substr start end abada abada abada abada abada abada exampl input zzz output explan total substr start end constraint slength lowercas english letter ","2285":"string word integ consid word kspecial freqwordi freqwordj indic string freqx denot frequenc charact word denot absolut valu return minimum number charact need delet make word kspecial exampl input word aabcaba output explan make word 0special delet occurr occurr therefor word becom equal baba freqa freqb exampl input word dabdcbdcdcd output explan make word 2special delet occurr occurr therefor word becom equal bdcbdcdcd freqb freqc freqd exampl input word aaabaaa output explan make word 2special delet occurr therefor word becom equal aaaaaa letter frequenc uniformli constraint wordlength word consist lowercas english letter ","2286":"binari array num length posit integ nonneg integ maxchang alic play game goal alic pick one num use minimum number move game start alic pick index aliceindex rang stand numsaliceindex alic pick numsaliceindex becom count move alic make number move includ move alic must perform exactli follow action select index aliceindex numsj set numsj action perform maxchang time select adjac indic numsx numsi swap valu set numsi numsx aliceindex alic pick move numsi becom return minimum number move requir alic pick exactli one exampl input num maxchang output explan alic pick one move alic perform follow action move stand aliceindex start game alic pick nums1 becom num becom select perform action first type num becom select perform action second type num becom aliceindex alic pick num becom select perform action second type num becom aliceindex alic pick num becom note may possibl alic pick one use sequenc move exampl input num maxchang output explan alic pick one move alic perform follow action move stand aliceindex select perform action first type num becom select perform action second type num becom aliceindex alic pick num becom select perform action first type num becom select perform action second type num becom aliceindex alic pick num becom constraint numsi maxchang maxchang sumnum ","2287":"string return maximum length substr contain occurr charact exampl input bcbbbcba output explan follow substr length contain occurr charact bcbbbcba exampl input aaaa output explan follow substr length contain occurr charact aaaa constraint slength consist lowercas english letter ","2288":"posit integ initi array num perform follow oper array number time possibl choos element array increas valu duplic element array add end array return minimum number oper requir make sum element final array greater equal exampl input output explan follow oper array num increas element time result array num duplic element time result array num sum final array greater equal total number oper perform exampl input output explan sum origin array alreadi greater equal oper need constraint ","2289":"problem involv track frequenc id collect chang time integ array num freq equal length element num repres id correspond element freq indic mani time id ad remov collect step addit id freqi posit mean freqi id valu numsi ad collect step remov id freqi neg mean freqi id valu numsi remov collect step return array an length ansi repres count frequent id collect ith step collect empti step ansi step exampl input num freq output explan step id valu ans0 step id valu id valu ans1 step id valu ans2 step id valu id valu ans3 exampl input num freq output explan step id valu ans0 step id ans1 step id valu ans2 constraint numslength freqlength numsi freqi freqi input gener occurr id neg step ","2290":"array string wordscontain wordsqueri wordsqueryi need find string wordscontain longest common suffix wordsqueryi string wordscontain share longest common suffix find string smallest length string smallest length find occur earlier wordscontain return array integ an ansi index string wordscontain longest common suffix wordsqueryi exampl input wordscontain abcdbcdxbcd wordsqueri cdbcdxyz output explan let look wordsqueryi separ wordsquery0 cd string wordscontain share longest common suffix cd indic among answer string index shortest length wordsquery1 bcd string wordscontain share longest common suffix bcd indic among answer string index shortest length wordsquery2 xyz string wordscontain share common suffix henc longest common suffix share string index among answer string index shortest length exampl input wordscontain abcdefghpoiuyghghghgh wordsqueri ghacbfghacbfegh output explan let look wordsqueryi separ wordsquery0 gh string wordscontain share longest common suffix gh indic among answer string index shortest length wordsquery1 acbfgh string index share longest common suffix fgh henc answer even though string index shorter wordsquery2 acbfegh string wordscontain share longest common suffix gh indic among answer string index shortest length constraint wordscontainerlength wordsquerylength wordscontainerilength wordsqueryilength wordscontaineri consist lowercas english letter wordsqueryi consist lowercas english letter sum wordscontainerilength sum wordsqueryilength ","2291":"array num nonneg integ integ array call special bitwis element least return length shortest special nonempti subarray num return special subarray exist exampl input num output explan subarray valu henc return exampl input num output explan subarray valu henc return exampl input num output explan subarray valu henc return constraint numslength numsi ","2292":"binari array possibl length alic bob play game consist level level game imposs clear other alway clear particular possiblei ith level imposs clear player player gain point clear level lose point player fail clear start game alic play level order start 0th level bob play rest level alic want know minimum number level play gain point bob player play optim maxim point return minimum number level alic play gain point possibl return note player must play least level exampl input possibl output explan let look level alic play alic play level bob play rest level alic point bob point alic play till level bob play rest level alic point bob point alic play till level bob play rest level alic point bob point alic must play minimum level gain point exampl input possibl output explan let look level alic play alic play level bob play rest level alic point bob point alic play till level bob play rest level alic point bob point alic play till level bob play rest level alic point bob point alic play till level bob play rest level alic point bob point alic must play minimum level gain point exampl input possibl output explan possibl way player play level alic play level lose point bob play level lose point player equal point alic cant gain point bob constraint possiblelength possiblei either ","2293":"array num nonneg integ integ array call special bitwis element least return length shortest special nonempti subarray num return special subarray exist exampl input num output explan subarray valu henc return exampl input num output explan subarray valu henc return exampl input num output explan subarray valu henc return constraint numslength numsi ","2294":"integ array num length posit integ power subsequ defin minimum absolut differ element subsequ return sum power subsequ num length equal sinc answer may larg return modulo exampl input num output explan subsequ num length sum power exampl input num output explan subsequ num length sum power exampl input num output explan subsequ num length sum power constraint numslength numsi ","2295":"integ divis sum digit said harshad number integ return sum digit harshad number otherwis return exampl input output explan sum digit divis harshad number answer exampl input output explan sum digit divis harshad number answer constraint ","2296":"integ numbottl numexchang numbottl repres number full water bottl initi oper perform follow oper drink number full water bottl turn empti bottl exchang numexchang empti bottl full water bottl increas numexchang note exchang multipl batch empti bottl valu numexchang exampl numbottl numexchang exchang empti water bottl full bottl return maximum number water bottl drink exampl input numbottl numexchang output explan tabl show number full water bottl empti water bottl valu numexchang number bottl drunk exampl input numbottl numexchang output explan tabl show number full water bottl empti water bottl valu numexchang number bottl drunk constraint numbottl numexchang ","2297":"binari array num call subarray altern adjac element subarray valu return number altern subarray num exampl input num output explan follow subarray altern exampl input num output explan everi subarray array altern possibl subarray choos constraint numslength numsi either ","2298":"array point repres integ coordin point 2d plane pointsi xi yi distanc point defin manhattan distanc return minimum possibl valu maximum distanc point remov exactli point exampl input point output explan maximum distanc remov point follow remov 0th point maximum distanc point remov 1st point maximum distanc point remov point maximum distanc point remov 3rd point maximum distanc point minimum possibl maximum distanc point remov exactli point exampl input point output explan remov point result maximum distanc point constraint pointslength pointsilength pointsi0 pointsi1 ","2299":"array integ num return length longest subarray num either strictli increas strictli decreas exampl input num output explan strictli increas subarray num strictli decreas subarray num henc return exampl input num output explan strictli increas subarray num strictli decreas subarray num henc return exampl input num output explan strictli increas subarray num strictli decreas subarray num henc return constraint numslength numsi ","2300":"string integ defin function distances1 string length sum minimum distanc s1i s2i charact place cyclic order rang exampl distanceab cd distancea chang letter lowercas english letter number time return string denot lexicograph smallest string get chang distanc exampl input zbbz output aaaz explan chang aaaz distanc zbbz aaaz equal exampl input xaxcd output aawcd explan distanc xaxcd aawcd equal exampl input lol output lol explan imposs chang charact constraint slength consist lowercas english letter ","2301":"integ array num nonneg integ oper increas decreas element return minimum number oper need make median num equal median array defin middl element array sort nondecreas order choic median larger valu taken exampl input num output explan subtract nums1 nums4 obtain median result array equal exampl input num output explan add nums1 twice add nums2 obtain exampl input num output explan median array alreadi equal constraint numslength numsi ","2302":"undirect weight graph vertic label integ array edg edgesi ui vi wi indic edg vertic ui vi weight wi walk graph sequenc vertic edg walk start end vertex edg connect vertex come vertex come import note walk may visit edg vertex cost walk start node u end node defin bitwis weight edg travers walk word sequenc edg weight encount walk cost calcul denot bitwis oper also 2d array queri queryi si ti queri need find minimum cost walk start vertex si end vertex ti exist walk answer return array answer answeri denot minimum cost walk queri exampl input edg queri output explan achiev cost first queri need move follow edg weight weight weight weight second queri walk node answer exampl input edg queri output explan achiev cost first queri need move follow edg weight weight weight constraint edgeslength edgesilength ui vi ui vi wi querylength queryilength si ti si ti ","2303":"string score string defin sum absolut differ ascii valu adjac charact return score exampl input hello output explan ascii valu charact e score would exampl input zaz output explan ascii valu charact score would constraint slength consist lowercas english letter ","2304":"2d integ array point pointsi xi yi also integ task cover point rectangl rectangl lower end point x1 upper end point x2 y2 x1 x2 y2 condit x2 x1 must satisfi rectangl point consid cover rectangl lie within boundari rectangl return integ denot minimum number rectangl need point cover least rectangl note point may cover rectangl exampl input point output explan imag show possibl placement rectangl cover point rectangl lower end upper end rectangl lower end upper end exampl input point output explan imag show possibl placement rectangl cover point rectangl lower end upper end rectangl lower end upper end rectangl lower end upper end exampl input point output explan imag show possibl placement rectangl cover point rectangl lower end upper end rectangl lower end upper end constraint pointslength pointsilength xi pointsi0 yi pointsi1 pair xi yi distinct ","2305":"undirect graph node 2d array edg edgesi ui vi lengthi describ edg node ui node vi travers time lengthi unit addit array disappear disappeari denot time node disappear graph wont abl visit note graph might disconnect might contain multipl edg return array answer answeri denot minimum unit time requir reach node node node unreach node answeri exampl input edg disappear output explan start journey node goal find minimum time requir reach node disappear node dont need time start point node need least unit time travers edges0 unfortun disappear moment wont abl visit node need least unit time travers edges2 exampl input edg disappear output explan start journey node goal find minimum time requir reach node disappear node dont need time start point node need least unit time travers edges0 node need least unit time travers edges0 edges1 exampl input edg disappear output explan exactli reach node disappear constraint edgeslength edgesi ui vi lengthi ui vi lengthi disappearlength disappeari ","2306":"array posit integ num return number subarray num first last element subarray equal largest element subarray exampl input num output explan subarray first last element equal largest element subarray subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also henc return exampl input num output explan subarray first last element equal largest element subarray subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also subarray largest element first element last element also henc return exampl input num output explan singl subarray num largest element first element last element also henc return constraint numslength numsi ","2307":"string repres 12hour format time digit possibl none replac 12hour time format hhmm earliest 12hour time latest replac charact digit time obtain result string valid 12hour format time latest possibl return result string exampl input output explan latest 12hour format time achiev replac charact exampl input output explan latest 12hour format time achiev replac charact constraint slength equal charact charact except digit charact input gener least time obtain replac charact ","2308":"integ array num return integ maximum distanc indic necessarili differ prime number num exampl input num output explan nums1 nums3 nums4 prime answer exampl input num output explan nums2 prime prime number answer constraint numslength numsi input gener number prime number num least ","2309":"integ array coin repres coin differ denomin integ infinit number coin denomin howev allow combin coin differ denomin return kth smallest amount made use coin exampl input coin output explan coin make follow amount coin produc multipl etc coin produc multipl etc coin produc multipl etc coin combin produc etc exampl input coin output explan coin make follow amount coin produc multipl etc coin produc multipl etc coin combin produc etc constraint coinslength coinsi coin contain pairwis distinct integ ","2310":"array num andvalu length respect valu array equal last element array divid num disjoint contigu subarray ith subarray li ri bitwis subarray element equal andvaluesi word numsli numsli numsri andvaluesi repres bitwis oper return minimum possibl sum valu subarray num divid possibl divid num subarray satisfi condit return exampl input num andvalu output explan possibl way divid num bitwis singl element subarray element bitwis singl element subarray element bitwis singl element subarray element sum valu subarray exampl input num andvalu output explan way divid num sum valu sum valu sum valu minimum possibl sum valu exampl input num andvalu output explan bitwis entir array num possibl way divid num singl subarray bitwis element return constraint numslength andvalueslength minn numsi andvaluesj ","2311":"string word letter call special appear lowercas uppercas word return number special letter word exampl input word aaabcbc output explan special charact word exampl input word abc output explan charact word appear uppercas exampl input word abbcab output explan special charact word constraint wordlength word consist lowercas uppercas english letter ","2312":"string word letter call special appear lowercas uppercas word everi lowercas occurr appear first uppercas occurr return number special letter word exampl input word aaabcbc output explan special charact exampl input word abc output explan special charact word exampl input word abbcab output explan special charact word constraint wordlength word consist lowercas uppercas english letter ","2313":"2d matrix grid size oper chang valu cell nonneg number need perform oper cell gridij equal cell ie gridij gridi 1j exist differ cell right ie gridij gridij exist return minimum number oper need exampl input grid output explan cell matrix alreadi satisfi properti exampl input grid output explan matrix becom satisfi properti oper chang grid10 chang grid01 chang grid12 exampl input grid output explan singl column chang valu cell use oper constraint gridij ","2314":"undirect weight graph node number graph consist edg repres 2d array edg edgesi ai bi wi indic edg node ai bi weight wi consid shortest path node node graph need find boolean array answer answeri true edg edgesi part least shortest path otherwis answeri fals return array answer note graph may connect exampl input edg output truetruetruefalsetruetruetruefals explan follow shortest path node path sum weight path sum weight path sum weight exampl input edg output truefalsefalsetru explan shortest path node path sum weight constraint edgeslength min5 ai bi ai bi wi repeat edg ","2315":"2d matrix grid size consist charact charact repres white color charact repres black color task chang color cell matrix squar cell color return true possibl creat squar color otherwis return fals exampl input grid bwbbwwbwb output true explan done chang color grid02 exampl input grid bwbwbwbwb output fals explan done chang cell exampl input grid bwbbwwbww output true explan grid alreadi contain squar color constraint gridlength gridilength gridij either ","2316":"2d boolean matrix grid collect element grid right triangl element row anoth element column third element element may next return integ number right triangl made element grid valu exampl input grid output explan right triangl element valu notic blue one form right triangl element column exampl input grid output explan right triangl element valu notic blue one form right triangl exampl input grid output explan right triangl element valu constraint gridlength gridilength gridij ","2317":"posit integ limit binari array arr call stabl number occurr arr exactli number occurr arr exactli subarray arr size greater limit must contain return total number stabl binari array sinc answer may larg return modulo exampl input limit output explan possibl stabl binari array array singl singl subarray length greater exampl input limit output explan possibl stabl binari array note binari array subarray length ident element henc stabl exampl input limit output explan possibl stabl binari array constraint limit ","2318":"posit integ limit binari array arr call stabl number occurr arr exactli number occurr arr exactli subarray arr size greater limit must contain return total number stabl binari array sinc answer may larg return modulo exampl input limit output explan possibl stabl binari array exampl input limit output explan possibl stabl binari array exampl input limit output explan possibl stabl binari array constraint limit ","2319":"array equal length nums1 nums2 element nums1 increas decreas case neg integ repres variabl result nums1 becom equal nums2 array consid equal contain integ frequenc return integ exampl input nums1 nums2 output explan integ ad element nums1 exampl input nums1 nums2 output explan integ ad element nums1 exampl input nums1 nums2 output explan integ ad element nums1 constraint nums1length nums2length nums1i nums2i test case gener way integ nums1 becom equal nums2 ad element nums1 ","2320":"integ array nums1 nums2 nums1 element remov element increas decreas case neg integ repres variabl result nums1 becom equal nums2 array consid equal contain integ frequenc return minimum possibl integ achiev equival exampl input nums1 nums2 output explan remov element indic ad nums1 becom exampl input nums1 nums2 output explan remov element indic ad nums1 becom constraint nums1length nums2length nums1length nums1i nums2i test case gener way integ nums1 becom equal nums2 remov element ad element nums1 ","2321":"integ construct array posit integ num size everi numsi greater numsi result bitwis oper element num return minimum possibl valu numsn exampl input output explan num last element exampl input output explan num last element constraint ","2322":"integ array num uniqu array num sort array contain number distinct element subarray num word sort array consist distinctnumsij numslength distinctnumsij denot number distinct element subarray start index end index return median uniqu array num note median array defin middl element array sort nondecreas order choic median smaller valu taken exampl input num output explan uniqu array num distinctnums00 distinctnums11 distinctnums22 distinctnums01 distinctnums12 distinctnums02 equal uniqu array median therefor answer exampl input num output explan uniqu array num uniqu array median therefor answer exampl input num output explan uniqu array num uniqu array median therefor answer constraint numslength numsi ","2323":"word consid valid contain minimum charact contain digit english letter uppercas lowercas includ least vowel includ least conson string word return true word valid otherwis return fals note e u uppercas vowel conson english letter vowel exampl input word 234ada output true explan word satisfi condit exampl input word output fals explan length word fewer vowel exampl input word output fals explan word contain charact conson constraint wordlength word consist english uppercas lowercas letter digit ","2324":"string word size integ divid oper pick indic divis replac substr length start substr length start replac substr wordii substr wordjj return minimum number oper requir make word kperiod say word kperiod string length word obtain concaten arbitrari number time exampl word ababab word 2period ab exampl input word leetcodeleet output explan obtain 4period string pick oper word becom equal leetleetleet exampl input word leetcoleet output explan obtain 2period string appli oper tabl word etetcoleet etetetleet etetetetet constraint wordlength wordlength divid wordlength word consist lowercas english letter ","2325":"string known concaten anagram string return minimum possibl length string anagram form rearrang letter string exampl aab aba baa anagram aab exampl input abba output explan possibl string could ba exampl input cdef output explan possibl string could cdef notic equal constraint slength lowercas english letter ","2326":"integ array num integ cost1 cost2 allow perform either follow oper number time choos index num increas numsi cost cost1 choos differ indic num increas numsi numsj cost cost2 return minimum cost requir make element array equal sinc answer may larg return modulo exampl input num cost1 cost2 output explan follow oper perform make valu equal increas nums1 cost num becom increas nums1 cost num becom increas nums1 cost num becom total cost exampl input num cost1 cost2 output explan follow oper perform make valu equal increas nums0 nums1 cost num becom increas nums0 nums2 cost num becom increas nums0 nums3 cost num becom increas nums1 nums2 cost num becom increas nums3 cost num becom total cost exampl input num cost1 cost2 output explan follow oper perform make valu equal increas nums0 cost num becom increas nums0 cost num becom increas nums2 cost num becom increas nums2 cost num becom total cost constraint numslength numsi cost1 cost2 ","2327":"2d matrix grid size need check cell gridij equal cell ie gridij gridi 1j exist differ cell right ie gridij gridij exist return true cell satisfi condit otherwis return fals exampl input grid output true explan cell grid satisfi condit exampl input grid output fals explan cell first row equal exampl input grid output fals explan cell first column differ valu constraint gridij ","2328":"2d array point string pointsi repres coordin point si repres tag point valid squar squar center origin edg parallel axe contain point tag return maximum number point contain valid squar note point consid insid squar lie within squar boundari side length squar exampl input point abdca output explan squar side length cover point points0 points1 exampl input point abb output explan squar side length cover point points0 exampl input point ccd output explan imposs make valid squar center origin cover point among points0 points1 constraint slength pointslength pointsilength pointsi0 pointsi1 slength pointslength point consist distinct coordin consist lowercas english letter ","2329":"string need partit balanc substr exampl ababcc abab ab abc ababcc valid partit bab cc aba ab abcc unbalanc substr bold return minimum number substr partit note balanc string string charact string occur number time exampl input fabccddg output explan partit string substr follow way fab ccdd fabc cd exampl input abababaccddb output explan partit string substr like abab abaccddb constraint slength consist english lowercas letter ","2330":"power array nonneg integ defin shortest sort array power sum tabl illustr exampl power array determin proven power array uniqu num binari represent power array array bignum creat concaten power array everi posit integ ascend order thu bignum begin 2d integ matrix queri queriesi toi modi calcul bignumsfromi bignumsfromi bignumstoi modi return integ array answer answeri answer ith queri exampl input queri output explan queri bignums13 product result exampl input queri output explan queri first queri bignums25 product result second queri bignums7 result constraint querieslength queriesilength queriesi0 queriesi1 queriesi2 ","2331":"string everi charact occur permut permut differ defin sum absolut differ index occurr charact index occurr charact return permut differ exampl input abc bac output explan abc bac permut differ equal sum absolut differ index occurr index occurr absolut differ index occurr index occurr absolut differ index occurr index occurr permut differ equal exampl input abcd edbac output explan permut differ equal constraint slength charact occur permut consist lowercas english letter ","2332":"matrix grid consist posit integ move cell matrix cell either bottom right necessarili adjac score move cell valu c1 cell valu c2 c2 c1 start cell make least move return maximum total score achiev exampl input grid output explan start cell perform follow move move cell score move cell score total score exampl input grid output explan start cell perform move score constraint gridlength gridilength gridij ","2333":"array num permut score permut name perm defin scoreperm perm0 numsperm1 perm1 numsperm2 permn numsperm0 return permut perm minimum possibl score multipl permut exist score return lexicograph smallest among exampl input num output explan lexicograph smallest permut minimum cost cost permut exampl input num output explan lexicograph smallest permut minimum cost cost permut constraint numslength num permut ","2334":"array consid special everi pair adjac element contain number differ pariti array integ num return true num special array otherwis return fals exampl input num output true explan element answer true exampl input num output true explan pair contain number differ pariti answer true exampl input num output fals explan nums1 nums2 odd answer fals constraint numslength numsi ","2335":"array consid special everi pair adjac element contain number differ pariti array integ num 2d integ matrix queri queriesi toi task check subarray numsfromitoi special return array boolean answer answeri true numsfromitoi special exampl input num queri output fals explan subarray even exampl input num queri output falsetru explan subarray odd answer queri fals subarray pair contain number differ pariti answer queri true constraint numslength numsi querieslength queriesilength queriesi0 queriesi1 numslength ","2336":"array num consist posit integ integ number digit digit differ integ count differ digit posit integ return sum digit differ pair integ num exampl input num output explan follow digit differ digit differ digit differ total sum digit differ pair integ exampl input num output explan integ array total sum digit differ pair integ constraint numslength numsi integ num number digit ","2337":"nonneg integ exist staircas infinit number stair lowest stair number alic integ jump initi valu start stair want reach stair use number oper stair oper go stair oper use consecut stair go stair 2jump jump becom jump return total number way alic reach stair note possibl alic reach stair perform oper reach stair exampl input output explan possibl way reach stair alic start stair use oper first type goe stair reach stair alic start stair use oper first type goe stair reach stair use oper second type goe stair reach stair use oper first type goe stair reach stair exampl input output explan possibl way reach stair alic start stair alic stair alic start stair use oper first type goe stair reach stair use oper second type goe stair reach stair alic start stair use oper second type goe stair reach stair use oper first type goe stair reach stair alic start stair use oper first type goe stair reach stair use oper second type goe stair reach stair use oper first type goe stair reach stair use oper second type goe stair reach stair use oper first type goe stair reach stair constraint ","2338":"array num number array appear either twice return bitwis number appear twice array number appear twice exampl input num output explan number appear twice num exampl input num output explan number appear twice num exampl input num output explan number appear twice constraint numslength numsi number num appear either twice ","2339":"integ array num integ array queri integ queriesi need find index queriesith occurr num array fewer queriesi occurr answer queri return integ array answer contain answer queri exampl input num queri output explan 1st queri first occurr index queri occurr num answer 3rd queri second occurr index 4th queri occurr num answer exampl input num queri output explan 1st queri doesnt exist num answer constraint numslength querieslength queriesi numsi ","2340":"integ limit 2d array queri size limit ball distinct label rang limit initi ball uncolor everi queri queri form mark ball color queri need find number distinct color among ball return array result length resulti denot number distinct color ith queri note answer queri lack color consid color exampl input limit queri output explan queri ball color queri ball color ball color queri ball color ball color queri ball color ball color ball color exampl input limit queri output explan queri ball color queri ball color ball color queri ball color ball color queri ball color ball color ball color queri ball color ball color ball color ball color constraint limit querieslength queriesilength queriesi0 limit queriesi1 ","2341":"exist infinit number line origin extend toward posit xaxi 2d array queri contain type queri queri type queriesi build obstacl distanc origin guarante obstacl distanc queri ask queri type queriesi check possibl place block size anywher rang line block entir lie rang block place intersect obstacl may touch note actual place block queri separ return boolean array result resultsi true place block specifi ith queri type fals otherwis exampl input queri output falsetruetru explan queri place obstacl block size place exampl input queri output truetruefals explan place obstacl queri block size place place obstacl queri block size place block size constraint querieslength queriesilength queriesi0 min5 querieslength input gener queri type obstacl exist distanc queri ask input gener least queri type ","2342":"integ array nums1 nums2 length respect also posit integ pair call good nums1i divis nums2j return total number good pair exampl input nums1 nums2 output explan good pair exampl input nums1 nums2 output explan good pair constraint nums1i nums2j ","2343":"string word compress use follow algorithm begin empti string comp word empti use follow oper remov maximum length prefix word made singl charact repeat time append length prefix follow comp return string comp exampl input word abcd output 1a1b1c1d1 explan initi comp appli oper time choos e prefix oper prefix append follow charact comp exampl input word aaaaaaaaaaaaaabb output 9a5a2b explan initi comp appli oper time choos aaaaaaaaa aaaaa prefix oper prefix aaaaaaaaa append follow comp prefix aaaaa append follow comp prefix append follow comp constraint wordlength word consist lowercas english letter ","2344":"integ array nums1 nums2 length respect also posit integ pair call good nums1i divis nums2j return total number good pair exampl input nums1 nums2 output explan good pair exampl input nums1 nums2 output explan good pair constraint nums1i nums2j ","2345":"array num consist integ also 2d array queri queriesi posi xi queri first set numsposi equal xi calcul answer queri maximum sum subsequ num adjac element select return sum answer queri sinc final answer may larg return modulo subsequ array deriv anoth array delet element without chang order remain element exampl input num queri output explan 1st queri num maximum sum subsequ nonadjac element queri num maximum sum subsequ nonadjac element exampl input num queri output explan 1st queri num maximum sum subsequ nonadjac element choos empti subsequ constraint numslength numsi querieslength queriesi posi xi posi numslength xi ","2346":"string simul event second si e person enter wait room take chair si person leav wait room free chair return minimum number chair need chair avail everi person enter wait room initi empti exampl input eeeeeee output explan second person enter wait room person leav therefor minimum chair need exampl input eleleel output explan let consid chair wait room tabl show state wait room second second event peopl wait room avail chair enter leav enter leav enter enter leav exampl input eleeleell output explan let consid chair wait room tabl show state wait room second second event peopl wait room avail chair enter leav enter enter leav enter enter leav leav leav constraint slength consist letter e repres valid sequenc entri exit ","2347":"posit integ day repres total number day employe avail work start day also 2d array meet size meetingsi starti endi repres start end day meet inclus return count day employe avail work meet schedul note meet may overlap exampl input day meet output explan meet schedul 4th 8th day exampl input day meet output explan meet schedul 5th day exampl input day meet output explan meet schedul work day constraint day meetingslength meetingsilength meetingsi0 meetingsi1 day ","2348":"string may contain number charact task remov charact follow oper delet leftmost smallest non charact left sever smallest charact delet return lexicograph smallest result string remov charact exampl input aaba output aab explan delet charact choos becom lexicograph smallest exampl input abc output abc explan string constraint slength consist lowercas english letter input gener possibl delet charact ","2349":"string task remov digit oper repeatedli delet first digit closest nondigit charact left return result string remov digit exampl input abc output abc explan digit string exampl input cb34 output explan first appli oper becom c4 appli oper becom constraint slength consist lowercas english letter digit input gener possibl delet digit ","2350":"competit consist player number integ array skill size posit integ skillsi skill level player integ skill uniqu player stand queue order player player competit process follow first player queue play game player higher skill level win game winner stay begin queue loser goe end winner competit first player win game row return initi index win player exampl input skill output explan initi queue player follow process happen player play game sinc skill player higher player player win result queue player play game sinc skill player higher player player win result queue player play game sinc skill player higher player player win result queue player game row winner player exampl input skill output explan initi queue player follow process happen player play game sinc skill player higher player player win result queue player play game sinc skill player higher player player win result queue player play game sinc skill player higher player player win result queue player game row winner player constraint skillslength skillsi integ skill uniqu ","2351":"integ array num nonneg integ sequenc integ seq call good indic rang seqlength seqi seqi return maximum possibl length good subsequ num exampl input num output explan maximum length subsequ exampl input num output explan maximum length subsequ constraint numslength numsi minnumslength ","2352":"integ array num nonneg integ sequenc integ seq call good indic rang seqlength seqi seqi return maximum possibl length good subsequ num exampl input num output explan maximum length subsequ exampl input num output explan maximum length subsequ constraint numslength numsi min50 numslength ","2353":"posit integ children number stand queue order left right initi child hold ball direct pass ball toward right direct second child hold ball pass child next ball reach either end line ie child child direct pass revers return number child receiv ball second exampl input output explan time elaps children exampl input output explan time elaps children exampl input output explan time elaps children constraint note question pass pillow ","2354":"integ initi start array integ ai second simultan updat element sum preced element plu element exampl second remain becom becom return valu second sinc answer may larg return modulo exampl input output explan second state exampl input output explan second state constraint ","2355":"integ array rewardvalu length repres valu reward initi total reward indic unmark allow perform follow oper number time choos unmark index rang rewardvaluesi greater current total reward add rewardvaluesi ie rewardvaluesi mark index return integ denot maximum total reward collect perform oper optim exampl input rewardvalu output explan oper choos mark indic order total reward maximum exampl input rewardvalu output explan mark indic order total reward maximum constraint rewardvalueslength rewardvaluesi ","2356":"integ array rewardvalu length repres valu reward initi total reward indic unmark allow perform follow oper number time choos unmark index rang rewardvaluesi greater current total reward add rewardvaluesi ie rewardvaluesi mark index return integ denot maximum total reward collect perform oper optim exampl input rewardvalu output explan oper choos mark indic order total reward maximum exampl input rewardvalu output explan mark indic order total reward maximum constraint rewardvalueslength rewardvaluesi ","2357":"integ array hour repres time hour return integ denot number pair hoursi hoursj form complet day complet day defin time durat exact multipl hour exampl day hour day hour day hour exampl input hour output explan pair indic form complet day exampl input hour output explan pair indic form complet day constraint hourslength hoursi ","2358":"integ array hour repres time hour return integ denot number pair hoursi hoursj form complet day complet day defin time durat exact multipl hour exampl day hour day hour day hour exampl input hour output explan pair indic form complet day exampl input hour output explan pair indic form complet day constraint hourslength hoursi ","2359":"magician variou spell array power element repres damag spell multipl spell damag valu known fact magician decid cast spell damag poweri cast spell damag poweri poweri poweri poweri spell cast return maximum possibl total damag magician cast exampl input power output explan maximum possibl damag produc cast spell damag exampl input power output explan maximum possibl damag produc cast spell damag constraint powerlength poweri ","2360":"peak array arr element greater previou next element arr integ array num 2d integ array queri process queri type queriesi li ri determin count peak element subarray numsliri queriesi indexi vali chang numsindexi vali return array answer contain result queri first type order note first last element array subarray peak exampl input num queri output explan first queri chang nums3 num becom second queri number peak exampl input num queri output explan first queri nums2 becom alreadi set second queri number peak third queri second peak constraint numslength numsi querieslength queriesi0 queriesi0 queriesi0 queriesi1 queriesi2 numslength queriesi0 queriesi1 numslength queriesi2 ","2361":"integ array num oper add subtract element num return minimum number oper make element num divis exampl input num output explan array element made divis use oper subtract add subtract exampl input num output constraint numslength numsi ","2362":"binari array num follow oper array number time possibl choos consecut element array flip flip element mean chang valu return minimum number oper requir make element num equal imposs return exampl input num output explan follow oper choos element indic result array num choos element indic result array num choos element indic result array num exampl input num output explan imposs make element equal constraint numslength numsi ","2363":"binari array num follow oper array number time possibl choos index array flip element index end array flip element mean chang valu return minimum number oper requir make element num equal exampl input num output explan follow oper choos index result array num choos index result array num choos index result array num choos index result array num exampl input num output explan follow oper choos index result array num constraint numslength numsi ","2364":"integ 2d array requir requirementsi endi cnti repres end index invers count requir pair indic integ array num call invers numsi numsj return number permut perm requirementsi perm0endi exactli cnti invers sinc answer may larg return modulo exampl input requir output explan permut prefix invers prefix invers prefix invers prefix invers exampl input requir output explan satisfi permut prefix invers prefix invers prefix invers exampl input requir output explan satisfi permut prefix invers prefix invers constraint requirementslength requirementsi endi cnti endi cnti input gener least endi input gener endi uniqu ","2365":"array float point number averag initi empti array num integ even repeat follow procedur time remov smallest element minel largest element maxel num add minel maxel averag return minimum element averag exampl input num output explan step num averag smallest element averag return exampl input num output explan step num averag exampl input num output explan step num averag constraint numslength even numsi ","2366":"2d binari array grid find rectangl horizont vertic side smallest area grid lie insid rectangl return minimum possibl area rectangl exampl input grid output explan smallest rectangl height width area exampl input grid output explan smallest rectangl height width area constraint gridlength gridilength gridij either input gener least grid ","2367":"integ array num length cost subarray numslr defin costl numsl numsl numsr task split num subarray total cost subarray maxim ensur element belong exactli subarray formal num split subarray indic ik ik total cost cost0 costi1 costik return integ denot maximum total cost subarray split array optim note num split subarray ie total cost simpli cost0 exampl input num output explan way maxim total cost split subarray total cost exampl input num output explan way maxim total cost split subarray total cost exampl input num output explan split array answer exampl input num output explan select whole array give total cost maximum constraint numslength numsi ","2368":"2d binari array grid need find nonoverlap rectangl nonzero area horizont vertic side grid lie insid rectangl return minimum possibl sum area rectangl note rectangl allow touch exampl input grid output explan cover rectangl area cover rectangl area cover rectangl area exampl input grid output explan cover rectangl area cover rectangl area cover rectangl area constraint gridlength gridilength gridij either input gener least grid ","2369":"integ red blue repres count red blue color ball arrang ball form triangl 1st row ball row ball 3rd row ball ball particular row color adjac row differ color return maximum height triangl achiev exampl input red blue output explan possibl arrang shown exampl input red blue output explan possibl arrang shown exampl input red blue output exampl input red blue output explan possibl arrang shown constraint red blue ","2370":"integ array num posit integ subsequ sub num length call valid satisfi sub0 sub1 sub1 sub2 subx subx return length longest valid subsequ num exampl input num output explan longest valid subsequ exampl input num output explan longest valid subsequ constraint numslength numsi ","2371":"circl red blue tile array integ color color tile repres colorsi colorsi mean tile red colorsi mean tile blue everi contigu tile circl altern color middl tile differ color left right tile call altern group return number altern group note sinc color repres circl first last tile consid next exampl input color output explan exampl input color output explan altern group constraint colorslength colorsi ","2372":"integ array enemyenergi denot energi valu variou enemi also integ currentenergi denot amount energi initi start point enemi unmark initi perform either follow oper multipl time gain point choos unmark enemi currentenergi enemyenergiesi choos option gain point energi reduc enemi energi ie currentenergi currentenergi enemyenergiesi least point choos unmark enemi choos option energi increas enemi energi ie currentenergi currentenergi enemyenergiesi enemi mark return integ denot maximum point get end optim perform oper exampl input enemyenergi currentenergi output explan follow oper perform get point maximum first oper enemi point increas currentenergi decreas point currentenergi second oper enemi currentenergi increas enemi mark point currentenergi mark enemi first oper enemi point increas currentenergi decreas point currentenergi mark enemi second oper enemi currentenergi increas enemi mark point currentenergi mark enemi first oper enemi point increas currentenergi decreas point currentenergi mark enemi exampl input enemyenergi currentenergi output explan perform first oper time enemi result maximum number point constraint enemyenergieslength enemyenergiesi currentenergi ","2373":"circl red blue tile array integ color integ color tile repres colorsi colorsi mean tile red colorsi mean tile blue altern group everi contigu tile circl altern color tile group except first last differ color left right tile return number altern group note sinc color repres circl first last tile consid next exampl input color output explan altern group exampl input color output explan altern group exampl input color output explan constraint colorslength colorsi colorslength ","2374":"array integ num integ return number subarray num bitwis element subarray equal exampl input num output explan subarray contain exampl input num output explan subarray valu exampl input num output explan subarray valu constraint numslength numsi ","2375":"string integ encrypt string use follow algorithm charact replac kth charact string cyclic manner return encrypt string exampl input dart output tdar explan 3rd charact 3rd charact 3rd charact 3rd charact exampl input aaa output aaa explan charact encrypt string also constraint slength consist lowercas english letter ","2376":"posit integ binari string valid substr length contain least return valid string length order exampl input output explan valid string length exampl input output explan valid string length constraint ","2377":"2d charact matrix grid gridij either return number submatric contain grid00 equal frequenc least exampl input grid xyy output explan exampl input grid xxxi output explan submatrix equal frequenc exampl input grid output explan submatrix least constraint gridlength gridilength gridij either ","2378":"string target array string word integ array cost array length imagin empti string perform follow oper number time includ choos index rang wordslength append wordsi cost oper costsi return minimum cost make equal target possibl return exampl input target abcdef word abdefabcddefef cost output explan minimum cost achiev perform follow oper select index append abc cost result abc select index append cost result abcd select index append ef cost result abcdef exampl input target aaaa word zzzzzz cost output explan imposs make equal target return constraint targetlength wordslength costslength wordsilength targetlength total sum wordsilength less equal target wordsi lowercas english letter costsi ","2379":"string contain digit return lexicograph smallest string obtain swap adjac digit pariti digit pariti odd even exampl well pariti exampl input output explan pariti swap result lexicograph smallest string exampl input output explan need perform swap alreadi lexicograph smallest constraint slength consist digit ","2380":"array integ num head link list return head modifi link list remov node link list valu exist num exampl input num head output explan remov node valu exampl input num head output explan remov node valu exampl input num head output explan node valu constraint numslength numsi element num uniqu number node list rang nodev input gener least node link list valu present num ","2381":"cake need cut piec integ array horizontalcut size horizontalcuti repres cost cut along horizont line verticalcut size verticalcutj repres cost cut along vertic line oper choos piec cake yet squar perform follow cut cut along horizont line cost horizontalcuti cut along vertic line cost verticalcutj cut piec cake divid distinct piec cost cut depend initi cost line chang return minimum total cost cut entir cake piec exampl input horizontalcut verticalcut output explan perform cut vertic line cost current total cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost total cost exampl input horizontalcut verticalcut output explan perform cut horizont line cost perform cut vertic line subgrid cost perform cut vertic line subgrid cost total cost constraint horizontalcutlength verticalcutlength horizontalcuti verticalcuti ","2382":"cake need cut piec integ array horizontalcut size horizontalcuti repres cost cut along horizont line verticalcut size verticalcutj repres cost cut along vertic line oper choos piec cake yet squar perform follow cut cut along horizont line cost horizontalcuti cut along vertic line cost verticalcutj cut piec cake divid distinct piec cost cut depend initi cost line chang return minimum total cost cut entir cake piec exampl input horizontalcut verticalcut output explan perform cut vertic line cost current total cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost perform cut horizont line subgrid cost total cost exampl input horizontalcut verticalcut output explan perform cut horizont line cost perform cut vertic line subgrid cost perform cut vertic line subgrid cost total cost constraint horizontalcutlength verticalcutlength horizontalcuti verticalcuti ","2383":"sql schema panda schema ","2384":"posit integ denot number coin valu respect alic bob play game turn start alic player must pick coin total valu player unabl lose game return name player win game player play optim exampl input output alic explan game end singl turn alic pick coin valu coin valu exampl input output bob explan game end turn alic pick coin valu coin valu bob pick coin valu coin valu constraint ","2385":"integ array num size even integ perform chang array chang replac element array integ rang need perform chang possibl none final array satisfi follow condit exist integ absai return minimum number chang requir satisfi condit exampl input num output explan perform follow chang replac nums1 result array num replac nums3 result array num integ exampl input num output explan perform follow oper replac nums3 result array num replac nums4 result array num integ constraint numslength even numsi ","2386":"posit integ choos bit binari represent equal chang return number chang need make equal imposs return exampl input output explan initi binari represent chang first fourth bit result integ exampl input output explan alreadi equal chang need exampl input output explan possibl make equal constraint ","2387":"alic bob play game string string alic bob take turn play follow game alic start first alic turn remov nonempti substr contain odd number vowel bob turn remov nonempti substr contain even number vowel first player make move turn lose game assum alic bob play optim return true alic win game fals otherwis english vowel e u exampl input leetcod output true explan alic win game follow alic play first delet underlin substr leetcod contain vowel result string der bob play second delet underlin substr der contain vowel result string er alic play third delet whole string er contain vowel bob play fourth sinc string empti valid play bob alic win game exampl input bbcd output fals explan valid play alic first turn alic lose game constraint slength consist lowercas english letter ","2388":"binari string perform follow oper string number time choos index string slength si si move charact si right reach end string anoth exampl choos result string return maximum number oper perform exampl input output explan perform follow oper choos index result string choos index result string choos index result string choos index result string exampl input output constraint slength si either ","2389":"posit integ array num target length singl oper select subarray num increment element within subarray decrement element within subarray return minimum number oper requir make num equal array target exampl input num target output explan perform follow oper make num equal target increment nums03 num increment nums33 num exampl input num target output explan perform follow oper make num equal target increment nums00 num decrement nums11 num decrement nums11 num increment nums22 num increment nums22 num constraint numslength targetlength numsi targeti ","2390":"array posit integ num alic bob play game game alic choos either singledigit number doubledigit number num rest number bob alic win sum number strictli greater sum bob number return true alic win game otherwis return fals exampl input num output fals explan alic win choos either singledigit doubledigit number exampl input num output true explan alic win choos singledigit number sum equal exampl input num output true explan alic win choos doubledigit number sum equal constraint numslength numsi ","2391":"posit integ number posit divisor except call proper divisor number call special exactli proper divisor exampl number special proper divisor number special proper divisor return count number rang special exampl input output explan special number rang exampl input output explan special number rang constraint ","2392":"binari string return number substr domin one string domin one number one string greater equal squar number zero string exampl input output explan substr domin one shown tabl sij number zero number one exampl input output explan substr nondomin one shown tabl sinc substr total nondomin one follow substr domin one sij number zero number one constraint slength consist charact ","2393":"posit integ xcorner ycorner 2d array circl circlesi xi yi ri denot circl center xi yi radiu ri rectangl coordin plane bottom left corner origin top right corner coordin xcorner ycorner need check whether path bottom left corner top right corner entir path lie insid rectangl touch lie insid circl touch rectangl corner return true path exist fals otherwis exampl input xcorner ycorner circl output true explan black curv show possibl path exampl input xcorner ycorner circl output fals explan path exist exampl input xcorner ycorner circl output fals explan path exist exampl input xcorner ycorner circl output true explan constraint xcorner ycorner circleslength circlesilength xi yi ri ","2394":"integ repres number player game 2d array pick picki xi yi repres player xi pick ball color yi player win game pick strictli ball color word player win pick ball player win pick least ball color player win pick leasti ball color return number player win game note multipl player win game exampl input pick output explan player player win game player win exampl input pick output explan player win game exampl input pick output explan player win game pick ball color constraint picklength pickilength xi yi ","2395":"binari matrix grid row column consid palindrom valu read forward backward flip number cell grid return minimum number cell need flip make either row palindrom column palindrom exampl input grid output explan flip highlight cell make row palindrom exampl input grid output explan flip highlight cell make column palindrom exampl input grid output explan row alreadi palindrom constraint gridlength gridilength gridij ","2396":"binari matrix grid row column consid palindrom valu read forward backward flip number cell grid return minimum number cell need flip make row column palindrom total number grid divis exampl input grid output explan exampl input grid output explan exampl input grid output explan constraint gridlength gridilength gridij ","2397":"","2398":"2d array grid contain distinct element rang implement neighborsum class neighborsumint grid initi object int adjacentsumint valu return sum element adjac neighbor valu either top left right bottom valu grid int diagonalsumint valu return sum element diagon neighbor valu either topleft topright bottomleft bottomright valu grid exampl input neighborsum adjacentsum adjacentsum diagonalsum diagonalsum output null explan adjac neighbor adjac neighbor diagon neighbor diagon neighbor exampl input neighborsum adjacentsum diagonalsum output null explan adjac neighbor diagon neighbor constraint gridlength grid0length gridij gridij distinct valu adjacentsum diagonalsum rang call made adjacentsum diagonalsum ","2399":"integ 2d integ array queri citi number initi unidirect road citi citi queriesi ui vi repres addit new unidirect road citi ui citi vi queri need find length shortest path citi citi return array answer rang querieslength answeri length shortest path citi citi process first queri exampl input queri output explan addit road length shortest path addit road length shortest path addit road length shortest path exampl input queri output explan addit road length shortest path addit road length shortest path remain constraint querieslength queriesilength queriesi0 queriesi1 queriesi1 queriesi0 repeat road among queri ","2400":"integ 2d integ array queri citi number initi unidirect road citi citi queriesi ui vi repres addit new unidirect road citi ui citi vi queri need find length shortest path citi citi queri queriesi0 queriesj0 queriesi1 queriesj1 return array answer rang querieslength answeri length shortest path citi citi process first queri exampl input queri output explan addit road length shortest path addit road length shortest path addit road length shortest path exampl input queri output explan addit road length shortest path addit road length shortest path remain constraint querieslength queriesilength queriesi0 queriesi1 queriesi1 queriesi0 repeat road among queri queri queriesi0 queriesj0 queriesi1 queriesj1 ","2401":"red blue tile arrang circularli array integ color 2d integ array queri color tile repres colorsi colorsi mean tile red colorsi mean tile blue altern group contigu subset tile circl altern color tile group except first last differ color adjac tile group process queri type queriesi sizei determin count altern group size sizei queriesi indexi colori chang colorsindexi colori return array answer contain result queri first type order note sinc color repres circl first last tile consid next exampl input color queri output explan first queri chang colors1 second queri count altern group size exampl input color queri output explan first queri count altern group size second queri color chang third queri altern group size constraint colorslength colorsi querieslength queriesi0 queriesi0 queriesi0 queriesilength queriesi1 colorslength queriesi0 queriesilength queriesi1 colorslength queriesi2 ","2402":"snake matrix grid move possibl direct cell grid identifi posit gridij snake start cell follow sequenc command integ repres size grid array string command commandi either right left guarante snake remain within grid boundari throughout movement return posit final cell snake end execut command exampl input command rightdown output explan exampl input command downrightup output explan constraint commandslength command consist right left input gener snake move outsid boundari ","2403":"undirect tree node label root node 2d integ array edg length edgesi ai bi indic edg node ai bi tree node good subtre root children size return number good node tree subtre treenam tree consist node treenam descend exampl input edg output explan node tree good exampl input edg output explan good node tree color imag exampl input edg output explan node except node good constraint edgeslength edgesilength ai bi input gener edg repres valid tree ","2404":"array posit integ num length call pair nonneg integ array arr1 arr2 monoton length array arr1 monoton nondecreas word arr10 arr11 arr1n arr2 monoton nonincreas word arr20 arr21 arr2n arr1i arr2i numsi return count monoton pair sinc answer may larg return modulo exampl input num output explan good pair exampl input num output constraint numslength numsi ","2405":"array posit integ num length call pair nonneg integ array arr1 arr2 monoton length array arr1 monoton nondecreas word arr10 arr11 arr1n arr2 monoton nonincreas word arr20 arr21 arr2n arr1i arr2i numsi return count monoton pair sinc answer may larg return modulo exampl input num output explan good pair exampl input num output constraint numslength numsi ","2406":"array integ num length posit integ power array defin maximum element element consecut sort ascend order otherwis need find power subarray num size return integ array result size resultsi power numsii exampl input num output explan subarray num size maximum element maximum element whose element consecut whose element sort whose element consecut exampl input num output exampl input num output constraint numslength numsi ","2407":"array integ num length posit integ power array defin maximum element element consecut sort ascend order otherwis need find power subarray num size return integ array result size resultsi power numsii exampl input num output explan subarray num size maximum element maximum element whose element consecut whose element sort whose element consecut exampl input num output exampl input num output constraint numslength numsi ","2408":"2d array board repres chessboard boardij repres valu cell rook row column attack need place rook chessboard rook attack return maximum sum cell valu rook place exampl input board output explan place rook cell sum exampl input board output explan place rook cell sum exampl input board output explan place rook cell sum constraint boardlength boardilength boardij ","2409":"2d array board repres chessboard boardij repres valu cell rook row column attack need place rook chessboard rook attack return maximum sum cell valu rook place exampl input board output explan place rook cell sum exampl input board output explan place rook cell sum exampl input board output explan place rook cell sum constraint boardlength boardilength boardij ","2410":"binari string integ binari string satisfi kconstraint either follow condit hold number string number string return integ denot number substr satisfi kconstraint exampl input output explan everi substr except substr satisfi kconstraint exampl input output explan everi substr except substr length greater satisfi kconstraint exampl input output explan substr satisfi kconstraint constraint slength slength si either ","2411":"integ array energydrinka energydrinkb length futurist sport scientist array repres energi boost per hour provid differ energi drink respect want maxim total energi boost drink energi drink per hour howev want switch consum energi drink need wait hour cleans system mean wont get energi boost hour return maximum total energi boost gain next hour note start consum either energi drink exampl input energydrinka energydrinkb output explan gain energi boost drink energi drink exampl input energydrinka energydrinkb output explan gain energi boost drink energi drink first hour switch energi drink lose energi boost second hour gain energi boost drink third hour constraint energydrinkalength energydrinkblength energydrinkai energydrinkbi ","2412":"posit integ integ call kpalindrom palindrom divis return largest integ digit string kpalindrom note integ must lead zero exampl input output explan largest kpalindrom integ digit exampl input output explan kpalindrom integ digit exampl input output constraint ","2413":"binari string integ also 2d integ array queri queriesi li ri binari string satisfi kconstraint either follow condit hold number string number string return integ array answer answeri number substr sliri satisfi kconstraint exampl input queri output explan queri substr satisfi kconstraint except substr exampl input queri output explan substr length greater satisfi kconstraint constraint slength si either slength querieslength queriesi li ri li ri slength queri distinct ","2414":"integ array num integ integ multipli need perform oper num oper find minimum valu num multipl occurr minimum valu select appear first replac select minimum valu multipli return integ array denot final state num perform oper exampl input num multipli output explan oper result oper oper oper oper oper exampl input num multipli output explan oper result oper oper oper constraint numslength numsi multipli ","2415":"array num consist posit integ call integ problem almost equal integ becom equal perform follow oper choos either swap digit within chosen number return number indic num numsi numsj almost equal note allow integ lead zero perform oper exampl input num output explan almost equal pair element swap get swap get exampl input num output explan everi element array almost equal exampl input num output explan swap digit reach constraint numslength numsi ","2416":"integ array num integ integ multipli need perform oper num oper find minimum valu num multipl occurr minimum valu select appear first replac select minimum valu multipli oper appli modulo everi valu num return integ array denot final state num perform oper appli modulo exampl input num multipli output explan oper result oper oper oper oper oper appli modulo exampl input num multipli output explan oper result oper oper appli modulo constraint numslength numsi multipli ","2417":"attent version number oper perform increas twice array num consist posit integ call integ almost equal integ becom equal perform follow oper twice choos either swap digit within chosen number return number indic num numsi numsj almost equal note allow integ lead zero perform oper exampl input num output explan almost equal pair element swap digit digit get swap digit digit get swap digit digit get swap digit get exampl input num output explan almost equal pair element swap digit get swap second digit get swap first digit get constraint numslength numsi ","2418":"posit integ num1 num2 num3 key num1 num2 num3 defin fourdigit number initi number less digit pad lead zero ith digit key gener take smallest digit among ith digit num1 num2 num3 return key number without lead zero exampl input num1 num2 num3 output explan pad num1 becom num2 becom num3 remain 1st digit key min0 digit key min0 3rd digit key min0 4th digit key min1 henc key ie exampl input num1 num2 num3 output exampl input num1 num2 num3 output constraint num1 num2 num3 ","2419":"string length integ multipl task hash string new string call result length first divid substr length initi result empti string substr order begin hash valu charact index charact english alphabet eg calcul sum hash valu charact substr find remaind sum divid call hashedchar identifi charact english lowercas alphabet correspond hashedchar append charact end result return result exampl input abcd output explan first substr ab result0 second substr cd result1 exampl input mxz output explan substr mxz result0 constraint slength slength divis consist lowercas english letter ","2420":"posit integ integ call kpalindrom palindrom divis integ call good digit rearrang form kpalindrom integ exampl rearrang form kpalindrom integ wherea rearrang form kpalindrom integ return count good integ contain digit note integ must lead zero neither rearrang exampl rearrang form exampl input output explan good integ rearrang form alreadi kpalindrom exampl input output explan good integ exampl input output constraint ","2421":"integ power integ array damag health length bob enemi enemi deal bob damagei point damag per second aliv ie healthi everi second enemi deal damag bob choos enemi still aliv deal power point damag determin minimum total amount damag point dealt bob enemi dead exampl input power damag health output explan attack enemi first second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point exampl input power damag health output explan attack enemi first second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point attack enemi next second enemi go number damag point dealt bob point exampl input power damag health output constraint power damagelength healthlength damagei healthi ","2422":"string coordinate1 coordinate2 repres coordin squar chessboard chessboard refer return true squar color fals otherwis coordin alway repres valid chessboard squar coordin alway letter first indic column number second indic row exampl input coordinate1 coordinate2 c3 output true explan squar black exampl input coordinate1 coordinate2 output fals explan squar black white constraint coordinate1length coordinate2length coordinate10 coordinate20 coordinate11 coordinate21 ","2423":"infinit 2d plane posit integ also 2d array queri contain follow queri queriesi build obstacl coordin plane guarante obstacl coordin queri made queri need find distanc kth nearest obstacl origin return integ array result resultsi denot kth nearest obstacl queri resultsi less obstacl note initi obstacl anywher distanc obstacl coordin origin exampl input queri output explan initi obstacl queries0 less obstacl queries1 obstacl distanc queries2 obstacl distanc queries3 obstacl distanc exampl input queri output explan queries0 obstacl distanc queries1 obstacl distanc queries2 obstacl distanc constraint querieslength queriesi uniqu queriesi0 queriesi1 ","2424":"2d matrix grid consist posit integ select cell matrix follow condit satisfi select cell row matrix valu set select cell uniqu score sum valu select cell return maximum score achiev exampl input grid output explan select cell valu color exampl input grid output explan select cell valu color constraint gridlength gridilength gridij ","2425":"array num integ 2d integ array queri size queriesi li ri queri must find maximum score subarray numsliri score array found repeatedli appli follow oper element remain score simultan replac ai ai ai indic except last remov last element return array answer size answeri answer queri exampl input num queri output explan first queri nums02 subarray respect score answer queri largest score second queri subarray nums14 largest score nums14 score third queri subarray nums05 largest score nums14 score exampl input num queri output explan index numsliri maximum score subarray maximum subarray score constraint numslength numsi querieslength queriesilength queriesi li ri li ri ","2426":"string date repres gregorian calendar date yyyymmdd format date written binari represent obtain convert year month day binari represent without lead zero write yearmonthday format return binari represent date exampl input date output explan binari represent respect exampl input date output explan binari represent respect constraint datelength date4 date7 datei digit input gener date repres valid gregorian calendar date jan 1st dec inclus "},"accecpted":{"0":204900,"1":14800000,"2":5000000,"3":2900000,"4":1500000,"5":3600000,"6":5300000,"7":1000000,"8":3400000,"9":1500000,"10":4099999,"11":3800000,"12":4000000,"13":1300000,"14":2200000,"15":1100000,"16":3000000,"17":5200000,"18":4600000,"19":2000000,"20":2200000,"21":1500000,"22":1000000,"23":5100000,"24":3400000,"25":2800000,"26":818900,"27":497200,"28":1500000,"29":799300,"30":3100000,"31":2300000,"32":3300000,"33":1700000,"34":658600,"35":1000000,"36":0,"37":1200000,"38":1300000,"39":2400000,"40":862700,"41":629800,"42":1400000,"43":2300000,"44":995600,"45":2000000,"46":3200000,"47":1900000,"48":820700,"49":427000,"50":4300000,"51":1600000,"52":2200000,"53":2700000,"54":1200000,"55":2300000,"56":429600,"57":1100000,"58":2000000,"59":1000000,"60":1300000,"61":393100,"62":1600000,"63":464500,"64":2200000,"65":3600000,"66":867600,"67":978100,"68":2000000,"69":2400000,"70":1500000,"71":985100,"72":2200000,"73":1800000,"74":1200000,"75":820600,"76":807700,"77":1700000,"78":1000000,"79":529600,"80":679600,"81":242800,"82":3700000,"83":316400,"84":1000000,"85":1300000,"86":953500,"87":2800000,"88":474400,"89":701200,"90":570400,"91":2500000,"92":488800,"93":2400000,"94":0,"95":1300000,"96":3400000,"97":1400000,"98":704200,"99":1300000,"100":553600,"101":1700000,"102":1300000,"103":1600000,"104":917300,"105":1000000,"106":459800,"107":1100000,"108":675300,"109":1900000,"110":948200,"111":852000,"112":5300000,"113":2200000,"114":676000,"115":1400000,"116":3500000,"117":381300,"118":1200000,"119":2100000,"120":958100,"121":802300,"122":977400,"123":1400000,"124":918800,"125":615400,"126":3100000,"127":650600,"128":1400000,"129":1800000,"130":691100,"131":3300000,"132":1400000,"133":1100000,"134":1800000,"135":1400000,"136":1800000,"137":392200,"138":888700,"139":420000,"140":1200000,"141":1900000,"142":1400000,"143":2100000,"144":480400,"145":1900000,"146":1700000,"147":1600000,"148":235300,"149":237300,"150":2300000,"151":564100,"152":3400000,"153":727900,"154":492300,"155":237900,"156":1100000,"157":968700,"158":428300,"159":427700,"160":648000,"161":439000,"162":703700,"163":731100,"164":879400,"165":422900,"166":386400,"167":404300,"168":510900,"169":2600000,"170":1600000,"171":54700,"172":90100,"173":27800,"174":114800,"175":600600,"176":826200,"177":2500000,"178":1500000,"179":3000000,"180":417900,"181":1600000,"182":1200000,"183":942200,"184":1500000,"185":4600000,"186":1800000,"187":1200000,"188":1200000,"189":1200000,"190":688500,"191":707800,"192":855200,"193":283200,"194":2600000,"195":572600,"196":4400000,"197":300500,"198":1100000,"199":263000,"200":731100,"201":820200,"202":765100,"203":2300000,"204":690000,"205":652500,"206":796200,"207":1600000,"208":1500000,"209":1000000,"210":101100,"211":2100000,"212":3000000,"213":1000000,"214":326500,"215":4000000,"216":780800,"217":860200,"218":483000,"219":199600,"220":459800,"221":2500000,"222":511100,"223":570400,"224":218300,"225":1800000,"226":895400,"227":239900,"228":3400000,"229":226600,"230":1900000,"231":509400,"232":807700,"233":404300,"234":866500,"235":932600,"236":387700,"237":1900000,"238":446900,"239":385000,"240":96000,"241":283300,"242":564600,"243":394300,"244":314100,"245":333400,"246":350800,"247":224400,"248":233700,"249":64300,"250":2000000,"251":167100,"252":903700,"253":81100,"254":1000000,"255":560000,"256":161200,"257":146100,"258":452500,"259":657800,"260":0,"261":213000,"262":402200,"263":1200000,"264":466200,"265":718000,"266":373300,"267":2900000,"268":1000000,"269":1300000,"270":1400000,"271":112600,"272":230900,"273":206300,"274":147600,"275":128500,"276":110500,"277":672100,"278":317800,"279":524100,"280":76600,"281":326100,"282":722300,"283":132300,"284":255200,"285":509400,"286":1000000,"287":149800,"288":250800,"289":1300000,"290":346900,"291":59800,"292":248400,"293":1800000,"294":161300,"295":797100,"296":78700,"297":46500,"298":1700000,"299":882400,"300":237700,"301":90400,"302":127700,"303":242600,"304":518700,"305":102100,"306":152300,"307":278500,"308":654800,"309":157500,"310":310800,"311":92900,"312":833900,"313":395900,"314":0,"315":315800,"316":590100,"317":719400,"318":944300,"319":0,"320":220500,"321":83500,"322":886000,"323":137200,"324":319600,"325":158300,"326":190800,"327":200500,"328":650200,"329":122300,"330":613500,"331":927000,"332":94600,"333":475100,"334":829700,"335":682600,"336":495700,"337":152900,"338":103400,"339":952900,"340":577800,"341":805500,"342":573100,"343":181500,"344":338000,"345":269400,"346":85600,"347":121600,"348":478500,"349":269900,"350":595200,"351":189600,"352":668500,"353":100200,"354":20200,"355":173000,"356":87800,"357":233500,"358":173700,"359":217600,"360":127200,"361":478400,"362":114600,"363":42800,"364":25800,"365":159200,"366":39000,"367":295800,"368":23700,"369":1400000,"370":245900,"371":24600,"372":176200,"373":127000,"374":213000,"375":671200,"376":163700,"377":839400,"378":42900,"379":328900,"380":248200,"381":240400,"382":463400,"383":144900,"384":312700,"385":219700,"386":149200,"387":2000000,"388":309500,"389":376400,"390":111600,"391":360200,"392":540800,"393":31300,"394":698100,"395":22900,"396":453600,"397":121100,"398":55400,"399":605700,"400":159700,"401":493200,"402":504000,"403":166300,"404":431200,"405":358700,"406":270100,"407":98800,"408":312100,"409":297100,"410":268500,"411":627900,"412":1700000,"413":48800,"414":1000000,"415":220200,"416":233700,"417":141400,"418":42500,"419":147900,"420":165000,"421":946800,"422":15500,"423":297300,"424":1400000,"425":513000,"426":223000,"427":119300,"428":394900,"429":1100000,"430":472200,"431":936100,"432":305200,"433":212600,"434":506600,"435":339300,"436":278800,"437":1100000,"438":146500,"439":290100,"440":59400,"441":443100,"442":378500,"443":16300,"444":127900,"445":112700,"446":173200,"447":1400000,"448":495100,"449":107700,"450":246400,"451":41400,"452":111800,"453":171500,"454":929300,"455":326500,"456":237500,"457":171800,"458":154700,"459":236100,"460":206200,"461":799200,"462":269400,"463":604600,"464":685900,"465":340000,"466":280700,"467":177600,"468":263400,"469":431700,"470":356700,"471":131800,"472":115900,"473":116500,"474":363800,"475":234600,"476":563800,"477":64000,"478":77500,"479":42200,"480":162800,"481":592600,"482":481100,"483":252700,"484":882500,"485":277600,"486":178500,"487":261700,"488":583900,"489":308100,"490":73200,"491":452700,"492":599300,"493":133200,"494":171600,"495":420400,"496":147800,"497":270200,"498":55300,"499":68500,"500":305000,"501":202200,"502":24400,"503":0,"504":280800,"505":71800,"506":87700,"507":122600,"508":82200,"509":815600,"510":399700,"511":397200,"512":74400,"513":0,"514":191300,"515":162300,"516":79400,"517":220000,"518":79400,"519":141700,"520":942300,"521":216900,"522":225500,"523":281500,"524":28600,"525":988200,"526":593300,"527":717100,"528":2700000,"529":445100,"530":611400,"531":359800,"532":560300,"533":43900,"534":152100,"535":437200,"536":411500,"537":77400,"538":141000,"539":316100,"540":185700,"541":160300,"542":432500,"543":75200,"544":1200000,"545":315900,"546":149500,"547":258600,"548":0,"549":38700,"550":182300,"551":1000000,"552":610100,"553":23100,"554":56800,"555":1100000,"556":364700,"557":86100,"558":558200,"559":526700,"560":264300,"561":82200,"562":13600,"563":332400,"564":61400,"565":58000,"566":35000,"567":24500,"568":19000,"569":565900,"570":61200,"571":65800,"572":353800,"573":427100,"574":67300,"575":112400,"576":11100,"577":1100000,"578":98400,"579":78100,"580":78900,"581":184400,"582":213700,"583":71000,"584":63100,"585":18400,"586":265300,"587":314000,"588":620500,"589":153300,"590":625000,"591":111500,"592":31600,"593":150200,"594":463100,"595":236000,"596":19900,"597":60300,"598":73200,"599":379800,"600":553900,"601":0,"602":157600,"603":83000,"604":288100,"605":31400,"606":364900,"607":86700,"608":169900,"609":68800,"610":120800,"611":12300,"612":237400,"613":56100,"614":56100,"615":252400,"616":216400,"617":30900,"618":101200,"619":0,"620":375300,"621":98200,"622":195800,"623":20500,"624":151400,"625":190200,"626":0,"627":203200,"628":74700,"629":89700,"630":100400,"631":21000,"632":458400,"633":153300,"634":161700,"635":96100,"636":152700,"637":78100,"638":127400,"639":143900,"640":40900,"641":149400,"642":869700,"643":136500,"644":326400,"645":127600,"646":103100,"647":236700,"648":36200,"649":52100,"650":887900,"651":304200,"652":47900,"653":63900,"654":194100,"655":143600,"656":81400,"657":253800,"658":377200,"659":150300,"660":104900,"661":482300,"662":79500,"663":145000,"664":35800,"665":433700,"666":115400,"667":69800,"668":525600,"669":66800,"670":154500,"671":818700,"672":2100000,"673":262800,"674":40900,"675":66100,"676":99300,"677":436000,"678":29700,"679":59500,"680":296100,"681":158000,"682":218600,"683":131700,"684":106900,"685":193200,"686":22200,"687":42800,"688":51700,"689":191000,"690":182400,"691":462200,"692":39100,"693":72700,"694":76200,"695":364800,"696":46100,"697":16900,"698":446800,"699":840300,"700":25100,"701":287800,"702":96500,"703":57300,"704":62700,"705":804900,"706":20800,"707":129199,"708":85300,"709":116800,"710":238800,"711":289200,"712":71700,"713":522500,"714":269300,"715":106600,"716":56600,"717":151700,"718":196200,"719":30900,"720":24400,"721":508300,"722":287700,"723":483800,"724":46200,"725":313300,"726":217700,"727":181200,"728":59500,"729":374600,"730":1100000,"731":151600,"732":42100,"733":447300,"734":165900,"735":30300,"736":196000,"737":243100,"738":320300,"739":311000,"740":236500,"741":91400,"742":204200,"743":153800,"744":524600,"745":61100,"746":163700,"747":249300,"748":137500,"749":247100,"750":161400,"751":30200,"752":10500,"753":232000,"754":43000,"755":137500,"756":148700,"757":98700,"758":56800,"759":43700,"760":8000,"761":1300000,"762":369100,"763":90300,"764":2000000,"765":107800,"766":203000,"767":211900,"768":495200,"769":19500,"770":314400,"771":50400,"772":142400,"773":195900,"774":275100,"775":135000,"776":105200,"777":244100,"778":290200,"779":995000,"780":124800,"781":41700,"782":619400,"783":38200,"784":41900,"785":22300,"786":370800,"787":67800,"788":704600,"789":99000,"790":33900,"791":208400,"792":400800,"793":269800,"794":288400,"795":448100,"796":18300,"797":100300,"798":100700,"799":64300,"800":39800,"801":29000,"802":58900,"803":168600,"804":257800,"805":381700,"806":220000,"807":51700,"808":72200,"809":280500,"810":337200,"811":183600,"812":54900,"813":251400,"814":63100,"815":73800,"816":92400,"817":26700,"818":37900,"819":166000,"820":22900,"821":57000,"822":295400,"823":55300,"824":11200,"825":244600,"826":83900,"827":206500,"828":71200,"829":231800,"830":675200,"831":623600,"832":431400,"833":96000,"834":199200,"835":200600,"836":42200,"837":45600,"838":83500,"839":655900,"840":207900,"841":577300,"842":24000,"843":18700,"844":157500,"845":77100,"846":106200,"847":40100,"848":74100,"849":148100,"850":447500,"851":40800,"852":535600,"853":139200,"854":0,"855":233700,"856":147900,"857":25700,"858":92200,"859":47300,"860":142900,"861":35400,"862":696600,"863":70500,"864":348200,"865":28300,"866":169400,"867":55100,"868":57500,"869":345000,"870":118300,"871":35000,"872":65200,"873":72900,"874":123000,"875":105000,"876":25600,"877":835300,"878":53100,"879":26300,"880":177500,"881":283500,"882":1200000,"883":21600,"884":48000,"885":226600,"886":25600,"887":836100,"888":66400,"889":303600,"890":17600,"891":113400,"892":273800,"893":314300,"894":35800,"895":166000,"896":79900,"897":83300,"898":169300,"899":33400,"900":29500,"901":31800,"902":126500,"903":64099,"904":71100,"905":55800,"906":59600,"907":230900,"908":36800,"909":245700,"910":53000,"911":207200,"912":34600,"913":121100,"914":56100,"915":164000,"916":25200,"917":713800,"918":165600,"919":335700,"920":10300,"921":244100,"922":136200,"923":149800,"924":223800,"925":0,"926":323200,"927":44600,"928":31500,"929":16000,"930":36900,"931":45000,"932":267100,"933":55400,"934":36600,"935":70700,"936":19400,"937":294700,"938":24500,"939":42600,"940":284100,"941":796000,"942":25500,"943":316600,"944":120300,"945":29100,"946":235800,"947":118400,"948":110100,"949":67600,"950":58600,"951":28800,"952":238500,"953":62000,"954":334800,"955":94000,"956":134700,"957":236000,"958":30400,"959":346200,"960":524400,"961":217700,"962":34500,"963":75100,"964":223300,"965":124700,"966":146800,"967":505400,"968":221800,"969":35300,"970":220600,"971":722700,"972":101600,"973":58600,"974":18400,"975":418600,"976":40500,"977":14700,"978":346900,"979":228900,"980":0,"981":246200,"982":14700,"983":130500,"984":195900,"985":26500,"986":197800,"987":276600,"988":0,"989":161300,"990":17900,"991":50800,"992":142900,"993":244100,"994":122000,"995":278700,"996":43400,"997":218600,"998":137600,"999":152800,"1000":175300,"1001":169200,"1002":6400,"1003":268200,"1004":0,"1005":31500,"1006":219200,"1007":202100,"1008":376200,"1009":201900,"1010":127800,"1011":34400,"1012":132900,"1013":720100,"1014":113500,"1015":127200,"1016":148500,"1017":376300,"1018":289900,"1019":34000,"1020":17800,"1021":445000,"1022":92800,"1023":94700,"1024":67600,"1025":233900,"1026":141300,"1027":126000,"1028":56800,"1029":118900,"1030":23900,"1031":22400,"1032":78800,"1033":187600,"1034":50700,"1035":82800,"1036":127200,"1037":192400,"1038":82700,"1039":99300,"1040":54600,"1041":226400,"1042":32200,"1043":647500,"1044":240000,"1045":255400,"1046":224700,"1047":111300,"1048":50900,"1049":96700,"1050":28200,"1051":264600,"1052":39000,"1053":30800,"1054":51600,"1055":120800,"1056":136400,"1057":223800,"1058":236700,"1059":7100,"1060":17900,"1061":154900,"1062":76900,"1063":88200,"1064":94200,"1065":136200,"1066":95900,"1067":52300,"1068":35400,"1069":157900,"1070":45100,"1071":42000,"1072":60500,"1073":61100,"1074":30800,"1075":52400,"1076":65900,"1077":317500,"1078":142400,"1079":80200,"1080":1100000,"1081":19300,"1082":45400,"1083":16200,"1084":282500,"1085":82200,"1086":236700,"1087":36400,"1088":172700,"1089":127900,"1090":126500,"1091":70100,"1092":35700,"1093":0,"1094":19200,"1095":129900,"1096":6700,"1097":85700,"1098":395200,"1099":222700,"1100":79600,"1101":302500,"1102":125400,"1103":398400,"1104":169200,"1105":216500,"1106":9000,"1107":740100,"1108":40500,"1109":255300,"1110":64200,"1111":166900,"1112":113900,"1113":49200,"1114":1900000,"1115":253400,"1116":285600,"1117":38900,"1118":247200,"1119":206800,"1120":34900,"1121":37700,"1122":57100,"1123":350800,"1124":267600,"1125":326500,"1126":20000,"1127":169100,"1128":179000,"1129":127500,"1130":45900,"1131":91200,"1132":54500,"1133":10800,"1134":79900,"1135":173600,"1136":236700,"1137":75800,"1138":844600,"1139":48500,"1140":320200,"1141":15600,"1142":146300,"1143":241400,"1144":86000,"1145":18100,"1146":11400,"1147":349800,"1148":41300,"1149":107900,"1150":48700,"1151":260500,"1152":410900,"1153":57100,"1154":149300,"1155":100100,"1156":127700,"1157":117200,"1158":16000,"1159":28700,"1160":497900,"1161":21000,"1162":67600,"1163":15800,"1164":331000,"1165":45600,"1166":29700,"1167":143300,"1168":282300,"1169":173800,"1170":38000,"1171":191100,"1172":45700,"1173":33800,"1174":171600,"1175":19100,"1176":21700,"1177":37100,"1178":98600,"1179":91700,"1180":57000,"1181":387900,"1182":31400,"1183":32900,"1184":59500,"1185":63400,"1186":22100,"1187":265100,"1188":131800,"1189":579400,"1190":150300,"1191":29500,"1192":321000,"1193":113300,"1194":210000,"1195":21700,"1196":0,"1197":12300,"1198":59800,"1199":33300,"1200":25600,"1201":9800,"1202":255400,"1203":13300,"1204":18900,"1205":57600,"1206":294600,"1207":38500,"1208":149200,"1209":18000,"1210":203800,"1211":166100,"1212":42700,"1213":60600,"1214":379500,"1215":148200,"1216":26500,"1217":11500,"1218":65400,"1219":9400,"1220":10700,"1221":12700,"1222":160300,"1223":16200,"1224":86500,"1225":103900,"1226":141600,"1227":290700,"1228":23000,"1229":251800,"1230":282500,"1231":178800,"1232":32100,"1233":84400,"1234":190700,"1235":235100,"1236":13800,"1237":112000,"1238":279400,"1239":27100,"1240":53700,"1241":164000,"1242":45800,"1243":16700,"1244":91300,"1245":389100,"1246":198900,"1247":6000,"1248":368400,"1249":520500,"1250":96800,"1251":41000,"1252":18700,"1253":267800,"1254":62400,"1255":226700,"1256":30800,"1257":33700,"1258":953500,"1259":67500,"1260":9600,"1261":96000,"1262":270300,"1263":361500,"1264":91800,"1265":9100,"1266":705500,"1267":358600,"1268":113300,"1269":21900,"1270":7100,"1271":255100,"1272":228700,"1273":37600,"1274":32000,"1275":138500,"1276":41300,"1277":135200,"1278":110700,"1279":266200,"1280":199400,"1281":14000,"1282":11700,"1283":366100,"1284":24500,"1285":142500,"1286":27800,"1287":319000,"1288":41800,"1289":34200,"1290":12900,"1291":165000,"1292":136600,"1293":14900,"1294":4900,"1295":360500,"1296":18900,"1297":29700,"1298":74900,"1299":29400,"1300":73800,"1301":7500,"1302":245600,"1303":177600,"1304":468600,"1305":10200,"1306":16500,"1307":6400,"1308":38800,"1309":14200,"1310":23800,"1311":7900,"1312":149800,"1313":68100,"1314":110400,"1315":11300,"1316":26700,"1317":187700,"1318":42400,"1319":168400,"1320":327900,"1321":44000,"1322":24700,"1323":19600,"1324":1300000,"1325":150800,"1326":0,"1327":24400,"1328":61300,"1329":16600,"1330":29300,"1331":10500,"1332":1100000,"1333":133500,"1334":116900,"1335":11900,"1336":240100,"1337":32100,"1338":30800,"1339":27200,"1340":119000,"1341":45100,"1342":7300,"1343":22800,"1344":26100,"1345":5600,"1346":160200,"1347":116400,"1348":352100,"1349":23100,"1350":77200,"1351":141500,"1352":63400,"1353":33100,"1354":20700,"1355":62700,"1356":61300,"1357":76300,"1358":19800,"1359":32299,"1360":7500,"1361":90300,"1362":118900,"1363":112500,"1364":6900,"1365":186500,"1366":60900,"1367":26500,"1368":9800,"1369":355700,"1370":296300,"1371":45900,"1372":21400,"1373":104200,"1374":81200,"1375":31400,"1376":4300,"1377":376100,"1378":163600,"1379":114100,"1380":21200,"1381":59200,"1382":164800,"1383":33600,"1384":7700,"1385":93800,"1386":127300,"1387":106600,"1388":9800,"1389":48400,"1390":28100,"1391":23000,"1392":40500,"1393":77100,"1394":52100,"1395":30100,"1396":68400,"1397":181900,"1398":21600,"1399":9800,"1400":188200,"1401":28500,"1402":27300,"1403":15600,"1404":51000,"1405":104700,"1406":49600,"1407":10300,"1408":255700,"1409":136500,"1410":183400,"1411":16300,"1412":15500,"1413":70400,"1414":29300,"1415":36000,"1416":7300,"1417":51800,"1418":74800,"1419":96300,"1420":29500,"1421":13400,"1422":48400,"1423":192900,"1424":12500,"1425":4300,"1426":143500,"1427":71200,"1428":5700,"1429":0,"1430":309600,"1431":22900,"1432":193100,"1433":11700,"1434":134900,"1435":70700,"1436":136300,"1437":42200,"1438":7200,"1439":257899,"1440":13200,"1441":8100,"1442":576400,"1443":111000,"1444":0,"1445":7900,"1446":48600,"1447":174400,"1448":21200,"1449":873500,"1450":109500,"1451":10100,"1452":274100,"1453":0,"1454":29900,"1455":144300,"1456":5900,"1457":106500,"1458":51900,"1459":13800,"1460":63000,"1461":206500,"1462":21500,"1463":26800,"1464":9200,"1465":17900,"1466":12400,"1467":40700,"1468":14600,"1469":8800,"1470":3900,"1471":57600,"1472":107200,"1473":207000,"1474":60200,"1475":130800,"1476":77100,"1477":39700,"1478":12300,"1479":58100,"1480":478900,"1481":47100,"1482":80800,"1483":6700,"1484":158400,"1485":153300,"1486":145200,"1487":30500,"1488":6000,"1489":85700,"1490":72300,"1491":27700,"1492":13500,"1493":107200,"1494":132300,"1495":17600,"1496":8500,"1497":44500,"1498":106500,"1499":10100,"1500":9900,"1501":284800,"1502":31400,"1503":8900,"1504":167700,"1505":138200,"1506":77200,"1507":428000,"1508":24900,"1509":75900,"1510":8900,"1511":95000,"1512":26400,"1513":23200,"1514":7600,"1515":50100,"1516":0,"1517":11000,"1518":41800,"1519":166200,"1520":9000,"1521":9100,"1522":75600,"1523":71000,"1524":241600,"1525":147100,"1526":16300,"1527":12400,"1528":63500,"1529":33300,"1530":31500,"1531":83700,"1532":32299,"1533":14400,"1534":29400,"1535":83600,"1536":233600,"1537":20400,"1538":58100,"1539":4400,"1540":68500,"1541":177900,"1542":17800,"1543":17300,"1544":45000,"1545":31400,"1546":34500,"1547":23300,"1548":59200,"1549":13000,"1550":18300,"1551":9900,"1552":226800,"1553":29400,"1554":14700,"1555":18400,"1556":61300,"1557":55000,"1558":22900,"1559":7500,"1560":79500,"1561":22700,"1562":19600,"1563":10400,"1564":199400,"1565":46500,"1566":100000,"1567":35000,"1568":518400,"1569":206200,"1570":12400,"1571":55400,"1572":28200,"1573":132700,"1574":16100,"1575":79100,"1576":116700,"1577":21300,"1578":11600,"1579":307800,"1580":48200,"1581":39000,"1582":13400,"1583":314900,"1584":99600,"1585":28300,"1586":3700,"1587":97600,"1588":32800,"1589":21400,"1590":11300,"1591":89600,"1592":214000,"1593":49000,"1594":14100,"1595":68700,"1596":331200,"1597":122800,"1598":7600,"1599":81300,"1600":158100,"1601":35800,"1602":50100,"1603":46600,"1604":61800,"1605":54300,"1606":19700,"1607":16700,"1608":69000,"1609":61900,"1610":440500,"1611":51800,"1612":101800,"1613":31100,"1614":13800,"1615":9900,"1616":138800,"1617":83800,"1618":16700,"1619":10800,"1620":67200,"1621":39300,"1622":23800,"1623":13100,"1624":79500,"1625":23200,"1626":28200,"1627":83000,"1628":50300,"1629":47800,"1630":8800,"1631":67500,"1632":280400,"1633":23800,"1634":18300,"1635":103400,"1636":45000,"1637":120700,"1638":12400,"1639":39300,"1640":147700,"1641":135600,"1642":24700,"1643":74700,"1644":154000,"1645":15400,"1646":42100,"1647":20400,"1648":30300,"1649":12700,"1650":88000,"1651":20500,"1652":33400,"1653":13000,"1654":53800,"1655":30100,"1656":16200,"1657":5000,"1658":408900,"1659":23700,"1660":69500,"1661":252400,"1662":38900,"1663":9000,"1664":44600,"1665":259300,"1666":45900,"1667":13800,"1668":47300,"1669":22300,"1670":34500,"1671":7700,"1672":574100,"1673":253300,"1674":112200,"1675":29900,"1676":23600,"1677":12700,"1678":42200,"1679":154700,"1680":8400,"1681":77100,"1682":90900,"1683":26100,"1684":17700,"1685":85300,"1686":67000,"1687":87500,"1688":17500,"1689":12200,"1690":93700,"1691":82400,"1692":37000,"1693":35800,"1694":153100,"1695":22000,"1696":16500,"1697":65700,"1698":17200,"1699":69800,"1700":66200,"1701":33800,"1702":28900,"1703":19900,"1704":97900,"1705":27400,"1706":20900,"1707":62600,"1708":35900,"1709":145400,"1710":7400,"1711":43500,"1712":25600,"1713":23400,"1714":28900,"1715":45300,"1716":37400,"1717":27100,"1718":45100,"1719":178900,"1720":33700,"1721":40900,"1722":32600,"1723":100600,"1724":61800,"1725":27700,"1726":23100,"1727":11900,"1728":77400,"1729":26700,"1730":11500,"1731":0,"1732":28700,"1733":20000,"1734":7700,"1735":115000,"1736":25500,"1737":70700,"1738":196300,"1739":26100,"1740":15100,"1741":12800,"1742":50800,"1743":159100,"1744":26800,"1745":6500,"1746":0,"1747":51400,"1748":29600,"1749":43600,"1750":130199,"1751":24100,"1752":15900,"1753":257000,"1754":85900,"1755":15700,"1756":239300,"1757":119500,"1758":39300,"1759":80200,"1760":78900,"1761":61400,"1762":34200,"1763":40200,"1764":140400,"1765":60400,"1766":90400,"1767":116500,"1768":170000,"1769":0,"1770":35900,"1771":12900,"1772":59000,"1773":34400,"1774":23600,"1775":33800,"1776":42200,"1777":145600,"1778":9500,"1779":120500,"1780":378800,"1781":137400,"1782":92700,"1783":54600,"1784":100000,"1785":16200,"1786":22800,"1787":52000,"1788":32400,"1789":124100,"1790":217400,"1791":29100,"1792":16800,"1793":24400,"1794":40300,"1795":13900,"1796":11200,"1797":193400,"1798":49400,"1799":57600,"1800":111500,"1801":311600,"1802":150200,"1803":25200,"1804":57700,"1805":51400,"1806":22400,"1807":21500,"1808":14100,"1809":97000,"1810":41700,"1811":23000,"1812":14200,"1813":36800,"1814":156500,"1815":20100,"1816":24500,"1817":17200,"1818":85100,"1819":7200,"1820":232100,"1821":69400,"1822":38000,"1823":148100,"1824":49300,"1825":27400,"1826":68100,"1827":13600,"1828":32000,"1829":23600,"1830":18800,"1831":11300,"1832":62700,"1833":23900,"1834":20900,"1835":27800,"1836":70500,"1837":69300,"1838":110700,"1839":0,"1840":47800,"1841":80000,"1842":13900,"1843":207200,"1844":23400,"1845":23100,"1846":16800,"1847":45300,"1848":25300,"1849":72700,"1850":10700,"1851":37200,"1852":129400,"1853":11700,"1854":236800,"1855":191700,"1856":202900,"1857":13100,"1858":42700,"1859":175500,"1860":9600,"1861":48400,"1862":22100,"1863":23400,"1864":4800,"1865":66200,"1866":27500,"1867":18900,"1868":10200,"1869":51600,"1870":24400,"1871":14600,"1872":14000,"1873":25300,"1874":21900,"1875":13700,"1876":12900,"1877":31600,"1878":17500,"1879":23700,"1880":9700,"1881":94000,"1882":33700,"1883":22400,"1884":26000,"1885":35500,"1886":27500,"1887":20800,"1888":7500,"1889":118500,"1890":29700,"1891":0,"1892":4400,"1893":137800,"1894":21800,"1895":22700,"1896":8200,"1897":248400,"1898":23400,"1899":101900,"1900":8400,"1901":66700,"1902":68500,"1903":19600,"1904":12800,"1905":44300,"1906":21500,"1907":59300,"1908":9600,"1909":78500,"1910":32800,"1911":11100,"1912":14700,"1913":51100,"1914":30200,"1915":20800,"1916":10400,"1917":52300,"1918":27200,"1919":13000,"1920":7800,"1921":26400,"1922":17900,"1923":16300,"1924":6000,"1925":45400,"1926":30900,"1927":10100,"1928":5200,"1929":153400,"1930":30500,"1931":21200,"1932":12600,"1933":38200,"1934":27400,"1935":17300,"1936":6700,"1937":193400,"1938":42300,"1939":12200,"1940":17700,"1941":65600,"1942":30400,"1943":19000,"1944":0,"1945":33100,"1946":25900,"1947":19700,"1948":19100,"1949":49900,"1950":31100,"1951":117500,"1952":43000,"1953":20800,"1954":8000,"1955":39800,"1956":19000,"1957":32500,"1958":203900,"1959":28300,"1960":5200,"1961":21200,"1962":9100,"1963":24600,"1964":148700,"1965":440100,"1966":153000,"1967":49600,"1968":112600,"1969":11400,"1970":47300,"1971":179400,"1972":53600,"1973":150800,"1974":5700,"1975":47800,"1976":192300,"1977":212200,"1978":60300,"1979":29500,"1980":33000,"1981":22300,"1982":68800,"1983":70000,"1984":33200,"1985":30600,"1986":10500,"1987":30800,"1988":2400,"1989":59700,"1990":118700,"1991":22100,"1992":13200,"1993":79200,"1994":45600,"1995":29300,"1996":11500,"1997":36400,"1998":25600,"1999":14200,"2000":5500,"2001":234700,"2002":119800,"2003":507800,"2004":40800,"2005":23100,"2006":16300,"2007":17300,"2008":260600,"2009":36700,"2010":14600,"2011":9700,"2012":28700,"2013":22900,"2014":25200,"2015":31300,"2016":10700,"2017":27900,"2018":43700,"2019":205000,"2020":57800,"2021":20900,"2022":64000,"2023":177700,"2024":208500,"2025":26300,"2026":189000,"2027":179500,"2028":30100,"2029":70200,"2030":20200,"2031":19300,"2032":13500,"2033":56900,"2034":59600,"2035":32400,"2036":21600,"2037":11600,"2038":29800,"2039":34500,"2040":107000,"2041":45400,"2042":46400,"2043":31300,"2044":70600,"2045":47300,"2046":24700,"2047":14100,"2048":7100,"2049":99500,"2050":12300,"2051":5900,"2052":45500,"2053":34500,"2054":14900,"2055":76600,"2056":21100,"2057":8800,"2058":7200,"2059":36600,"2060":10100,"2061":22500,"2062":110600,"2063":38000,"2064":31100,"2065":21200,"2066":26100,"2067":21100,"2068":17300,"2069":8500,"2070":119200,"2071":28300,"2072":26400,"2073":74900,"2074":26500,"2075":24400,"2076":32700,"2077":52000,"2078":138500,"2079":20300,"2080":19700,"2081":58600,"2082":31300,"2083":9600,"2084":6900,"2085":174900,"2086":43100,"2087":16200,"2088":0,"2089":45100,"2090":222300,"2091":15900,"2092":4300,"2093":86700,"2094":30000,"2095":97000,"2096":6900,"2097":47900,"2098":172600,"2099":27400,"2100":7200,"2101":173700,"2102":35800,"2103":20800,"2104":9700,"2105":99900,"2106":35800,"2107":22600,"2108":21400,"2109":49900,"2110":30700,"2111":12300,"2112":5000,"2113":39000,"2114":27500,"2115":26100,"2116":12800,"2117":48700,"2118":14800,"2119":6400,"2120":53000,"2121":99300,"2122":23800,"2123":4300,"2124":35400,"2125":24100,"2126":11200,"2127":22400,"2128":14800,"2129":7900,"2130":207300,"2131":25600,"2132":13700,"2133":7300,"2134":37800,"2135":183400,"2136":16600,"2137":11100,"2138":39300,"2139":27000,"2140":20200,"2141":10800,"2142":134400,"2143":104800,"2144":109700,"2145":86800,"2146":81700,"2147":73000,"2148":68000,"2149":74600,"2150":64300,"2151":62700,"2152":60200,"2153":63200,"2154":53200,"2155":50200,"2156":52300,"2157":96400,"2158":34800,"2159":7100,"2160":27700,"2161":31300,"2162":11000,"2163":4400,"2164":41600,"2165":26600,"2166":18700,"2167":12700,"2168":36100,"2169":13000,"2170":4100,"2171":35500,"2172":19900,"2173":23300,"2174":3300,"2175":14300,"2176":8100,"2177":39400,"2178":27500,"2179":13500,"2180":6100,"2181":27200,"2182":12800,"2183":6500,"2184":11200,"2185":41100,"2186":22700,"2187":12700,"2188":6500,"2189":30300,"2190":25400,"2191":9600,"2192":7300,"2193":162300,"2194":12000,"2195":16700,"2196":4400,"2197":24200,"2198":21600,"2199":9600,"2200":5400,"2201":53100,"2202":21000,"2203":7400,"2204":3400,"2205":66500,"2206":22800,"2207":153400,"2208":7400,"2209":43400,"2210":21700,"2211":134900,"2212":11100,"2213":56300,"2214":153800,"2215":13400,"2216":21000,"2217":136000,"2218":8000,"2219":8600,"2220":14700,"2221":101900,"2222":5200,"2223":35500,"2224":24500,"2225":18100,"2226":3200,"2227":112500,"2228":21400,"2229":4900,"2230":37100,"2231":18300,"2232":16400,"2233":3500,"2234":216800,"2235":27600,"2236":9700,"2237":11300,"2238":34600,"2239":23700,"2240":14400,"2241":5300,"2242":42000,"2243":20300,"2244":174500,"2245":3200,"2246":53600,"2247":20200,"2248":3200,"2249":49700,"2250":14400,"2251":21900,"2252":10100,"2253":50600,"2254":20400,"2255":10100,"2256":42600,"2257":26800,"2258":15100,"2259":35000,"2260":26800,"2261":20800,"2262":8000,"2263":40600,"2264":135700,"2265":16000,"2266":53600,"2267":20100,"2268":8600,"2269":2500,"2270":66400,"2271":29000,"2272":12700,"2273":71700,"2274":45100,"2275":10500,"2276":48900,"2277":22700,"2278":6500,"2279":46500,"2280":18600,"2281":13800,"2282":7600,"2283":45700,"2284":37400,"2285":20100,"2286":3200,"2287":42100,"2288":28100,"2289":20300,"2290":10400,"2291":28800,"2292":22600,"2293":14000,"2294":5000,"2295":64300,"2296":35500,"2297":36300,"2298":8700,"2299":41900,"2300":25600,"2301":25200,"2302":12600,"2303":286600,"2304":27000,"2305":19800,"2306":10300,"2307":34700,"2308":39600,"2309":8600,"2310":5100,"2311":47600,"2312":31900,"2313":14900,"2314":12500,"2315":26900,"2316":19200,"2317":8000,"2318":3200,"2319":59000,"2320":21900,"2321":14300,"2322":6200,"2323":43800,"2324":24600,"2325":28400,"2326":4400,"2327":33600,"2328":17600,"2329":14100,"2330":2100,"2331":75200,"2332":18300,"2333":4500,"2334":60300,"2335":31900,"2336":23900,"2337":11500,"2338":48800,"2339":37200,"2340":24600,"2341":5100,"2342":67800,"2343":41100,"2344":25600,"2345":6100,"2346":54800,"2347":39300,"2348":26600,"2349":54000,"2350":31300,"2351":18200,"2352":6900,"2353":47400,"2354":38200,"2355":25700,"2356":6800,"2357":58900,"2358":41200,"2359":24600,"2360":9200,"2361":94200,"2362":44800,"2363":35600,"2364":6700,"2365":68400,"2366":40500,"2367":21700,"2368":4600,"2369":36700,"2370":17300,"2371":48300,"2372":25800,"2373":23500,"2374":11100,"2375":54300,"2376":44800,"2377":23200,"2378":11500,"2379":45600,"2380":176400,"2381":26200,"2382":20700,"2383":6600,"2384":39200,"2385":12700,"2386":42000,"2387":37500,"2388":27600,"2389":15000,"2390":64599,"2391":32700,"2392":7200,"2393":6300,"2394":38900,"2395":32500,"2396":9600,"2397":4000,"2398":35300,"2399":26000,"2400":11000,"2401":1400,"2402":51700,"2403":26000,"2404":15600,"2405":5900,"2406":38900,"2407":24300,"2408":7400,"2409":4300,"2410":39200,"2411":29800,"2412":6600,"2413":4100,"2414":48700,"2415":24700,"2416":6800,"2417":5200,"2418":39500,"2419":34600,"2420":4700,"2421":10700,"2422":46300,"2423":30600,"2424":9300,"2425":3900,"2426":45100},"submission":{"0":262700,"1":27400000,"2":11400000,"3":7000000,"4":3000000,"5":12100000,"6":9200000,"7":3600000,"8":6000000,"9":2200000,"10":6500000,"11":8600000,"12":11200000,"13":2900000,"14":3600000,"15":2900000,"16":6400000,"17":12600000,"18":7000000,"19":2700000,"20":4000000,"21":2200000,"22":1700000,"23":8800000,"24":5900000,"25":6500000,"26":4600000,"27":1500000,"28":3700000,"29":2300000,"30":7400000,"31":5000000,"32":6900000,"33":2800000,"34":1000000,"35":1800000,"36":0,"37":2100000,"38":3300000,"39":3800000,"40":2100000,"41":2200000,"42":3500000,"43":2900000,"44":1700000,"45":2600000,"46":4600000,"47":5300000,"48":1200000,"49":568700,"50":8400000,"51":3100000,"52":5600000,"53":5600000,"54":2900000,"55":4300000,"56":890200,"57":2800000,"58":3100000,"59":2500000,"60":2000000,"61":1900000,"62":3000000,"63":1000000,"64":5600000,"65":6900000,"66":1900000,"67":1700000,"68":3900000,"69":3700000,"70":3400000,"71":1400000,"72":2700000,"73":4200000,"74":2000000,"75":2100000,"76":1700000,"77":3200000,"78":2200000,"79":1000000,"80":1200000,"81":594100,"82":7300000,"83":525500,"84":1800000,"85":3700000,"86":2000000,"87":3600000,"88":806400,"89":1100000,"90":1400000,"91":7600000,"92":897900,"93":3800000,"94":0,"95":2100000,"96":4500000,"97":2100000,"98":1100000,"99":1800000,"100":880600,"101":3100000,"102":2600000,"103":3100000,"104":1500000,"105":1600000,"106":948700,"107":1700000,"108":1300000,"109":2400000,"110":1500000,"111":1500000,"112":9800000,"113":3200000,"114":1400000,"115":3400000,"116":7100000,"117":1400000,"118":2900000,"119":4400000,"120":1400000,"121":2000000,"122":1400000,"123":2300000,"124":2000000,"125":1400000,"126":4200000,"127":1000000,"128":2400000,"129":3900000,"130":1300000,"131":6500000,"132":2700000,"133":1800000,"134":2500000,"135":1900000,"136":4099999,"137":716600,"138":1500000,"139":1500000,"140":2200000,"141":4000000,"142":4099999,"143":4000000,"144":1100000,"145":3400000,"146":2900000,"147":3400000,"148":496200,"149":932200,"150":3700000,"151":1300000,"152":5300000,"153":1100000,"154":1100000,"155":616800,"156":1400000,"157":2300000,"158":1100000,"159":673000,"160":1600000,"161":992800,"162":1000000,"163":1000000,"164":1300000,"165":799900,"166":699200,"167":811900,"168":1100000,"169":6100000,"170":2200000,"171":209700,"172":341400,"173":103400,"174":340700,"175":952700,"176":1700000,"177":4800000,"178":2400000,"179":4900000,"180":883900,"181":2900000,"182":2400000,"183":2800000,"184":3300000,"185":5900000,"186":3700000,"187":1700000,"188":2500000,"189":2200000,"190":1500000,"191":1900000,"192":2000000,"193":711300,"194":3800000,"195":810400,"196":7100000,"197":696600,"198":2300000,"199":1100000,"200":1500000,"201":1200000,"202":1200000,"203":2900000,"204":1600000,"205":1300000,"206":1500000,"207":2200000,"208":3100000,"209":1500000,"210":289100,"211":3900000,"212":4500000,"213":1900000,"214":455400,"215":6100000,"216":1200000,"217":1300000,"218":682400,"219":544800,"220":935700,"221":3700000,"222":1500000,"223":1400000,"224":567300,"225":4000000,"226":1600000,"227":594500,"228":5500000,"229":377800,"230":3100000,"231":725700,"232":1900000,"233":705300,"234":1700000,"235":1600000,"236":764800,"237":3300000,"238":919500,"239":695600,"240":299700,"241":686100,"242":953200,"243":941400,"244":523799,"245":782400,"246":698000,"247":372500,"248":439400,"249":208100,"250":4400000,"251":479300,"252":1900000,"253":224100,"254":1700000,"255":1000000,"256":302900,"257":320500,"258":1000000,"259":1700000,"260":0,"261":597200,"262":738100,"263":1500000,"264":719200,"265":1500000,"266":615300,"267":3600000,"268":1900000,"269":1800000,"270":2500000,"271":187200,"272":622700,"273":505900,"274":276400,"275":289900,"276":265000,"277":1500000,"278":695700,"279":996000,"280":218400,"281":811900,"282":1300000,"283":264800,"284":524900,"285":937800,"286":1800000,"287":420700,"288":395300,"289":2100000,"290":592200,"291":153600,"292":341600,"293":2900000,"294":337000,"295":1300000,"296":172100,"297":136000,"298":3500000,"299":1500000,"300":526800,"301":210000,"302":353400,"303":380100,"304":832600,"305":290600,"306":275500,"307":602500,"308":1100000,"309":318500,"310":421300,"311":192000,"312":1500000,"313":700000,"314":0,"315":485800,"316":1600000,"317":1400000,"318":2000000,"319":0,"320":290900,"321":162900,"322":1600000,"323":180400,"324":450100,"325":349700,"326":349900,"327":551700,"328":1200000,"329":231800,"330":1300000,"331":1800000,"332":225300,"333":1000000,"334":1100000,"335":1200000,"336":806700,"337":280100,"338":185300,"339":1600000,"340":1100000,"341":1100000,"342":964600,"343":317800,"344":588900,"345":797500,"346":247000,"347":204400,"348":1000000,"349":599300,"350":786800,"351":313900,"352":914300,"353":335300,"354":65700,"355":629700,"356":191700,"357":473300,"358":428700,"359":452800,"360":329100,"361":680400,"362":215700,"363":106600,"364":76100,"365":410200,"366":75400,"367":670300,"368":56800,"369":2200000,"370":443400,"371":75900,"372":288200,"373":215700,"374":684300,"375":1400000,"376":288600,"377":1100000,"378":106400,"379":537500,"380":347600,"381":452700,"382":714600,"383":285000,"384":432600,"385":518700,"386":222200,"387":2800000,"388":412400,"389":527100,"390":188900,"391":548100,"392":855400,"393":75100,"394":1100000,"395":54000,"396":804800,"397":198600,"398":131300,"399":2000000,"400":310800,"401":1000000,"402":1100000,"403":247600,"404":736400,"405":823700,"406":312200,"407":137000,"408":446900,"409":479100,"410":524200,"411":1300000,"412":2700000,"413":101500,"414":1500000,"415":579400,"416":473500,"417":255600,"418":69400,"419":266600,"420":481800,"421":1100000,"422":31000,"423":410300,"424":3200000,"425":645500,"426":355500,"427":375900,"428":622900,"429":2300000,"430":953300,"431":1900000,"432":446000,"433":441800,"434":662100,"435":914900,"436":444300,"437":1600000,"438":298700,"439":448800,"440":114300,"441":584300,"442":470700,"443":41700,"444":193500,"445":255300,"446":311700,"447":2100000,"448":858200,"449":190400,"450":436500,"451":103000,"452":228300,"453":292400,"454":3200000,"455":469200,"456":361100,"457":235600,"458":228700,"459":325400,"460":400300,"461":1000000,"462":405100,"463":812800,"464":1100000,"465":655400,"466":438200,"467":387800,"468":370200,"469":516799,"470":789800,"471":267300,"472":287400,"473":183700,"474":995400,"475":374000,"476":769300,"477":123400,"478":250800,"479":95200,"480":251800,"481":1300000,"482":1100000,"483":419300,"484":1200000,"485":407700,"486":371100,"487":438900,"488":947800,"489":359800,"490":113100,"491":596300,"492":1300000,"493":260100,"494":253800,"495":971100,"496":241700,"497":1100000,"498":91700,"499":131200,"500":459900,"501":451400,"502":48600,"503":0,"504":555200,"505":207100,"506":151900,"507":215500,"508":165900,"509":2000000,"510":516400,"511":625200,"512":214700,"513":0,"514":455800,"515":288000,"516":157600,"517":325700,"518":161000,"519":225000,"520":1300000,"521":330100,"522":397000,"523":738300,"524":62700,"525":1200000,"526":805500,"527":1200000,"528":4600000,"529":662800,"530":932000,"531":1300000,"532":669300,"533":130600,"534":232900,"535":842500,"536":592900,"537":176200,"538":311900,"539":620200,"540":409200,"541":303300,"542":745200,"543":193000,"544":2100000,"545":451400,"546":229400,"547":327100,"548":0,"549":83800,"550":291000,"551":1500000,"552":1400000,"553":44400,"554":117200,"555":1700000,"556":645000,"557":230700,"558":1000000,"559":995300,"560":532100,"561":135700,"562":26400,"563":550200,"564":107300,"565":133500,"566":66200,"567":54600,"568":30600,"569":706900,"570":126100,"571":114000,"572":511600,"573":775000,"574":125900,"575":191600,"576":19900,"577":1300000,"578":150900,"579":184100,"580":213500,"581":299100,"582":456200,"583":212500,"584":119100,"585":36300,"586":443400,"587":421400,"588":1100000,"589":224600,"590":1600000,"591":197500,"592":50700,"593":302700,"594":651200,"595":464500,"596":44100,"597":173900,"598":137100,"599":637800,"600":669600,"601":0,"602":270500,"603":205600,"604":447800,"605":89600,"606":439500,"607":125000,"608":197000,"609":128000,"610":261300,"611":20100,"612":310400,"613":91600,"614":104200,"615":349300,"616":456400,"617":54300,"618":177600,"619":0,"620":846200,"621":162300,"622":272500,"623":42400,"624":286100,"625":276900,"626":0,"627":416500,"628":141700,"629":213900,"630":190900,"631":42100,"632":555900,"633":294800,"634":247600,"635":150900,"636":338200,"637":173600,"638":222600,"639":278300,"640":104400,"641":387900,"642":1800000,"643":336100,"644":574700,"645":195000,"646":229900,"647":489100,"648":66600,"649":86400,"650":1300000,"651":584200,"652":119500,"653":146700,"654":303300,"655":225900,"656":130400,"657":763000,"658":646600,"659":186900,"660":400500,"661":740800,"662":148400,"663":204000,"664":136800,"665":596600,"666":184600,"667":132100,"668":750100,"669":137900,"670":266800,"671":1700000,"672":2700000,"673":369200,"674":114700,"675":137300,"676":271700,"677":730900,"678":58700,"679":81100,"680":393800,"681":186600,"682":430100,"683":211200,"684":148900,"685":251500,"686":57900,"687":64000,"688":71500,"689":230700,"690":274200,"691":752500,"692":98400,"693":110000,"694":127700,"695":547600,"696":107800,"697":29600,"698":993200,"699":1100000,"700":64400,"701":772700,"702":136300,"703":156600,"704":120100,"705":1400000,"706":61600,"707":432800,"708":174800,"709":225600,"710":363700,"711":630600,"712":118800,"713":700600,"714":379900,"715":233900,"716":134600,"717":469600,"718":318800,"719":77000,"720":55200,"721":754900,"722":449300,"723":772200,"724":69900,"725":410100,"726":375400,"727":298800,"728":95200,"729":662500,"730":1300000,"731":279000,"732":97200,"733":1300000,"734":209100,"735":68600,"736":262400,"737":404600,"738":459900,"739":500600,"740":400700,"741":258000,"742":245800,"743":229100,"744":949400,"745":117300,"746":419800,"747":434800,"748":176300,"749":320700,"750":292400,"751":54700,"752":21500,"753":324800,"754":83600,"755":235700,"756":317400,"757":139000,"758":129400,"759":86000,"760":18000,"761":2000000,"762":665000,"763":223800,"764":2700000,"765":226300,"766":263100,"767":258300,"768":1000000,"769":33200,"770":481800,"771":114200,"772":208500,"773":323500,"774":610200,"775":266100,"776":192000,"777":379500,"778":510900,"779":1800000,"780":199000,"781":82800,"782":1200000,"783":54600,"784":96000,"785":59500,"786":496900,"787":112600,"788":1100000,"789":192000,"790":58500,"791":398700,"792":485100,"793":443700,"794":543500,"795":635200,"796":42900,"797":238500,"798":169400,"799":138000,"800":69100,"801":47400,"802":125600,"803":274700,"804":371000,"805":454100,"806":300500,"807":82200,"808":140100,"809":404500,"810":431900,"811":373200,"812":73100,"813":375000,"814":87800,"815":123100,"816":176900,"817":54500,"818":76800,"819":261200,"820":65600,"821":152500,"822":334700,"823":92500,"824":19600,"825":437000,"826":162300,"827":269200,"828":232900,"829":371100,"830":1000000,"831":888100,"832":702400,"833":170700,"834":283600,"835":312300,"836":85000,"837":97400,"838":108800,"839":773000,"840":473100,"841":1100000,"842":37500,"843":50400,"844":211600,"845":121300,"846":139000,"847":71300,"848":120800,"849":316900,"850":856900,"851":65200,"852":1100000,"853":233500,"854":0,"855":417600,"856":367600,"857":40300,"858":140300,"859":62700,"860":207700,"861":59000,"862":779400,"863":112300,"864":480700,"865":39200,"866":241800,"867":89300,"868":100900,"869":461200,"870":162700,"871":98800,"872":117500,"873":149700,"874":261300,"875":155000,"876":52800,"877":1300000,"878":102800,"879":52200,"880":242200,"881":577900,"882":2100000,"883":44900,"884":91700,"885":615200,"886":43600,"887":1100000,"888":135600,"889":495900,"890":41900,"891":198300,"892":387200,"893":468000,"894":103600,"895":292400,"896":257399,"897":133300,"898":321100,"899":57500,"900":74600,"901":67900,"902":164400,"903":118200,"904":122900,"905":126000,"906":102600,"907":386700,"908":153600,"909":422000,"910":72700,"911":296700,"912":115700,"913":206200,"914":84900,"915":241800,"916":40800,"917":919900,"918":283500,"919":574900,"920":20500,"921":553000,"922":189500,"923":274500,"924":328900,"925":0,"926":374000,"927":61900,"928":63600,"929":42900,"930":68000,"931":67500,"932":675900,"933":83800,"934":94500,"935":101500,"936":27400,"937":544400,"938":45200,"939":66100,"940":396600,"941":1100000,"942":42500,"943":850500,"944":152500,"945":61800,"946":354700,"947":144400,"948":163100,"949":87100,"950":115800,"951":58600,"952":289200,"953":101900,"954":514500,"955":187000,"956":249600,"957":312200,"958":49700,"959":585200,"960":605400,"961":249000,"962":47800,"963":102300,"964":366000,"965":221600,"966":228300,"967":622700,"968":339700,"969":65600,"970":486600,"971":932500,"972":173600,"973":111900,"974":31900,"975":586700,"976":90300,"977":36800,"978":401800,"979":300500,"980":0,"981":376700,"982":42500,"983":163300,"984":248700,"985":55200,"986":276900,"987":322100,"988":0,"989":188400,"990":35100,"991":94000,"992":200800,"993":384300,"994":227700,"995":337800,"996":66800,"997":282400,"998":271200,"999":214100,"1000":339100,"1001":204200,"1002":15400,"1003":380600,"1004":0,"1005":50900,"1006":319600,"1007":339100,"1008":510400,"1009":292700,"1010":267700,"1011":54100,"1012":327600,"1013":843600,"1014":164300,"1015":198800,"1016":321800,"1017":1000000,"1018":353400,"1019":75800,"1020":34800,"1021":574400,"1022":178700,"1023":291500,"1024":186600,"1025":298500,"1026":207900,"1027":194000,"1028":112100,"1029":271300,"1030":39100,"1031":68400,"1032":134200,"1033":360200,"1034":81100,"1035":107900,"1036":166700,"1037":291700,"1038":195900,"1039":127100,"1040":83000,"1041":376800,"1042":90300,"1043":774700,"1044":279300,"1045":319500,"1046":278800,"1047":161000,"1048":120300,"1049":137600,"1050":54000,"1051":307500,"1052":89700,"1053":63600,"1054":109900,"1055":141500,"1056":200600,"1057":319100,"1058":316700,"1059":16500,"1060":38100,"1061":203200,"1062":105600,"1063":153400,"1064":148100,"1065":237200,"1066":149400,"1067":61900,"1068":55300,"1069":242000,"1070":68800,"1071":55800,"1072":128000,"1073":116300,"1074":40900,"1075":103900,"1076":97000,"1077":587100,"1078":249200,"1079":141900,"1080":1200000,"1081":47100,"1082":64800,"1083":36400,"1084":355300,"1085":141300,"1086":418100,"1087":58700,"1088":215700,"1089":150600,"1090":202200,"1091":113300,"1092":52900,"1093":0,"1094":39600,"1095":171500,"1096":17300,"1097":132800,"1098":668300,"1099":325900,"1100":127500,"1101":398200,"1102":221700,"1103":480300,"1104":411500,"1105":335300,"1106":15000,"1107":834800,"1108":65900,"1109":328700,"1110":105300,"1111":212200,"1112":129199,"1113":134700,"1114":2200000,"1115":401300,"1116":514299,"1117":110900,"1118":319900,"1119":239700,"1120":93300,"1121":139400,"1122":84900,"1123":552600,"1124":390400,"1125":480100,"1126":67600,"1127":270500,"1128":386100,"1129":292500,"1130":104000,"1131":133100,"1132":95100,"1133":27100,"1134":119600,"1135":274800,"1136":399500,"1137":127100,"1138":945800,"1139":102900,"1140":489200,"1141":45000,"1142":332300,"1143":340100,"1144":156300,"1145":45500,"1146":25100,"1147":699400,"1148":94200,"1149":158100,"1150":68100,"1151":645200,"1152":483900,"1153":77800,"1154":207700,"1155":190700,"1156":156700,"1157":205900,"1158":33400,"1159":72200,"1160":817600,"1161":59100,"1162":128199,"1163":35700,"1164":484600,"1165":77100,"1166":61800,"1167":232200,"1168":413500,"1169":244500,"1170":106900,"1171":235800,"1172":93300,"1173":57300,"1174":203100,"1175":44300,"1176":52600,"1177":85300,"1178":222500,"1179":153500,"1180":106400,"1181":465700,"1182":93400,"1183":86200,"1184":91300,"1185":137700,"1186":53100,"1187":416300,"1188":186300,"1189":853500,"1190":218900,"1191":47900,"1192":474700,"1193":135900,"1194":252200,"1195":56300,"1196":0,"1197":20500,"1198":137800,"1199":58400,"1200":75100,"1201":20100,"1202":355900,"1203":29900,"1204":28900,"1205":89300,"1206":334800,"1207":83700,"1208":179600,"1209":41300,"1210":304900,"1211":251200,"1212":114100,"1213":81900,"1214":451800,"1215":227300,"1216":85000,"1217":17300,"1218":94400,"1219":24600,"1220":24300,"1221":72100,"1222":233900,"1223":24600,"1224":171500,"1225":175500,"1226":169100,"1227":481500,"1228":56100,"1229":433900,"1230":353500,"1231":204700,"1232":44900,"1233":148700,"1234":242500,"1235":470900,"1236":28400,"1237":221200,"1238":456000,"1239":68800,"1240":80100,"1241":249300,"1242":154200,"1243":41800,"1244":108200,"1245":715700,"1246":499600,"1247":15100,"1248":537700,"1249":608100,"1250":144700,"1251":64300,"1252":32000,"1253":436200,"1254":159900,"1255":276900,"1256":54100,"1257":79800,"1258":1100000,"1259":132400,"1260":23700,"1261":177700,"1262":309100,"1263":653300,"1264":160400,"1265":23100,"1266":824700,"1267":407000,"1268":165900,"1269":37900,"1270":18100,"1271":297600,"1272":257700,"1273":64500,"1274":54600,"1275":160100,"1276":62200,"1277":230800,"1278":242300,"1279":339600,"1280":273000,"1281":29800,"1282":27500,"1283":465300,"1284":61600,"1285":198100,"1286":53200,"1287":432000,"1288":135800,"1289":103200,"1290":27000,"1291":210400,"1292":217000,"1293":27400,"1294":10900,"1295":529400,"1296":38600,"1297":69400,"1298":94900,"1299":48000,"1300":97900,"1301":19000,"1302":354900,"1303":355800,"1304":560700,"1305":23500,"1306":25200,"1307":12400,"1308":90300,"1309":38500,"1310":38300,"1311":15300,"1312":172500,"1313":92400,"1314":147700,"1315":32600,"1316":60000,"1317":239700,"1318":70100,"1319":301000,"1320":633900,"1321":65099,"1322":50300,"1323":48800,"1324":1500000,"1325":236300,"1326":0,"1327":57000,"1328":100300,"1329":30700,"1330":46500,"1331":25300,"1332":1400000,"1333":155300,"1334":284800,"1335":32400,"1336":283400,"1337":67200,"1338":57200,"1339":48800,"1340":172800,"1341":66100,"1342":18000,"1343":52100,"1344":66400,"1345":14100,"1346":240400,"1347":253400,"1348":406400,"1349":42600,"1350":120100,"1351":165700,"1352":124500,"1353":57300,"1354":33800,"1355":108400,"1356":98900,"1357":195000,"1358":27200,"1359":48000,"1360":22200,"1361":114600,"1362":242700,"1363":231200,"1364":17300,"1365":217700,"1366":75800,"1367":85600,"1368":23700,"1369":544400,"1370":362200,"1371":91100,"1372":57000,"1373":129800,"1374":93900,"1375":40700,"1376":8500,"1377":450600,"1378":221600,"1379":249000,"1380":34500,"1381":76300,"1382":373900,"1383":67800,"1384":21100,"1385":114700,"1386":183300,"1387":161900,"1388":25300,"1389":88700,"1390":77500,"1391":32200,"1392":79800,"1393":125700,"1394":97600,"1395":78400,"1396":137500,"1397":218100,"1398":29800,"1399":33800,"1400":214400,"1401":65600,"1402":53600,"1403":27000,"1404":83000,"1405":223300,"1406":198000,"1407":19400,"1408":444500,"1409":183900,"1410":225200,"1411":33900,"1412":32100,"1413":94600,"1414":76600,"1415":88800,"1416":19200,"1417":70700,"1418":130199,"1419":132300,"1420":73400,"1421":42000,"1422":96600,"1423":362600,"1424":23400,"1425":8100,"1426":213800,"1427":106900,"1428":11300,"1429":0,"1430":484700,"1431":52200,"1432":265100,"1433":26200,"1434":219000,"1435":252700,"1436":174700,"1437":71700,"1438":19600,"1439":311200,"1440":26400,"1441":16500,"1442":640100,"1443":217900,"1444":0,"1445":27800,"1446":71300,"1447":371900,"1448":54600,"1449":968800,"1450":165700,"1451":17300,"1452":458600,"1453":0,"1454":69400,"1455":336300,"1456":13700,"1457":136400,"1458":94900,"1459":27400,"1460":89900,"1461":275600,"1462":59200,"1463":42600,"1464":16800,"1465":32800,"1466":24100,"1467":69100,"1468":29800,"1469":20500,"1470":12600,"1471":108900,"1472":170400,"1473":265700,"1474":95800,"1475":180500,"1476":94900,"1477":78700,"1478":34200,"1479":93900,"1480":888400,"1481":62000,"1482":291000,"1483":32200,"1484":325300,"1485":196000,"1486":194300,"1487":86200,"1488":12200,"1489":149000,"1490":157300,"1491":82900,"1492":25900,"1493":158400,"1494":174600,"1495":38100,"1496":24000,"1497":71900,"1498":241600,"1499":26700,"1500":21500,"1501":329900,"1502":51800,"1503":19100,"1504":198900,"1505":341100,"1506":146700,"1507":478400,"1508":51200,"1509":147700,"1510":16000,"1511":165600,"1512":57300,"1513":46500,"1514":22600,"1515":66700,"1516":0,"1517":31800,"1518":75200,"1519":289100,"1520":31300,"1521":23100,"1522":99600,"1523":146000,"1524":275900,"1525":234200,"1526":30900,"1527":42400,"1528":90300,"1529":52300,"1530":40200,"1531":132800,"1532":109600,"1533":29600,"1534":58400,"1535":124600,"1536":284600,"1537":43700,"1538":128000,"1539":8500,"1540":93400,"1541":255600,"1542":35700,"1543":39400,"1544":65600,"1545":57900,"1546":64099,"1547":39500,"1548":92500,"1549":49000,"1550":36600,"1551":29600,"1552":324100,"1553":49900,"1554":29900,"1555":32800,"1556":93000,"1557":68900,"1558":56300,"1559":17800,"1560":111300,"1561":48500,"1562":38300,"1563":16000,"1564":259600,"1565":84400,"1566":219900,"1567":56800,"1568":868100,"1569":365800,"1570":27700,"1571":125500,"1572":56800,"1573":272100,"1574":25000,"1575":97700,"1576":192200,"1577":43900,"1578":31800,"1579":366900,"1580":81000,"1581":66000,"1582":34400,"1583":363600,"1584":198100,"1585":87700,"1586":14100,"1587":121200,"1588":39600,"1589":47900,"1590":28500,"1591":124100,"1592":250100,"1593":94500,"1594":37600,"1595":105400,"1596":408600,"1597":256200,"1598":23500,"1599":155900,"1600":241100,"1601":82700,"1602":74600,"1603":91000,"1604":123600,"1605":88100,"1606":50400,"1607":38400,"1608":140000,"1609":104100,"1610":523700,"1611":85000,"1612":142700,"1613":48200,"1614":57800,"1615":37700,"1616":160800,"1617":98300,"1618":40400,"1619":22600,"1620":107400,"1621":74500,"1622":72800,"1623":31400,"1624":106500,"1625":69400,"1626":65400,"1627":104100,"1628":77600,"1629":80600,"1630":21100,"1631":99800,"1632":312300,"1633":43400,"1634":61700,"1635":131900,"1636":61900,"1637":310700,"1638":29600,"1639":66400,"1640":245200,"1641":218000,"1642":48100,"1643":88700,"1644":188300,"1645":38500,"1646":63500,"1647":36300,"1648":131500,"1649":34300,"1650":119100,"1651":58400,"1652":70800,"1653":34900,"1654":87700,"1655":68500,"1656":32100,"1657":15600,"1658":513500,"1659":63400,"1660":114900,"1661":288500,"1662":76500,"1663":21900,"1664":68000,"1665":354800,"1666":119300,"1667":33700,"1668":75800,"1669":32900,"1670":82700,"1671":25900,"1672":652200,"1673":298900,"1674":241300,"1675":52100,"1676":55400,"1677":32600,"1678":63600,"1679":245900,"1680":23100,"1681":142100,"1682":132900,"1683":48600,"1684":50200,"1685":150000,"1686":92000,"1687":202200,"1688":33200,"1689":34600,"1690":203200,"1691":159400,"1692":70300,"1693":64200,"1694":221600,"1695":45700,"1696":42100,"1697":108300,"1698":50800,"1699":150900,"1700":112900,"1701":65200,"1702":39600,"1703":56200,"1704":144900,"1705":107100,"1706":74100,"1707":86200,"1708":62800,"1709":209700,"1710":40700,"1711":73000,"1712":81000,"1713":104400,"1714":52300,"1715":61100,"1716":64400,"1717":58800,"1718":81900,"1719":407800,"1720":60800,"1721":61800,"1722":48800,"1723":145300,"1724":133000,"1725":102400,"1726":60400,"1727":23500,"1728":93900,"1729":33500,"1730":20100,"1731":0,"1732":68000,"1733":35100,"1734":14800,"1735":135500,"1736":55400,"1737":121700,"1738":237200,"1739":94300,"1740":58900,"1741":29100,"1742":87300,"1743":222400,"1744":56200,"1745":24200,"1746":0,"1747":92800,"1748":52400,"1749":71500,"1750":195100,"1751":53800,"1752":23200,"1753":365000,"1754":190000,"1755":32900,"1756":269300,"1757":164700,"1758":57800,"1759":176000,"1760":158600,"1761":80900,"1762":81500,"1763":76000,"1764":166100,"1765":102400,"1766":174200,"1767":246800,"1768":193500,"1769":0,"1770":47100,"1771":32800,"1772":99200,"1773":67400,"1774":62100,"1775":81500,"1776":118400,"1777":231900,"1778":24200,"1779":167200,"1780":495800,"1781":161100,"1782":116600,"1783":83400,"1784":113700,"1785":28800,"1786":64900,"1787":73300,"1788":91500,"1789":281200,"1790":278600,"1791":60800,"1792":68700,"1793":53500,"1794":62800,"1795":31200,"1796":27500,"1797":220000,"1798":83800,"1799":73500,"1800":184000,"1801":366800,"1802":242900,"1803":64300,"1804":102500,"1805":294800,"1806":40200,"1807":36800,"1808":31800,"1809":122500,"1810":55500,"1811":51600,"1812":41900,"1813":72600,"1814":177800,"1815":49500,"1816":56600,"1817":42000,"1818":183300,"1819":13600,"1820":309200,"1821":86800,"1822":79400,"1823":218300,"1824":95500,"1825":54200,"1826":147900,"1827":21900,"1828":53600,"1829":38700,"1830":47200,"1831":29100,"1832":103100,"1833":54100,"1834":55300,"1835":67300,"1836":103500,"1837":202200,"1838":258500,"1839":0,"1840":81900,"1841":147300,"1842":28100,"1843":230600,"1844":59500,"1845":37100,"1846":41400,"1847":63000,"1848":61000,"1849":113100,"1850":34300,"1851":69300,"1852":153300,"1853":30600,"1854":282100,"1855":262500,"1856":272900,"1857":29500,"1858":67800,"1859":254100,"1860":24100,"1861":66600,"1862":55500,"1863":37700,"1864":11100,"1865":84200,"1866":68400,"1867":35500,"1868":26700,"1869":72100,"1870":49600,"1871":44500,"1872":24700,"1873":65200,"1874":48400,"1875":44600,"1876":38000,"1877":63400,"1878":50500,"1879":36800,"1880":30500,"1881":110500,"1882":64800,"1883":48200,"1884":67900,"1885":97900,"1886":55500,"1887":30300,"1888":22800,"1889":166700,"1890":63800,"1891":0,"1892":10000,"1893":162800,"1894":43400,"1895":43800,"1896":25500,"1897":423800,"1898":73400,"1899":189000,"1900":19500,"1901":97600,"1902":80100,"1903":47200,"1904":31100,"1905":73000,"1906":76300,"1907":89300,"1908":28700,"1909":98500,"1910":60200,"1911":32700,"1912":53800,"1913":75900,"1914":57000,"1915":46600,"1916":30300,"1917":74300,"1918":81400,"1919":38700,"1920":24400,"1921":43900,"1922":37100,"1923":28100,"1924":20800,"1925":61400,"1926":55300,"1927":42900,"1928":16500,"1929":176200,"1930":90800,"1931":54200,"1932":35300,"1933":53600,"1934":47300,"1935":47200,"1936":14300,"1937":339900,"1938":88300,"1939":52300,"1940":30500,"1941":88200,"1942":73300,"1943":37300,"1944":0,"1945":171300,"1946":44200,"1947":37400,"1948":42000,"1949":67700,"1950":54300,"1951":229800,"1952":69300,"1953":57700,"1954":21400,"1955":73000,"1956":52100,"1957":69600,"1958":233800,"1959":60900,"1960":31600,"1961":67900,"1962":36700,"1963":88900,"1964":201600,"1965":539900,"1966":175500,"1967":66300,"1968":179400,"1969":17300,"1970":74400,"1971":211100,"1972":58800,"1973":174300,"1974":18200,"1975":59100,"1976":226400,"1977":247000,"1978":73800,"1979":43200,"1980":46300,"1981":33100,"1982":97600,"1983":92700,"1984":66700,"1985":60100,"1986":22800,"1987":36900,"1988":4800,"1989":76000,"1990":138300,"1991":65700,"1992":37200,"1993":96100,"1994":55900,"1995":48000,"1996":44600,"1997":104400,"1998":50300,"1999":35600,"2000":14600,"2001":291700,"2002":138500,"2003":622700,"2004":52300,"2005":76400,"2006":29600,"2007":29100,"2008":319000,"2009":60800,"2010":35400,"2011":30800,"2012":58000,"2013":36700,"2014":54500,"2015":47200,"2016":13500,"2017":37500,"2018":49500,"2019":262700,"2020":70200,"2021":33100,"2022":112200,"2023":188100,"2024":333400,"2025":40000,"2026":273700,"2027":312000,"2028":122400,"2029":88900,"2030":28300,"2031":35100,"2032":43800,"2033":64099,"2034":77400,"2035":50400,"2036":69400,"2037":33300,"2038":39300,"2039":62600,"2040":117000,"2041":54900,"2042":56900,"2043":41100,"2044":87600,"2045":90100,"2046":65900,"2047":50000,"2048":15500,"2049":129699,"2050":36400,"2051":20200,"2052":115200,"2053":52700,"2054":51600,"2055":93500,"2056":38700,"2057":32299,"2058":21600,"2059":72200,"2060":33100,"2061":65400,"2062":194100,"2063":126300,"2064":89700,"2065":50800,"2066":75900,"2067":40400,"2068":32100,"2069":23200,"2070":131000,"2071":89300,"2072":88600,"2073":91400,"2074":68000,"2075":39000,"2076":85900,"2077":105400,"2078":170500,"2079":55900,"2080":57900,"2081":78300,"2082":66000,"2083":46900,"2084":14300,"2085":199000,"2086":65600,"2087":52300,"2088":0,"2089":84600,"2090":240700,"2091":58700,"2092":16000,"2093":102900,"2094":88300,"2095":198400,"2096":20500,"2097":81500,"2098":280500,"2099":79700,"2100":22000,"2101":198600,"2102":72000,"2103":49100,"2104":52700,"2105":120100,"2106":57900,"2107":61500,"2108":59200,"2109":76500,"2110":81600,"2111":37600,"2112":15800,"2113":82200,"2114":48900,"2115":67700,"2116":43300,"2117":65200,"2118":41100,"2119":14300,"2120":70100,"2121":278200,"2122":52800,"2123":14400,"2124":60800,"2125":103900,"2126":34600,"2127":42600,"2128":38000,"2129":17800,"2130":249200,"2131":58500,"2132":39100,"2133":20300,"2134":62100,"2135":295600,"2136":37600,"2137":19300,"2138":85200,"2139":65300,"2140":65099,"2141":32600,"2142":165200,"2143":123400,"2144":118000,"2145":109400,"2146":90600,"2147":85300,"2148":106200,"2149":81000,"2150":75200,"2151":71900,"2152":83700,"2153":69800,"2154":64400,"2155":58300,"2156":68300,"2157":107800,"2158":50000,"2159":15100,"2160":41700,"2161":50600,"2162":40200,"2163":20600,"2164":67300,"2165":67100,"2166":58000,"2167":40900,"2168":55100,"2169":51900,"2170":11100,"2171":42800,"2172":32900,"2173":63600,"2174":15300,"2175":41500,"2176":21700,"2177":53300,"2178":46700,"2179":27300,"2180":25100,"2181":35600,"2182":36100,"2183":11600,"2184":17300,"2185":53700,"2186":50500,"2187":28100,"2188":21300,"2189":69300,"2190":47400,"2191":36000,"2192":20700,"2193":182900,"2194":32400,"2195":35800,"2196":26400,"2197":41200,"2198":34800,"2199":23900,"2200":21100,"2201":70100,"2202":36400,"2203":26300,"2204":9200,"2205":79100,"2206":43000,"2207":274600,"2208":14400,"2209":53700,"2210":45000,"2211":229000,"2212":22200,"2213":73900,"2214":214100,"2215":59700,"2216":39600,"2217":205900,"2218":19700,"2219":23200,"2220":62700,"2221":174700,"2222":20100,"2223":50000,"2224":54700,"2225":52900,"2226":12600,"2227":130300,"2228":45000,"2229":18700,"2230":101400,"2231":86500,"2232":35700,"2233":12500,"2234":275800,"2235":74800,"2236":26200,"2237":45200,"2238":51900,"2239":45800,"2240":40600,"2241":16600,"2242":63100,"2243":35700,"2244":216200,"2245":14400,"2246":66100,"2247":42200,"2248":9500,"2249":129600,"2250":34600,"2251":112800,"2252":20900,"2253":67700,"2254":49400,"2255":22900,"2256":61900,"2257":39900,"2258":35100,"2259":66600,"2260":47000,"2261":61600,"2262":24500,"2263":61600,"2264":242000,"2265":32900,"2266":90700,"2267":44100,"2268":23700,"2269":11200,"2270":76900,"2271":103200,"2272":21800,"2273":107600,"2274":61700,"2275":37400,"2276":72400,"2277":49000,"2278":23300,"2279":62200,"2280":37500,"2281":49900,"2282":19300,"2283":68700,"2284":76200,"2285":45500,"2286":13700,"2287":65600,"2288":63000,"2289":47300,"2290":25900,"2291":69400,"2292":55300,"2293":45700,"2294":20300,"2295":77400,"2296":55600,"2297":63200,"2298":26500,"2299":73200,"2300":40300,"2301":51800,"2302":27200,"2303":308600,"2304":42200,"2305":56600,"2306":33600,"2307":97000,"2308":68000,"2309":50300,"2310":18100,"2311":72300,"2312":76600,"2313":36000,"2314":26100,"2315":52000,"2316":40200,"2317":29800,"2318":11200,"2319":71700,"2320":69900,"2321":37500,"2322":21400,"2323":115200,"2324":39200,"2325":67900,"2326":26200,"2327":77000,"2328":45000,"2329":34200,"2330":8200,"2331":84400,"2332":38300,"2333":19200,"2334":79700,"2335":105700,"2336":55000,"2337":31400,"2338":59600,"2339":50600,"2340":59500,"2341":35800,"2342":78100,"2343":73500,"2344":99000,"2345":35700,"2346":68000,"2347":115500,"2348":73900,"2349":73700,"2350":78900,"2351":59200,"2352":28000,"2353":76300,"2354":70000,"2355":86900,"2356":32200,"2357":74300,"2358":95600,"2359":92600,"2360":33700,"2361":104800,"2362":63000,"2363":54400,"2364":19800,"2365":80100,"2366":54900,"2367":75500,"2368":12200,"2369":85600,"2370":43600,"2371":71900,"2372":80600,"2373":57600,"2374":32299,"2375":78600,"2376":51800,"2377":44500,"2378":57600,"2379":84700,"2380":255300,"2381":45100,"2382":36900,"2383":9500,"2384":75700,"2385":54700,"2386":64800,"2387":59600,"2388":51100,"2389":38700,"2390":77500,"2391":122200,"2392":45200,"2393":22600,"2394":63300,"2395":41500,"2396":41400,"2397":16100,"2398":42500,"2399":54800,"2400":46300,"2401":9700,"2402":62800,"2403":46700,"2404":33900,"2405":25900,"2406":72400,"2407":90900,"2408":51500,"2409":15400,"2410":48900,"2411":61000,"2412":45600,"2413":19100,"2414":59600,"2415":66500,"2416":67400,"2417":25200,"2418":51500,"2419":40900,"2420":15900,"2421":28400,"2422":66100,"2423":64200,"2424":69100,"2425":8400,"2426":51100},"topics":{"0":"String,Stack,Simulation,","1":"Array,Hash Table,","2":"Linked List,Math,Recursion,","3":"Array,Binary Search,Divide and Conquer,","4":"String,","5":"Math,","6":"Math,","7":"String,Dynamic Programming,Recursion,","8":"Array,Two Pointers,Greedy,","9":"Hash Table,Math,String,","10":"Hash Table,Math,String,","11":"String,Trie,","12":"Array,Two Pointers,Sorting,","13":"Array,Two Pointers,Sorting,","14":"Hash Table,String,Backtracking,","15":"Array,Two Pointers,Sorting,","16":"Linked List,Two Pointers,","17":"String,Stack,","18":"Linked List,Recursion,","19":"String,Dynamic Programming,Backtracking,","20":"Linked List,Divide and Conquer,Heap (Priority Queue),Merge Sort,","21":"Linked List,Recursion,","22":"Linked List,Recursion,","23":"Array,Two Pointers,","24":"Array,Two Pointers,","25":"Two Pointers,String,String Matching,","26":"Math,Bit Manipulation,","27":"Hash Table,String,Sliding Window,","28":"Array,Two Pointers,","29":"String,Dynamic Programming,Stack,","30":"Array,Binary Search,","31":"Array,Binary Search,","32":"Array,Binary Search,","33":"Array,Hash Table,Matrix,","34":"Array,Hash Table,Backtracking,Matrix,","35":"String,","36":"Array,Backtracking,","37":"Array,Backtracking,","38":"Array,Hash Table,","39":"Array,Two Pointers,Dynamic Programming,Stack,Monotonic Stack,","40":"Math,String,Simulation,","41":"String,Dynamic Programming,Greedy,Recursion,","42":"Array,Dynamic Programming,Greedy,","43":"Array,Backtracking,","44":"Array,Backtracking,","45":"Array,Math,Matrix,","46":"Array,Hash Table,String,Sorting,","47":"Math,Recursion,","48":"Array,Backtracking,","49":"Backtracking,","50":"Array,Divide and Conquer,Dynamic Programming,","51":"Array,Matrix,Simulation,","52":"Array,Dynamic Programming,Greedy,","53":"Array,Sorting,","54":"Array,","55":"String,","56":"Math,Recursion,","57":"Linked List,Two Pointers,","58":"Math,Dynamic Programming,Combinatorics,","59":"Array,Dynamic Programming,Matrix,","60":"Array,Dynamic Programming,Matrix,","61":"String,","62":"Math,String,Bit Manipulation,Simulation,","63":"Array,String,Simulation,","64":"Math,Binary Search,","65":"Math,Dynamic Programming,Memoization,","66":"String,Stack,","67":"String,Dynamic Programming,","68":"Array,Binary Search,Matrix,","69":"Array,Two Pointers,Sorting,","70":"Hash Table,String,Sliding Window,","71":"Backtracking,","72":"Array,Backtracking,Bit Manipulation,","73":"Array,String,Backtracking,Matrix,","74":"Array,Two Pointers,","75":"Array,Binary Search,","76":"Linked List,Two Pointers,","77":"Linked List,","78":"Array,Stack,Monotonic Stack,","79":"Array,Dynamic Programming,Stack,Matrix,Monotonic Stack,","80":"Linked List,Two Pointers,","81":"String,Dynamic Programming,","82":"Array,Two Pointers,Sorting,","83":"Math,Backtracking,Bit Manipulation,","84":"Array,Backtracking,Bit Manipulation,","85":"String,Dynamic Programming,","86":"Linked List,","87":"Stack,Tree,Depth-First Search,Binary Tree,","88":"Dynamic Programming,Backtracking,Tree,Binary Search Tree,Binary Tree,","89":"Math,Dynamic Programming,Tree,Binary Search Tree,Binary Tree,","90":"String,Dynamic Programming,","91":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","92":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","93":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","94":"Tree,Breadth-First Search,Binary Tree,","95":"Tree,Breadth-First Search,Binary Tree,","96":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","97":"Array,Hash Table,Divide and Conquer,Tree,Binary Tree,","98":"Array,Hash Table,Divide and Conquer,Tree,Binary Tree,","99":"Array,Divide and Conquer,Tree,Binary Search Tree,Binary Tree,","100":"Linked List,Divide and Conquer,Tree,Binary Search Tree,Binary Tree,","101":"Tree,Depth-First Search,Binary Tree,","102":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","103":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","104":"Backtracking,Tree,Depth-First Search,Binary Tree,","105":"Linked List,Stack,Tree,Depth-First Search,Binary Tree,","106":"String,Dynamic Programming,","107":"Linked List,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","108":"Linked List,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","109":"Array,Dynamic Programming,","110":"Array,Dynamic Programming,","111":"Array,Dynamic Programming,","112":"Array,Dynamic Programming,","113":"Array,Dynamic Programming,Greedy,","114":"Array,Dynamic Programming,","115":"Dynamic Programming,Tree,Depth-First Search,Binary Tree,","116":"Two Pointers,String,","117":"Hash Table,String,Backtracking,Breadth-First Search,","118":"Hash Table,String,Breadth-First Search,","119":"Array,Hash Table,Union Find,","120":"Tree,Depth-First Search,Binary Tree,","121":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","122":"String,Dynamic Programming,Backtracking,","123":"Hash Table,Depth-First Search,Breadth-First Search,Graph,","124":"Array,Greedy,","125":"Array,Greedy,","126":"Array,Bit Manipulation,","127":"Array,Bit Manipulation,","128":"Hash Table,Linked List,","129":"Array,Hash Table,String,Dynamic Programming,Trie,Memoization,","130":"Array,Hash Table,String,Dynamic Programming,Backtracking,Trie,Memoization,","131":"Hash Table,Linked List,Two Pointers,","132":"Hash Table,Linked List,Two Pointers,","133":"Linked List,Two Pointers,Stack,Recursion,","134":"Stack,Tree,Depth-First Search,Binary Tree,","135":"Stack,Tree,Depth-First Search,Binary Tree,","136":"Hash Table,Linked List,Design,Doubly-Linked List,","137":"Linked List,Sorting,","138":"Linked List,Two Pointers,Divide and Conquer,Sorting,Merge Sort,","139":"Array,Hash Table,Math,Geometry,","140":"Array,Math,Stack,","141":"Two Pointers,String,","142":"Array,Dynamic Programming,","143":"Array,Binary Search,","144":"Array,Binary Search,","145":"Stack,Design,","146":"Hash Table,Linked List,Two Pointers,","147":"Array,Binary Search,","148":"Array,Sorting,Bucket Sort,Radix Sort,","149":"Hash Table,Math,String,","150":"Array,Two Pointers,Binary Search,","151":"Math,String,","152":"Array,Hash Table,Divide and Conquer,Sorting,Counting,","153":"Math,String,","154":"Math,","155":"Array,Dynamic Programming,Matrix,","156":"Database,","157":"Database,","158":"Database,","159":"Database,","160":"Array,String,Greedy,Sorting,","161":"Database,","162":"Database,","163":"Database,","164":"Database,","165":"Database,","166":"Database,","167":"Hash Table,String,Bit Manipulation,Sliding Window,Rolling Hash,Hash Function,","168":"Array,Dynamic Programming,","169":"Array,Math,Two Pointers,","170":"Divide and Conquer,Bit Manipulation,","171":"Shell,","172":"Shell,","173":"Shell,","174":"Shell,","175":"Database,","176":"Database,","177":"Array,Dynamic Programming,","178":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","179":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","180":"Bit Manipulation,","181":"Hash Table,Math,Two Pointers,","182":"Linked List,Recursion,","183":"Array,Math,Enumeration,Number Theory,","184":"Hash Table,String,","185":"Linked List,Recursion,","186":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","187":"Hash Table,String,Design,Trie,","188":"Array,Binary Search,Sliding Window,Prefix Sum,","189":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","190":"String,Depth-First Search,Design,Trie,","191":"Array,String,Backtracking,Trie,Matrix,","192":"Array,Dynamic Programming,","193":"String,Rolling Hash,String Matching,Hash Function,","194":"Array,Divide and Conquer,Sorting,Heap (Priority Queue),Quickselect,","195":"Array,Backtracking,","196":"Array,Hash Table,Sorting,","197":"Array,Divide and Conquer,Binary Indexed Tree,Segment Tree,Line Sweep,Heap (Priority Queue),Ordered Set,","198":"Array,Hash Table,Sliding Window,","199":"Array,Sliding Window,Sorting,Bucket Sort,Ordered Set,","200":"Array,Dynamic Programming,Matrix,","201":"Binary Search,Bit Manipulation,Tree,Binary Tree,","202":"Stack,Design,Queue,","203":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","204":"Math,String,Stack,","205":"Array,","206":"Array,Hash Table,Sorting,Counting,","207":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","208":"Math,Bit Manipulation,Recursion,","209":"Stack,Design,Queue,","210":"Math,Dynamic Programming,Recursion,","211":"Linked List,Two Pointers,Stack,Recursion,","212":"Array,Prefix Sum,","213":"Array,Binary Search,Divide and Conquer,Matrix,","214":"Math,String,Dynamic Programming,Recursion,Memoization,","215":"Hash Table,String,Sorting,","216":"String,Backtracking,Tree,Depth-First Search,Binary Tree,","217":"Math,Simulation,Number Theory,","218":"Array,Bit Manipulation,","219":"Database,","220":"Hash Table,Math,Dynamic Programming,Heap (Priority Queue),","221":"Array,Hash Table,Math,Binary Search,Bit Manipulation,Sorting,","222":"Math,String,Recursion,","223":"Array,Sorting,Counting Sort,","224":"Array,Binary Search,","225":"Binary Search,Interactive,","226":"Math,Dynamic Programming,Breadth-First Search,","227":"Math,String,Backtracking,","228":"Array,Two Pointers,","229":"Array,Design,Iterator,","230":"Array,Two Pointers,Binary Search,Bit Manipulation,","231":"Array,Matrix,Simulation,","232":"Hash Table,String,","233":"Math,Brainteaser,Game Theory,","234":"Two Pointers,Design,Sorting,Heap (Priority Queue),Data Stream,","235":"String,Tree,Depth-First Search,Breadth-First Search,Design,Binary Tree,","236":"Hash Table,String,Counting,","237":"Array,Binary Search,Dynamic Programming,","238":"String,Backtracking,Breadth-First Search,","239":"Array,Design,Matrix,Prefix Sum,","240":"String,Backtracking,","241":"Array,Design,Binary Indexed Tree,Segment Tree,","242":"Array,Dynamic Programming,","243":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","244":"Array,Dynamic Programming,","245":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","246":"String,Stack,Greedy,Monotonic Stack,","247":"Array,String,Bit Manipulation,","248":"Math,Brainteaser,","249":"Array,Two Pointers,Stack,Greedy,Monotonic Stack,","250":"Array,Dynamic Programming,Breadth-First Search,","251":"Array,Divide and Conquer,Greedy,Sorting,Quickselect,","252":"Math,Recursion,","253":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","254":"Linked List,","255":"Array,Dynamic Programming,Depth-First Search,Breadth-First Search,Graph,Topological Sort,Memoization,Matrix,","256":"Array,Greedy,","257":"String,Stack,Tree,Binary Tree,","258":"Depth-First Search,Graph,Eulerian Circuit,","259":"Array,Greedy,","260":"Array,Math,Geometry,","261":"Array,Hash Table,String,Trie,","262":"Dynamic Programming,Tree,Depth-First Search,Binary Tree,","263":"Dynamic Programming,Bit Manipulation,","264":"Stack,Tree,Depth-First Search,Design,Queue,Iterator,","265":"Math,Bit Manipulation,Recursion,","266":"Math,Dynamic Programming,","267":"Two Pointers,String,","268":"Two Pointers,String,","269":"Array,Hash Table,Two Pointers,Binary Search,Sorting,","270":"Array,Hash Table,Two Pointers,Binary Search,Sorting,","271":"Binary Search,Design,Ordered Set,","272":"Array,Binary Search,Dynamic Programming,Sorting,","273":"Hash Table,Linked List,Design,Heap (Priority Queue),","274":",","275":"Array,Binary Search,Matrix,Prefix Sum,Ordered Set,","276":"Math,Depth-First Search,Breadth-First Search,","277":"Math,Binary Search,","278":"Array,Math,Dynamic Programming,Sorting,","279":"Math,Bit Manipulation,","280":"Math,Divide and Conquer,","281":"Array,Heap (Priority Queue),","282":"Binary Search,Interactive,","283":"Math,Dynamic Programming,Game Theory,","284":"Array,Dynamic Programming,Greedy,","285":"Array,Dynamic Programming,","286":"Array,Hash Table,Math,Design,Randomized,","287":"Array,Hash Table,Math,Design,Randomized,","288":"Linked List,Math,Reservoir Sampling,Randomized,","289":"Hash Table,String,Counting,","290":"Array,Math,Randomized,","291":"String,Stack,Depth-First Search,","292":"Depth-First Search,Trie,","293":"Hash Table,String,Queue,Counting,","294":"String,Stack,Depth-First Search,","295":"Hash Table,String,Bit Manipulation,Sorting,","296":"Math,Recursion,","297":"Array,Line Sweep,","298":"Two Pointers,String,Dynamic Programming,","299":"String,Stack,Recursion,","300":"Hash Table,String,Divide and Conquer,Sliding Window,","301":"Array,Math,Dynamic Programming,","302":"Dynamic Programming,Greedy,Bit Manipulation,Memoization,","303":"Hash Table,Math,Reservoir Sampling,Randomized,","304":"Array,String,Depth-First Search,Breadth-First Search,Union Find,Graph,Shortest Path,","305":"Math,Binary Search,","306":"Backtracking,Bit Manipulation,","307":"Array,Dynamic Programming,","308":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","309":"Math,Bit Manipulation,","310":"Array,Binary Indexed Tree,Segment Tree,Sorting,","311":"Array,Breadth-First Search,Heap (Priority Queue),Matrix,","312":"Hash Table,String,Greedy,","313":"Array,Binary Search,Dynamic Programming,Greedy,Prefix Sum,","314":"Math,String,Simulation,","315":"Array,Dynamic Programming,Sliding Window,","316":"Array,Sorting,","317":"Math,String,Simulation,","318":"Array,Dynamic Programming,","319":"Array,Depth-First Search,Breadth-First Search,Matrix,","320":"Array,Depth-First Search,Matrix,","321":"Hash Table,Math,String,","322":"Hash Table,String,Sliding Window,","323":"Array,Divide and Conquer,Tree,Matrix,","324":"Tree,Breadth-First Search,","325":"Hash Table,Linked List,Design,Doubly-Linked List,","326":"Hash Table,String,Breadth-First Search,","327":"String,","328":"Array,Dynamic Programming,Greedy,Sorting,","329":"Array,Binary Search,Sorting,","330":"Tree,Depth-First Search,Binary Tree,","331":"Hash Table,String,Sliding Window,","332":"Trie,","333":"Math,Binary Search,","334":"Array,Hash Table,","335":"Two Pointers,String,","336":"Linked List,Math,Stack,","337":"Array,Dynamic Programming,","338":"Array,Hash Table,Math,","339":"Array,Hash Table,","340":"Tree,Binary Search Tree,Binary Tree,","341":"Hash Table,String,Sorting,Heap (Priority Queue),Bucket Sort,Counting,","342":"Array,Greedy,Sorting,","343":"Array,Math,","344":"Array,Hash Table,","345":"Array,Binary Search,Stack,Monotonic Stack,Ordered Set,","346":"Array,Hash Table,Two Pointers,","347":"Math,Dynamic Programming,Combinatorics,","348":"String,String Matching,","349":"Hash Table,Linked List,Design,Doubly-Linked List,","350":"Bit Manipulation,","351":"Array,Math,Sorting,","352":"Array,Depth-First Search,Breadth-First Search,Matrix,","353":"Math,Dynamic Programming,Bit Manipulation,Memoization,Game Theory,Bitmask,","354":"String,Dynamic Programming,","355":"String,","356":"Math,Rejection Sampling,Randomized,Probability and Statistics,","357":"Array,String,Dynamic Programming,Depth-First Search,Trie,","358":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","359":"Array,String,Dynamic Programming,","360":"Array,Two Pointers,Binary Search,Sorting,","361":"Bit Manipulation,","362":"Array,Math,Bit Manipulation,","363":"Math,Geometry,Rejection Sampling,Randomized,","364":"Math,Enumeration,","365":"Array,Hash Table,Sliding Window,Heap (Priority Queue),","366":"Two Pointers,String,","367":"String,","368":"Math,Binary Search,","369":"Array,","370":"Array,Math,Dynamic Programming,Recursion,Game Theory,","371":"String,Dynamic Programming,Stack,Breadth-First Search,Memoization,","372":"Array,Hash Table,Backtracking,Bit Manipulation,","373":"Math,","374":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","375":"Array,Dynamic Programming,Backtracking,","376":"Array,Simulation,","377":"Array,Hash Table,Stack,Monotonic Stack,","378":"Array,Math,Binary Search,Reservoir Sampling,Prefix Sum,Ordered Set,Randomized,","379":"Array,Matrix,Simulation,","380":"Array,Hash Table,String,","381":"Array,Greedy,Sorting,Heap (Priority Queue),","382":"Array,Stack,Monotonic Stack,","383":"Math,","384":"Array,Sorting,Heap (Priority Queue),","385":"Math,","386":"Hash Table,Tree,Depth-First Search,Binary Tree,","387":"Math,Dynamic Programming,Recursion,Memoization,","388":"Database,","389":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","390":"String,Dynamic Programming,Depth-First Search,Breadth-First Search,","391":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","392":"String,Dynamic Programming,","393":"Array,Greedy,","394":"Array,Dynamic Programming,","395":"Hash Table,Math,Reservoir Sampling,Randomized,","396":"String,","397":"String,","398":"Array,Hash Table,Two Pointers,String,Sorting,","399":"Array,Hash Table,Math,Prefix Sum,","400":"Array,Two Pointers,String,Sorting,","401":"Array,Hash Table,Prefix Sum,","402":"Array,Math,Binary Search,Prefix Sum,Randomized,","403":"Array,Depth-First Search,Breadth-First Search,Matrix,","404":"Tree,Depth-First Search,Breadth-First Search,Binary Search Tree,Binary Tree,","405":"Array,Hash Table,Two Pointers,Binary Search,Sorting,","406":"Hash Table,String,Design,Hash Function,","407":"Math,String,Simulation,","408":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","409":"Array,Math,String,Sorting,","410":"Two Pointers,String,","411":"Array,Dynamic Programming,Breadth-First Search,Matrix,","412":"Tree,Depth-First Search,Binary Tree,","413":"Array,Dynamic Programming,Memoization,","414":"Depth-First Search,Breadth-First Search,Union Find,Graph,","415":"Database,","416":"String,","417":"Dynamic Programming,","418":"Array,Math,Dynamic Programming,","419":"Array,Hash Table,","420":"Math,Two Pointers,String,","421":"Two Pointers,String,","422":"Divide and Conquer,Tree,","423":"Tree,Depth-First Search,Breadth-First Search,","424":"Array,Hash Table,Prefix Sum,","425":"Array,Greedy,Sorting,Counting Sort,","426":"Tree,Depth-First Search,Binary Tree,","427":"Math,String,","428":"Array,Matrix,Simulation,","429":"Hash Table,Two Pointers,String,Sliding Window,","430":"Database,","431":"Tree,Depth-First Search,String Matching,Binary Tree,Hash Function,","432":"Array,Hash Table,","433":"Dynamic Programming,","434":"Database,","435":"Array,Two Pointers,Stack,Greedy,Sorting,Monotonic Stack,","436":"String,Dynamic Programming,","437":"Database,","438":"Database,","439":"Database,","440":"Array,Math,Geometry,","441":"Stack,Tree,Depth-First Search,","442":"Stack,Tree,Depth-First Search,","443":"String,Stack,","444":"Math,String,Simulation,","445":",","446":"Array,Hash Table,Sliding Window,Sorting,Counting,","447":"Database,","448":"Database,","449":"Array,Math,","450":"Array,Hash Table,String,","451":"Dynamic Programming,","452":"Database,","453":"Database,","454":"Array,Greedy,","455":"String,Tree,Depth-First Search,Binary Tree,","456":"Database,","457":"Database,","458":"Array,Hash Table,String,","459":"Database,","460":"Array,Two Pointers,Binary Search,Greedy,Sorting,","461":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","462":"Database,","463":"Database,","464":"Array,Hash Table,Greedy,Sorting,Heap (Priority Queue),Counting,","465":"Array,Linked List,Design,Queue,","466":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","467":"Array,Greedy,","468":"Database,","469":"Database,","470":"Array,Math,Sorting,","471":"Dynamic Programming,","472":"Array,Greedy,Sorting,Heap (Priority Queue),","473":"Array,Hash Table,Greedy,Sliding Window,Sorting,Heap (Priority Queue),","474":"Math,Two Pointers,Binary Search,","475":"Array,Stack,","476":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","477":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Memoization,Bitmask,","478":"String,Dynamic Programming,","479":"Math,String,Simulation,","480":"Array,Linked List,Design,Queue,","481":"Array,Sliding Window,","482":"Array,Hash Table,Bit Manipulation,Sorting,","483":"Array,Dynamic Programming,Greedy,Sorting,","484":"Two Pointers,String,Dynamic Programming,","485":"Array,Hash Table,String,Trie,","486":"String,Greedy,Queue,","487":"Math,Dynamic Programming,","488":"Hash Table,Two Pointers,Tree,Depth-First Search,Breadth-First Search,Binary Search Tree,Binary Tree,","489":"Array,Divide and Conquer,Stack,Tree,Monotonic Stack,Binary Tree,","490":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","491":"String,Simulation,","492":"Array,Two Pointers,Binary Search,Sliding Window,Sorting,Heap (Priority Queue),","493":"Array,Hash Table,Greedy,Heap (Priority Queue),","494":"Array,Matrix,","495":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","496":"String,Dynamic Programming,","497":"Array,","498":"Array,Math,","499":"Math,Binary Search,","500":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","501":"Tree,Depth-First Search,Binary Tree,","502":"Math,Bit Manipulation,Depth-First Search,Breadth-First Search,","503":"Array,Dynamic Programming,Binary Indexed Tree,Segment Tree,","504":"Array,","505":"Array,Breadth-First Search,Heap (Priority Queue),Matrix,","506":"Hash Table,String,Depth-First Search,Design,Trie,","507":"Hash Table,String,Design,Trie,","508":"Array,Math,Backtracking,","509":"Two Pointers,String,Greedy,","510":"Array,Stack,Simulation,","511":"Depth-First Search,Breadth-First Search,Union Find,Graph,","512":"Depth-First Search,Breadth-First Search,Union Find,Graph,","513":"String,String Matching,","514":"Tree,Depth-First Search,Binary Tree,","515":"Dynamic Programming,","516":"Array,Dynamic Programming,","517":"Array,Hash Table,Tree,Depth-First Search,Breadth-First Search,","518":"Array,String,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","519":"Bit Manipulation,","520":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","521":"Two Pointers,String,","522":"Array,Hash Table,","523":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Memoization,Bitmask,","524":"Array,Segment Tree,Ordered Set,","525":"Tree,Binary Search Tree,Binary Tree,","526":"Tree,Binary Search Tree,Binary Tree,","527":"Tree,Design,Binary Search Tree,Heap (Priority Queue),Binary Tree,Data Stream,","528":"Array,Binary Search,","529":"Array,Hash Table,Linked List,Design,Hash Function,","530":"Array,Hash Table,Linked List,Design,Hash Function,","531":"Linked List,Design,","532":"String,","533":"Array,Hash Table,Math,Binary Search,Sorting,Randomized,","534":"String,Dynamic Programming,","535":"Array,Binary Search,Sliding Window,Prefix Sum,","536":"Array,Dynamic Programming,Greedy,","537":"Design,Segment Tree,Ordered Set,","538":"Array,","539":"Array,Binary Search,Dynamic Programming,Sliding Window,Rolling Hash,Hash Function,","540":"Array,Two Pointers,Binary Search,Sorting,","541":"Array,Hash Table,String,Trie,Sorting,","542":"Array,Hash Table,String,Depth-First Search,Breadth-First Search,Union Find,Sorting,","543":"Array,String,","544":"Array,Prefix Sum,","545":"Linked List,","546":"Hash Table,String,Stack,Sorting,","547":"Math,","548":"Array,Binary Search,Design,Segment Tree,Ordered Set,","549":"String,Dynamic Programming,","550":"Array,Binary Search,Design,Segment Tree,Prefix Sum,Ordered Set,","551":"Array,Depth-First Search,Breadth-First Search,Matrix,","552":"Array,Stack,Simulation,","553":"Hash Table,String,Stack,Recursion,","554":"Math,Greedy,","555":"Array,Stack,Monotonic Stack,","556":"Array,Hash Table,Dynamic Programming,","557":"Array,Dynamic Programming,Matrix,","558":"Depth-First Search,Breadth-First Search,Graph,Heap (Priority Queue),Shortest Path,","559":"Array,Binary Search,","560":"Array,Sorting,","561":"Array,Hash Table,String,","562":"Array,Depth-First Search,Breadth-First Search,Matrix,Simulation,","563":"Array,Hash Table,String,Breadth-First Search,","564":"Depth-First Search,Graph,Eulerian Circuit,","565":"Math,Binary Search,","566":"Bit Manipulation,Depth-First Search,Breadth-First Search,","567":"Array,Greedy,Sorting,","568":"String,Recursion,","569":"Hash Table,Two Pointers,String,Greedy,","570":"Array,Dynamic Programming,","571":"Greedy,Depth-First Search,Breadth-First Search,Union Find,Graph,","572":"Array,Matrix,","573":"Hash Table,String,Greedy,Sorting,Heap (Priority Queue),Counting,","574":"Array,Stack,Greedy,Sorting,Monotonic Stack,","575":"Array,Stack,Greedy,Sorting,Monotonic Stack,","576":"Hash Table,Math,String,Stack,Recursion,","577":"Hash Table,String,","578":"Array,Breadth-First Search,Matrix,","579":"Array,Math,","580":"Two Pointers,String,","581":"Array,Binary Search,Depth-First Search,Breadth-First Search,Union Find,Heap (Priority Queue),Matrix,","582":"Math,Bit Manipulation,Recursion,","583":"Math,","584":"Array,Hash Table,Math,Greedy,","585":"Array,Math,Bit Manipulation,Matrix,","586":"Tree,Depth-First Search,Breadth-First Search,Binary Search Tree,Binary Tree,","587":"String,Backtracking,Bit Manipulation,","588":"Depth-First Search,Breadth-First Search,Union Find,Graph,","589":"Array,Two Pointers,Binary Search,Sorting,Heap (Priority Queue),","590":"Dynamic Programming,Depth-First Search,Breadth-First Search,Graph,Heap (Priority Queue),Shortest Path,","591":"Math,Dynamic Programming,","592":"Array,Math,","593":"Dynamic Programming,","594":"Hash Table,String,Sorting,","595":"Array,Hash Table,String,Binary Search,Dynamic Programming,Trie,Sorting,","596":"Math,Binary Search,","597":"Array,Matrix,","598":"Array,Two Pointers,","599":"String,String Matching,","600":"Backtracking,Depth-First Search,Breadth-First Search,Graph,","601":"Array,Prefix Sum,","602":"Dynamic Programming,","603":"Array,Dynamic Programming,","604":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","605":"Array,Union Find,Matrix,","606":"Array,Hash Table,String,","607":"Array,String,","608":"Array,Greedy,Matrix,","609":"Math,Dynamic Programming,Probability and Statistics,","610":"Array,Two Pointers,String,","611":"Array,Math,Bit Manipulation,Brainteaser,Game Theory,","612":"Array,Hash Table,String,Counting,","613":"Array,Math,Geometry,","614":"Array,Dynamic Programming,Prefix Sum,","615":"Tree,Depth-First Search,Binary Tree,","616":"Array,Hash Table,Breadth-First Search,","617":"String,Backtracking,Enumeration,","618":"Array,Hash Table,Linked List,","619":",","620":",","621":"Array,Hash Table,String,Trie,","622":"Array,Two Pointers,String,","623":"Array,Hash Table,","624":"Array,Hash Table,Dynamic Programming,Sorting,","625":"String,","626":"Array,Two Pointers,Binary Search,Sorting,","627":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","628":"Hash Table,String,Dynamic Programming,","629":"Math,Enumeration,","630":"String,","631":"String,","632":"Array,Two Pointers,Bit Manipulation,Matrix,Simulation,","633":"Array,Hash Table,String,Sorting,","634":"Dynamic Programming,Tree,Depth-First Search,Graph,","635":"Array,Matrix,","636":"Math,Geometry,","637":"Math,Dynamic Programming,Sliding Window,Probability and Statistics,","638":"Two Pointers,String,Dynamic Programming,","639":"Array,Hash Table,Math,Matrix,","640":"String,Backtracking,","641":"Array,Math,String,Interactive,Game Theory,","642":"Two Pointers,String,Stack,Simulation,","643":"Array,Two Pointers,Dynamic Programming,Enumeration,","644":"Array,Hash Table,Greedy,Sorting,","645":"Dynamic Programming,Bit Manipulation,Breadth-First Search,Graph,Bitmask,","646":"Array,String,Prefix Sum,","647":"Array,","648":"Array,Segment Tree,Line Sweep,Ordered Set,","649":"Array,Depth-First Search,Graph,Topological Sort,","650":"Array,Binary Search,","651":"Array,Stack,Sorting,Monotonic Stack,","652":"String,Breadth-First Search,","653":"Design,Heap (Priority Queue),Ordered Set,","654":"String,Stack,","655":"Array,Greedy,Sorting,Heap (Priority Queue),","656":"Math,Geometry,Number Theory,","657":"Hash Table,String,","658":"Array,Greedy,","659":"Array,Greedy,Bit Manipulation,Matrix,","660":"Array,Binary Search,Queue,Sliding Window,Heap (Priority Queue),Prefix Sum,Monotonic Queue,","661":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","662":"Array,Bit Manipulation,Breadth-First Search,Matrix,","663":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","664":"Math,Number Theory,","665":"Array,Matrix,Simulation,","666":"Hash Table,Math,Sorting,Counting,Enumeration,","667":"Array,Two Pointers,Greedy,Sorting,","668":"Tree,Depth-First Search,Binary Tree,","669":"Array,Hash Table,Dynamic Programming,","670":"Array,Hash Table,Simulation,","671":"Array,Binary Search,","672":"Linked List,Two Pointers,","673":"Array,Math,Dynamic Programming,Game Theory,","674":"Math,Binary Search,","675":"Array,Dynamic Programming,","676":"String,Stack,","677":"Array,Two Pointers,Greedy,Sorting,","678":"Graph,Heap (Priority Queue),Shortest Path,","679":"Array,Math,Geometry,Matrix,","680":"Hash Table,String,Counting,","681":"Array,Matrix,Simulation,","682":"Depth-First Search,Breadth-First Search,Union Find,Graph,","683":"Array,Hash Table,Binary Search,Sorting,","684":"Array,Hash Table,Divide and Conquer,Tree,Binary Tree,","685":"Array,Hash Table,String,","686":"Array,Math,Sorting,","687":"Array,Math,Geometry,Matrix,","688":"Array,Hash Table,String,Sorting,","689":"Dynamic Programming,Tree,Recursion,Memoization,Binary Tree,","690":"Hash Table,Stack,Design,Ordered Set,","691":"Array,","692":"Array,Dynamic Programming,Bit Manipulation,","693":"Math,String,Sorting,","694":"Array,Design,Counting,Iterator,","695":"Stack,Design,Monotonic Stack,Data Stream,","696":"Array,Math,String,Binary Search,Dynamic Programming,","697":"String,Dynamic Programming,Prefix Sum,","698":"Array,Hash Table,Sliding Window,","699":"Array,Two Pointers,Sorting,","700":"Math,Enumeration,","701":"Array,Dynamic Programming,Stack,Monotonic Stack,","702":"Array,Math,","703":"Array,Math,Greedy,Sorting,","704":"Array,Hash Table,Binary Search,Design,","705":"Array,Divide and Conquer,Sorting,Heap (Priority Queue),Merge Sort,Bucket Sort,Radix Sort,Counting Sort,","706":"Math,Dynamic Programming,Graph,Topological Sort,Memoization,Game Theory,","707":"Array,Hash Table,Math,Counting,Number Theory,","708":"Array,","709":"Array,Hash Table,String,","710":"Two Pointers,String,","711":"Array,Divide and Conquer,Dynamic Programming,Queue,Monotonic Queue,","712":"Math,Dynamic Programming,Combinatorics,","713":"String,Stack,Greedy,","714":"Array,Two Pointers,Sorting,","715":"Array,Hash Table,Two Pointers,Sorting,Counting,","716":"Array,Hash Table,Depth-First Search,Breadth-First Search,Union Find,Graph,","717":"Two Pointers,String,","718":"String,Dynamic Programming,","719":"Array,Math,","720":"Array,Hash Table,Depth-First Search,Breadth-First Search,Union Find,Graph,","721":"Array,Hash Table,String,","722":"Array,Hash Table,Sliding Window,Prefix Sum,","723":"Array,Dynamic Programming,Matrix,","724":"Array,Math,Divide and Conquer,","725":"Design,Queue,Data Stream,","726":"Array,Depth-First Search,Breadth-First Search,Matrix,","727":"Dynamic Programming,","728":"String,Stack,Greedy,Queue,","729":"Array,String,Sorting,","730":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","731":"Array,Hash Table,Math,Geometry,Sorting,","732":"String,Dynamic Programming,","733":"Array,","734":"Array,Two Pointers,String,Greedy,","735":"Array,String,Dynamic Programming,Bit Manipulation,Bitmask,","736":"Array,String,","737":"Array,Greedy,Sorting,Counting,","738":"Array,Stack,Simulation,","739":"Hash Table,Depth-First Search,Union Find,Graph,","740":"Array,Two Pointers,Greedy,Sorting,","741":"Array,String,Enumeration,","742":"Array,Queue,Sorting,Simulation,","743":"Tree,Depth-First Search,Binary Tree,","744":"Array,Hash Table,String,","745":"Array,Dynamic Programming,","746":"Array,Hash Table,Math,Bit Manipulation,","747":"Tree,Breadth-First Search,Binary Tree,","748":"Array,Hash Table,Depth-First Search,Breadth-First Search,Union Find,Matrix,","749":"Array,Hash Table,","750":"Array,Stack,Monotonic Stack,","751":"Array,Math,Geometry,","752":"Math,Dynamic Programming,Memoization,","753":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","754":"Array,Hash Table,String,","755":"Backtracking,Breadth-First Search,","756":"Dynamic Programming,Tree,Depth-First Search,Binary Tree,","757":"Array,Two Pointers,Greedy,Sorting,","758":"Hash Table,Math,Enumeration,","759":"Tree,Depth-First Search,Binary Tree,","760":"Math,String,","761":"Array,Math,Divide and Conquer,Geometry,Sorting,Heap (Priority Queue),Quickselect,","762":"Array,Hash Table,Prefix Sum,","763":"Array,Dynamic Programming,Stack,Monotonic Stack,Ordered Set,","764":"Array,Two Pointers,Sorting,","765":"Array,Dynamic Programming,Sliding Window,","766":"Tree,Depth-First Search,Binary Tree,","767":"Array,Backtracking,Bit Manipulation,Matrix,","768":"Hash Table,String,Binary Search,Design,","769":"Array,Hash Table,Bit Manipulation,","770":"Array,Dynamic Programming,","771":"String,Greedy,","772":"Array,Simulation,","773":"String,Backtracking,Tree,Depth-First Search,Binary Tree,","774":"Array,Math,","775":"Array,String,Union Find,Graph,","776":"Math,Greedy,","777":"Array,Hash Table,Sliding Window,Counting,","778":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","779":"Array,Breadth-First Search,Matrix,","780":"Array,Bit Manipulation,Queue,Sliding Window,Prefix Sum,","781":"Array,Hash Table,Math,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","782":"Array,Hash Table,Graph,","783":"Tree,Binary Tree,","784":"Array,Dynamic Programming,Prefix Sum,","785":"Array,Hash Table,","786":"Array,Hash Table,String,","787":"String,Stack,","788":"Array,Binary Search,Sliding Window,Prefix Sum,","789":"Array,Greedy,Sorting,","790":"Math,Stack,Simulation,","791":"Array,Greedy,","792":"Array,Stack,Tree,Binary Search Tree,Monotonic Stack,Binary Tree,","793":"Bit Manipulation,","794":"Array,Hash Table,Counting,","795":"Array,Binary Search,","796":"Math,Dynamic Programming,","797":"Array,Greedy,","798":",","799":"Hash Table,Math,","800":"String,","801":"Math,","802":"Array,Bit Manipulation,","803":"Array,Linked List,Stack,Monotonic Stack,","804":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","805":"String,Stack,","806":"Tree,Depth-First Search,Binary Tree,","807":"Array,Two Pointers,String,Trie,String Matching,","808":"Array,Dynamic Programming,Greedy,","809":"Math,Dynamic Programming,Brainteaser,Game Theory,","810":"Tree,Depth-First Search,Binary Tree,","811":"Array,Hash Table,Binary Search,Dynamic Programming,","812":"String,Tree,Depth-First Search,Binary Tree,","813":"Array,Greedy,Sorting,","814":"Array,Math,Geometry,Sorting,Matrix,","815":"Array,Dynamic Programming,Sliding Window,","816":"Array,String,Design,Trie,Data Stream,","817":"Math,Brainteaser,","818":"Array,Depth-First Search,Breadth-First Search,Matrix,","819":"Array,Dynamic Programming,","820":"Array,Hash Table,Depth-First Search,Breadth-First Search,","821":"Array,Math,Geometry,","822":"Tree,Depth-First Search,Binary Search Tree,Binary Tree,","823":"Array,Dynamic Programming,","824":"Array,Math,Two Pointers,Sorting,","825":"Math,String,Simulation,","826":"Depth-First Search,Breadth-First Search,Graph,","827":"Array,Dynamic Programming,","828":"String,Binary Search,Sliding Window,Rolling Hash,Suffix Array,Hash Function,","829":"Database,","830":"Array,Heap (Priority Queue),","831":"String,Stack,","832":"Array,Hash Table,Two Pointers,String,Dynamic Programming,Sorting,","833":"Array,Dynamic Programming,","834":"Database,","835":"Array,Sliding Window,","836":",","837":"Array,Hash Table,Greedy,Sorting,Heap (Priority Queue),Counting,","838":"String,Union Find,","839":"Database,","840":"Database,","841":"Math,String,","842":"Array,Hash Table,Matrix,","843":"Array,Math,","844":"Array,Hash Table,Matrix,Prefix Sum,","845":"String,","846":"Hash Table,String,Backtracking,Counting,","847":"Tree,Depth-First Search,Binary Tree,","848":"String,Stack,Greedy,Monotonic Stack,","849":"Database,","850":"Array,Two Pointers,","851":"Array,Hash Table,Greedy,Sorting,Counting,","852":"Array,Breadth-First Search,Matrix,","853":"String,Dynamic Programming,","854":"Array,Math,Probability and Statistics,","855":"Array,Sorting,Heap (Priority Queue),Simulation,Prefix Sum,","856":"Array,Binary Search,Interactive,","857":"String,Backtracking,Stack,Breadth-First Search,","858":"Math,Simulation,","859":"Math,Tree,Binary Tree,","860":"Array,Dynamic Programming,","861":"String,Stack,Recursion,","862":"String,","863":"Array,Prefix Sum,","864":"Array,Hash Table,Tree,Depth-First Search,Binary Tree,","865":"String,Stack,","866":"Concurrency,","867":"Concurrency,","868":"Concurrency,","869":"Array,Hash Table,Sorting,Counting Sort,","870":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","871":"Array,Hash Table,Stack,Monotonic Stack,Prefix Sum,","872":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","873":"Array,Hash Table,Counting,","874":"Breadth-First Search,Graph,","875":"Array,Dynamic Programming,Stack,Greedy,Monotonic Stack,","876":"Array,Math,","877":"Math,Dynamic Programming,Memoization,","878":"Hash Table,String,","879":"Array,Dynamic Programming,Matrix,","880":"Array,Math,Dynamic Programming,Prefix Sum,Game Theory,","881":"Database,","882":"String,Dynamic Programming,","883":"Array,Greedy,","884":"Tree,Depth-First Search,Binary Tree,","885":"Array,Hash Table,Binary Search,Design,","886":"Two Pointers,String,Dynamic Programming,Greedy,Rolling Hash,Hash Function,","887":"Database,","888":"Math,String,","889":"Dynamic Programming,","890":"Array,Binary Search,Design,Binary Indexed Tree,Segment Tree,","891":"Database,","892":"Array,Hash Table,String,Counting,","893":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","894":"Two Pointers,String,","895":"Database,","896":"Array,Hash Table,String,Sorting,","897":"Array,Hash Table,String,Binary Search,Sorting,","898":"Hash Table,Linked List,","899":"Math,","900":"Array,Hash Table,String,Bit Manipulation,Prefix Sum,","901":"Array,Hash Table,String,Bit Manipulation,Trie,","902":"Database,","903":"Array,","904":"Math,","905":"Array,Dynamic Programming,","906":"Array,Binary Search,Dynamic Programming,Sorting,","907":"Hash Table,String,Counting,","908":"Array,Dynamic Programming,","909":"Database,","910":"Concurrency,","911":"Array,Sorting,","912":"Math,Binary Search,Combinatorics,Number Theory,","913":"Array,Hash Table,String,Depth-First Search,Breadth-First Search,Union Find,Sorting,","914":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","915":"Database,","916":"Linked List,Design,","917":"Array,Hash Table,","918":"String,Binary Search,Sliding Window,Prefix Sum,","919":"String,Stack,","920":"Array,Breadth-First Search,Matrix,","921":"Database,","922":"Array,Math,Greedy,","923":"Array,Hash Table,Dynamic Programming,","924":"Array,Backtracking,Matrix,","925":"Dynamic Programming,","926":"String,Greedy,Counting,","927":"Array,Matrix,Simulation,","928":"Array,Dynamic Programming,","929":"Array,Hash Table,","930":"Concurrency,","931":"Math,Dynamic Programming,Brainteaser,Probability and Statistics,","932":"Array,Math,Geometry,","933":"Array,String,Depth-First Search,Trie,","934":"String,Sliding Window,","935":"Math,Two Pointers,Binary Search,Interactive,","936":"Math,Backtracking,Bit Manipulation,","937":"Array,String,Backtracking,Bit Manipulation,","938":"Backtracking,","939":"Math,String,Greedy,","940":"Array,Hash Table,Math,Sliding Window,Prefix Sum,","941":"String,Stack,","942":"Array,Math,Number Theory,","943":"Database,","944":"Array,Math,Simulation,","945":"Array,Greedy,Matrix,","946":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","947":"Array,String,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","948":"Array,Matrix,Simulation,","949":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Design,Binary Tree,","950":"Array,Dynamic Programming,Greedy,Sorting,","951":"Array,Breadth-First Search,Heap (Priority Queue),Matrix,","952":"Array,Math,Geometry,","953":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,Counting,","954":"Array,String,Binary Search,Trie,Sorting,Heap (Priority Queue),","955":"Dynamic Programming,","956":"Array,Hash Table,Matrix,Simulation,","957":"Array,Dynamic Programming,Matrix,","958":"String,Dynamic Programming,","959":"Database,","960":"Math,","961":"Array,Hash Table,Greedy,","962":"Array,Hash Table,Bit Manipulation,Breadth-First Search,Matrix,","963":"String,Backtracking,Design,Iterator,","964":"Array,","965":"Array,Sorting,","966":"Array,Dynamic Programming,Matrix,","967":"Linked List,Math,","968":"Enumeration,","969":"Array,Binary Search,Matrix,Prefix Sum,","970":"Array,Breadth-First Search,Matrix,","971":"Array,Math,","972":"Array,Hash Table,Greedy,Sorting,","973":"Hash Table,String,Sliding Window,","974":"Array,Breadth-First Search,Graph,","975":"Array,","976":"Array,Binary Search,Sorting,","977":"Array,Dynamic Programming,Matrix,","978":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","979":"Array,Math,","980":"Tree,Depth-First Search,Binary Search Tree,Sorting,Binary Tree,","981":"Array,Depth-First Search,Breadth-First Search,","982":"Array,Math,String,Backtracking,","983":"String,","984":"Array,Bit Manipulation,Prefix Sum,","985":"Array,Hash Table,Breadth-First Search,Graph,Sorting,","986":"String,Dynamic Programming,","987":"Array,","988":"Array,Matrix,Prefix Sum,","989":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","990":"String,Trie,Rolling Hash,Hash Function,","991":"Math,","992":"Bit Manipulation,","993":"Depth-First Search,Breadth-First Search,Union Find,Graph,","994":"Database,","995":"Math,Greedy,","996":"Array,String,Simulation,","997":"Tree,Depth-First Search,Binary Tree,","998":"Array,Dynamic Programming,Greedy,","999":"Database,","1000":"String,Greedy,","1001":"Array,Sorting,Matrix,","1002":"Array,Math,Greedy,","1003":"Array,Hash Table,Sorting,","1004":"Two Pointers,String,","1005":"Array,Sorting,","1006":"Dynamic Programming,Graph,Shortest Path,","1007":"Array,Dynamic Programming,","1008":"Array,Binary Search,Sorting,Heap (Priority Queue),Matrix,","1009":"Array,Hash Table,Greedy,Sorting,Heap (Priority Queue),","1010":"Tree,Depth-First Search,Binary Tree,","1011":"Array,Dynamic Programming,Sorting,","1012":"Database,","1013":"Math,Bit Manipulation,","1014":"Array,Sliding Window,","1015":"Math,","1016":"Array,Hash Table,Breadth-First Search,","1017":"Array,Hash Table,Two Pointers,Binary Search,Sorting,","1018":"Hash Table,String,Counting,","1019":"Hash Table,Binary Search,Design,Sorting,Ordered Set,","1020":"Array,Dynamic Programming,Bit Manipulation,Matrix,Bitmask,","1021":"Array,Binary Search,Matrix,","1022":"Array,Math,Design,Queue,Data Stream,","1023":"Array,Greedy,Sorting,Heap (Priority Queue),","1024":"Array,Heap (Priority Queue),","1025":"Array,Bit Manipulation,Sorting,Counting,","1026":"Hash Table,String,Sliding Window,","1027":"Math,Dynamic Programming,Combinatorics,","1028":"Math,String,","1029":"Tree,Depth-First Search,Breadth-First Search,Union Find,Graph,Binary Tree,","1030":"Math,","1031":"Array,Dynamic Programming,Greedy,","1032":"Array,Hash Table,String,Sorting,Counting,","1033":"Linked List,Tree,Depth-First Search,Binary Tree,","1034":"Array,Breadth-First Search,Graph,Heap (Priority Queue),Matrix,Shortest Path,","1035":"Hash Table,String,Counting,","1036":"Hash Table,String,Bit Manipulation,Prefix Sum,","1037":"Dynamic Programming,Tree,Depth-First Search,Binary Tree,","1038":"Dynamic Programming,Tree,Depth-First Search,Binary Search Tree,Binary Tree,","1039":"String,","1040":"Array,","1041":"Tree,Depth-First Search,Breadth-First Search,","1042":"Tree,Depth-First Search,Breadth-First Search,Graph,","1043":"Database,","1044":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1045":"Array,Matrix,","1046":"Array,Stack,Design,","1047":"Array,Two Pointers,Binary Search,Sorting,","1048":"Array,Hash Table,Greedy,Bit Manipulation,","1049":"Dynamic Programming,Memoization,Sorting,","1050":"Array,Dynamic Programming,Greedy,Heap (Priority Queue),","1051":"Array,Simulation,","1052":"Array,Math,","1053":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","1054":"String,Rolling Hash,String Matching,Hash Function,","1055":"Database,","1056":"Array,Hash Table,Counting,","1057":"Array,Dynamic Programming,Binary Indexed Tree,Segment Tree,","1058":"Hash Table,String,Design,","1059":"String,Dynamic Programming,String Matching,","1060":"Math,Geometry,","1061":"Array,Dynamic Programming,Greedy,Sorting,","1062":"Array,Greedy,Sorting,","1063":"String,Greedy,Heap (Priority Queue),","1064":"Array,Math,Dynamic Programming,Game Theory,","1065":"Database,","1066":"Array,String,String Matching,","1067":"Array,Binary Indexed Tree,Simulation,","1068":"Dynamic Programming,","1069":"Array,Prefix Sum,","1070":"Math,Greedy,","1071":"String,Backtracking,","1072":"String,Dynamic Programming,","1073":"String,","1074":"Array,Hash Table,String,Sorting,Ordered Set,","1075":"String,Counting,","1076":"Dynamic Programming,Prefix Sum,","1077":"Array,Sliding Window,Prefix Sum,","1078":"Array,Sorting,Heap (Priority Queue),","1079":"Array,Dynamic Programming,Queue,Sliding Window,Heap (Priority Queue),Monotonic Queue,","1080":"Array,","1081":"Math,Greedy,","1082":"String,Greedy,Sorting,","1083":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","1084":"Array,Hash Table,String,","1085":"Array,","1086":"Array,Queue,Sliding Window,Heap (Priority Queue),Ordered Set,Monotonic Queue,","1087":"Array,Binary Search,Heap (Priority Queue),Matrix,","1088":"Array,Stack,Simulation,","1089":"Array,Hash Table,Math,Bit Manipulation,Prefix Sum,","1090":"Hash Table,Tree,Depth-First Search,Breadth-First Search,","1091":"Array,Dynamic Programming,Memoization,Matrix,","1092":"Math,String,Number Theory,","1093":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1094":"Array,Dynamic Programming,","1095":"Array,","1096":"Array,Math,Geometry,","1097":"Two Pointers,String,String Matching,","1098":"String,Sliding Window,","1099":"Bit Manipulation,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1100":"Array,Dynamic Programming,","1101":"Array,Hash Table,Sorting,","1102":"Hash Table,String,Bit Manipulation,Rolling Hash,Hash Function,","1103":"Array,Sorting,Heap (Priority Queue),","1104":"Array,Greedy,Sorting,","1105":"Depth-First Search,Breadth-First Search,Graph,","1106":"Array,Math,Dynamic Programming,Backtracking,Combinatorics,Probability and Statistics,","1107":"Array,","1108":"Array,Two Pointers,Sorting,","1109":"Array,Linked List,Stack,Design,Doubly-Linked List,Data Stream,","1110":"Array,Dynamic Programming,","1111":"Array,Stack,Monotonic Stack,","1112":"Array,Design,Matrix,","1113":"Array,Hash Table,Binary Search,Dynamic Programming,Sliding Window,","1114":"Array,Prefix Sum,","1115":"Array,Hash Table,Greedy,Sorting,Counting,","1116":"Array,Binary Search,","1117":"Binary Search,Dynamic Programming,Tree,Depth-First Search,Breadth-First Search,Design,","1118":"Database,","1119":"Math,Bit Manipulation,","1120":"Array,Hash Table,String,","1121":"Array,Hash Table,Binary Search,Greedy,Heap (Priority Queue),","1122":"Union Find,Graph,Sorting,Minimum Spanning Tree,Strongly Connected Component,","1123":"Array,Sorting,","1124":"Math,Number Theory,","1125":"Array,Dynamic Programming,Sliding Window,","1126":"Dynamic Programming,Bit Manipulation,Graph,Bitmask,","1127":"Hash Table,String,","1128":"Array,Hash Table,Counting,","1129":"Array,Two Pointers,Binary Search,Sorting,","1130":"Array,Queue,Sliding Window,Heap (Priority Queue),Monotonic Queue,","1131":"Array,Brainteaser,Simulation,","1132":"Array,Dynamic Programming,Stack,Matrix,Monotonic Stack,","1133":"String,Greedy,Binary Indexed Tree,Segment Tree,","1134":"String,","1135":"Array,Two Pointers,Binary Search,Sorting,","1136":"Array,Greedy,Sorting,","1137":"Math,Dynamic Programming,Game Theory,","1138":"Array,Hash Table,Math,Counting,","1139":"Math,String,","1140":"Array,Graph,Heap (Priority Queue),Shortest Path,","1141":"Array,Math,Geometry,Randomized,","1142":"Database,","1143":"Math,Simulation,","1144":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Counting,","1145":"String,Greedy,","1146":"Array,Binary Search,Bit Manipulation,Segment Tree,","1147":"Math,","1148":"Array,Math,Dynamic Programming,Prefix Sum,","1149":"Hash Table,String,Dynamic Programming,Bit Manipulation,","1150":"Array,Dynamic Programming,Stack,Greedy,Monotonic Stack,","1151":"Database,","1152":"Array,String,","1153":"String,Greedy,","1154":"Tree,Depth-First Search,Binary Tree,","1155":"String,Dynamic Programming,","1156":"Array,Enumeration,","1157":"Array,Simulation,","1158":"Array,Greedy,Matrix,","1159":"Array,Two Pointers,Dynamic Programming,Greedy,","1160":"Array,Binary Search,","1161":"Hash Table,String,","1162":"String,Stack,Greedy,","1163":"Hash Table,String,Bit Manipulation,","1164":"String,Stack,","1165":"String,Recursion,Simulation,","1166":"Array,Hash Table,Greedy,Prefix Sum,","1167":"Array,Dynamic Programming,Sorting,","1168":"Array,","1169":"Array,Binary Search,Sorting,","1170":"Dynamic Programming,Memoization,","1171":"Graph,","1172":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","1173":"Array,Simulation,","1174":"Array,Math,Greedy,Sorting,Game Theory,","1175":"Array,Hash Table,Binary Search,Simulation,","1176":"Array,Math,Dynamic Programming,Game Theory,","1177":"Array,Enumeration,","1178":"Array,Dynamic Programming,Greedy,","1179":"Array,Depth-First Search,Breadth-First Search,Matrix,Strongly Connected Component,","1180":"Array,Math,Divide and Conquer,Dynamic Programming,Tree,Union Find,Binary Search Tree,Memoization,Combinatorics,Binary Tree,","1181":"Array,Matrix,","1182":"Math,String,","1183":"Array,Two Pointers,Binary Search,Stack,Monotonic Stack,","1184":"Array,Dynamic Programming,Memoization,","1185":"String,","1186":"Array,Hash Table,Math,Two Pointers,","1187":"Array,String,Dynamic Programming,Greedy,","1188":"Union Find,Graph,","1189":"Database,","1190":"Array,Matrix,","1191":"Array,Simulation,","1192":"Array,Union Find,Graph,Minimum Spanning Tree,","1193":"Database,","1194":"Array,Math,Prefix Sum,","1195":"Array,Greedy,Sorting,Prefix Sum,","1196":"Array,Hash Table,Prefix Sum,","1197":"Array,Graph,Topological Sort,Matrix,","1198":"String,","1199":"Hash Table,String,Backtracking,","1200":"Array,Dynamic Programming,Matrix,","1201":"Array,Dynamic Programming,Bit Manipulation,Matrix,Bitmask,","1202":"Array,String,Stack,","1203":"Array,Simulation,","1204":"Hash Table,Tree,Depth-First Search,Design,","1205":"Array,Backtracking,Bit Manipulation,Enumeration,","1206":"Design,Simulation,Counting,","1207":"Array,Hash Table,String,Sorting,","1208":"Array,Greedy,Matrix,","1209":"Array,Greedy,Heap (Priority Queue),Ordered Set,","1210":"Array,Binary Search,Sorting,","1211":"Tree,Breadth-First Search,Binary Tree,","1212":"Array,Math,Geometry,Sliding Window,Sorting,","1213":"Dynamic Programming,Bit Manipulation,Memoization,","1214":"String,Stack,","1215":"Graph,","1216":"Two Pointers,String,","1217":"Dynamic Programming,Bit Manipulation,Tree,Enumeration,Bitmask,","1218":"Array,Sorting,","1219":"Array,Enumeration,","1220":"Math,Dynamic Programming,Combinatorics,","1221":"Math,Design,Segment Tree,","1222":"Hash Table,String,","1223":"String,Depth-First Search,Breadth-First Search,Enumeration,","1224":"Array,Dynamic Programming,Sorting,","1225":"Array,String,","1226":"Array,Hash Table,Sorting,","1227":"Array,Binary Search,Depth-First Search,Breadth-First Search,Union Find,Heap (Priority Queue),Matrix,","1228":"Array,Union Find,Graph,Topological Sort,Sorting,Matrix,","1229":"Database,","1230":"Array,Hash Table,Sorting,","1231":"Array,Sorting,","1232":"Hash Table,String,Dynamic Programming,Enumeration,","1233":"Array,Hash Table,","1234":"Math,Dynamic Programming,Combinatorics,","1235":"Array,Greedy,Heap (Priority Queue),","1236":"Array,Math,Dynamic Programming,Combinatorics,","1237":"Array,Simulation,","1238":"Hash Table,String,Greedy,Sorting,","1239":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","1240":"Array,Sliding Window,","1241":"String,Dynamic Programming,Stack,","1242":"Array,Dynamic Programming,Breadth-First Search,","1243":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1244":"Array,Hash Table,Design,Data Stream,","1245":"Hash Table,String,Sorting,Counting,","1246":"Array,Hash Table,Binary Search,Sliding Window,Prefix Sum,","1247":"Dynamic Programming,Bit Manipulation,Memoization,Bitmask,","1248":"Database,","1249":"Array,String,","1250":"String,Greedy,","1251":"Array,Prefix Sum,","1252":"Array,Greedy,Sorting,","1253":"Database,","1254":"String,Dynamic Programming,String Matching,","1255":"Linked List,","1256":"Array,Linked List,Design,Queue,Data Stream,","1257":"Array,Binary Search,Dynamic Programming,Greedy,","1258":"Array,Matrix,","1259":"Array,Stack,Greedy,Monotonic Stack,","1260":"Array,Hash Table,Prefix Sum,","1261":"Array,Greedy,Heap (Priority Queue),Ordered Set,","1262":"String,","1263":"Array,Hash Table,Two Pointers,Sorting,","1264":"Math,Bit Manipulation,Simulation,","1265":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","1266":"Database,","1267":"Array,Hash Table,String,Bit Manipulation,Counting,","1268":"Array,Math,Prefix Sum,","1269":"Array,Math,Greedy,Sorting,Heap (Priority Queue),Game Theory,","1270":"Array,Dynamic Programming,Segment Tree,Queue,Heap (Priority Queue),Prefix Sum,Monotonic Queue,","1271":"Math,Simulation,","1272":"String,Greedy,","1273":"Array,Math,Dynamic Programming,Game Theory,","1274":"Array,Dynamic Programming,Sorting,","1275":"Database,","1276":"String,","1277":"Array,Hash Table,Sliding Window,","1278":"Array,Dynamic Programming,Queue,Heap (Priority Queue),Monotonic Queue,","1279":"Array,Stack,Queue,Simulation,","1280":"Array,Simulation,","1281":"String,Greedy,","1282":"Array,Greedy,Sliding Window,Prefix Sum,","1283":"String,Counting,","1284":"Array,Greedy,Heap (Priority Queue),","1285":"Array,Matrix,Simulation,","1286":"Array,Bit Manipulation,Trie,","1287":"Array,Greedy,Sorting,","1288":"Array,Hash Table,","1289":"Array,Two Pointers,Binary Search,Prefix Sum,","1290":"Array,Hash Table,Binary Search,Greedy,","1291":"Math,","1292":"String,Stack,Greedy,","1293":"Array,Backtracking,","1294":"Tree,Graph,","1295":"Linked List,Two Pointers,","1296":"Array,Depth-First Search,Union Find,","1297":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1298":"Array,","1299":"Array,Hash Table,Counting,","1300":"Array,Greedy,Sorting,Matrix,","1301":"Array,Math,Dynamic Programming,Graph,Topological Sort,Memoization,Matrix,Game Theory,","1302":"Database,","1303":"Database,","1304":"Array,Prefix Sum,","1305":"Array,Hash Table,Greedy,","1306":"Array,Bit Manipulation,","1307":"Array,Math,Dynamic Programming,Combinatorics,Number Theory,","1308":"String,Greedy,","1309":"Hash Table,String,Counting,Prefix Sum,","1310":"Array,Divide and Conquer,Bit Manipulation,Sorting,Heap (Priority Queue),Matrix,Prefix Sum,Quickselect,","1311":"Math,Binary Search,Greedy,","1312":"Database,","1313":"Hash Table,Math,Counting,","1314":"Array,Hash Table,Depth-First Search,","1315":"Array,Prefix Sum,","1316":"String,Dynamic Programming,","1317":"Array,Hash Table,Counting,","1318":"Array,Dynamic Programming,","1319":"Two Pointers,String,","1320":"Array,","1321":"Math,Greedy,Heap (Priority Queue),","1322":"Two Pointers,String,Greedy,","1323":"Array,Two Pointers,Dynamic Programming,Bit Manipulation,Bitmask,","1324":"Database,","1325":"String,","1326":"Math,String,","1327":"Graph,","1328":"Hash Table,String,Divide and Conquer,Bit Manipulation,Sliding Window,","1329":"Array,Two Pointers,Greedy,String Matching,","1330":"Array,Breadth-First Search,Matrix,","1331":"Array,Math,Tree,Depth-First Search,Number Theory,","1332":"Two Pointers,String,","1333":"Array,String,Prefix Sum,","1334":"Array,Dynamic Programming,","1335":"String,Dynamic Programming,","1336":"Array,String,","1337":"Array,Dynamic Programming,Backtracking,","1338":"Array,Hash Table,Greedy,Counting,","1339":"Array,Math,Stack,Heap (Priority Queue),Monotonic Stack,","1340":"Array,","1341":"Math,","1342":"Array,Two Pointers,Binary Search,Graph,Sorting,","1343":"Array,Greedy,","1344":"Dynamic Programming,Graph,Topological Sort,Heap (Priority Queue),Shortest Path,","1345":"Array,Dynamic Programming,Bit Manipulation,","1346":"Database,","1347":"Hash Table,String,Counting,","1348":"Graph,","1349":"Array,Greedy,Heap (Priority Queue),","1350":"Array,Two Pointers,Binary Search,Stack,Monotonic Stack,","1351":"Database,","1352":"Hash Table,String,","1353":"Hash Table,Linked List,Design,Doubly-Linked List,","1354":"Array,Greedy,Sorting,","1355":"Array,Math,Dynamic Programming,Backtracking,Bit Manipulation,Number Theory,Bitmask,","1356":"Array,","1357":"Binary Search,Greedy,","1358":"Array,Math,Simulation,","1359":"Array,Hash Table,String,","1360":"Math,Recursion,","1361":",","1362":"Array,Two Pointers,String,","1363":"Array,Hash Table,Math,Counting,","1364":"Array,Dynamic Programming,Bit Manipulation,Memoization,Bitmask,","1365":"Array,String,","1366":"Array,Hash Table,","1367":"Array,Binary Search,Sorting,Ordered Set,","1368":"Array,Math,Counting,Number Theory,","1369":"Array,Math,","1370":"Array,Math,Recursion,Queue,Simulation,","1371":"Array,Dynamic Programming,Greedy,","1372":"Design,Queue,Heap (Priority Queue),Data Stream,Ordered Set,","1373":"Array,Greedy,","1374":"Array,Math,Geometry,","1375":"Array,Bit Manipulation,Prefix Sum,","1376":"Math,String,Combinatorics,","1377":"Hash Table,String,","1378":"Array,Greedy,Sorting,Counting Sort,","1379":"Array,Sorting,Heap (Priority Queue),","1380":"Array,Math,Bit Manipulation,","1381":"Math,","1382":"Array,Binary Search,Greedy,Sliding Window,Sorting,Prefix Sum,","1383":"String,Sliding Window,","1384":"Array,Math,Sorting,","1385":"String,","1386":"Design,Heap (Priority Queue),","1387":"Array,Greedy,Sorting,","1388":"Array,Binary Search,Sorting,Ordered Set,","1389":"Array,","1390":"String,Backtracking,","1391":"Two Pointers,String,Greedy,","1392":"Array,Binary Search,Line Sweep,Sorting,Heap (Priority Queue),","1393":"Array,Counting,Prefix Sum,","1394":"Array,Two Pointers,Binary Search,","1395":"Array,Stack,Monotonic Stack,Prefix Sum,","1396":"Hash Table,Dynamic Programming,Graph,Topological Sort,Memoization,Counting,","1397":"String,Sorting,","1398":"Math,Simulation,","1399":"Array,Math,Binary Search,Prefix Sum,","1400":"Array,Math,Backtracking,Bit Manipulation,Combinatorics,Enumeration,","1401":"String,Greedy,","1402":"Array,Hash Table,Design,","1403":"Math,Dynamic Programming,Combinatorics,","1404":"String,","1405":"Array,Binary Search,","1406":"String,Dynamic Programming,Sliding Window,Prefix Sum,","1407":"Array,Math,Dynamic Programming,Prefix Sum,Game Theory,","1408":"Database,","1409":"Hash Table,String,Sliding Window,Counting,","1410":"Array,Two Pointers,Greedy,Sorting,","1411":"Array,Math,Sorting,Heap (Priority Queue),Matrix,Prefix Sum,","1412":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","1413":"String,","1414":"String,Greedy,","1415":"Array,Heap (Priority Queue),","1416":"Array,Dynamic Programming,","1417":"Math,Dynamic Programming,","1418":"Array,Matrix,","1419":"Array,Sorting,","1420":"String,Dynamic Programming,Greedy,Sliding Window,","1421":"Array,Binary Search,Sorting,Prefix Sum,","1422":"Array,Hash Table,Prefix Sum,","1423":"Array,Binary Search,Simulation,Prefix Sum,","1424":"Array,Matrix,Prefix Sum,","1425":"Math,String,Dynamic Programming,Stack,","1426":"Hash Table,String,Counting,","1427":"Array,Greedy,","1428":"Dynamic Programming,Memoization,","1429":"Array,Binary Search,Matrix,","1430":"Math,String,Greedy,","1431":"Math,String,","1432":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","1433":"Array,Hash Table,","1434":"Database,","1435":"Array,","1436":"String,Stack,Simulation,","1437":"Array,Dynamic Programming,","1438":"Array,Hash Table,Design,Heap (Priority Queue),Ordered Set,","1439":"Array,Sorting,","1440":"Array,Matrix,Simulation,","1441":"Math,Dynamic Programming,Tree,Graph,Topological Sort,Combinatorics,","1442":"Array,Simulation,","1443":"Array,Greedy,Sorting,","1444":"Math,Recursion,","1445":"Array,Binary Search,Rolling Hash,Suffix Array,Hash Function,","1446":"Math,Enumeration,","1447":"Array,Breadth-First Search,Matrix,","1448":"Array,Dynamic Programming,Graph,","1449":"Array,Simulation,","1450":"Hash Table,String,Bit Manipulation,Prefix Sum,","1451":"Dynamic Programming,","1452":"Database,","1453":"Hash Table,String,","1454":"Array,Greedy,","1455":"Array,Dynamic Programming,Matrix,","1456":"Array,Hash Table,Bit Manipulation,Depth-First Search,Trie,","1457":"Hash Table,String,Counting,","1458":"Array,Hash Table,Heap (Priority Queue),","1459":"Array,Hash Table,Sorting,Prefix Sum,","1460":"Array,Stack,Monotonic Stack,","1461":"String,Simulation,","1462":"Array,String,Greedy,","1463":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1464":"Array,Hash Table,String,Trie,Hash Function,","1465":"Math,Binary Search,","1466":"Array,Dynamic Programming,","1467":"String,","1468":"Array,Matrix,Enumeration,","1469":"Array,Dynamic Programming,","1470":"String,Rolling Hash,Hash Function,","1471":"Array,Two Pointers,String,","1472":"Array,Greedy,Heap (Priority Queue),","1473":"Two Pointers,String,Stack,Greedy,","1474":"Array,Binary Search,Binary Indexed Tree,","1475":"Database,","1476":"Array,String,","1477":"Array,Greedy,Sorting,","1478":",","1479":"Array,Binary Search,Depth-First Search,Breadth-First Search,Union Find,Matrix,","1480":"Depth-First Search,Breadth-First Search,Union Find,Graph,","1481":"String,Greedy,","1482":"Dynamic Programming,Graph,Topological Sort,Shortest Path,","1483":"String,Dynamic Programming,Suffix Array,","1484":"Database,","1485":"Array,Math,Number Theory,","1486":"Array,Hash Table,String,Backtracking,","1487":"Array,Dynamic Programming,Matrix,","1488":"Array,Divide and Conquer,","1489":"Array,Sliding Window,Sorting,","1490":"Array,String,Divide and Conquer,Sorting,Heap (Priority Queue),Quickselect,","1491":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1492":"String,Dynamic Programming,","1493":"Array,Prefix Sum,","1494":"Array,Depth-First Search,Breadth-First Search,Matrix,","1495":"Array,Hash Table,Tree,Depth-First Search,Breadth-First Search,Design,","1496":"Array,Math,Dynamic Programming,Bit Manipulation,Bitmask,","1497":"Array,Hash Table,Enumeration,","1498":"Array,Stack,Greedy,Sorting,Monotonic Stack,","1499":"Array,Dynamic Programming,","1500":"Array,Math,Union Find,Sorting,Number Theory,","1501":"Two Pointers,String,Stack,","1502":"String,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1503":"Dynamic Programming,Tree,Depth-First Search,Union Find,","1504":"Array,Hash Table,Counting,","1505":"Array,Hash Table,Greedy,Sorting,","1506":"Array,Hash Table,Binary Search,Sliding Window,","1507":"Array,String,Simulation,","1508":"Array,","1509":"Array,Hash Table,Design,Counting,","1510":"String,Backtracking,Greedy,Counting,Enumeration,","1511":"Array,","1512":"Array,Matrix,Prefix Sum,","1513":"Array,Matrix,Enumeration,","1514":"Array,Math,String,Dynamic Programming,Stack,Memoization,","1515":"Array,Hash Table,String,Counting,","1516":"String,Binary Search,Sliding Window,Prefix Sum,","1517":"Array,Hash Table,Counting,Enumeration,Prefix Sum,","1518":"String,Greedy,","1519":"Array,Math,Simulation,","1520":"Array,Math,Greedy,Counting,Game Theory,","1521":"String,Stack,Greedy,Monotonic Stack,","1522":"Array,Hash Table,Bit Manipulation,","1523":"Hash Table,Design,Heap (Priority Queue),Data Stream,Ordered Set,","1524":"Array,Greedy,Sorting,Counting Sort,","1525":"Math,String,Greedy,Game Theory,","1526":"Array,Breadth-First Search,Graph,","1527":"Array,Binary Search,","1528":"String,","1529":"Array,Hash Table,Design,Simulation,","1530":"Array,Backtracking,Bit Manipulation,Enumeration,","1531":"Breadth-First Search,Graph,Shortest Path,","1532":"String,","1533":"Math,Backtracking,Enumeration,","1534":"Array,Tree,Depth-First Search,Binary Tree,","1535":"Array,Dynamic Programming,Graph,Topological Sort,","1536":"Array,Hash Table,String,Counting,","1537":"Array,Binary Search,Dynamic Programming,Sorting,Heap (Priority Queue),","1538":"Array,String,Binary Search,Prefix Sum,","1539":"Array,String,Backtracking,Simulation,","1540":"Array,","1541":"Linked List,","1542":"Array,Breadth-First Search,","1543":"String,Dynamic Programming,","1544":"Hash Table,String,","1545":"Math,String,Dynamic Programming,Combinatorics,","1546":"Array,Binary Search,","1547":"Array,Backtracking,Graph,","1548":"Hash Table,String,Counting,","1549":"Design,Simulation,","1550":"Array,Binary Search,Sorting,","1551":"Array,Binary Search,Greedy,Queue,Sorting,Monotonic Queue,","1552":"Array,Queue,Simulation,","1553":"Linked List,","1554":"String,Simulation,","1555":"Union Find,Graph,","1556":"Array,Greedy,","1557":"Array,Simulation,","1558":"Array,Hash Table,Binary Search,Design,Segment Tree,","1559":"Math,Enumeration,","1560":"Array,Hash Table,String,Counting,","1561":"String,Dynamic Programming,Greedy,","1562":"Array,Greedy,","1563":"Array,Dynamic Programming,Matrix,","1564":"Array,Binary Search,Sorting,","1565":"Array,Greedy,","1566":"Depth-First Search,Breadth-First Search,Union Find,Graph,Sorting,","1567":"Array,Hash Table,Sorting,Enumeration,","1568":"Linked List,Two Pointers,","1569":"String,Tree,Depth-First Search,Binary Tree,","1570":"Depth-First Search,Graph,Eulerian Circuit,","1571":"Array,Hash Table,Sorting,Heap (Priority Queue),","1572":"Array,Dynamic Programming,Prefix Sum,","1573":"Array,Math,Depth-First Search,Breadth-First Search,Graph,Geometry,","1574":"Design,Heap (Priority Queue),Data Stream,Ordered Set,","1575":"Hash Table,String,","1576":"Array,Stack,Monotonic Stack,","1577":"Array,Two Pointers,Simulation,","1578":"Array,Binary Search,Sliding Window,Prefix Sum,","1579":"Array,Two Pointers,String,","1580":"Array,Two Pointers,String,Simulation,","1581":",","1582":"Array,Binary Search,","1583":"Array,String,","1584":"Array,Hash Table,String,Graph,Topological Sort,","1585":"String,Stack,Greedy,","1586":"Math,","1587":"Math,","1588":"String,Simulation,","1589":"Array,Hash Table,Prefix Sum,","1590":"Array,Hash Table,Two Pointers,Sorting,Enumeration,","1591":"String,","1592":"Array,Math,String,Matrix,","1593":"Array,Greedy,Sorting,","1594":"Depth-First Search,Graph,Topological Sort,","1595":"String,","1596":"Linked List,Two Pointers,Stack,","1597":"Array,Hash Table,String,Greedy,Counting,","1598":"Array,Greedy,Matrix,Prefix Sum,","1599":"Array,Hash Table,Matrix,","1600":"Array,Sliding Window,","1601":"Array,Hash Table,String,Bit Manipulation,Sorting,","1602":"String,Simulation,","1603":"Math,Greedy,","1604":"Array,Binary Search,Greedy,Sorting,","1605":"Array,Greedy,Sorting,","1606":"Array,Prefix Sum,","1607":"Array,Breadth-First Search,Sorting,Heap (Priority Queue),Matrix,","1608":"Math,String,Dynamic Programming,","1609":"Array,Sorting,Counting,","1610":"Array,Two Pointers,Simulation,","1611":"Array,Hash Table,Counting,","1612":"Array,Hash Table,Sorting,Simulation,","1613":"Array,","1614":"String,Sliding Window,Rolling Hash,Hash Function,","1615":"String,Bit Manipulation,Union Find,","1616":"Math,Greedy,Sorting,","1617":"Array,Two Pointers,Simulation,","1618":"Math,Enumeration,","1619":"Array,Dynamic Programming,Heap (Priority Queue),","1620":"Array,Sorting,","1621":"Math,Sorting,","1622":"Array,Hash Table,String,Design,","1623":"String,Dynamic Programming,","1624":"Math,Simulation,","1625":"Array,Hash Table,Greedy,Counting,","1626":"Array,Greedy,Sorting,Enumeration,Prefix Sum,","1627":"Array,","1628":"Math,Simulation,","1629":"Math,Backtracking,Greedy,","1630":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","1631":"Math,Simulation,","1632":"Linked List,Simulation,","1633":"Hash Table,String,Greedy,Heap (Priority Queue),Counting,","1634":"Array,Math,Number Theory,","1635":"Array,String,String Matching,","1636":"Hash Table,String,Counting,","1637":"Array,Binary Search,","1638":"Array,Dynamic Programming,","1639":"Array,Hash Table,Counting,","1640":"Array,Sorting,","1641":"Depth-First Search,Breadth-First Search,Graph,Topological Sort,","1642":"Two Pointers,String,Greedy,Binary Indexed Tree,","1643":"String,","1644":"Array,Hash Table,Tree,Binary Tree,","1645":"Array,Math,Stack,Number Theory,","1646":"Array,Two Pointers,","1647":"Array,Hash Table,Simulation,","1648":"Array,Greedy,","1649":"Graph,Shortest Path,","1650":"Array,Hash Table,Bit Manipulation,Counting,","1651":"String,Greedy,Prefix Sum,","1652":"Array,Greedy,Heap (Priority Queue),","1653":"String,Dynamic Programming,Prefix Sum,","1654":"Array,","1655":"String,Stack,Simulation,","1656":"Array,Backtracking,Bit Manipulation,Enumeration,","1657":"Array,String,Segment Tree,Ordered Set,","1658":"Array,Hash Table,","1659":"Array,Math,","1660":"Array,Dynamic Programming,Prefix Sum,","1661":"Bit Manipulation,","1662":"String,Dynamic Programming,Prefix Sum,","1663":"String,Binary Search,Rolling Hash,Suffix Array,String Matching,Hash Function,","1664":"String,Greedy,","1665":"Array,Hash Table,Sorting,Counting,","1666":"Array,Binary Search,","1667":"Array,Hash Table,String,Design,Trie,","1668":"Sorting,Heap (Priority Queue),","1669":"String,Enumeration,","1670":"Array,Greedy,Heap (Priority Queue),","1671":"Array,Two Pointers,Binary Search,Greedy,Sorting,","1672":"Math,","1673":"Tree,Binary Tree,","1674":"Array,","1675":"Math,Enumeration,","1676":"Array,Greedy,Design,","1677":"Array,Graph,Sorting,Enumeration,","1678":"String,Simulation,","1679":"Array,Hash Table,Greedy,Counting,","1680":"Array,Matrix,Prefix Sum,","1681":"Array,String,Tree,Depth-First Search,Graph,Topological Sort,","1682":"Array,Hash Table,Sorting,Counting,","1683":"Array,Hash Table,Math,Geometry,Enumeration,","1684":"Array,Binary Search,Binary Indexed Tree,Sorting,","1685":"Array,Hash Table,Binary Search,Sorting,Prefix Sum,Ordered Set,","1686":"Array,String,","1687":"Array,Prefix Sum,","1688":"Array,Matrix,Simulation,","1689":"Array,Binary Search,Breadth-First Search,Matrix,","1690":"String,Greedy,Enumeration,","1691":"Array,Hash Table,Sliding Window,","1692":"Array,Hash Table,Trie,Rolling Hash,Hash Function,Enumeration,","1693":"Hash Table,String,Dynamic Programming,","1694":"String,","1695":"Hash Table,Math,String,Dynamic Programming,","1696":"Array,Dynamic Programming,Matrix,","1697":"Math,String,Sliding Window,","1698":"Array,Binary Search,Greedy,Sorting,Prefix Sum,","1699":"Array,Dynamic Programming,","1700":"Array,Hash Table,String,Sorting,","1701":"Array,Sorting,","1702":"Array,Hash Table,Bit Manipulation,Counting,","1703":"Design,Segment Tree,Ordered Set,","1704":"Array,Greedy,Sorting,","1705":"Array,Math,Geometry,Sorting,Number Theory,","1706":"Array,Stack,Monotonic Stack,Prefix Sum,","1707":"Hash Table,String,Counting,","1708":"Array,Hash Table,String,Counting,","1709":"Greedy,Graph,Sorting,Heap (Priority Queue),","1710":"Binary Search,Design,Binary Indexed Tree,Segment Tree,","1711":"Hash Table,String,Counting,","1712":"String,","1713":"Array,Linked List,Stack,Monotonic Stack,","1714":"Array,Breadth-First Search,Graph,Heap (Priority Queue),Matrix,Shortest Path,","1715":"Array,Greedy,Sorting,","1716":"Array,Hash Table,Simulation,","1717":"Linked List,String,Stack,Design,Simulation,Doubly-Linked List,","1718":"String,","1719":"Array,Two Pointers,Binary Search,Sorting,","1720":"Array,Binary Search,Sliding Window,Prefix Sum,","1721":"Array,Simulation,","1722":"Array,Dynamic Programming,Matrix,","1723":"Array,Dynamic Programming,Backtracking,Bit Manipulation,Bitmask,","1724":"Array,Hash Table,String,Bit Manipulation,Enumeration,","1725":"Math,Dynamic Programming,Greedy,Enumeration,","1726":"String,Dynamic Programming,Greedy,Memoization,","1727":"Array,Dynamic Programming,Memoization,","1728":",","1729":"Array,Math,Bit Manipulation,","1730":"Dynamic Programming,Memoization,","1731":"Array,Matrix,","1732":"Dynamic Programming,","1733":"Array,Dynamic Programming,","1734":"Array,Bit Manipulation,Tree,Depth-First Search,","1735":"Hash Table,String,","1736":"Dynamic Programming,Queue,Simulation,","1737":"Array,Dynamic Programming,Depth-First Search,Breadth-First Search,Graph,Topological Sort,Memoization,Matrix,","1738":"Tree,Depth-First Search,Binary Tree,","1739":"Array,Two Pointers,Binary Search,Sorting,","1740":"Array,Binary Search,Greedy,Sorting,Heap (Priority Queue),","1741":",","1742":"Array,Greedy,Sorting,Heap (Priority Queue),","1743":"Hash Table,Design,Heap (Priority Queue),Ordered Set,","1744":"Two Pointers,String,","1745":"Math,Dynamic Programming,Combinatorics,Number Theory,","1746":"Array,Hash Table,Counting,","1747":"Array,Hash Table,Sorting,Heap (Priority Queue),","1748":"Array,Math,Sorting,Heap (Priority Queue),Number Theory,","1749":"Array,Hash Table,Counting,","1750":"Array,Math,","1751":"Hash Table,Design,Heap (Priority Queue),Ordered Set,","1752":"Array,Hash Table,Greedy,","1753":"Array,Hash Table,Matrix,Simulation,","1754":"Hash Table,Design,Heap (Priority Queue),Ordered Set,","1755":"Array,Hash Table,Binary Search,Bit Manipulation,","1756":"Database,","1757":"Array,Hash Table,Greedy,Sorting,Heap (Priority Queue),Simulation,","1758":"Array,Math,Binary Search,Greedy,","1759":"Depth-First Search,Graph,","1760":"Depth-First Search,Graph,Topological Sort,","1761":"Array,Hash Table,Sorting,Ordered Set,","1762":"Array,Hash Table,Math,Counting,","1763":",","1764":"Array,Hash Table,Two Pointers,Enumeration,","1765":"Array,Hash Table,Tree,Depth-First Search,Breadth-First Search,Union Find,Graph,","1766":"Array,Dynamic Programming,","1767":"Hash Table,String,Dynamic Programming,","1768":"Array,Matrix,","1769":"Hash Table,Graph,","1770":"String,Backtracking,Stack,Greedy,","1771":"Math,Dynamic Programming,","1772":"String,Sliding Window,","1773":"String,Dynamic Programming,Simulation,","1774":"Array,String,Prefix Sum,","1775":"Array,Greedy,","1776":"Hash Table,String,Greedy,Counting,","1777":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1778":"Array,Sorting,Heap (Priority Queue),","1779":"Array,Binary Search,Greedy,Sorting,Prefix Sum,","1780":"String,Stack,Simulation,","1781":"Array,String,Prefix Sum,","1782":"Array,Graph,Topological Sort,Matrix,","1783":"Array,Hash Table,","1784":"Math,Two Pointers,Brainteaser,","1785":"Array,Backtracking,Bit Manipulation,Matrix,Enumeration,","1786":"Array,Binary Search,Queue,Sliding Window,Heap (Priority Queue),Prefix Sum,Monotonic Queue,","1787":"Array,Hash Table,String,","1788":"Math,Dynamic Programming,Combinatorics,","1789":",","1790":"Hash Table,String,Greedy,","1791":"Array,Two Pointers,Greedy,Sorting,Heap (Priority Queue),Prefix Sum,","1792":"Array,Divide and Conquer,Dynamic Programming,Binary Indexed Tree,Segment Tree,Queue,Monotonic Queue,","1793":"Math,String,","1794":"Array,Two Pointers,Greedy,Sorting,","1795":"Array,Binary Search,Bit Manipulation,Sliding Window,","1796":"Array,Greedy,Sorting,","1797":"Math,Number Theory,","1798":"String,","1799":"Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1800":"Array,String,Trie,Counting,","1801":"Array,Hash Table,String,Sorting,","1802":"Array,Bit Manipulation,Brainteaser,","1803":"Array,Dynamic Programming,Prefix Sum,","1804":"Array,Hash Table,Tree,Union Find,Graph,Sorting,","1805":"Hash Table,String,Counting,","1806":"Binary Search,Union Find,Design,Binary Indexed Tree,Segment Tree,Heap (Priority Queue),Ordered Set,","1807":"Array,Bit Manipulation,Brainteaser,","1808":"Array,Binary Search,Divide and Conquer,Binary Indexed Tree,Segment Tree,Merge Sort,Ordered Set,","1809":"Math,Enumeration,Number Theory,","1810":"Array,Matrix,Prefix Sum,","1811":"Greedy,Bit Manipulation,","1812":"String,Dynamic Programming,Rolling Hash,String Matching,Hash Function,","1813":"Array,","1814":"Array,Bit Manipulation,","1815":"Hash Table,String,Stack,Greedy,","1816":"Array,Dynamic Programming,Matrix,","1817":",","1818":"Array,Binary Search,Dynamic Programming,Greedy,Prefix Sum,","1819":"Array,Math,Tree,Depth-First Search,Enumeration,","1820":"Array,Hash Table,Two Pointers,Sorting,","1821":"Array,Hash Table,Math,Counting,","1822":"Math,Enumeration,","1823":"Array,Queue,Sliding Window,Monotonic Queue,","1824":"Array,String,","1825":"Array,Math,Number Theory,","1826":"Array,Binary Search,Greedy,Sorting,Prefix Sum,","1827":"Array,Greedy,Sorting,","1828":"Array,Hash Table,String,","1829":"Array,String,","1830":"Array,Hash Table,Counting,","1831":"Array,Binary Search,Stack,Sorting,Heap (Priority Queue),Monotonic Stack,","1832":"Array,Math,","1833":"Array,Hash Table,String,Sorting,Heap (Priority Queue),","1834":"Math,Greedy,","1835":"Array,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1836":"Array,Two Pointers,Simulation,","1837":"Array,Hash Table,Sliding Window,","1838":"Array,Two Pointers,Heap (Priority Queue),Simulation,","1839":",","1840":"Array,Hash Table,Two Pointers,Sorting,","1841":"Dynamic Programming,","1842":"Array,Tree,Depth-First Search,Breadth-First Search,Graph,","1843":"Math,","1844":"Array,Math,Number Theory,","1845":"Tree,Breadth-First Search,Binary Tree,","1846":"Two Pointers,String,Dynamic Programming,Greedy,","1847":"Array,Hash Table,Sorting,","1848":"Array,Binary Search,Tree,Depth-First Search,Binary Search Tree,Binary Tree,","1849":"Tree,Depth-First Search,Breadth-First Search,Graph,","1850":"String,Dynamic Programming,","1851":"Math,Geometry,","1852":"Array,Matrix,Simulation,","1853":"String,Dynamic Programming,","1854":"Math,Prefix Sum,","1855":"Two Pointers,String,Greedy,","1856":"Linked List,Stack,Recursion,Monotonic Stack,","1857":"Array,Hash Table,Prefix Sum,","1858":"String,","1859":"Array,Hash Table,Two Pointers,Sorting,","1860":"Breadth-First Search,Union Find,Graph,","1861":"Array,String,","1862":"Array,Greedy,Graph,Sorting,Heap (Priority Queue),","1863":"Array,Binary Search,Greedy,","1864":"Array,Hash Table,Greedy,Counting,","1865":"Array,Sorting,Heap (Priority Queue),Matrix,Simulation,","1866":"Array,Hash Table,Binary Search,Dynamic Programming,Sorting,","1867":"Array,Hash Table,Design,Simulation,","1868":"Array,Two Pointers,Breadth-First Search,Union Find,Sorting,Heap (Priority Queue),Matrix,","1869":"Array,Hash Table,String,Bit Manipulation,Counting,","1870":"Math,Simulation,Number Theory,","1871":"Hash Table,Graph,","1872":"Array,Tree,Binary Tree,","1873":"Array,Two Pointers,","1874":"Array,Hash Table,String,Sorting,Heap (Priority Queue),","1875":"Math,Binary Search,Number Theory,","1876":"Hash Table,Math,String,Combinatorics,Counting,","1877":",","1878":"Hash Table,String,Sliding Window,","1879":"Array,Binary Search,Greedy,Sorting,","1880":"Array,Dynamic Programming,","1881":"Math,","1882":"Array,Hash Table,Math,Number Theory,","1883":"String,Dynamic Programming,Greedy,","1884":"Math,Number Theory,","1885":"Math,","1886":"Hash Table,Design,Queue,Counting,Data Stream,","1887":"Array,Math,Bit Manipulation,","1888":"Array,Binary Search,Greedy,Queue,Sliding Window,Prefix Sum,","1889":"Array,Binary Search,Counting,","1890":",","1891":"Hash Table,String,Counting,","1892":"Array,Heap (Priority Queue),Simulation,","1893":"Array,Math,","1894":"Array,Matrix,Prefix Sum,","1895":"Array,Hash Table,Sliding Window,","1896":"Array,Dynamic Programming,Tree,Depth-First Search,","1897":"Array,Hash Table,Two Pointers,Binary Search,","1898":"Array,Math,Greedy,","1899":"Array,Greedy,Sorting,Heap (Priority Queue),","1900":"Math,Number Theory,","1901":"Math,","1902":"Array,Sorting,Matrix,","1903":"String,Bit Manipulation,","1904":"Array,Hash Table,Dynamic Programming,Counting,","1905":"Array,Hash Table,Math,Simulation,","1906":"Math,Recursion,","1907":"Array,Greedy,Sorting,Heap (Priority Queue),","1908":"Array,Dynamic Programming,Binary Indexed Tree,Enumeration,Prefix Sum,","1909":"Array,Simulation,","1910":"Array,Hash Table,Binary Search,Greedy,Sorting,","1911":"Array,Binary Search,Sliding Window,","1912":"Array,Dynamic Programming,Depth-First Search,Breadth-First Search,Matrix,","1913":"Array,Heap (Priority Queue),Simulation,","1914":"Array,String,Prefix Sum,","1915":"Array,Binary Search,","1916":"Array,Hash Table,Greedy,","1917":"Array,Two Pointers,Simulation,","1918":"Array,Two Pointers,Binary Search,Sorting,","1919":"Array,Hash Table,String,Bit Manipulation,","1920":"Two Pointers,String,Binary Search,","1921":"Math,Greedy,","1922":"Array,Greedy,Sorting,","1923":"Array,Bit Manipulation,Brainteaser,","1924":"Array,Segment Tree,","1925":"Array,Hash Table,Two Pointers,","1926":"Dynamic Programming,Greedy,Bit Manipulation,","1927":"Array,Math,Dynamic Programming,Bit Manipulation,Bitmask,","1928":"Array,String,Dynamic Programming,Greedy,Union Find,Matrix,","1929":"Array,Prefix Sum,","1930":"Array,Math,String,","1931":"Array,Two Pointers,Binary Search,Greedy,Sorting,","1932":"Array,Breadth-First Search,Graph,Heap (Priority Queue),Matrix,Shortest Path,","1933":"Math,Greedy,Sorting,","1934":"Math,","1935":"Array,Sorting,","1936":"Array,Hash Table,Dynamic Programming,Tree,Depth-First Search,","1937":"Math,Simulation,","1938":"Tree,Breadth-First Search,Sorting,Binary Tree,","1939":"Array,Hash Table,Math,Number Theory,","1940":"Array,Dynamic Programming,","1941":"Array,String,Counting,","1942":"Array,Greedy,Sorting,Prefix Sum,","1943":"Array,Hash Table,Bit Manipulation,Prefix Sum,","1944":"Array,Binary Search,Stack,Greedy,Sorting,","1945":"Math,Greedy,","1946":"Array,Two Pointers,Greedy,Sorting,","1947":"Array,Hash Table,Sorting,Heap (Priority Queue),Simulation,","1948":"Array,Binary Search,","1949":"Bit Manipulation,","1950":"Array,Depth-First Search,Breadth-First Search,Matrix,Simulation,","1951":"Array,Hash Table,Math,Dynamic Programming,Backtracking,Sorting,Combinatorics,","1952":"Math,Greedy,","1953":"Array,Binary Search,Sorting,Prefix Sum,","1954":"Array,Tree,Graph,Topological Sort,","1955":"Array,Hash Table,Enumeration,","1956":"Breadth-First Search,Graph,","1957":"String,","1958":"Array,Hash Table,","1959":"Array,Greedy,Sorting,Heap (Priority Queue),","1960":"Array,Breadth-First Search,Ordered Set,","1961":"Array,Hash Table,Prefix Sum,","1962":"Array,Dynamic Programming,Stack,Breadth-First Search,Union Find,Heap (Priority Queue),Matrix,Monotonic Stack,","1963":",","1964":",","1965":",","1966":",","1967":",","1968":",","1969":",","1970":",","1971":",","1972":",","1973":",","1974":",","1975":",","1976":",","1977":",","1978":",","1979":"Array,Matrix,","1980":"Array,Prefix Sum,","1981":"Hash Table,Tree,Depth-First Search,Breadth-First Search,Binary Tree,","1982":"Graph,Design,Heap (Priority Queue),Shortest Path,","1983":"Array,Matrix,","1984":"Array,","1985":"String,Dynamic Programming,Stack,Greedy,","1986":"Array,Dynamic Programming,Tree,Depth-First Search,Graph,","1987":",","1988":",","1989":"Math,","1990":"Math,","1991":"Array,Hash Table,Sliding Window,","1992":"Array,Math,Number Theory,","1993":"Array,Greedy,","1994":"Array,Hash Table,Bit Manipulation,","1995":"Array,Depth-First Search,Breadth-First Search,Union Find,Matrix,","1996":"Array,Binary Search,Greedy,Binary Indexed Tree,Segment Tree,Sorting,Ordered Set,","1997":"Array,Simulation,","1998":"Array,Hash Table,Matrix,","1999":"Array,Graph,Heap (Priority Queue),Shortest Path,","2000":"String,Greedy,","2001":",","2002":",","2003":",","2004":"Array,Hash Table,","2005":"Hash Table,Design,","2006":"Array,","2007":"Array,Dynamic Programming,Greedy,Tree,Binary Tree,","2008":"Array,String,","2009":"Array,Sorting,Heap (Priority Queue),Matrix,Simulation,","2010":"Array,Greedy,Bit Manipulation,Prefix Sum,","2011":"Array,Math,Dynamic Programming,Sorting,Prefix Sum,","2012":"Array,Hash Table,Simulation,","2013":"Array,Bit Manipulation,","2014":"Array,Dynamic Programming,Matrix,","2015":"Depth-First Search,Breadth-First Search,Graph,","2016":",","2017":",","2018":",","2019":"String,Stack,Simulation,","2020":"Two Pointers,String,Greedy,","2021":"Math,Backtracking,","2022":"Graph,Heap (Priority Queue),Shortest Path,","2023":",","2024":",","2025":",","2026":"Array,Greedy,Sorting,","2027":"Array,Hash Table,String,Dynamic Programming,Trie,","2028":"Array,Dynamic Programming,Backtracking,Greedy,Bit Manipulation,Sorting,Enumeration,","2029":"String,","2030":"Array,Hash Table,Matrix,","2031":"String,Dynamic Programming,Greedy,","2032":"Array,Hash Table,Binary Search,Dynamic Programming,Memoization,Sorting,Matrix,Ordered Set,","2033":",","2034":"Hash Table,String,","2035":"Array,Simulation,","2036":"Array,Hash Table,","2037":"Math,String,Dynamic Programming,","2038":",","2039":",","2040":",","2041":",","2042":",","2043":",","2044":",","2045":"Hash Table,Math,","2046":"String,Sliding Window,","2047":"Array,Brainteaser,Sorting,Prefix Sum,","2048":"Array,Hash Table,Bit Manipulation,Matrix,","2049":"Array,Sorting,","2050":"Array,Enumeration,","2051":"Array,Binary Search,Stack,Binary Indexed Tree,Segment Tree,Sorting,Monotonic Stack,","2052":"Math,Simulation,","2053":"Array,Sorting,","2054":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","2055":"Array,Hash Table,String,Simulation,","2056":"Math,Dynamic Programming,Greedy,Brainteaser,","2057":"Array,String,Dynamic Programming,","2058":"Array,Hash Table,Sliding Window,Sorting,","2059":"Array,Hash Table,Math,Counting,Number Theory,","2060":"Bit Manipulation,Brainteaser,","2061":"Array,Math,Dynamic Programming,","2062":"Array,Stack,Sorting,Simulation,","2063":"Array,Sliding Window,","2064":"Array,Math,Enumeration,Number Theory,","2065":"Array,Queue,Sliding Window,Heap (Priority Queue),Ordered Set,Monotonic Queue,","2066":"Array,Enumeration,","2067":"Array,Hash Table,Sorting,Simulation,","2068":"Hash Table,String,Dynamic Programming,Backtracking,","2069":"Array,Hash Table,Enumeration,","2070":"Math,","2071":"Array,Dynamic Programming,","2072":"Array,Dynamic Programming,","2073":"Array,Enumeration,","2074":"Array,Binary Search,Sliding Window,Sorting,","2075":"Array,Hash Table,Sorting,","2076":"Array,Hash Table,String,Sliding Window,","2077":"Array,Hash Table,Sorting,","2078":"String,Sorting,","2079":"Array,Dynamic Programming,","2080":"Dynamic Programming,","2081":"Array,String,","2082":"Array,Greedy,","2083":"Array,Math,Binary Search,Greedy,Sorting,","2084":"Dynamic Programming,Bit Manipulation,Tree,Depth-First Search,Bitmask,","2085":"Array,","2086":"Array,Hash Table,Sliding Window,","2087":"String,Greedy,Enumeration,","2088":"String,Dynamic Programming,","2089":"Math,","2090":"Linked List,Math,Number Theory,","2091":"Array,Hash Table,","2092":"Array,Dynamic Programming,Sorting,","2093":"String,Simulation,","2094":"Array,Dynamic Programming,Greedy,","2095":"Array,Binary Search,Breadth-First Search,Union Find,Matrix,","2096":"Array,Hash Table,Stack,Greedy,Sorting,Heap (Priority Queue),","2097":"Array,Hash Table,","2098":"Linked List,Math,Stack,","2099":"Array,Binary Search,Ordered Set,","2100":"Array,Math,Stack,Greedy,Monotonic Stack,Number Theory,","2101":"Array,Two Pointers,Binary Search,Sorting,","2102":"Two Pointers,String,","2103":"Array,Binary Search,Dynamic Programming,","2104":"Math,Dynamic Programming,","2105":"Array,String,","2106":"Math,Greedy,","2107":"Array,Hash Table,Binary Search,Dynamic Programming,Sorting,","2108":"Array,Hash Table,Binary Search,Sliding Window,","2109":"String,Counting,","2110":"Math,Greedy,","2111":"Array,Greedy,Bit Manipulation,","2112":"Array,Dynamic Programming,Bit Manipulation,","2113":"String,","2114":"Hash Table,String,Sorting,","2115":"Array,Hash Table,Sliding Window,","2116":"Hash Table,Math,String,Greedy,Combinatorics,","2117":"Math,Enumeration,","2118":"Array,Hash Table,Prefix Sum,","2119":"Array,Tree,Graph,Strongly Connected Component,","2120":"Array,Hash Table,Prefix Sum,","2121":",","2122":"Array,Dynamic Programming,Breadth-First Search,Matrix,","2123":"Math,String,Dynamic Programming,String Matching,","2124":"Array,","2125":"Array,Hash Table,Two Pointers,Binary Search,Greedy,Counting,","2126":"Array,Hash Table,Bit Manipulation,","2127":"Array,Sorting,Enumeration,","2128":"Array,Binary Search,","2129":"Array,Math,Number Theory,","2130":"Math,String,Greedy,","2131":"Array,Stack,Monotonic Stack,","2132":"Array,Stack,Monotonic Stack,","2133":"Math,Dynamic Programming,Tree,Depth-First Search,Number Theory,","2134":"Array,Hash Table,Bit Manipulation,","2135":"Array,Hash Table,Greedy,Counting,","2136":"Array,Greedy,Bit Manipulation,","2137":"Tree,Depth-First Search,","2138":"Array,","2139":"Array,","2140":"Array,Hash Table,Sliding Window,Prefix Sum,","2141":"Dynamic Programming,Graph,Memoization,","2142":",","2143":",","2144":",","2145":",","2146":",","2147":",","2148":",","2149":",","2150":",","2151":",","2152":",","2153":",","2154":",","2155":",","2156":",","2157":"Math,","2158":"Array,Greedy,Sorting,","2159":"Array,Hash Table,Greedy,Bit Manipulation,","2160":"Array,Simulation,","2161":"Array,String,Dynamic Programming,Greedy,","2162":"Array,String,Dynamic Programming,","2163":"Array,Hash Table,Dynamic Programming,Sliding Window,","2164":"Array,Two Pointers,","2165":"String,Sliding Window,","2166":"Array,Two Pointers,","2167":"Array,Matrix,Prefix Sum,","2168":"Array,","2169":"Array,Hash Table,Greedy,","2170":"Two Pointers,String,Dynamic Programming,","2171":"Array,Hash Table,","2172":"String,","2173":"Array,Dynamic Programming,","2174":"Array,Dynamic Programming,Binary Indexed Tree,Segment Tree,","2175":"Array,Dynamic Programming,","2176":"Array,Dynamic Programming,Bit Manipulation,Tree,Depth-First Search,","2177":"Array,Matrix,","2178":"Graph,","2179":"Dynamic Programming,Tree,Depth-First Search,","2180":"Array,Binary Search,Dynamic Programming,Binary Indexed Tree,Segment Tree,","2181":"Math,Combinatorics,Enumeration,","2182":"Math,Combinatorics,Enumeration,","2183":"Math,Dynamic Programming,Combinatorics,","2184":"Array,Greedy,Sorting,Heap (Priority Queue),Matrix,","2185":"Array,Hash Table,Bit Manipulation,Trie,Sliding Window,","2186":"Array,Hash Table,String,Sorting,","2187":"Array,Enumeration,","2188":"Array,Hash Table,Bit Manipulation,Trie,Sliding Window,","2189":"String,","2190":"Two Pointers,String,Greedy,","2191":"Math,Greedy,Bit Manipulation,","2192":"Array,Binary Search,Stack,Binary Indexed Tree,Segment Tree,Heap (Priority Queue),Monotonic Stack,","2193":"Array,String,","2194":"Array,Sorting,","2195":"Array,Dynamic Programming,Queue,Heap (Priority Queue),Monotonic Queue,","2196":"Array,Binary Search,Dynamic Programming,Stack,Queue,Monotonic Stack,Monotonic Queue,","2197":"Array,Math,Matrix,Simulation,","2198":"Hash Table,Math,String,Enumeration,Number Theory,Prefix Sum,","2199":"Array,Union Find,Sorting,","2200":"Hash Table,Math,String,Number Theory,Prefix Sum,","2201":"Array,Enumeration,","2202":"Array,Greedy,Sorting,","2203":"Hash Table,String,Sliding Window,","2204":"Array,Math,Combinatorics,","2205":"Array,Hash Table,","2206":"String,Dynamic Programming,Greedy,","2207":"Array,Hash Table,Sliding Window,","2208":"Bit Manipulation,Graph,Heap (Priority Queue),Enumeration,Shortest Path,","2209":"Array,Simulation,Counting,","2210":"Array,Math,Simulation,","2211":"Array,Sliding Window,","2212":"Array,Hash Table,Math,Combinatorics,","2213":"Array,Hash Table,Math,Matrix,","2214":"Array,Greedy,Sorting,","2215":"Array,Math,Binary Search,Greedy,Sorting,","2216":"Array,Two Pointers,Binary Search,Enumeration,","2217":"Array,Greedy,Sorting,Prefix Sum,","2218":"Array,Two Pointers,Binary Search,","2219":"Dynamic Programming,Tree,Depth-First Search,Sorting,Heap (Priority Queue),","2220":"Array,Hash Table,Enumeration,","2221":"Array,String,Graph,Shortest Path,","2222":"Array,String,Dynamic Programming,Graph,Trie,Shortest Path,","2223":"Array,Bit Manipulation,","2224":"Hash Table,String,Binary Search,Sliding Window,Counting,","2225":"Hash Table,String,Binary Search,Sliding Window,Counting,","2226":"Hash Table,String,Prefix Sum,","2227":"Array,Bit Manipulation,","2228":"Dynamic Programming,Breadth-First Search,Memoization,","2229":"Math,String,Dynamic Programming,","2230":"Array,","2231":"Array,Enumeration,","2232":"Array,Hash Table,Greedy,","2233":"String,Dynamic Programming,Bit Manipulation,Bitmask,","2234":"Array,Hash Table,Counting,","2235":"Two Pointers,String,Binary Search,Rolling Hash,String Matching,Hash Function,","2236":"Binary Search,Dynamic Programming,Bit Manipulation,","2237":"Two Pointers,String,Binary Search,Rolling Hash,String Matching,Hash Function,","2238":"Array,Sorting,Enumeration,","2239":"Array,Bit Manipulation,Sorting,","2240":"Array,Math,Greedy,Number Theory,","2241":"Array,Hash Table,Sliding Window,Heap (Priority Queue),","2242":"Math,String,Greedy,","2243":"Breadth-First Search,Graph,Prefix Sum,","2244":"Hash Table,String,Greedy,Sorting,Counting,","2245":"Graph,Prefix Sum,","2246":"String,","2247":"Math,","2248":"Array,Greedy,Bit Manipulation,","2249":"Array,Math,Sorting,","2250":"Array,Math,Geometry,Sorting,Enumeration,","2251":"Array,Hash Table,Prefix Sum,","2252":"Array,Math,Geometry,Sorting,Enumeration,","2253":"Array,Simulation,Prefix Sum,","2254":"String,Rolling Hash,String Matching,Hash Function,","2255":"Array,Matrix,","2256":"Array,Matrix,","2257":"Array,Rolling Hash,String Matching,Hash Function,","2258":"Array,Hash Table,String,Greedy,Sorting,Counting,","2259":"Array,Simulation,","2260":"Array,Hash Table,Sorting,Counting,","2261":"Array,Dynamic Programming,Memoization,","2262":"Array,Dynamic Programming,Sorting,","2263":"Array,String,Trie,Rolling Hash,String Matching,Hash Function,","2264":"Array,Hash Table,String,Trie,","2265":"Array,Hash Table,Math,Matrix,Counting,Enumeration,Number Theory,","2266":"Array,Hash Table,Counting,","2267":"Array,Math,Geometry,","2268":"Array,Binary Search,","2269":"Array,Binary Search,Greedy,Heap (Priority Queue),","2270":"Array,","2271":"Array,Heap (Priority Queue),Simulation,","2272":"Array,Tree,Depth-First Search,","2273":"Array,Dynamic Programming,Greedy,Bit Manipulation,Tree,Sorting,","2274":"Array,Simulation,","2275":"Array,Binary Indexed Tree,Segment Tree,Simulation,","2276":"Array,Greedy,Sorting,","2277":"Array,Hash Table,String,Trie,","2278":"Array,Dynamic Programming,Prefix Sum,","2279":"Array,Math,","2280":"Array,Hash Table,Sorting,Heap (Priority Queue),Simulation,","2281":"Hash Table,String,Greedy,Sorting,Heap (Priority Queue),Counting,","2282":"Array,Dynamic Programming,","2283":"Hash Table,String,","2284":"Math,String,Counting,","2285":"Hash Table,String,Greedy,Sorting,Counting,","2286":"Array,Greedy,Sliding Window,Prefix Sum,","2287":"Hash Table,String,Sliding Window,","2288":"Math,Greedy,Enumeration,","2289":"Array,Hash Table,Heap (Priority Queue),Ordered Set,","2290":"Array,String,Trie,","2291":"Array,Bit Manipulation,Sliding Window,","2292":"Array,Prefix Sum,","2293":"Array,Bit Manipulation,Sliding Window,","2294":"Array,Dynamic Programming,Sorting,","2295":"Math,","2296":"Math,Simulation,","2297":"Array,Math,","2298":"Array,Math,Geometry,Sorting,Ordered Set,","2299":"Array,","2300":"String,Greedy,","2301":"Array,Greedy,Sorting,","2302":"Array,Bit Manipulation,Union Find,Graph,","2303":"String,","2304":"Array,Greedy,Sorting,","2305":"Array,Graph,Heap (Priority Queue),Shortest Path,","2306":"Array,Binary Search,Stack,Monotonic Stack,","2307":"String,Enumeration,","2308":"Array,Math,Number Theory,","2309":"Array,Math,Binary Search,Bit Manipulation,Combinatorics,Number Theory,","2310":"Array,Binary Search,Dynamic Programming,Bit Manipulation,Segment Tree,Queue,","2311":"Hash Table,String,","2312":"Hash Table,String,","2313":"Array,Dynamic Programming,Matrix,","2314":"Depth-First Search,Breadth-First Search,Graph,Heap (Priority Queue),Shortest Path,","2315":"Array,Matrix,Enumeration,","2316":"Array,Hash Table,Math,Combinatorics,Counting,","2317":"Dynamic Programming,Prefix Sum,","2318":"Dynamic Programming,Prefix Sum,","2319":"Array,","2320":"Array,Two Pointers,Sorting,Enumeration,","2321":"Bit Manipulation,","2322":"Array,Hash Table,Binary Search,Sliding Window,","2323":"String,","2324":"Hash Table,String,Counting,","2325":"Hash Table,String,Counting,","2326":"Array,Greedy,Enumeration,","2327":"Array,Matrix,","2328":"Array,Hash Table,String,Binary Search,Sorting,","2329":"Hash Table,String,Dynamic Programming,Counting,","2330":"Array,Binary Search,Bit Manipulation,","2331":"Hash Table,String,","2332":"Array,Dynamic Programming,Matrix,","2333":"Array,Dynamic Programming,Bit Manipulation,Bitmask,","2334":"Array,","2335":"Array,Binary Search,Prefix Sum,","2336":"Array,Hash Table,Math,Counting,","2337":"Math,Dynamic Programming,Bit Manipulation,Memoization,Combinatorics,","2338":"Array,Hash Table,Bit Manipulation,","2339":"Array,Hash Table,","2340":"Array,Hash Table,Simulation,","2341":"Array,Binary Search,Binary Indexed Tree,Segment Tree,","2342":"Array,Hash Table,","2343":"String,","2344":"Array,Hash Table,","2345":"Array,Divide and Conquer,Dynamic Programming,Segment Tree,","2346":"String,Simulation,","2347":"Array,Sorting,","2348":"Hash Table,String,Stack,Greedy,Heap (Priority Queue),","2349":"String,Stack,Simulation,","2350":"Array,Simulation,","2351":"Array,Hash Table,Dynamic Programming,","2352":"Array,Hash Table,Dynamic Programming,","2353":"Math,Simulation,","2354":"Array,Math,Simulation,Combinatorics,Prefix Sum,","2355":"Array,Dynamic Programming,","2356":"Array,Dynamic Programming,Bit Manipulation,","2357":"Array,Hash Table,Counting,","2358":"Array,Hash Table,Counting,","2359":"Array,Hash Table,Two Pointers,Binary Search,Dynamic Programming,Sorting,Counting,","2360":"Array,Binary Indexed Tree,Segment Tree,","2361":"Array,Math,","2362":"Array,Bit Manipulation,Queue,Sliding Window,Prefix Sum,","2363":"Array,Dynamic Programming,Greedy,","2364":"Array,Dynamic Programming,","2365":"Array,Two Pointers,Sorting,","2366":"Array,Matrix,","2367":"Array,Dynamic Programming,","2368":"Array,Matrix,Enumeration,","2369":"Array,Enumeration,","2370":"Array,Dynamic Programming,","2371":",","2372":"Array,Greedy,","2373":"Array,Sliding Window,","2374":"Array,Binary Search,Bit Manipulation,Segment Tree,","2375":"String,","2376":"String,Bit Manipulation,Recursion,","2377":"Array,Matrix,Prefix Sum,","2378":"Array,String,Dynamic Programming,Suffix Array,","2379":"String,Greedy,","2380":"Array,Hash Table,Linked List,","2381":"Array,Dynamic Programming,Greedy,Sorting,","2382":"Array,Greedy,Sorting,","2383":"Database,","2384":"Math,Simulation,Game Theory,","2385":"Array,Hash Table,Prefix Sum,","2386":"Bit Manipulation,","2387":"Math,String,Brainteaser,Game Theory,","2388":"String,Greedy,Counting,","2389":"Array,Dynamic Programming,Stack,Greedy,Monotonic Stack,","2390":"Array,Math,","2391":"Array,Math,Number Theory,","2392":"String,Sliding Window,Enumeration,","2393":"Array,Math,Depth-First Search,Breadth-First Search,Union Find,Geometry,","2394":"Array,Hash Table,Counting,","2395":"Array,Two Pointers,Matrix,","2396":"Array,Two Pointers,Matrix,","2397":"Dynamic Programming,Tree,Depth-First Search,Graph,","2398":"Array,Hash Table,Design,Matrix,Simulation,","2399":"Array,Breadth-First Search,Graph,","2400":"Array,Greedy,Graph,Ordered Set,","2401":"Array,Binary Indexed Tree,","2402":"Array,String,Simulation,","2403":"Tree,Depth-First Search,","2404":"Array,Math,Dynamic Programming,Combinatorics,Prefix Sum,","2405":",","2406":"Array,Sliding Window,","2407":"Array,Sliding Window,","2408":"Array,Dynamic Programming,Matrix,Enumeration,","2409":"Array,Dynamic Programming,Matrix,Enumeration,","2410":"String,Sliding Window,","2411":"Array,Dynamic Programming,","2412":"Math,String,Dynamic Programming,Greedy,Number Theory,","2413":"Array,String,Binary Search,Sliding Window,Prefix Sum,","2414":"Array,Math,Heap (Priority Queue),Simulation,","2415":"Array,Hash Table,Sorting,Counting,Enumeration,","2416":"Array,Heap (Priority Queue),Simulation,","2417":"Array,Hash Table,Sorting,Counting,Enumeration,","2418":"Math,","2419":"String,Simulation,","2420":"Hash Table,Math,Combinatorics,Enumeration,","2421":"Array,Greedy,Sorting,","2422":"Math,String,","2423":"Array,Heap (Priority Queue),","2424":"Array,Dynamic Programming,Bit Manipulation,Matrix,Bitmask,","2425":"Array,Dynamic Programming,","2426":"Math,String,"},"difficulty":{"0":"Easy","1":"Easy","2":"Medium","3":"Hard","4":"Medium","5":"Medium","6":"Easy","7":"Hard","8":"Medium","9":"Medium","10":"Easy","11":"Easy","12":"Medium","13":"Medium","14":"Medium","15":"Medium","16":"Medium","17":"Easy","18":"Easy","19":"Medium","20":"Hard","21":"Medium","22":"Hard","23":"Easy","24":"Easy","25":"Easy","26":"Medium","27":"Hard","28":"Medium","29":"Hard","30":"Medium","31":"Medium","32":"Easy","33":"Medium","34":"Hard","35":"Medium","36":"Medium","37":"Medium","38":"Hard","39":"Hard","40":"Medium","41":"Hard","42":"Medium","43":"Medium","44":"Medium","45":"Medium","46":"Medium","47":"Medium","48":"Hard","49":"Hard","50":"Medium","51":"Medium","52":"Medium","53":"Medium","54":"Medium","55":"Easy","56":"Hard","57":"Medium","58":"Medium","59":"Medium","60":"Medium","61":"Hard","62":"Easy","63":"Hard","64":"Easy","65":"Easy","66":"Medium","67":"Medium","68":"Medium","69":"Medium","70":"Hard","71":"Medium","72":"Medium","73":"Medium","74":"Medium","75":"Medium","76":"Medium","77":"Easy","78":"Hard","79":"Hard","80":"Medium","81":"Hard","82":"Easy","83":"Medium","84":"Medium","85":"Medium","86":"Medium","87":"Easy","88":"Medium","89":"Medium","90":"Medium","91":"Medium","92":"Medium","93":"Easy","94":"Medium","95":"Medium","96":"Easy","97":"Medium","98":"Medium","99":"Easy","100":"Medium","101":"Easy","102":"Easy","103":"Easy","104":"Medium","105":"Medium","106":"Hard","107":"Medium","108":"Medium","109":"Easy","110":"Easy","111":"Medium","112":"Easy","113":"Medium","114":"Hard","115":"Hard","116":"Easy","117":"Hard","118":"Hard","119":"Medium","120":"Medium","121":"Medium","122":"Medium","123":"Medium","124":"Medium","125":"Hard","126":"Easy","127":"Medium","128":"Medium","129":"Medium","130":"Hard","131":"Easy","132":"Medium","133":"Medium","134":"Easy","135":"Easy","136":"Medium","137":"Medium","138":"Medium","139":"Hard","140":"Medium","141":"Medium","142":"Medium","143":"Medium","144":"Hard","145":"Medium","146":"Easy","147":"Medium","148":"Medium","149":"Medium","150":"Medium","151":"Easy","152":"Easy","153":"Easy","154":"Medium","155":"Hard","156":"Easy","157":"Medium","158":"Medium","159":"Medium","160":"Medium","161":"Medium","162":"Easy","163":"Easy","164":"Easy","165":"Medium","166":"Hard","167":"Medium","168":"Hard","169":"Medium","170":"Easy","171":"Medium","172":"Easy","173":"Medium","174":"Easy","175":"Easy","176":"Easy","177":"Medium","178":"Medium","179":"Medium","180":"Medium","181":"Easy","182":"Easy","183":"Medium","184":"Easy","185":"Easy","186":"Medium","187":"Medium","188":"Medium","189":"Medium","190":"Medium","191":"Hard","192":"Medium","193":"Hard","194":"Medium","195":"Medium","196":"Easy","197":"Hard","198":"Easy","199":"Hard","200":"Medium","201":"Easy","202":"Easy","203":"Easy","204":"Medium","205":"Easy","206":"Medium","207":"Medium","208":"Easy","209":"Easy","210":"Hard","211":"Easy","212":"Medium","213":"Medium","214":"Medium","215":"Easy","216":"Easy","217":"Easy","218":"Medium","219":"Hard","220":"Medium","221":"Easy","222":"Hard","223":"Medium","224":"Medium","225":"Easy","226":"Medium","227":"Hard","228":"Easy","229":"Medium","230":"Medium","231":"Medium","232":"Easy","233":"Easy","234":"Hard","235":"Hard","236":"Medium","237":"Medium","238":"Hard","239":"Medium","240":"Medium","241":"Medium","242":"Medium","243":"Medium","244":"Hard","245":"Hard","246":"Medium","247":"Medium","248":"Medium","249":"Hard","250":"Medium","251":"Medium","252":"Easy","253":"Hard","254":"Medium","255":"Hard","256":"Hard","257":"Medium","258":"Hard","259":"Medium","260":"Hard","261":"Hard","262":"Medium","263":"Easy","264":"Medium","265":"Easy","266":"Medium","267":"Easy","268":"Easy","269":"Easy","270":"Easy","271":"Hard","272":"Hard","273":"Medium","274":"Medium","275":"Hard","276":"Medium","277":"Easy","278":"Medium","279":"Medium","280":"Medium","281":"Medium","282":"Easy","283":"Medium","284":"Medium","285":"Medium","286":"Medium","287":"Hard","288":"Medium","289":"Easy","290":"Medium","291":"Medium","292":"Medium","293":"Easy","294":"Medium","295":"Easy","296":"Medium","297":"Hard","298":"Easy","299":"Medium","300":"Medium","301":"Medium","302":"Medium","303":"Medium","304":"Medium","305":"Medium","306":"Easy","307":"Hard","308":"Easy","309":"Easy","310":"Medium","311":"Hard","312":"Easy","313":"Hard","314":"Easy","315":"Medium","316":"Easy","317":"Easy","318":"Medium","319":"Medium","320":"Medium","321":"Medium","322":"Medium","323":"Medium","324":"Medium","325":"Hard","326":"Medium","327":"Easy","328":"Medium","329":"Medium","330":"Medium","331":"Medium","332":"Hard","333":"Easy","334":"Medium","335":"Medium","336":"Medium","337":"Hard","338":"Medium","339":"Easy","340":"Medium","341":"Medium","342":"Medium","343":"Medium","344":"Medium","345":"Medium","346":"Medium","347":"Hard","348":"Easy","349":"Hard","350":"Easy","351":"Medium","352":"Easy","353":"Medium","354":"Hard","355":"Medium","356":"Medium","357":"Hard","358":"Medium","359":"Medium","360":"Medium","361":"Easy","362":"Medium","363":"Medium","364":"Hard","365":"Hard","366":"Medium","367":"Easy","368":"Hard","369":"Easy","370":"Medium","371":"Hard","372":"Medium","373":"Easy","374":"Hard","375":"Medium","376":"Easy","377":"Easy","378":"Medium","379":"Medium","380":"Easy","381":"Hard","382":"Medium","383":"Easy","384":"Easy","385":"Easy","386":"Medium","387":"Easy","388":"Easy","389":"Medium","390":"Hard","391":"Medium","392":"Medium","393":"Hard","394":"Medium","395":"Medium","396":"Easy","397":"Easy","398":"Medium","399":"Medium","400":"Medium","401":"Medium","402":"Medium","403":"Medium","404":"Easy","405":"Medium","406":"Medium","407":"Medium","408":"Medium","409":"Medium","410":"Easy","411":"Medium","412":"Easy","413":"Hard","414":"Medium","415":"Medium","416":"Easy","417":"Hard","418":"Medium","419":"Medium","420":"Medium","421":"Easy","422":"Medium","423":"Easy","424":"Medium","425":"Easy","426":"Easy","427":"Hard","428":"Easy","429":"Medium","430":"Medium","431":"Easy","432":"Easy","433":"Medium","434":"Easy","435":"Medium","436":"Medium","437":"Easy","438":"Medium","439":"Easy","440":"Hard","441":"Easy","442":"Easy","443":"Hard","444":"Medium","445":"Medium","446":"Easy","447":"Easy","448":"Easy","449":"Easy","450":"Easy","451":"Hard","452":"Hard","453":"Medium","454":"Easy","455":"Medium","456":"Easy","457":"Medium","458":"Medium","459":"Easy","460":"Medium","461":"Easy","462":"Easy","463":"Easy","464":"Medium","465":"Medium","466":"Medium","467":"Medium","468":"Medium","469":"Easy","470":"Easy","471":"Hard","472":"Hard","473":"Hard","474":"Medium","475":"Medium","476":"Easy","477":"Medium","478":"Hard","479":"Medium","480":"Medium","481":"Easy","482":"Easy","483":"Medium","484":"Medium","485":"Medium","486":"Medium","487":"Medium","488":"Easy","489":"Medium","490":"Medium","491":"Easy","492":"Medium","493":"Medium","494":"Easy","495":"Medium","496":"Hard","497":"Medium","498":"Medium","499":"Hard","500":"Medium","501":"Easy","502":"Medium","503":"Medium","504":"Easy","505":"Hard","506":"Medium","507":"Medium","508":"Hard","509":"Easy","510":"Easy","511":"Medium","512":"Hard","513":"Medium","514":"Medium","515":"Medium","516":"Hard","517":"Medium","518":"Hard","519":"Easy","520":"Medium","521":"Easy","522":"Easy","523":"Medium","524":"Hard","525":"Easy","526":"Medium","527":"Easy","528":"Easy","529":"Easy","530":"Easy","531":"Medium","532":"Easy","533":"Hard","534":"Medium","535":"Medium","536":"Medium","537":"Hard","538":"Easy","539":"Medium","540":"Hard","541":"Medium","542":"Medium","543":"Medium","544":"Easy","545":"Medium","546":"Hard","547":"Easy","548":"Medium","549":"Hard","550":"Medium","551":"Easy","552":"Medium","553":"Hard","554":"Medium","555":"Medium","556":"Medium","557":"Hard","558":"Medium","559":"Easy","560":"Easy","561":"Easy","562":"Hard","563":"Medium","564":"Hard","565":"Medium","566":"Medium","567":"Hard","568":"Hard","569":"Medium","570":"Medium","571":"Hard","572":"Easy","573":"Medium","574":"Hard","575":"Medium","576":"Hard","577":"Easy","578":"Hard","579":"Medium","580":"Medium","581":"Hard","582":"Medium","583":"Hard","584":"Medium","585":"Hard","586":"Easy","587":"Medium","588":"Medium","589":"Medium","590":"Medium","591":"Medium","592":"Medium","593":"Medium","594":"Medium","595":"Medium","596":"Hard","597":"Medium","598":"Medium","599":"Easy","600":"Medium","601":"Hard","602":"Medium","603":"Hard","604":"Medium","605":"Hard","606":"Easy","607":"Easy","608":"Medium","609":"Medium","610":"Medium","611":"Hard","612":"Medium","613":"Easy","614":"Medium","615":"Medium","616":"Hard","617":"Medium","618":"Medium","619":"Hard","620":"Easy","621":"Medium","622":"Easy","623":"Medium","624":"Medium","625":"Easy","626":"Medium","627":"Hard","628":"Hard","629":"Hard","630":"Easy","631":"Medium","632":"Easy","633":"Medium","634":"Hard","635":"Medium","636":"Easy","637":"Medium","638":"Medium","639":"Medium","640":"Medium","641":"Hard","642":"Easy","643":"Medium","644":"Medium","645":"Hard","646":"Medium","647":"Medium","648":"Hard","649":"Medium","650":"Medium","651":"Medium","652":"Hard","653":"Medium","654":"Medium","655":"Hard","656":"Medium","657":"Easy","658":"Easy","659":"Medium","660":"Hard","661":"Medium","662":"Hard","663":"Medium","664":"Medium","665":"Easy","666":"Medium","667":"Medium","668":"Easy","669":"Medium","670":"Medium","671":"Medium","672":"Easy","673":"Medium","674":"Hard","675":"Hard","676":"Medium","677":"Medium","678":"Hard","679":"Easy","680":"Easy","681":"Medium","682":"Medium","683":"Easy","684":"Medium","685":"Medium","686":"Hard","687":"Easy","688":"Medium","689":"Medium","690":"Hard","691":"Easy","692":"Medium","693":"Hard","694":"Medium","695":"Medium","696":"Hard","697":"Hard","698":"Medium","699":"Easy","700":"Hard","701":"Medium","702":"Easy","703":"Medium","704":"Medium","705":"Medium","706":"Hard","707":"Easy","708":"Medium","709":"Medium","710":"Easy","711":"Medium","712":"Hard","713":"Medium","714":"Easy","715":"Medium","716":"Hard","717":"Easy","718":"Medium","719":"Hard","720":"Hard","721":"Easy","722":"Medium","723":"Medium","724":"Medium","725":"Easy","726":"Medium","727":"Medium","728":"Hard","729":"Medium","730":"Easy","731":"Medium","732":"Hard","733":"Easy","734":"Easy","735":"Hard","736":"Easy","737":"Medium","738":"Medium","739":"Medium","740":"Medium","741":"Medium","742":"Medium","743":"Medium","744":"Easy","745":"Hard","746":"Medium","747":"Medium","748":"Medium","749":"Easy","750":"Medium","751":"Medium","752":"Hard","753":"Easy","754":"Medium","755":"Medium","756":"Hard","757":"Medium","758":"Medium","759":"Medium","760":"Hard","761":"Medium","762":"Medium","763":"Hard","764":"Easy","765":"Medium","766":"Medium","767":"Hard","768":"Medium","769":"Hard","770":"Medium","771":"Medium","772":"Medium","773":"Medium","774":"Easy","775":"Medium","776":"Medium","777":"Hard","778":"Easy","779":"Medium","780":"Hard","781":"Hard","782":"Easy","783":"Medium","784":"Hard","785":"Hard","786":"Easy","787":"Medium","788":"Medium","789":"Easy","790":"Medium","791":"Medium","792":"Medium","793":"Easy","794":"Medium","795":"Medium","796":"Hard","797":"Easy","798":"Medium","799":"Medium","800":"Medium","801":"Medium","802":"Easy","803":"Medium","804":"Medium","805":"Easy","806":"Easy","807":"Medium","808":"Medium","809":"Easy","810":"Medium","811":"Medium","812":"Hard","813":"Medium","814":"Easy","815":"Medium","816":"Hard","817":"Medium","818":"Medium","819":"Medium","820":"Hard","821":"Easy","822":"Medium","823":"Medium","824":"Medium","825":"Medium","826":"Medium","827":"Medium","828":"Hard","829":"Medium","830":"Easy","831":"Easy","832":"Medium","833":"Medium","834":"Easy","835":"Medium","836":"Medium","837":"Medium","838":"Medium","839":"Easy","840":"Medium","841":"Easy","842":"Medium","843":"Medium","844":"Hard","845":"Easy","846":"Medium","847":"Medium","848":"Medium","849":"Easy","850":"Easy","851":"Medium","852":"Medium","853":"Hard","854":"Medium","855":"Medium","856":"Hard","857":"Hard","858":"Easy","859":"Medium","860":"Medium","861":"Hard","862":"Easy","863":"Medium","864":"Medium","865":"Medium","866":"Easy","867":"Medium","868":"Medium","869":"Easy","870":"Medium","871":"Medium","872":"Hard","873":"Easy","874":"Medium","875":"Medium","876":"Medium","877":"Easy","878":"Medium","879":"Medium","880":"Medium","881":"Easy","882":"Medium","883":"Medium","884":"Medium","885":"Medium","886":"Hard","887":"Easy","888":"Easy","889":"Medium","890":"Hard","891":"Medium","892":"Easy","893":"Medium","894":"Hard","895":"Medium","896":"Medium","897":"Medium","898":"Medium","899":"Easy","900":"Medium","901":"Hard","902":"Easy","903":"Easy","904":"Easy","905":"Medium","906":"Hard","907":"Easy","908":"Medium","909":"Medium","910":"Medium","911":"Easy","912":"Medium","913":"Medium","914":"Hard","915":"Medium","916":"Hard","917":"Easy","918":"Medium","919":"Medium","920":"Hard","921":"Easy","922":"Easy","923":"Medium","924":"Medium","925":"Hard","926":"Easy","927":"Medium","928":"Hard","929":"Hard","930":"Medium","931":"Medium","932":"Easy","933":"Medium","934":"Medium","935":"Medium","936":"Medium","937":"Medium","938":"Hard","939":"Medium","940":"Medium","941":"Medium","942":"Hard","943":"Easy","944":"Easy","945":"Medium","946":"Medium","947":"Hard","948":"Easy","949":"Medium","950":"Medium","951":"Hard","952":"Easy","953":"Medium","954":"Medium","955":"Hard","956":"Easy","957":"Medium","958":"Hard","959":"Easy","960":"Easy","961":"Medium","962":"Hard","963":"Medium","964":"Easy","965":"Medium","966":"Hard","967":"Easy","968":"Medium","969":"Medium","970":"Hard","971":"Easy","972":"Medium","973":"Medium","974":"Hard","975":"Easy","976":"Medium","977":"Hard","978":"Medium","979":"Easy","980":"Medium","981":"Medium","982":"Hard","983":"Easy","984":"Medium","985":"Medium","986":"Hard","987":"Easy","988":"Medium","989":"Medium","990":"Hard","991":"Easy","992":"Medium","993":"Medium","994":"Medium","995":"Easy","996":"Medium","997":"Medium","998":"Hard","999":"Easy","1000":"Medium","1001":"Medium","1002":"Hard","1003":"Easy","1004":"Easy","1005":"Medium","1006":"Medium","1007":"Hard","1008":"Easy","1009":"Medium","1010":"Medium","1011":"Hard","1012":"Medium","1013":"Easy","1014":"Medium","1015":"Medium","1016":"Hard","1017":"Easy","1018":"Medium","1019":"Medium","1020":"Hard","1021":"Easy","1022":"Medium","1023":"Medium","1024":"Hard","1025":"Easy","1026":"Medium","1027":"Hard","1028":"Easy","1029":"Medium","1030":"Medium","1031":"Hard","1032":"Medium","1033":"Medium","1034":"Hard","1035":"Easy","1036":"Medium","1037":"Medium","1038":"Hard","1039":"Easy","1040":"Medium","1041":"Medium","1042":"Hard","1043":"Easy","1044":"Easy","1045":"Easy","1046":"Medium","1047":"Easy","1048":"Medium","1049":"Medium","1050":"Hard","1051":"Easy","1052":"Medium","1053":"Medium","1054":"Hard","1055":"Medium","1056":"Easy","1057":"Medium","1058":"Medium","1059":"Hard","1060":"Medium","1061":"Hard","1062":"Easy","1063":"Medium","1064":"Hard","1065":"Easy","1066":"Easy","1067":"Medium","1068":"Hard","1069":"Easy","1070":"Medium","1071":"Medium","1072":"Hard","1073":"Easy","1074":"Medium","1075":"Medium","1076":"Hard","1077":"Medium","1078":"Medium","1079":"Hard","1080":"Easy","1081":"Medium","1082":"Medium","1083":"Hard","1084":"Easy","1085":"Easy","1086":"Medium","1087":"Hard","1088":"Medium","1089":"Medium","1090":"Medium","1091":"Hard","1092":"Medium","1093":"Medium","1094":"Hard","1095":"Easy","1096":"Hard","1097":"Easy","1098":"Medium","1099":"Medium","1100":"Hard","1101":"Easy","1102":"Medium","1103":"Easy","1104":"Medium","1105":"Medium","1106":"Hard","1107":"Easy","1108":"Medium","1109":"Medium","1110":"Hard","1111":"Easy","1112":"Medium","1113":"Medium","1114":"Easy","1115":"Medium","1116":"Medium","1117":"Hard","1118":"Easy","1119":"Easy","1120":"Medium","1121":"Medium","1122":"Hard","1123":"Easy","1124":"Medium","1125":"Medium","1126":"Hard","1127":"Easy","1128":"Medium","1129":"Medium","1130":"Hard","1131":"Medium","1132":"Medium","1133":"Hard","1134":"Easy","1135":"Medium","1136":"Medium","1137":"Hard","1138":"Easy","1139":"Medium","1140":"Medium","1141":"Hard","1142":"Easy","1143":"Easy","1144":"Medium","1145":"Hard","1146":"Hard","1147":"Easy","1148":"Medium","1149":"Medium","1150":"Hard","1151":"Easy","1152":"Easy","1153":"Medium","1154":"Medium","1155":"Hard","1156":"Easy","1157":"Medium","1158":"Medium","1159":"Hard","1160":"Easy","1161":"Medium","1162":"Medium","1163":"Hard","1164":"Easy","1165":"Medium","1166":"Medium","1167":"Hard","1168":"Easy","1169":"Medium","1170":"Hard","1171":"Medium","1172":"Medium","1173":"Easy","1174":"Medium","1175":"Medium","1176":"Hard","1177":"Easy","1178":"Medium","1179":"Hard","1180":"Hard","1181":"Easy","1182":"Medium","1183":"Medium","1184":"Hard","1185":"Easy","1186":"Medium","1187":"Medium","1188":"Hard","1189":"Easy","1190":"Easy","1191":"Medium","1192":"Medium","1193":"Easy","1194":"Easy","1195":"Medium","1196":"Medium","1197":"Hard","1198":"Easy","1199":"Medium","1200":"Medium","1201":"Hard","1202":"Easy","1203":"Medium","1204":"Medium","1205":"Hard","1206":"Easy","1207":"Medium","1208":"Medium","1209":"Hard","1210":"Easy","1211":"Medium","1212":"Hard","1213":"Hard","1214":"Easy","1215":"Medium","1216":"Medium","1217":"Hard","1218":"Easy","1219":"Medium","1220":"Medium","1221":"Hard","1222":"Easy","1223":"Medium","1224":"Medium","1225":"Easy","1226":"Medium","1227":"Medium","1228":"Hard","1229":"Easy","1230":"Easy","1231":"Easy","1232":"Medium","1233":"Easy","1234":"Medium","1235":"Medium","1236":"Hard","1237":"Easy","1238":"Medium","1239":"Hard","1240":"Easy","1241":"Medium","1242":"Medium","1243":"Hard","1244":"Easy","1245":"Medium","1246":"Medium","1247":"Hard","1248":"Easy","1249":"Easy","1250":"Medium","1251":"Medium","1252":"Hard","1253":"Easy","1254":"Easy","1255":"Medium","1256":"Medium","1257":"Hard","1258":"Easy","1259":"Medium","1260":"Medium","1261":"Hard","1262":"Easy","1263":"Medium","1264":"Medium","1265":"Hard","1266":"Easy","1267":"Easy","1268":"Medium","1269":"Medium","1270":"Hard","1271":"Easy","1272":"Medium","1273":"Medium","1274":"Hard","1275":"Easy","1276":"Easy","1277":"Medium","1278":"Medium","1279":"Easy","1280":"Medium","1281":"Medium","1282":"Hard","1283":"Easy","1284":"Medium","1285":"Medium","1286":"Hard","1287":"Easy","1288":"Medium","1289":"Medium","1290":"Hard","1291":"Easy","1292":"Medium","1293":"Medium","1294":"Hard","1295":"Medium","1296":"Medium","1297":"Hard","1298":"Easy","1299":"Medium","1300":"Medium","1301":"Hard","1302":"Easy","1303":"Easy","1304":"Easy","1305":"Medium","1306":"Medium","1307":"Hard","1308":"Easy","1309":"Medium","1310":"Medium","1311":"Hard","1312":"Easy","1313":"Easy","1314":"Medium","1315":"Medium","1316":"Hard","1317":"Easy","1318":"Medium","1319":"Medium","1320":"Easy","1321":"Medium","1322":"Medium","1323":"Hard","1324":"Easy","1325":"Easy","1326":"Medium","1327":"Hard","1328":"Easy","1329":"Medium","1330":"Medium","1331":"Hard","1332":"Easy","1333":"Medium","1334":"Hard","1335":"Hard","1336":"Easy","1337":"Medium","1338":"Medium","1339":"Hard","1340":"Easy","1341":"Medium","1342":"Hard","1343":"Medium","1344":"Medium","1345":"Hard","1346":"Easy","1347":"Easy","1348":"Easy","1349":"Medium","1350":"Hard","1351":"Easy","1352":"Easy","1353":"Medium","1354":"Medium","1355":"Hard","1356":"Easy","1357":"Medium","1358":"Medium","1359":"Medium","1360":"Hard","1361":"Easy","1362":"Medium","1363":"Medium","1364":"Hard","1365":"Easy","1366":"Medium","1367":"Medium","1368":"Hard","1369":"Easy","1370":"Medium","1371":"Medium","1372":"Hard","1373":"Easy","1374":"Medium","1375":"Medium","1376":"Hard","1377":"Easy","1378":"Medium","1379":"Medium","1380":"Hard","1381":"Easy","1382":"Medium","1383":"Medium","1384":"Hard","1385":"Easy","1386":"Medium","1387":"Medium","1388":"Hard","1389":"Easy","1390":"Medium","1391":"Medium","1392":"Hard","1393":"Easy","1394":"Medium","1395":"Medium","1396":"Hard","1397":"Easy","1398":"Medium","1399":"Hard","1400":"Easy","1401":"Medium","1402":"Medium","1403":"Hard","1404":"Easy","1405":"Medium","1406":"Medium","1407":"Hard","1408":"Easy","1409":"Easy","1410":"Medium","1411":"Medium","1412":"Hard","1413":"Easy","1414":"Medium","1415":"Medium","1416":"Hard","1417":"Medium","1418":"Easy","1419":"Medium","1420":"Medium","1421":"Hard","1422":"Easy","1423":"Medium","1424":"Medium","1425":"Hard","1426":"Easy","1427":"Medium","1428":"Hard","1429":"Medium","1430":"Easy","1431":"Medium","1432":"Medium","1433":"Medium","1434":"Medium","1435":"Easy","1436":"Medium","1437":"Medium","1438":"Hard","1439":"Easy","1440":"Medium","1441":"Hard","1442":"Easy","1443":"Medium","1444":"Medium","1445":"Hard","1446":"Easy","1447":"Medium","1448":"Hard","1449":"Easy","1450":"Medium","1451":"Hard","1452":"Medium","1453":"Easy","1454":"Medium","1455":"Medium","1456":"Hard","1457":"Easy","1458":"Medium","1459":"Medium","1460":"Hard","1461":"Easy","1462":"Medium","1463":"Medium","1464":"Hard","1465":"Medium","1466":"Hard","1467":"Easy","1468":"Medium","1469":"Medium","1470":"Hard","1471":"Easy","1472":"Medium","1473":"Medium","1474":"Hard","1475":"Easy","1476":"Easy","1477":"Medium","1478":"Medium","1479":"Hard","1480":"Easy","1481":"Easy","1482":"Medium","1483":"Hard","1484":"Easy","1485":"Easy","1486":"Medium","1487":"Medium","1488":"Hard","1489":"Easy","1490":"Medium","1491":"Medium","1492":"Hard","1493":"Easy","1494":"Medium","1495":"Medium","1496":"Hard","1497":"Easy","1498":"Medium","1499":"Medium","1500":"Hard","1501":"Easy","1502":"Medium","1503":"Hard","1504":"Easy","1505":"Medium","1506":"Hard","1507":"Easy","1508":"Medium","1509":"Medium","1510":"Hard","1511":"Easy","1512":"Medium","1513":"Medium","1514":"Hard","1515":"Medium","1516":"Medium","1517":"Hard","1518":"Easy","1519":"Medium","1520":"Medium","1521":"Hard","1522":"Easy","1523":"Medium","1524":"Easy","1525":"Medium","1526":"Medium","1527":"Hard","1528":"Easy","1529":"Medium","1530":"Medium","1531":"Hard","1532":"Easy","1533":"Medium","1534":"Medium","1535":"Hard","1536":"Easy","1537":"Medium","1538":"Medium","1539":"Hard","1540":"Easy","1541":"Medium","1542":"Medium","1543":"Hard","1544":"Easy","1545":"Medium","1546":"Medium","1547":"Hard","1548":"Easy","1549":"Medium","1550":"Medium","1551":"Hard","1552":"Easy","1553":"Medium","1554":"Medium","1555":"Hard","1556":"Easy","1557":"Medium","1558":"Medium","1559":"Hard","1560":"Easy","1561":"Medium","1562":"Medium","1563":"Hard","1564":"Easy","1565":"Medium","1566":"Hard","1567":"Easy","1568":"Medium","1569":"Medium","1570":"Hard","1571":"Easy","1572":"Medium","1573":"Medium","1574":"Hard","1575":"Easy","1576":"Medium","1577":"Medium","1578":"Hard","1579":"Easy","1580":"Medium","1581":"Medium","1582":"Hard","1583":"Easy","1584":"Medium","1585":"Medium","1586":"Hard","1587":"Easy","1588":"Medium","1589":"Medium","1590":"Hard","1591":"Easy","1592":"Medium","1593":"Medium","1594":"Hard","1595":"Easy","1596":"Medium","1597":"Medium","1598":"Hard","1599":"Easy","1600":"Medium","1601":"Medium","1602":"Easy","1603":"Medium","1604":"Hard","1605":"Easy","1606":"Medium","1607":"Medium","1608":"Hard","1609":"Easy","1610":"Medium","1611":"Medium","1612":"Easy","1613":"Medium","1614":"Hard","1615":"Hard","1616":"Easy","1617":"Medium","1618":"Medium","1619":"Hard","1620":"Easy","1621":"Medium","1622":"Medium","1623":"Hard","1624":"Easy","1625":"Medium","1626":"Medium","1627":"Easy","1628":"Medium","1629":"Medium","1630":"Hard","1631":"Easy","1632":"Medium","1633":"Medium","1634":"Hard","1635":"Easy","1636":"Medium","1637":"Medium","1638":"Hard","1639":"Easy","1640":"Medium","1641":"Medium","1642":"Hard","1643":"Easy","1644":"Medium","1645":"Hard","1646":"Easy","1647":"Medium","1648":"Medium","1649":"Hard","1650":"Easy","1651":"Medium","1652":"Medium","1653":"Hard","1654":"Easy","1655":"Medium","1656":"Medium","1657":"Hard","1658":"Easy","1659":"Medium","1660":"Hard","1661":"Easy","1662":"Medium","1663":"Hard","1664":"Easy","1665":"Medium","1666":"Medium","1667":"Hard","1668":"Easy","1669":"Medium","1670":"Medium","1671":"Hard","1672":"Easy","1673":"Easy","1674":"Easy","1675":"Medium","1676":"Medium","1677":"Hard","1678":"Easy","1679":"Medium","1680":"Medium","1681":"Hard","1682":"Easy","1683":"Medium","1684":"Medium","1685":"Hard","1686":"Easy","1687":"Medium","1688":"Medium","1689":"Hard","1690":"Easy","1691":"Medium","1692":"Medium","1693":"Hard","1694":"Easy","1695":"Medium","1696":"Hard","1697":"Easy","1698":"Medium","1699":"Hard","1700":"Easy","1701":"Medium","1702":"Medium","1703":"Hard","1704":"Medium","1705":"Medium","1706":"Hard","1707":"Easy","1708":"Medium","1709":"Medium","1710":"Hard","1711":"Easy","1712":"Medium","1713":"Medium","1714":"Hard","1715":"Medium","1716":"Medium","1717":"Hard","1718":"Easy","1719":"Medium","1720":"Hard","1721":"Easy","1722":"Medium","1723":"Medium","1724":"Hard","1725":"Medium","1726":"Medium","1727":"Hard","1728":"Easy","1729":"Medium","1730":"Hard","1731":"Easy","1732":"Medium","1733":"Hard","1734":"Hard","1735":"Easy","1736":"Medium","1737":"Hard","1738":"Easy","1739":"Medium","1740":"Medium","1741":"Hard","1742":"Easy","1743":"Medium","1744":"Medium","1745":"Hard","1746":"Easy","1747":"Medium","1748":"Hard","1749":"Easy","1750":"Medium","1751":"Medium","1752":"Hard","1753":"Medium","1754":"Medium","1755":"Hard","1756":"Easy","1757":"Easy","1758":"Medium","1759":"Medium","1760":"Hard","1761":"Easy","1762":"Medium","1763":"Medium","1764":"Easy","1765":"Medium","1766":"Medium","1767":"Medium","1768":"Easy","1769":"Medium","1770":"Medium","1771":"Hard","1772":"Easy","1773":"Medium","1774":"Medium","1775":"Easy","1776":"Medium","1777":"Medium","1778":"Hard","1779":"Easy","1780":"Medium","1781":"Medium","1782":"Hard","1783":"Easy","1784":"Medium","1785":"Medium","1786":"Hard","1787":"Easy","1788":"Medium","1789":"Hard","1790":"Medium","1791":"Medium","1792":"Hard","1793":"Easy","1794":"Medium","1795":"Medium","1796":"Hard","1797":"Easy","1798":"Medium","1799":"Medium","1800":"Hard","1801":"Easy","1802":"Medium","1803":"Medium","1804":"Hard","1805":"Easy","1806":"Medium","1807":"Medium","1808":"Hard","1809":"Easy","1810":"Medium","1811":"Medium","1812":"Hard","1813":"Easy","1814":"Medium","1815":"Medium","1816":"Hard","1817":"Medium","1818":"Medium","1819":"Hard","1820":"Easy","1821":"Medium","1822":"Medium","1823":"Hard","1824":"Easy","1825":"Medium","1826":"Hard","1827":"Hard","1828":"Easy","1829":"Medium","1830":"Medium","1831":"Hard","1832":"Easy","1833":"Medium","1834":"Medium","1835":"Hard","1836":"Easy","1837":"Medium","1838":"Medium","1839":"Hard","1840":"Easy","1841":"Medium","1842":"Medium","1843":"Easy","1844":"Medium","1845":"Medium","1846":"Hard","1847":"Easy","1848":"Medium","1849":"Medium","1850":"Hard","1851":"Easy","1852":"Medium","1853":"Hard","1854":"Easy","1855":"Medium","1856":"Medium","1857":"Hard","1858":"Easy","1859":"Medium","1860":"Hard","1861":"Easy","1862":"Medium","1863":"Medium","1864":"Hard","1865":"Easy","1866":"Medium","1867":"Medium","1868":"Hard","1869":"Easy","1870":"Medium","1871":"Hard","1872":"Hard","1873":"Easy","1874":"Medium","1875":"Medium","1876":"Hard","1877":"Easy","1878":"Medium","1879":"Medium","1880":"Hard","1881":"Easy","1882":"Medium","1883":"Medium","1884":"Medium","1885":"Easy","1886":"Medium","1887":"Medium","1888":"Hard","1889":"Easy","1890":"Medium","1891":"Medium","1892":"Hard","1893":"Easy","1894":"Medium","1895":"Medium","1896":"Hard","1897":"Easy","1898":"Medium","1899":"Medium","1900":"Hard","1901":"Easy","1902":"Medium","1903":"Medium","1904":"Hard","1905":"Easy","1906":"Medium","1907":"Hard","1908":"Hard","1909":"Easy","1910":"Medium","1911":"Medium","1912":"Medium","1913":"Easy","1914":"Medium","1915":"Medium","1916":"Hard","1917":"Easy","1918":"Medium","1919":"Medium","1920":"Hard","1921":"Easy","1922":"Medium","1923":"Medium","1924":"Hard","1925":"Easy","1926":"Medium","1927":"Medium","1928":"Hard","1929":"Easy","1930":"Medium","1931":"Medium","1932":"Hard","1933":"Easy","1934":"Medium","1935":"Medium","1936":"Hard","1937":"Easy","1938":"Medium","1939":"Hard","1940":"Hard","1941":"Easy","1942":"Medium","1943":"Medium","1944":"Hard","1945":"Easy","1946":"Medium","1947":"Medium","1948":"Medium","1949":"Easy","1950":"Medium","1951":"Medium","1952":"Easy","1953":"Medium","1954":"Hard","1955":"Easy","1956":"Hard","1957":"Easy","1958":"Medium","1959":"Medium","1960":"Hard","1961":"Medium","1962":"Hard","1963":"Medium","1964":"Easy","1965":"Easy","1966":"Easy","1967":"Medium","1968":"Medium","1969":"Medium","1970":"Medium","1971":"Easy","1972":"Medium","1973":"Easy","1974":"Hard","1975":"Medium","1976":"Easy","1977":"Easy","1978":"Medium","1979":"Easy","1980":"Medium","1981":"Medium","1982":"Hard","1983":"Easy","1984":"Easy","1985":"Medium","1986":"Hard","1987":"Easy","1988":"Hard","1989":"Easy","1990":"Easy","1991":"Medium","1992":"Medium","1993":"Easy","1994":"Medium","1995":"Medium","1996":"Hard","1997":"Easy","1998":"Medium","1999":"Medium","2000":"Hard","2001":"Easy","2002":"Easy","2003":"Easy","2004":"Easy","2005":"Medium","2006":"Medium","2007":"Medium","2008":"Easy","2009":"Medium","2010":"Medium","2011":"Hard","2012":"Easy","2013":"Medium","2014":"Medium","2015":"Medium","2016":"Medium","2017":"Medium","2018":"Easy","2019":"Easy","2020":"Easy","2021":"Medium","2022":"Hard","2023":"Easy","2024":"Easy","2025":"Medium","2026":"Easy","2027":"Medium","2028":"Medium","2029":"Easy","2030":"Medium","2031":"Medium","2032":"Hard","2033":"Easy","2034":"Easy","2035":"Easy","2036":"Medium","2037":"Hard","2038":"Medium","2039":"Medium","2040":"Easy","2041":"Easy","2042":"Easy","2043":"Easy","2044":"Easy","2045":"Easy","2046":"Medium","2047":"Medium","2048":"Hard","2049":"Easy","2050":"Medium","2051":"Hard","2052":"Easy","2053":"Medium","2054":"Medium","2055":"Easy","2056":"Medium","2057":"Medium","2058":"Medium","2059":"Easy","2060":"Medium","2061":"Medium","2062":"Hard","2063":"Easy","2064":"Medium","2065":"Medium","2066":"Easy","2067":"Medium","2068":"Medium","2069":"Medium","2070":"Easy","2071":"Medium","2072":"Medium","2073":"Easy","2074":"Medium","2075":"Medium","2076":"Hard","2077":"Easy","2078":"Medium","2079":"Medium","2080":"Medium","2081":"Easy","2082":"Medium","2083":"Hard","2084":"Hard","2085":"Easy","2086":"Medium","2087":"Medium","2088":"Hard","2089":"Easy","2090":"Medium","2091":"Medium","2092":"Hard","2093":"Easy","2094":"Medium","2095":"Medium","2096":"Hard","2097":"Easy","2098":"Medium","2099":"Medium","2100":"Hard","2101":"Easy","2102":"Medium","2103":"Medium","2104":"Hard","2105":"Easy","2106":"Medium","2107":"Medium","2108":"Medium","2109":"Easy","2110":"Medium","2111":"Hard","2112":"Hard","2113":"Easy","2114":"Medium","2115":"Medium","2116":"Hard","2117":"Easy","2118":"Medium","2119":"Hard","2120":"Easy","2121":"Medium","2122":"Medium","2123":"Hard","2124":"Easy","2125":"Medium","2126":"Medium","2127":"Medium","2128":"Medium","2129":"Hard","2130":"Easy","2131":"Medium","2132":"Medium","2133":"Hard","2134":"Easy","2135":"Medium","2136":"Medium","2137":"Hard","2138":"Easy","2139":"Medium","2140":"Medium","2141":"Hard","2142":"Easy","2143":"Easy","2144":"Easy","2145":"Easy","2146":"Easy","2147":"Easy","2148":"Easy","2149":"Easy","2150":"Easy","2151":"Easy","2152":"Easy","2153":"Easy","2154":"Easy","2155":"Easy","2156":"Easy","2157":"Easy","2158":"Medium","2159":"Hard","2160":"Easy","2161":"Easy","2162":"Medium","2163":"Hard","2164":"Easy","2165":"Medium","2166":"Medium","2167":"Medium","2168":"Easy","2169":"Medium","2170":"Hard","2171":"Easy","2172":"Medium","2173":"Medium","2174":"Hard","2175":"Medium","2176":"Hard","2177":"Easy","2178":"Medium","2179":"Medium","2180":"Hard","2181":"Easy","2182":"Medium","2183":"Medium","2184":"Hard","2185":"Easy","2186":"Medium","2187":"Medium","2188":"Hard","2189":"Easy","2190":"Medium","2191":"Medium","2192":"Hard","2193":"Easy","2194":"Medium","2195":"Medium","2196":"Hard","2197":"Easy","2198":"Medium","2199":"Medium","2200":"Hard","2201":"Easy","2202":"Medium","2203":"Hard","2204":"Hard","2205":"Easy","2206":"Medium","2207":"Medium","2208":"Hard","2209":"Easy","2210":"Medium","2211":"Medium","2212":"Hard","2213":"Easy","2214":"Medium","2215":"Medium","2216":"Easy","2217":"Medium","2218":"Hard","2219":"Hard","2220":"Medium","2221":"Medium","2222":"Hard","2223":"Easy","2224":"Medium","2225":"Medium","2226":"Hard","2227":"Medium","2228":"Medium","2229":"Hard","2230":"Easy","2231":"Medium","2232":"Medium","2233":"Hard","2234":"Easy","2235":"Medium","2236":"Medium","2237":"Hard","2238":"Easy","2239":"Medium","2240":"Medium","2241":"Hard","2242":"Easy","2243":"Medium","2244":"Medium","2245":"Hard","2246":"Easy","2247":"Medium","2248":"Hard","2249":"Easy","2250":"Medium","2251":"Medium","2252":"Hard","2253":"Easy","2254":"Medium","2255":"Medium","2256":"Easy","2257":"Medium","2258":"Medium","2259":"Easy","2260":"Medium","2261":"Medium","2262":"Hard","2263":"Easy","2264":"Medium","2265":"Medium","2266":"Easy","2267":"Medium","2268":"Medium","2269":"Hard","2270":"Easy","2271":"Medium","2272":"Medium","2273":"Hard","2274":"Easy","2275":"Hard","2276":"Easy","2277":"Medium","2278":"Hard","2279":"Easy","2280":"Medium","2281":"Medium","2282":"Hard","2283":"Easy","2284":"Medium","2285":"Medium","2286":"Hard","2287":"Easy","2288":"Medium","2289":"Medium","2290":"Hard","2291":"Easy","2292":"Medium","2293":"Medium","2294":"Hard","2295":"Easy","2296":"Medium","2297":"Medium","2298":"Hard","2299":"Easy","2300":"Medium","2301":"Medium","2302":"Hard","2303":"Easy","2304":"Medium","2305":"Medium","2306":"Hard","2307":"Easy","2308":"Medium","2309":"Hard","2310":"Hard","2311":"Easy","2312":"Medium","2313":"Medium","2314":"Hard","2315":"Easy","2316":"Medium","2317":"Medium","2318":"Hard","2319":"Easy","2320":"Medium","2321":"Medium","2322":"Hard","2323":"Easy","2324":"Medium","2325":"Medium","2326":"Hard","2327":"Easy","2328":"Medium","2329":"Medium","2330":"Hard","2331":"Easy","2332":"Medium","2333":"Hard","2334":"Easy","2335":"Medium","2336":"Medium","2337":"Hard","2338":"Easy","2339":"Medium","2340":"Medium","2341":"Hard","2342":"Easy","2343":"Medium","2344":"Medium","2345":"Hard","2346":"Easy","2347":"Medium","2348":"Medium","2349":"Easy","2350":"Medium","2351":"Medium","2352":"Hard","2353":"Easy","2354":"Medium","2355":"Medium","2356":"Hard","2357":"Easy","2358":"Medium","2359":"Medium","2360":"Hard","2361":"Easy","2362":"Medium","2363":"Medium","2364":"Hard","2365":"Easy","2366":"Medium","2367":"Medium","2368":"Hard","2369":"Easy","2370":"Medium","2371":"Easy","2372":"Medium","2373":"Medium","2374":"Hard","2375":"Easy","2376":"Medium","2377":"Medium","2378":"Hard","2379":"Easy","2380":"Medium","2381":"Medium","2382":"Hard","2383":"Medium","2384":"Easy","2385":"Medium","2386":"Easy","2387":"Medium","2388":"Medium","2389":"Hard","2390":"Easy","2391":"Medium","2392":"Medium","2393":"Hard","2394":"Easy","2395":"Medium","2396":"Medium","2397":"Hard","2398":"Easy","2399":"Medium","2400":"Hard","2401":"Hard","2402":"Easy","2403":"Medium","2404":"Hard","2405":"Hard","2406":"Medium","2407":"Medium","2408":"Hard","2409":"Hard","2410":"Easy","2411":"Medium","2412":"Hard","2413":"Hard","2414":"Easy","2415":"Medium","2416":"Hard","2417":"Hard","2418":"Easy","2419":"Medium","2420":"Hard","2421":"Hard","2422":"Easy","2423":"Medium","2424":"Hard","2425":"Hard","2426":"Easy"},"link":{"0":"https:\/\/leetcode.com\/problems\/minimum-string-length-after-removing-substrings\/?envType=daily-question&envId=2024-10-07","1":"https:\/\/leetcode.com\/problems\/two-sum","2":"https:\/\/leetcode.com\/problems\/add-two-numbers","3":"https:\/\/leetcode.com\/problems\/median-of-two-sorted-arrays","4":"https:\/\/leetcode.com\/problems\/zigzag-conversion","5":"https:\/\/leetcode.com\/problems\/reverse-integer","6":"https:\/\/leetcode.com\/problems\/palindrome-number","7":"https:\/\/leetcode.com\/problems\/regular-expression-matching","8":"https:\/\/leetcode.com\/problems\/container-with-most-water","9":"https:\/\/leetcode.com\/problems\/integer-to-roman","10":"https:\/\/leetcode.com\/problems\/roman-to-integer","11":"https:\/\/leetcode.com\/problems\/longest-common-prefix","12":"https:\/\/leetcode.com\/problems\/3sum","13":"https:\/\/leetcode.com\/problems\/3sum-closest","14":"https:\/\/leetcode.com\/problems\/letter-combinations-of-a-phone-number","15":"https:\/\/leetcode.com\/problems\/4sum","16":"https:\/\/leetcode.com\/problems\/remove-nth-node-from-end-of-list","17":"https:\/\/leetcode.com\/problems\/valid-parentheses","18":"https:\/\/leetcode.com\/problems\/merge-two-sorted-lists","19":"https:\/\/leetcode.com\/problems\/generate-parentheses","20":"https:\/\/leetcode.com\/problems\/merge-k-sorted-lists","21":"https:\/\/leetcode.com\/problems\/swap-nodes-in-pairs","22":"https:\/\/leetcode.com\/problems\/reverse-nodes-in-k-group","23":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-array","24":"https:\/\/leetcode.com\/problems\/remove-element","25":"https:\/\/leetcode.com\/problems\/find-the-index-of-the-first-occurrence-in-a-string","26":"https:\/\/leetcode.com\/problems\/divide-two-integers","27":"https:\/\/leetcode.com\/problems\/substring-with-concatenation-of-all-words","28":"https:\/\/leetcode.com\/problems\/next-permutation","29":"https:\/\/leetcode.com\/problems\/longest-valid-parentheses","30":"https:\/\/leetcode.com\/problems\/search-in-rotated-sorted-array","31":"https:\/\/leetcode.com\/problems\/find-first-and-last-position-of-element-in-sorted-array","32":"https:\/\/leetcode.com\/problems\/search-insert-position","33":"https:\/\/leetcode.com\/problems\/valid-sudoku","34":"https:\/\/leetcode.com\/problems\/sudoku-solver","35":"https:\/\/leetcode.com\/problems\/count-and-say","36":"https:\/\/leetcode.com\/problems\/combination-sum","37":"https:\/\/leetcode.com\/problems\/combination-sum-ii","38":"https:\/\/leetcode.com\/problems\/first-missing-positive","39":"https:\/\/leetcode.com\/problems\/trapping-rain-water","40":"https:\/\/leetcode.com\/problems\/multiply-strings","41":"https:\/\/leetcode.com\/problems\/wildcard-matching","42":"https:\/\/leetcode.com\/problems\/jump-game-ii","43":"https:\/\/leetcode.com\/problems\/permutations","44":"https:\/\/leetcode.com\/problems\/permutations-ii","45":"https:\/\/leetcode.com\/problems\/rotate-image","46":"https:\/\/leetcode.com\/problems\/group-anagrams","47":"https:\/\/leetcode.com\/problems\/powx-n","48":"https:\/\/leetcode.com\/problems\/n-queens","49":"https:\/\/leetcode.com\/problems\/n-queens-ii","50":"https:\/\/leetcode.com\/problems\/maximum-subarray","51":"https:\/\/leetcode.com\/problems\/spiral-matrix","52":"https:\/\/leetcode.com\/problems\/jump-game","53":"https:\/\/leetcode.com\/problems\/merge-intervals","54":"https:\/\/leetcode.com\/problems\/insert-interval","55":"https:\/\/leetcode.com\/problems\/length-of-last-word","56":"https:\/\/leetcode.com\/problems\/permutation-sequence","57":"https:\/\/leetcode.com\/problems\/rotate-list","58":"https:\/\/leetcode.com\/problems\/unique-paths","59":"https:\/\/leetcode.com\/problems\/unique-paths-ii","60":"https:\/\/leetcode.com\/problems\/minimum-path-sum","61":"https:\/\/leetcode.com\/problems\/valid-number","62":"https:\/\/leetcode.com\/problems\/add-binary","63":"https:\/\/leetcode.com\/problems\/text-justification","64":"https:\/\/leetcode.com\/problems\/sqrtx","65":"https:\/\/leetcode.com\/problems\/climbing-stairs","66":"https:\/\/leetcode.com\/problems\/simplify-path","67":"https:\/\/leetcode.com\/problems\/edit-distance","68":"https:\/\/leetcode.com\/problems\/search-a-2d-matrix","69":"https:\/\/leetcode.com\/problems\/sort-colors","70":"https:\/\/leetcode.com\/problems\/minimum-window-substring","71":"https:\/\/leetcode.com\/problems\/combinations","72":"https:\/\/leetcode.com\/problems\/subsets","73":"https:\/\/leetcode.com\/problems\/word-search","74":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-array-ii","75":"https:\/\/leetcode.com\/problems\/search-in-rotated-sorted-array-ii","76":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-list-ii","77":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-list","78":"https:\/\/leetcode.com\/problems\/largest-rectangle-in-histogram","79":"https:\/\/leetcode.com\/problems\/maximal-rectangle","80":"https:\/\/leetcode.com\/problems\/partition-list","81":"https:\/\/leetcode.com\/problems\/scramble-string","82":"https:\/\/leetcode.com\/problems\/merge-sorted-array","83":"https:\/\/leetcode.com\/problems\/gray-code","84":"https:\/\/leetcode.com\/problems\/subsets-ii","85":"https:\/\/leetcode.com\/problems\/decode-ways","86":"https:\/\/leetcode.com\/problems\/reverse-linked-list-ii","87":"https:\/\/leetcode.com\/problems\/binary-tree-inorder-traversal","88":"https:\/\/leetcode.com\/problems\/unique-binary-search-trees-ii","89":"https:\/\/leetcode.com\/problems\/unique-binary-search-trees","90":"https:\/\/leetcode.com\/problems\/interleaving-string","91":"https:\/\/leetcode.com\/problems\/validate-binary-search-tree","92":"https:\/\/leetcode.com\/problems\/recover-binary-search-tree","93":"https:\/\/leetcode.com\/problems\/same-tree","94":"https:\/\/leetcode.com\/problems\/binary-tree-level-order-traversal","95":"https:\/\/leetcode.com\/problems\/binary-tree-zigzag-level-order-traversal","96":"https:\/\/leetcode.com\/problems\/maximum-depth-of-binary-tree","97":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-preorder-and-inorder-traversal","98":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-inorder-and-postorder-traversal","99":"https:\/\/leetcode.com\/problems\/convert-sorted-array-to-binary-search-tree","100":"https:\/\/leetcode.com\/problems\/convert-sorted-list-to-binary-search-tree","101":"https:\/\/leetcode.com\/problems\/balanced-binary-tree","102":"https:\/\/leetcode.com\/problems\/minimum-depth-of-binary-tree","103":"https:\/\/leetcode.com\/problems\/path-sum","104":"https:\/\/leetcode.com\/problems\/path-sum-ii","105":"https:\/\/leetcode.com\/problems\/flatten-binary-tree-to-linked-list","106":"https:\/\/leetcode.com\/problems\/distinct-subsequences","107":"https:\/\/leetcode.com\/problems\/populating-next-right-pointers-in-each-node","108":"https:\/\/leetcode.com\/problems\/populating-next-right-pointers-in-each-node-ii","109":"https:\/\/leetcode.com\/problems\/pascals-triangle","110":"https:\/\/leetcode.com\/problems\/pascals-triangle-ii","111":"https:\/\/leetcode.com\/problems\/triangle","112":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock","113":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-ii","114":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-iii","115":"https:\/\/leetcode.com\/problems\/binary-tree-maximum-path-sum","116":"https:\/\/leetcode.com\/problems\/valid-palindrome","117":"https:\/\/leetcode.com\/problems\/word-ladder-ii","118":"https:\/\/leetcode.com\/problems\/word-ladder","119":"https:\/\/leetcode.com\/problems\/longest-consecutive-sequence","120":"https:\/\/leetcode.com\/problems\/sum-root-to-leaf-numbers","121":"https:\/\/leetcode.com\/problems\/surrounded-regions","122":"https:\/\/leetcode.com\/problems\/palindrome-partitioning","123":"https:\/\/leetcode.com\/problems\/clone-graph","124":"https:\/\/leetcode.com\/problems\/gas-station","125":"https:\/\/leetcode.com\/problems\/candy","126":"https:\/\/leetcode.com\/problems\/single-number","127":"https:\/\/leetcode.com\/problems\/single-number-ii","128":"https:\/\/leetcode.com\/problems\/copy-list-with-random-pointer","129":"https:\/\/leetcode.com\/problems\/word-break","130":"https:\/\/leetcode.com\/problems\/word-break-ii","131":"https:\/\/leetcode.com\/problems\/linked-list-cycle","132":"https:\/\/leetcode.com\/problems\/linked-list-cycle-ii","133":"https:\/\/leetcode.com\/problems\/reorder-list","134":"https:\/\/leetcode.com\/problems\/binary-tree-preorder-traversal","135":"https:\/\/leetcode.com\/problems\/binary-tree-postorder-traversal","136":"https:\/\/leetcode.com\/problems\/lru-cache","137":"https:\/\/leetcode.com\/problems\/insertion-sort-list","138":"https:\/\/leetcode.com\/problems\/sort-list","139":"https:\/\/leetcode.com\/problems\/max-points-on-a-line","140":"https:\/\/leetcode.com\/problems\/evaluate-reverse-polish-notation","141":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string","142":"https:\/\/leetcode.com\/problems\/maximum-product-subarray","143":"https:\/\/leetcode.com\/problems\/find-minimum-in-rotated-sorted-array","144":"https:\/\/leetcode.com\/problems\/find-minimum-in-rotated-sorted-array-ii","145":"https:\/\/leetcode.com\/problems\/min-stack","146":"https:\/\/leetcode.com\/problems\/intersection-of-two-linked-lists","147":"https:\/\/leetcode.com\/problems\/find-peak-element","148":"https:\/\/leetcode.com\/problems\/maximum-gap","149":"https:\/\/leetcode.com\/problems\/fraction-to-recurring-decimal","150":"https:\/\/leetcode.com\/problems\/two-sum-ii-input-array-is-sorted","151":"https:\/\/leetcode.com\/problems\/excel-sheet-column-title","152":"https:\/\/leetcode.com\/problems\/majority-element","153":"https:\/\/leetcode.com\/problems\/excel-sheet-column-number","154":"https:\/\/leetcode.com\/problems\/factorial-trailing-zeroes","155":"https:\/\/leetcode.com\/problems\/dungeon-game","156":"https:\/\/leetcode.com\/problems\/combine-two-tables","157":"https:\/\/leetcode.com\/problems\/second-highest-salary","158":"https:\/\/leetcode.com\/problems\/nth-highest-salary","159":"https:\/\/leetcode.com\/problems\/rank-scores","160":"https:\/\/leetcode.com\/problems\/largest-number","161":"https:\/\/leetcode.com\/problems\/consecutive-numbers","162":"https:\/\/leetcode.com\/problems\/employees-earning-more-than-their-managers","163":"https:\/\/leetcode.com\/problems\/duplicate-emails","164":"https:\/\/leetcode.com\/problems\/customers-who-never-order","165":"https:\/\/leetcode.com\/problems\/department-highest-salary","166":"https:\/\/leetcode.com\/problems\/department-top-three-salaries","167":"https:\/\/leetcode.com\/problems\/repeated-dna-sequences","168":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-iv","169":"https:\/\/leetcode.com\/problems\/rotate-array","170":"https:\/\/leetcode.com\/problems\/number-of-1-bits","171":"https:\/\/leetcode.com\/problems\/word-frequency","172":"https:\/\/leetcode.com\/problems\/valid-phone-numbers","173":"https:\/\/leetcode.com\/problems\/transpose-file","174":"https:\/\/leetcode.com\/problems\/tenth-line","175":"https:\/\/leetcode.com\/problems\/delete-duplicate-emails","176":"https:\/\/leetcode.com\/problems\/rising-temperature","177":"https:\/\/leetcode.com\/problems\/house-robber","178":"https:\/\/leetcode.com\/problems\/binary-tree-right-side-view","179":"https:\/\/leetcode.com\/problems\/number-of-islands","180":"https:\/\/leetcode.com\/problems\/bitwise-and-of-numbers-range","181":"https:\/\/leetcode.com\/problems\/happy-number","182":"https:\/\/leetcode.com\/problems\/remove-linked-list-elements","183":"https:\/\/leetcode.com\/problems\/count-primes","184":"https:\/\/leetcode.com\/problems\/isomorphic-strings","185":"https:\/\/leetcode.com\/problems\/reverse-linked-list","186":"https:\/\/leetcode.com\/problems\/course-schedule","187":"https:\/\/leetcode.com\/problems\/implement-trie-prefix-tree","188":"https:\/\/leetcode.com\/problems\/minimum-size-subarray-sum","189":"https:\/\/leetcode.com\/problems\/course-schedule-ii","190":"https:\/\/leetcode.com\/problems\/design-add-and-search-words-data-structure","191":"https:\/\/leetcode.com\/problems\/word-search-ii","192":"https:\/\/leetcode.com\/problems\/house-robber-ii","193":"https:\/\/leetcode.com\/problems\/shortest-palindrome","194":"https:\/\/leetcode.com\/problems\/kth-largest-element-in-an-array","195":"https:\/\/leetcode.com\/problems\/combination-sum-iii","196":"https:\/\/leetcode.com\/problems\/contains-duplicate","197":"https:\/\/leetcode.com\/problems\/the-skyline-problem","198":"https:\/\/leetcode.com\/problems\/contains-duplicate-ii","199":"https:\/\/leetcode.com\/problems\/contains-duplicate-iii","200":"https:\/\/leetcode.com\/problems\/maximal-square","201":"https:\/\/leetcode.com\/problems\/count-complete-tree-nodes","202":"https:\/\/leetcode.com\/problems\/implement-stack-using-queues","203":"https:\/\/leetcode.com\/problems\/invert-binary-tree","204":"https:\/\/leetcode.com\/problems\/basic-calculator-ii","205":"https:\/\/leetcode.com\/problems\/summary-ranges","206":"https:\/\/leetcode.com\/problems\/majority-element-ii","207":"https:\/\/leetcode.com\/problems\/kth-smallest-element-in-a-bst","208":"https:\/\/leetcode.com\/problems\/power-of-two","209":"https:\/\/leetcode.com\/problems\/implement-queue-using-stacks","210":"https:\/\/leetcode.com\/problems\/number-of-digit-one","211":"https:\/\/leetcode.com\/problems\/palindrome-linked-list","212":"https:\/\/leetcode.com\/problems\/product-of-array-except-self","213":"https:\/\/leetcode.com\/problems\/search-a-2d-matrix-ii","214":"https:\/\/leetcode.com\/problems\/different-ways-to-add-parentheses","215":"https:\/\/leetcode.com\/problems\/valid-anagram","216":"https:\/\/leetcode.com\/problems\/binary-tree-paths","217":"https:\/\/leetcode.com\/problems\/add-digits","218":"https:\/\/leetcode.com\/problems\/single-number-iii","219":"https:\/\/leetcode.com\/problems\/trips-and-users","220":"https:\/\/leetcode.com\/problems\/ugly-number-ii","221":"https:\/\/leetcode.com\/problems\/missing-number","222":"https:\/\/leetcode.com\/problems\/integer-to-english-words","223":"https:\/\/leetcode.com\/problems\/h-index","224":"https:\/\/leetcode.com\/problems\/h-index-ii","225":"https:\/\/leetcode.com\/problems\/first-bad-version","226":"https:\/\/leetcode.com\/problems\/perfect-squares","227":"https:\/\/leetcode.com\/problems\/expression-add-operators","228":"https:\/\/leetcode.com\/problems\/move-zeroes","229":"https:\/\/leetcode.com\/problems\/peeking-iterator","230":"https:\/\/leetcode.com\/problems\/find-the-duplicate-number","231":"https:\/\/leetcode.com\/problems\/game-of-life","232":"https:\/\/leetcode.com\/problems\/word-pattern","233":"https:\/\/leetcode.com\/problems\/nim-game","234":"https:\/\/leetcode.com\/problems\/find-median-from-data-stream","235":"https:\/\/leetcode.com\/problems\/serialize-and-deserialize-binary-tree","236":"https:\/\/leetcode.com\/problems\/bulls-and-cows","237":"https:\/\/leetcode.com\/problems\/longest-increasing-subsequence","238":"https:\/\/leetcode.com\/problems\/remove-invalid-parentheses","239":"https:\/\/leetcode.com\/problems\/range-sum-query-2d-immutable","240":"https:\/\/leetcode.com\/problems\/additive-number","241":"https:\/\/leetcode.com\/problems\/range-sum-query-mutable","242":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-with-cooldown","243":"https:\/\/leetcode.com\/problems\/minimum-height-trees","244":"https:\/\/leetcode.com\/problems\/burst-balloons","245":"https:\/\/leetcode.com\/problems\/count-of-smaller-numbers-after-self","246":"https:\/\/leetcode.com\/problems\/remove-duplicate-letters","247":"https:\/\/leetcode.com\/problems\/maximum-product-of-word-lengths","248":"https:\/\/leetcode.com\/problems\/bulb-switcher","249":"https:\/\/leetcode.com\/problems\/create-maximum-number","250":"https:\/\/leetcode.com\/problems\/coin-change","251":"https:\/\/leetcode.com\/problems\/wiggle-sort-ii","252":"https:\/\/leetcode.com\/problems\/power-of-three","253":"https:\/\/leetcode.com\/problems\/count-of-range-sum","254":"https:\/\/leetcode.com\/problems\/odd-even-linked-list","255":"https:\/\/leetcode.com\/problems\/longest-increasing-path-in-a-matrix","256":"https:\/\/leetcode.com\/problems\/patching-array","257":"https:\/\/leetcode.com\/problems\/verify-preorder-serialization-of-a-binary-tree","258":"https:\/\/leetcode.com\/problems\/reconstruct-itinerary","259":"https:\/\/leetcode.com\/problems\/increasing-triplet-subsequence","260":"https:\/\/leetcode.com\/problems\/self-crossing","261":"https:\/\/leetcode.com\/problems\/palindrome-pairs","262":"https:\/\/leetcode.com\/problems\/house-robber-iii","263":"https:\/\/leetcode.com\/problems\/counting-bits","264":"https:\/\/leetcode.com\/problems\/flatten-nested-list-iterator","265":"https:\/\/leetcode.com\/problems\/power-of-four","266":"https:\/\/leetcode.com\/problems\/integer-break","267":"https:\/\/leetcode.com\/problems\/reverse-string","268":"https:\/\/leetcode.com\/problems\/reverse-vowels-of-a-string","269":"https:\/\/leetcode.com\/problems\/intersection-of-two-arrays","270":"https:\/\/leetcode.com\/problems\/intersection-of-two-arrays-ii","271":"https:\/\/leetcode.com\/problems\/data-stream-as-disjoint-intervals","272":"https:\/\/leetcode.com\/problems\/russian-doll-envelopes","273":"https:\/\/leetcode.com\/problems\/design-twitter","274":"https:\/\/leetcode.com\/problems\/count-numbers-with-unique-digits","275":"https:\/\/leetcode.com\/problems\/max-sum-of-rectangle-no-larger-than-k","276":"https:\/\/leetcode.com\/problems\/water-and-jug-problem","277":"https:\/\/leetcode.com\/problems\/valid-perfect-square","278":"https:\/\/leetcode.com\/problems\/largest-divisible-subset","279":"https:\/\/leetcode.com\/problems\/sum-of-two-integers","280":"https:\/\/leetcode.com\/problems\/super-pow","281":"https:\/\/leetcode.com\/problems\/find-k-pairs-with-smallest-sums","282":"https:\/\/leetcode.com\/problems\/guess-number-higher-or-lower","283":"https:\/\/leetcode.com\/problems\/guess-number-higher-or-lower-ii","284":"https:\/\/leetcode.com\/problems\/wiggle-subsequence","285":"https:\/\/leetcode.com\/problems\/combination-sum-iv","286":"https:\/\/leetcode.com\/problems\/insert-delete-getrandom-o1","287":"https:\/\/leetcode.com\/problems\/insert-delete-getrandom-o1-duplicates-allowed","288":"https:\/\/leetcode.com\/problems\/linked-list-random-node","289":"https:\/\/leetcode.com\/problems\/ransom-note","290":"https:\/\/leetcode.com\/problems\/shuffle-an-array","291":"https:\/\/leetcode.com\/problems\/mini-parser","292":"https:\/\/leetcode.com\/problems\/lexicographical-numbers","293":"https:\/\/leetcode.com\/problems\/first-unique-character-in-a-string","294":"https:\/\/leetcode.com\/problems\/longest-absolute-file-path","295":"https:\/\/leetcode.com\/problems\/find-the-difference","296":"https:\/\/leetcode.com\/problems\/elimination-game","297":"https:\/\/leetcode.com\/problems\/perfect-rectangle","298":"https:\/\/leetcode.com\/problems\/is-subsequence","299":"https:\/\/leetcode.com\/problems\/decode-string","300":"https:\/\/leetcode.com\/problems\/longest-substring-with-at-least-k-repeating-characters","301":"https:\/\/leetcode.com\/problems\/rotate-function","302":"https:\/\/leetcode.com\/problems\/integer-replacement","303":"https:\/\/leetcode.com\/problems\/random-pick-index","304":"https:\/\/leetcode.com\/problems\/evaluate-division","305":"https:\/\/leetcode.com\/problems\/nth-digit","306":"https:\/\/leetcode.com\/problems\/binary-watch","307":"https:\/\/leetcode.com\/problems\/frog-jump","308":"https:\/\/leetcode.com\/problems\/sum-of-left-leaves","309":"https:\/\/leetcode.com\/problems\/convert-a-number-to-hexadecimal","310":"https:\/\/leetcode.com\/problems\/queue-reconstruction-by-height","311":"https:\/\/leetcode.com\/problems\/trapping-rain-water-ii","312":"https:\/\/leetcode.com\/problems\/longest-palindrome","313":"https:\/\/leetcode.com\/problems\/split-array-largest-sum","314":"https:\/\/leetcode.com\/problems\/fizz-buzz","315":"https:\/\/leetcode.com\/problems\/arithmetic-slices","316":"https:\/\/leetcode.com\/problems\/third-maximum-number","317":"https:\/\/leetcode.com\/problems\/add-strings","318":"https:\/\/leetcode.com\/problems\/partition-equal-subset-sum","319":"https:\/\/leetcode.com\/problems\/pacific-atlantic-water-flow","320":"https:\/\/leetcode.com\/problems\/battleships-in-a-board","321":"https:\/\/leetcode.com\/problems\/reconstruct-original-digits-from-english","322":"https:\/\/leetcode.com\/problems\/longest-repeating-character-replacement","323":"https:\/\/leetcode.com\/problems\/construct-quad-tree","324":"https:\/\/leetcode.com\/problems\/n-ary-tree-level-order-traversal","325":"https:\/\/leetcode.com\/problems\/all-oone-data-structure","326":"https:\/\/leetcode.com\/problems\/minimum-genetic-mutation","327":"https:\/\/leetcode.com\/problems\/number-of-segments-in-a-string","328":"https:\/\/leetcode.com\/problems\/non-overlapping-intervals","329":"https:\/\/leetcode.com\/problems\/find-right-interval","330":"https:\/\/leetcode.com\/problems\/path-sum-iii","331":"https:\/\/leetcode.com\/problems\/find-all-anagrams-in-a-string","332":"https:\/\/leetcode.com\/problems\/k-th-smallest-in-lexicographical-order","333":"https:\/\/leetcode.com\/problems\/arranging-coins","334":"https:\/\/leetcode.com\/problems\/find-all-duplicates-in-an-array","335":"https:\/\/leetcode.com\/problems\/string-compression","336":"https:\/\/leetcode.com\/problems\/add-two-numbers-ii","337":"https:\/\/leetcode.com\/problems\/arithmetic-slices-ii-subsequence","338":"https:\/\/leetcode.com\/problems\/number-of-boomerangs","339":"https:\/\/leetcode.com\/problems\/find-all-numbers-disappeared-in-an-array","340":"https:\/\/leetcode.com\/problems\/delete-node-in-a-bst","341":"https:\/\/leetcode.com\/problems\/sort-characters-by-frequency","342":"https:\/\/leetcode.com\/problems\/minimum-number-of-arrows-to-burst-balloons","343":"https:\/\/leetcode.com\/problems\/minimum-moves-to-equal-array-elements","344":"https:\/\/leetcode.com\/problems\/4sum-ii","345":"https:\/\/leetcode.com\/problems\/132-pattern","346":"https:\/\/leetcode.com\/problems\/circular-array-loop","347":"https:\/\/leetcode.com\/problems\/poor-pigs","348":"https:\/\/leetcode.com\/problems\/repeated-substring-pattern","349":"https:\/\/leetcode.com\/problems\/lfu-cache","350":"https:\/\/leetcode.com\/problems\/hamming-distance","351":"https:\/\/leetcode.com\/problems\/minimum-moves-to-equal-array-elements-ii","352":"https:\/\/leetcode.com\/problems\/island-perimeter","353":"https:\/\/leetcode.com\/problems\/can-i-win","354":"https:\/\/leetcode.com\/problems\/count-the-repetitions","355":"https:\/\/leetcode.com\/problems\/validate-ip-address","356":"https:\/\/leetcode.com\/problems\/implement-rand10-using-rand7","357":"https:\/\/leetcode.com\/problems\/concatenated-words","358":"https:\/\/leetcode.com\/problems\/matchsticks-to-square","359":"https:\/\/leetcode.com\/problems\/ones-and-zeroes","360":"https:\/\/leetcode.com\/problems\/heaters","361":"https:\/\/leetcode.com\/problems\/number-complement","362":"https:\/\/leetcode.com\/problems\/total-hamming-distance","363":"https:\/\/leetcode.com\/problems\/generate-random-point-in-a-circle","364":"https:\/\/leetcode.com\/problems\/largest-palindrome-product","365":"https:\/\/leetcode.com\/problems\/sliding-window-median","366":"https:\/\/leetcode.com\/problems\/magical-string","367":"https:\/\/leetcode.com\/problems\/license-key-formatting","368":"https:\/\/leetcode.com\/problems\/smallest-good-base","369":"https:\/\/leetcode.com\/problems\/max-consecutive-ones","370":"https:\/\/leetcode.com\/problems\/predict-the-winner","371":"https:\/\/leetcode.com\/problems\/zuma-game","372":"https:\/\/leetcode.com\/problems\/non-decreasing-subsequences","373":"https:\/\/leetcode.com\/problems\/construct-the-rectangle","374":"https:\/\/leetcode.com\/problems\/reverse-pairs","375":"https:\/\/leetcode.com\/problems\/target-sum","376":"https:\/\/leetcode.com\/problems\/teemo-attacking","377":"https:\/\/leetcode.com\/problems\/next-greater-element-i","378":"https:\/\/leetcode.com\/problems\/random-point-in-non-overlapping-rectangles","379":"https:\/\/leetcode.com\/problems\/diagonal-traverse","380":"https:\/\/leetcode.com\/problems\/keyboard-row","381":"https:\/\/leetcode.com\/problems\/ipo","382":"https:\/\/leetcode.com\/problems\/next-greater-element-ii","383":"https:\/\/leetcode.com\/problems\/base-7","384":"https:\/\/leetcode.com\/problems\/relative-ranks","385":"https:\/\/leetcode.com\/problems\/perfect-number","386":"https:\/\/leetcode.com\/problems\/most-frequent-subtree-sum","387":"https:\/\/leetcode.com\/problems\/fibonacci-number","388":"https:\/\/leetcode.com\/problems\/game-play-analysis-i","389":"https:\/\/leetcode.com\/problems\/find-bottom-left-tree-value","390":"https:\/\/leetcode.com\/problems\/freedom-trail","391":"https:\/\/leetcode.com\/problems\/find-largest-value-in-each-tree-row","392":"https:\/\/leetcode.com\/problems\/longest-palindromic-subsequence","393":"https:\/\/leetcode.com\/problems\/super-washing-machines","394":"https:\/\/leetcode.com\/problems\/coin-change-ii","395":"https:\/\/leetcode.com\/problems\/random-flip-matrix","396":"https:\/\/leetcode.com\/problems\/detect-capital","397":"https:\/\/leetcode.com\/problems\/longest-uncommon-subsequence-i","398":"https:\/\/leetcode.com\/problems\/longest-uncommon-subsequence-ii","399":"https:\/\/leetcode.com\/problems\/continuous-subarray-sum","400":"https:\/\/leetcode.com\/problems\/longest-word-in-dictionary-through-deleting","401":"https:\/\/leetcode.com\/problems\/contiguous-array","402":"https:\/\/leetcode.com\/problems\/random-pick-with-weight","403":"https:\/\/leetcode.com\/problems\/minesweeper","404":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-in-bst","405":"https:\/\/leetcode.com\/problems\/k-diff-pairs-in-an-array","406":"https:\/\/leetcode.com\/problems\/encode-and-decode-tinyurl","407":"https:\/\/leetcode.com\/problems\/complex-number-multiplication","408":"https:\/\/leetcode.com\/problems\/convert-bst-to-greater-tree","409":"https:\/\/leetcode.com\/problems\/minimum-time-difference","410":"https:\/\/leetcode.com\/problems\/reverse-string-ii","411":"https:\/\/leetcode.com\/problems\/01-matrix","412":"https:\/\/leetcode.com\/problems\/diameter-of-binary-tree","413":"https:\/\/leetcode.com\/problems\/remove-boxes","414":"https:\/\/leetcode.com\/problems\/number-of-provinces","415":"https:\/\/leetcode.com\/problems\/game-play-analysis-iv","416":"https:\/\/leetcode.com\/problems\/student-attendance-record-i","417":"https:\/\/leetcode.com\/problems\/student-attendance-record-ii","418":"https:\/\/leetcode.com\/problems\/optimal-division","419":"https:\/\/leetcode.com\/problems\/brick-wall","420":"https:\/\/leetcode.com\/problems\/next-greater-element-iii","421":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string-iii","422":"https:\/\/leetcode.com\/problems\/logical-or-of-two-binary-grids-represented-as-quad-trees","423":"https:\/\/leetcode.com\/problems\/maximum-depth-of-n-ary-tree","424":"https:\/\/leetcode.com\/problems\/subarray-sum-equals-k","425":"https:\/\/leetcode.com\/problems\/array-partition","426":"https:\/\/leetcode.com\/problems\/binary-tree-tilt","427":"https:\/\/leetcode.com\/problems\/find-the-closest-palindrome","428":"https:\/\/leetcode.com\/problems\/reshape-the-matrix","429":"https:\/\/leetcode.com\/problems\/permutation-in-string","430":"https:\/\/leetcode.com\/problems\/managers-with-at-least-5-direct-reports","431":"https:\/\/leetcode.com\/problems\/subtree-of-another-tree","432":"https:\/\/leetcode.com\/problems\/distribute-candies","433":"https:\/\/leetcode.com\/problems\/out-of-boundary-paths","434":"https:\/\/leetcode.com\/problems\/employee-bonus","435":"https:\/\/leetcode.com\/problems\/shortest-unsorted-continuous-subarray","436":"https:\/\/leetcode.com\/problems\/delete-operation-for-two-strings","437":"https:\/\/leetcode.com\/problems\/find-customer-referee","438":"https:\/\/leetcode.com\/problems\/investments-in-2016","439":"https:\/\/leetcode.com\/problems\/customer-placing-the-largest-number-of-orders","440":"https:\/\/leetcode.com\/problems\/erect-the-fence","441":"https:\/\/leetcode.com\/problems\/n-ary-tree-preorder-traversal","442":"https:\/\/leetcode.com\/problems\/n-ary-tree-postorder-traversal","443":"https:\/\/leetcode.com\/problems\/tag-validator","444":"https:\/\/leetcode.com\/problems\/fraction-addition-and-subtraction","445":"https:\/\/leetcode.com\/problems\/valid-square","446":"https:\/\/leetcode.com\/problems\/longest-harmonious-subsequence","447":"https:\/\/leetcode.com\/problems\/big-countries","448":"https:\/\/leetcode.com\/problems\/classes-more-than-5-students","449":"https:\/\/leetcode.com\/problems\/range-addition-ii","450":"https:\/\/leetcode.com\/problems\/minimum-index-sum-of-two-lists","451":"https:\/\/leetcode.com\/problems\/non-negative-integers-without-consecutive-ones","452":"https:\/\/leetcode.com\/problems\/human-traffic-of-stadium","453":"https:\/\/leetcode.com\/problems\/friend-requests-ii-who-has-the-most-friends","454":"https:\/\/leetcode.com\/problems\/can-place-flowers","455":"https:\/\/leetcode.com\/problems\/construct-string-from-binary-tree","456":"https:\/\/leetcode.com\/problems\/sales-person","457":"https:\/\/leetcode.com\/problems\/tree-node","458":"https:\/\/leetcode.com\/problems\/find-duplicate-file-in-system","459":"https:\/\/leetcode.com\/problems\/triangle-judgement","460":"https:\/\/leetcode.com\/problems\/valid-triangle-number","461":"https:\/\/leetcode.com\/problems\/merge-two-binary-trees","462":"https:\/\/leetcode.com\/problems\/biggest-single-number","463":"https:\/\/leetcode.com\/problems\/not-boring-movies","464":"https:\/\/leetcode.com\/problems\/task-scheduler","465":"https:\/\/leetcode.com\/problems\/design-circular-queue","466":"https:\/\/leetcode.com\/problems\/add-one-row-to-tree","467":"https:\/\/leetcode.com\/problems\/maximum-distance-in-arrays","468":"https:\/\/leetcode.com\/problems\/exchange-seats","469":"https:\/\/leetcode.com\/problems\/swap-salary","470":"https:\/\/leetcode.com\/problems\/maximum-product-of-three-numbers","471":"https:\/\/leetcode.com\/problems\/k-inverse-pairs-array","472":"https:\/\/leetcode.com\/problems\/course-schedule-iii","473":"https:\/\/leetcode.com\/problems\/smallest-range-covering-elements-from-k-lists","474":"https:\/\/leetcode.com\/problems\/sum-of-square-numbers","475":"https:\/\/leetcode.com\/problems\/exclusive-time-of-functions","476":"https:\/\/leetcode.com\/problems\/average-of-levels-in-binary-tree","477":"https:\/\/leetcode.com\/problems\/shopping-offers","478":"https:\/\/leetcode.com\/problems\/decode-ways-ii","479":"https:\/\/leetcode.com\/problems\/solve-the-equation","480":"https:\/\/leetcode.com\/problems\/design-circular-deque","481":"https:\/\/leetcode.com\/problems\/maximum-average-subarray-i","482":"https:\/\/leetcode.com\/problems\/set-mismatch","483":"https:\/\/leetcode.com\/problems\/maximum-length-of-pair-chain","484":"https:\/\/leetcode.com\/problems\/palindromic-substrings","485":"https:\/\/leetcode.com\/problems\/replace-words","486":"https:\/\/leetcode.com\/problems\/dota2-senate","487":"https:\/\/leetcode.com\/problems\/2-keys-keyboard","488":"https:\/\/leetcode.com\/problems\/two-sum-iv-input-is-a-bst","489":"https:\/\/leetcode.com\/problems\/maximum-binary-tree","490":"https:\/\/leetcode.com\/problems\/print-binary-tree","491":"https:\/\/leetcode.com\/problems\/robot-return-to-origin","492":"https:\/\/leetcode.com\/problems\/find-k-closest-elements","493":"https:\/\/leetcode.com\/problems\/split-array-into-consecutive-subsequences","494":"https:\/\/leetcode.com\/problems\/image-smoother","495":"https:\/\/leetcode.com\/problems\/maximum-width-of-binary-tree","496":"https:\/\/leetcode.com\/problems\/strange-printer","497":"https:\/\/leetcode.com\/problems\/non-decreasing-array","498":"https:\/\/leetcode.com\/problems\/beautiful-arrangement-ii","499":"https:\/\/leetcode.com\/problems\/kth-smallest-number-in-multiplication-table","500":"https:\/\/leetcode.com\/problems\/trim-a-binary-search-tree","501":"https:\/\/leetcode.com\/problems\/second-minimum-node-in-a-binary-tree","502":"https:\/\/leetcode.com\/problems\/bulb-switcher-ii","503":"https:\/\/leetcode.com\/problems\/number-of-longest-increasing-subsequence","504":"https:\/\/leetcode.com\/problems\/longest-continuous-increasing-subsequence","505":"https:\/\/leetcode.com\/problems\/cut-off-trees-for-golf-event","506":"https:\/\/leetcode.com\/problems\/implement-magic-dictionary","507":"https:\/\/leetcode.com\/problems\/map-sum-pairs","508":"https:\/\/leetcode.com\/problems\/24-game","509":"https:\/\/leetcode.com\/problems\/valid-palindrome-ii","510":"https:\/\/leetcode.com\/problems\/baseball-game","511":"https:\/\/leetcode.com\/problems\/redundant-connection","512":"https:\/\/leetcode.com\/problems\/redundant-connection-ii","513":"https:\/\/leetcode.com\/problems\/repeated-string-match","514":"https:\/\/leetcode.com\/problems\/longest-univalue-path","515":"https:\/\/leetcode.com\/problems\/knight-probability-in-chessboard","516":"https:\/\/leetcode.com\/problems\/maximum-sum-of-3-non-overlapping-subarrays","517":"https:\/\/leetcode.com\/problems\/employee-importance","518":"https:\/\/leetcode.com\/problems\/stickers-to-spell-word","519":"https:\/\/leetcode.com\/problems\/binary-number-with-alternating-bits","520":"https:\/\/leetcode.com\/problems\/max-area-of-island","521":"https:\/\/leetcode.com\/problems\/count-binary-substrings","522":"https:\/\/leetcode.com\/problems\/degree-of-an-array","523":"https:\/\/leetcode.com\/problems\/partition-to-k-equal-sum-subsets","524":"https:\/\/leetcode.com\/problems\/falling-squares","525":"https:\/\/leetcode.com\/problems\/search-in-a-binary-search-tree","526":"https:\/\/leetcode.com\/problems\/insert-into-a-binary-search-tree","527":"https:\/\/leetcode.com\/problems\/kth-largest-element-in-a-stream","528":"https:\/\/leetcode.com\/problems\/binary-search","529":"https:\/\/leetcode.com\/problems\/design-hashset","530":"https:\/\/leetcode.com\/problems\/design-hashmap","531":"https:\/\/leetcode.com\/problems\/design-linked-list","532":"https:\/\/leetcode.com\/problems\/to-lower-case","533":"https:\/\/leetcode.com\/problems\/random-pick-with-blacklist","534":"https:\/\/leetcode.com\/problems\/minimum-ascii-delete-sum-for-two-strings","535":"https:\/\/leetcode.com\/problems\/subarray-product-less-than-k","536":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-with-transaction-fee","537":"https:\/\/leetcode.com\/problems\/range-module","538":"https:\/\/leetcode.com\/problems\/1-bit-and-2-bit-characters","539":"https:\/\/leetcode.com\/problems\/maximum-length-of-repeated-subarray","540":"https:\/\/leetcode.com\/problems\/find-k-th-smallest-pair-distance","541":"https:\/\/leetcode.com\/problems\/longest-word-in-dictionary","542":"https:\/\/leetcode.com\/problems\/accounts-merge","543":"https:\/\/leetcode.com\/problems\/remove-comments","544":"https:\/\/leetcode.com\/problems\/find-pivot-index","545":"https:\/\/leetcode.com\/problems\/split-linked-list-in-parts","546":"https:\/\/leetcode.com\/problems\/number-of-atoms","547":"https:\/\/leetcode.com\/problems\/self-dividing-numbers","548":"https:\/\/leetcode.com\/problems\/my-calendar-i","549":"https:\/\/leetcode.com\/problems\/count-different-palindromic-subsequences","550":"https:\/\/leetcode.com\/problems\/my-calendar-ii","551":"https:\/\/leetcode.com\/problems\/flood-fill","552":"https:\/\/leetcode.com\/problems\/asteroid-collision","553":"https:\/\/leetcode.com\/problems\/parse-lisp-expression","554":"https:\/\/leetcode.com\/problems\/monotone-increasing-digits","555":"https:\/\/leetcode.com\/problems\/daily-temperatures","556":"https:\/\/leetcode.com\/problems\/delete-and-earn","557":"https:\/\/leetcode.com\/problems\/cherry-pickup","558":"https:\/\/leetcode.com\/problems\/network-delay-time","559":"https:\/\/leetcode.com\/problems\/find-smallest-letter-greater-than-target","560":"https:\/\/leetcode.com\/problems\/largest-number-at-least-twice-of-others","561":"https:\/\/leetcode.com\/problems\/shortest-completing-word","562":"https:\/\/leetcode.com\/problems\/contain-virus","563":"https:\/\/leetcode.com\/problems\/open-the-lock","564":"https:\/\/leetcode.com\/problems\/cracking-the-safe","565":"https:\/\/leetcode.com\/problems\/reach-a-number","566":"https:\/\/leetcode.com\/problems\/pyramid-transition-matrix","567":"https:\/\/leetcode.com\/problems\/set-intersection-size-at-least-two","568":"https:\/\/leetcode.com\/problems\/special-binary-string","569":"https:\/\/leetcode.com\/problems\/partition-labels","570":"https:\/\/leetcode.com\/problems\/largest-plus-sign","571":"https:\/\/leetcode.com\/problems\/couples-holding-hands","572":"https:\/\/leetcode.com\/problems\/toeplitz-matrix","573":"https:\/\/leetcode.com\/problems\/reorganize-string","574":"https:\/\/leetcode.com\/problems\/max-chunks-to-make-sorted-ii","575":"https:\/\/leetcode.com\/problems\/max-chunks-to-make-sorted","576":"https:\/\/leetcode.com\/problems\/basic-calculator-iv","577":"https:\/\/leetcode.com\/problems\/jewels-and-stones","578":"https:\/\/leetcode.com\/problems\/sliding-puzzle","579":"https:\/\/leetcode.com\/problems\/global-and-local-inversions","580":"https:\/\/leetcode.com\/problems\/swap-adjacent-in-lr-string","581":"https:\/\/leetcode.com\/problems\/swim-in-rising-water","582":"https:\/\/leetcode.com\/problems\/k-th-symbol-in-grammar","583":"https:\/\/leetcode.com\/problems\/reaching-points","584":"https:\/\/leetcode.com\/problems\/rabbits-in-forest","585":"https:\/\/leetcode.com\/problems\/transform-to-chessboard","586":"https:\/\/leetcode.com\/problems\/minimum-distance-between-bst-nodes","587":"https:\/\/leetcode.com\/problems\/letter-case-permutation","588":"https:\/\/leetcode.com\/problems\/is-graph-bipartite","589":"https:\/\/leetcode.com\/problems\/k-th-smallest-prime-fraction","590":"https:\/\/leetcode.com\/problems\/cheapest-flights-within-k-stops","591":"https:\/\/leetcode.com\/problems\/rotated-digits","592":"https:\/\/leetcode.com\/problems\/escape-the-ghosts","593":"https:\/\/leetcode.com\/problems\/domino-and-tromino-tiling","594":"https:\/\/leetcode.com\/problems\/custom-sort-string","595":"https:\/\/leetcode.com\/problems\/number-of-matching-subsequences","596":"https:\/\/leetcode.com\/problems\/preimage-size-of-factorial-zeroes-function","597":"https:\/\/leetcode.com\/problems\/valid-tic-tac-toe-state","598":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-bounded-maximum","599":"https:\/\/leetcode.com\/problems\/rotate-string","600":"https:\/\/leetcode.com\/problems\/all-paths-from-source-to-target","601":"https:\/\/leetcode.com\/problems\/smallest-rotation-with-highest-score","602":"https:\/\/leetcode.com\/problems\/champagne-tower","603":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-make-sequences-increasing","604":"https:\/\/leetcode.com\/problems\/find-eventual-safe-states","605":"https:\/\/leetcode.com\/problems\/bricks-falling-when-hit","606":"https:\/\/leetcode.com\/problems\/unique-morse-code-words","607":"https:\/\/leetcode.com\/problems\/number-of-lines-to-write-string","608":"https:\/\/leetcode.com\/problems\/max-increase-to-keep-city-skyline","609":"https:\/\/leetcode.com\/problems\/soup-servings","610":"https:\/\/leetcode.com\/problems\/expressive-words","611":"https:\/\/leetcode.com\/problems\/chalkboard-xor-game","612":"https:\/\/leetcode.com\/problems\/subdomain-visit-count","613":"https:\/\/leetcode.com\/problems\/largest-triangle-area","614":"https:\/\/leetcode.com\/problems\/largest-sum-of-averages","615":"https:\/\/leetcode.com\/problems\/binary-tree-pruning","616":"https:\/\/leetcode.com\/problems\/bus-routes","617":"https:\/\/leetcode.com\/problems\/ambiguous-coordinates","618":"https:\/\/leetcode.com\/problems\/linked-list-components","619":"https:\/\/leetcode.com\/problems\/race-car","620":"https:\/\/leetcode.com\/problems\/most-common-word","621":"https:\/\/leetcode.com\/problems\/short-encoding-of-words","622":"https:\/\/leetcode.com\/problems\/shortest-distance-to-a-character","623":"https:\/\/leetcode.com\/problems\/card-flipping-game","624":"https:\/\/leetcode.com\/problems\/binary-trees-with-factors","625":"https:\/\/leetcode.com\/problems\/goat-latin","626":"https:\/\/leetcode.com\/problems\/friends-of-appropriate-ages","627":"https:\/\/leetcode.com\/problems\/making-a-large-island","628":"https:\/\/leetcode.com\/problems\/count-unique-characters-of-all-substrings-of-a-given-string","629":"https:\/\/leetcode.com\/problems\/consecutive-numbers-sum","630":"https:\/\/leetcode.com\/problems\/positions-of-large-groups","631":"https:\/\/leetcode.com\/problems\/masking-personal-information","632":"https:\/\/leetcode.com\/problems\/flipping-an-image","633":"https:\/\/leetcode.com\/problems\/find-and-replace-in-string","634":"https:\/\/leetcode.com\/problems\/sum-of-distances-in-tree","635":"https:\/\/leetcode.com\/problems\/image-overlap","636":"https:\/\/leetcode.com\/problems\/rectangle-overlap","637":"https:\/\/leetcode.com\/problems\/new-21-game","638":"https:\/\/leetcode.com\/problems\/push-dominoes","639":"https:\/\/leetcode.com\/problems\/magic-squares-in-grid","640":"https:\/\/leetcode.com\/problems\/split-array-into-fibonacci-sequence","641":"https:\/\/leetcode.com\/problems\/guess-the-word","642":"https:\/\/leetcode.com\/problems\/backspace-string-compare","643":"https:\/\/leetcode.com\/problems\/longest-mountain-in-array","644":"https:\/\/leetcode.com\/problems\/hand-of-straights","645":"https:\/\/leetcode.com\/problems\/shortest-path-visiting-all-nodes","646":"https:\/\/leetcode.com\/problems\/shifting-letters","647":"https:\/\/leetcode.com\/problems\/maximize-distance-to-closest-person","648":"https:\/\/leetcode.com\/problems\/rectangle-area-ii","649":"https:\/\/leetcode.com\/problems\/loud-and-rich","650":"https:\/\/leetcode.com\/problems\/peak-index-in-a-mountain-array","651":"https:\/\/leetcode.com\/problems\/car-fleet","652":"https:\/\/leetcode.com\/problems\/k-similar-strings","653":"https:\/\/leetcode.com\/problems\/exam-room","654":"https:\/\/leetcode.com\/problems\/score-of-parentheses","655":"https:\/\/leetcode.com\/problems\/minimum-cost-to-hire-k-workers","656":"https:\/\/leetcode.com\/problems\/mirror-reflection","657":"https:\/\/leetcode.com\/problems\/buddy-strings","658":"https:\/\/leetcode.com\/problems\/lemonade-change","659":"https:\/\/leetcode.com\/problems\/score-after-flipping-matrix","660":"https:\/\/leetcode.com\/problems\/shortest-subarray-with-sum-at-least-k","661":"https:\/\/leetcode.com\/problems\/all-nodes-distance-k-in-binary-tree","662":"https:\/\/leetcode.com\/problems\/shortest-path-to-get-all-keys","663":"https:\/\/leetcode.com\/problems\/smallest-subtree-with-all-the-deepest-nodes","664":"https:\/\/leetcode.com\/problems\/prime-palindrome","665":"https:\/\/leetcode.com\/problems\/transpose-matrix","666":"https:\/\/leetcode.com\/problems\/reordered-power-of-2","667":"https:\/\/leetcode.com\/problems\/advantage-shuffle","668":"https:\/\/leetcode.com\/problems\/leaf-similar-trees","669":"https:\/\/leetcode.com\/problems\/length-of-longest-fibonacci-subsequence","670":"https:\/\/leetcode.com\/problems\/walking-robot-simulation","671":"https:\/\/leetcode.com\/problems\/koko-eating-bananas","672":"https:\/\/leetcode.com\/problems\/middle-of-the-linked-list","673":"https:\/\/leetcode.com\/problems\/stone-game","674":"https:\/\/leetcode.com\/problems\/nth-magical-number","675":"https:\/\/leetcode.com\/problems\/profitable-schemes","676":"https:\/\/leetcode.com\/problems\/decoded-string-at-index","677":"https:\/\/leetcode.com\/problems\/boats-to-save-people","678":"https:\/\/leetcode.com\/problems\/reachable-nodes-in-subdivided-graph","679":"https:\/\/leetcode.com\/problems\/projection-area-of-3d-shapes","680":"https:\/\/leetcode.com\/problems\/uncommon-words-from-two-sentences","681":"https:\/\/leetcode.com\/problems\/spiral-matrix-iii","682":"https:\/\/leetcode.com\/problems\/possible-bipartition","683":"https:\/\/leetcode.com\/problems\/fair-candy-swap","684":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-preorder-and-postorder-traversal","685":"https:\/\/leetcode.com\/problems\/find-and-replace-pattern","686":"https:\/\/leetcode.com\/problems\/sum-of-subsequence-widths","687":"https:\/\/leetcode.com\/problems\/surface-area-of-3d-shapes","688":"https:\/\/leetcode.com\/problems\/groups-of-special-equivalent-strings","689":"https:\/\/leetcode.com\/problems\/all-possible-full-binary-trees","690":"https:\/\/leetcode.com\/problems\/maximum-frequency-stack","691":"https:\/\/leetcode.com\/problems\/monotonic-array","692":"https:\/\/leetcode.com\/problems\/bitwise-ors-of-subarrays","693":"https:\/\/leetcode.com\/problems\/orderly-queue","694":"https:\/\/leetcode.com\/problems\/rle-iterator","695":"https:\/\/leetcode.com\/problems\/online-stock-span","696":"https:\/\/leetcode.com\/problems\/numbers-at-most-n-given-digit-set","697":"https:\/\/leetcode.com\/problems\/valid-permutations-for-di-sequence","698":"https:\/\/leetcode.com\/problems\/fruit-into-baskets","699":"https:\/\/leetcode.com\/problems\/sort-array-by-parity","700":"https:\/\/leetcode.com\/problems\/super-palindromes","701":"https:\/\/leetcode.com\/problems\/sum-of-subarray-minimums","702":"https:\/\/leetcode.com\/problems\/smallest-range-i","703":"https:\/\/leetcode.com\/problems\/smallest-range-ii","704":"https:\/\/leetcode.com\/problems\/online-election","705":"https:\/\/leetcode.com\/problems\/sort-an-array","706":"https:\/\/leetcode.com\/problems\/cat-and-mouse","707":"https:\/\/leetcode.com\/problems\/x-of-a-kind-in-a-deck-of-cards","708":"https:\/\/leetcode.com\/problems\/partition-array-into-disjoint-intervals","709":"https:\/\/leetcode.com\/problems\/word-subsets","710":"https:\/\/leetcode.com\/problems\/reverse-only-letters","711":"https:\/\/leetcode.com\/problems\/maximum-sum-circular-subarray","712":"https:\/\/leetcode.com\/problems\/number-of-music-playlists","713":"https:\/\/leetcode.com\/problems\/minimum-add-to-make-parentheses-valid","714":"https:\/\/leetcode.com\/problems\/sort-array-by-parity-ii","715":"https:\/\/leetcode.com\/problems\/3sum-with-multiplicity","716":"https:\/\/leetcode.com\/problems\/minimize-malware-spread","717":"https:\/\/leetcode.com\/problems\/long-pressed-name","718":"https:\/\/leetcode.com\/problems\/flip-string-to-monotone-increasing","719":"https:\/\/leetcode.com\/problems\/three-equal-parts","720":"https:\/\/leetcode.com\/problems\/minimize-malware-spread-ii","721":"https:\/\/leetcode.com\/problems\/unique-email-addresses","722":"https:\/\/leetcode.com\/problems\/binary-subarrays-with-sum","723":"https:\/\/leetcode.com\/problems\/minimum-falling-path-sum","724":"https:\/\/leetcode.com\/problems\/beautiful-array","725":"https:\/\/leetcode.com\/problems\/number-of-recent-calls","726":"https:\/\/leetcode.com\/problems\/shortest-bridge","727":"https:\/\/leetcode.com\/problems\/knight-dialer","728":"https:\/\/leetcode.com\/problems\/stamping-the-sequence","729":"https:\/\/leetcode.com\/problems\/reorder-data-in-log-files","730":"https:\/\/leetcode.com\/problems\/range-sum-of-bst","731":"https:\/\/leetcode.com\/problems\/minimum-area-rectangle","732":"https:\/\/leetcode.com\/problems\/distinct-subsequences-ii","733":"https:\/\/leetcode.com\/problems\/valid-mountain-array","734":"https:\/\/leetcode.com\/problems\/di-string-match","735":"https:\/\/leetcode.com\/problems\/find-the-shortest-superstring","736":"https:\/\/leetcode.com\/problems\/delete-columns-to-make-sorted","737":"https:\/\/leetcode.com\/problems\/minimum-increment-to-make-array-unique","738":"https:\/\/leetcode.com\/problems\/validate-stack-sequences","739":"https:\/\/leetcode.com\/problems\/most-stones-removed-with-same-row-or-column","740":"https:\/\/leetcode.com\/problems\/bag-of-tokens","741":"https:\/\/leetcode.com\/problems\/largest-time-for-given-digits","742":"https:\/\/leetcode.com\/problems\/reveal-cards-in-increasing-order","743":"https:\/\/leetcode.com\/problems\/flip-equivalent-binary-trees","744":"https:\/\/leetcode.com\/problems\/verifying-an-alien-dictionary","745":"https:\/\/leetcode.com\/problems\/tallest-billboard","746":"https:\/\/leetcode.com\/problems\/prison-cells-after-n-days","747":"https:\/\/leetcode.com\/problems\/check-completeness-of-a-binary-tree","748":"https:\/\/leetcode.com\/problems\/regions-cut-by-slashes","749":"https:\/\/leetcode.com\/problems\/n-repeated-element-in-size-2n-array","750":"https:\/\/leetcode.com\/problems\/maximum-width-ramp","751":"https:\/\/leetcode.com\/problems\/minimum-area-rectangle-ii","752":"https:\/\/leetcode.com\/problems\/least-operators-to-express-number","753":"https:\/\/leetcode.com\/problems\/univalued-binary-tree","754":"https:\/\/leetcode.com\/problems\/vowel-spellchecker","755":"https:\/\/leetcode.com\/problems\/numbers-with-same-consecutive-differences","756":"https:\/\/leetcode.com\/problems\/binary-tree-cameras","757":"https:\/\/leetcode.com\/problems\/pancake-sorting","758":"https:\/\/leetcode.com\/problems\/powerful-integers","759":"https:\/\/leetcode.com\/problems\/flip-binary-tree-to-match-preorder-traversal","760":"https:\/\/leetcode.com\/problems\/equal-rational-numbers","761":"https:\/\/leetcode.com\/problems\/k-closest-points-to-origin","762":"https:\/\/leetcode.com\/problems\/subarray-sums-divisible-by-k","763":"https:\/\/leetcode.com\/problems\/odd-even-jump","764":"https:\/\/leetcode.com\/problems\/squares-of-a-sorted-array","765":"https:\/\/leetcode.com\/problems\/longest-turbulent-subarray","766":"https:\/\/leetcode.com\/problems\/distribute-coins-in-binary-tree","767":"https:\/\/leetcode.com\/problems\/unique-paths-iii","768":"https:\/\/leetcode.com\/problems\/time-based-key-value-store","769":"https:\/\/leetcode.com\/problems\/triples-with-bitwise-and-equal-to-zero","770":"https:\/\/leetcode.com\/problems\/minimum-cost-for-tickets","771":"https:\/\/leetcode.com\/problems\/string-without-aaa-or-bbb","772":"https:\/\/leetcode.com\/problems\/sum-of-even-numbers-after-queries","773":"https:\/\/leetcode.com\/problems\/smallest-string-starting-from-leaf","774":"https:\/\/leetcode.com\/problems\/add-to-array-form-of-integer","775":"https:\/\/leetcode.com\/problems\/satisfiability-of-equality-equations","776":"https:\/\/leetcode.com\/problems\/broken-calculator","777":"https:\/\/leetcode.com\/problems\/subarrays-with-k-different-integers","778":"https:\/\/leetcode.com\/problems\/cousins-in-binary-tree","779":"https:\/\/leetcode.com\/problems\/rotting-oranges","780":"https:\/\/leetcode.com\/problems\/minimum-number-of-k-consecutive-bit-flips","781":"https:\/\/leetcode.com\/problems\/number-of-squareful-arrays","782":"https:\/\/leetcode.com\/problems\/find-the-town-judge","783":"https:\/\/leetcode.com\/problems\/maximum-binary-tree-ii","784":"https:\/\/leetcode.com\/problems\/minimum-cost-to-merge-stones","785":"https:\/\/leetcode.com\/problems\/grid-illumination","786":"https:\/\/leetcode.com\/problems\/find-common-characters","787":"https:\/\/leetcode.com\/problems\/check-if-word-is-valid-after-substitutions","788":"https:\/\/leetcode.com\/problems\/max-consecutive-ones-iii","789":"https:\/\/leetcode.com\/problems\/maximize-sum-of-array-after-k-negations","790":"https:\/\/leetcode.com\/problems\/clumsy-factorial","791":"https:\/\/leetcode.com\/problems\/minimum-domino-rotations-for-equal-row","792":"https:\/\/leetcode.com\/problems\/construct-binary-search-tree-from-preorder-traversal","793":"https:\/\/leetcode.com\/problems\/complement-of-base-10-integer","794":"https:\/\/leetcode.com\/problems\/pairs-of-songs-with-total-durations-divisible-by-60","795":"https:\/\/leetcode.com\/problems\/capacity-to-ship-packages-within-d-days","796":"https:\/\/leetcode.com\/problems\/numbers-with-repeated-digits","797":"https:\/\/leetcode.com\/problems\/partition-array-into-three-parts-with-equal-sum","798":"https:\/\/leetcode.com\/problems\/best-sightseeing-pair","799":"https:\/\/leetcode.com\/problems\/smallest-integer-divisible-by-k","800":"https:\/\/leetcode.com\/problems\/binary-string-with-substrings-representing-1-to-n","801":"https:\/\/leetcode.com\/problems\/convert-to-base-2","802":"https:\/\/leetcode.com\/problems\/binary-prefix-divisible-by-5","803":"https:\/\/leetcode.com\/problems\/next-greater-node-in-linked-list","804":"https:\/\/leetcode.com\/problems\/number-of-enclaves","805":"https:\/\/leetcode.com\/problems\/remove-outermost-parentheses","806":"https:\/\/leetcode.com\/problems\/sum-of-root-to-leaf-binary-numbers","807":"https:\/\/leetcode.com\/problems\/camelcase-matching","808":"https:\/\/leetcode.com\/problems\/video-stitching","809":"https:\/\/leetcode.com\/problems\/divisor-game","810":"https:\/\/leetcode.com\/problems\/maximum-difference-between-node-and-ancestor","811":"https:\/\/leetcode.com\/problems\/longest-arithmetic-subsequence","812":"https:\/\/leetcode.com\/problems\/recover-a-tree-from-preorder-traversal","813":"https:\/\/leetcode.com\/problems\/two-city-scheduling","814":"https:\/\/leetcode.com\/problems\/matrix-cells-in-distance-order","815":"https:\/\/leetcode.com\/problems\/maximum-sum-of-two-non-overlapping-subarrays","816":"https:\/\/leetcode.com\/problems\/stream-of-characters","817":"https:\/\/leetcode.com\/problems\/moving-stones-until-consecutive","818":"https:\/\/leetcode.com\/problems\/coloring-a-border","819":"https:\/\/leetcode.com\/problems\/uncrossed-lines","820":"https:\/\/leetcode.com\/problems\/escape-a-large-maze","821":"https:\/\/leetcode.com\/problems\/valid-boomerang","822":"https:\/\/leetcode.com\/problems\/binary-search-tree-to-greater-sum-tree","823":"https:\/\/leetcode.com\/problems\/minimum-score-triangulation-of-polygon","824":"https:\/\/leetcode.com\/problems\/moving-stones-until-consecutive-ii","825":"https:\/\/leetcode.com\/problems\/robot-bounded-in-circle","826":"https:\/\/leetcode.com\/problems\/flower-planting-with-no-adjacent","827":"https:\/\/leetcode.com\/problems\/partition-array-for-maximum-sum","828":"https:\/\/leetcode.com\/problems\/longest-duplicate-substring","829":"https:\/\/leetcode.com\/problems\/customers-who-bought-all-products","830":"https:\/\/leetcode.com\/problems\/last-stone-weight","831":"https:\/\/leetcode.com\/problems\/remove-all-adjacent-duplicates-in-string","832":"https:\/\/leetcode.com\/problems\/longest-string-chain","833":"https:\/\/leetcode.com\/problems\/last-stone-weight-ii","834":"https:\/\/leetcode.com\/problems\/actors-and-directors-who-cooperated-at-least-three-times","835":"https:\/\/leetcode.com\/problems\/grumpy-bookstore-owner","836":"https:\/\/leetcode.com\/problems\/previous-permutation-with-one-swap","837":"https:\/\/leetcode.com\/problems\/distant-barcodes","838":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-equivalent-string","839":"https:\/\/leetcode.com\/problems\/product-sales-analysis-i","840":"https:\/\/leetcode.com\/problems\/product-sales-analysis-iii","841":"https:\/\/leetcode.com\/problems\/greatest-common-divisor-of-strings","842":"https:\/\/leetcode.com\/problems\/flip-columns-for-maximum-number-of-equal-rows","843":"https:\/\/leetcode.com\/problems\/adding-two-negabinary-numbers","844":"https:\/\/leetcode.com\/problems\/number-of-submatrices-that-sum-to-target","845":"https:\/\/leetcode.com\/problems\/occurrences-after-bigram","846":"https:\/\/leetcode.com\/problems\/letter-tile-possibilities","847":"https:\/\/leetcode.com\/problems\/insufficient-nodes-in-root-to-leaf-paths","848":"https:\/\/leetcode.com\/problems\/smallest-subsequence-of-distinct-characters","849":"https:\/\/leetcode.com\/problems\/sales-analysis-iii","850":"https:\/\/leetcode.com\/problems\/duplicate-zeros","851":"https:\/\/leetcode.com\/problems\/largest-values-from-labels","852":"https:\/\/leetcode.com\/problems\/shortest-path-in-binary-matrix","853":"https:\/\/leetcode.com\/problems\/shortest-common-supersequence","854":"https:\/\/leetcode.com\/problems\/statistics-from-a-large-sample","855":"https:\/\/leetcode.com\/problems\/car-pooling","856":"https:\/\/leetcode.com\/problems\/find-in-mountain-array","857":"https:\/\/leetcode.com\/problems\/brace-expansion-ii","858":"https:\/\/leetcode.com\/problems\/distribute-candies-to-people","859":"https:\/\/leetcode.com\/problems\/path-in-zigzag-labelled-binary-tree","860":"https:\/\/leetcode.com\/problems\/filling-bookcase-shelves","861":"https:\/\/leetcode.com\/problems\/parsing-a-boolean-expression","862":"https:\/\/leetcode.com\/problems\/defanging-an-ip-address","863":"https:\/\/leetcode.com\/problems\/corporate-flight-bookings","864":"https:\/\/leetcode.com\/problems\/delete-nodes-and-return-forest","865":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-two-valid-parentheses-strings","866":"https:\/\/leetcode.com\/problems\/print-in-order","867":"https:\/\/leetcode.com\/problems\/print-zero-even-odd","868":"https:\/\/leetcode.com\/problems\/building-h2o","869":"https:\/\/leetcode.com\/problems\/relative-sort-array","870":"https:\/\/leetcode.com\/problems\/lowest-common-ancestor-of-deepest-leaves","871":"https:\/\/leetcode.com\/problems\/longest-well-performing-interval","872":"https:\/\/leetcode.com\/problems\/smallest-sufficient-team","873":"https:\/\/leetcode.com\/problems\/number-of-equivalent-domino-pairs","874":"https:\/\/leetcode.com\/problems\/shortest-path-with-alternating-colors","875":"https:\/\/leetcode.com\/problems\/minimum-cost-tree-from-leaf-values","876":"https:\/\/leetcode.com\/problems\/maximum-of-absolute-value-expression","877":"https:\/\/leetcode.com\/problems\/n-th-tribonacci-number","878":"https:\/\/leetcode.com\/problems\/alphabet-board-path","879":"https:\/\/leetcode.com\/problems\/largest-1-bordered-square","880":"https:\/\/leetcode.com\/problems\/stone-game-ii","881":"https:\/\/leetcode.com\/problems\/user-activity-for-the-past-30-days-i","882":"https:\/\/leetcode.com\/problems\/longest-common-subsequence","883":"https:\/\/leetcode.com\/problems\/decrease-elements-to-make-array-zigzag","884":"https:\/\/leetcode.com\/problems\/binary-tree-coloring-game","885":"https:\/\/leetcode.com\/problems\/snapshot-array","886":"https:\/\/leetcode.com\/problems\/longest-chunked-palindrome-decomposition","887":"https:\/\/leetcode.com\/problems\/article-views-i","888":"https:\/\/leetcode.com\/problems\/day-of-the-year","889":"https:\/\/leetcode.com\/problems\/number-of-dice-rolls-with-target-sum","890":"https:\/\/leetcode.com\/problems\/online-majority-element-in-subarray","891":"https:\/\/leetcode.com\/problems\/market-analysis-i","892":"https:\/\/leetcode.com\/problems\/find-words-that-can-be-formed-by-characters","893":"https:\/\/leetcode.com\/problems\/maximum-level-sum-of-a-binary-tree","894":"https:\/\/leetcode.com\/problems\/last-substring-in-lexicographical-order","895":"https:\/\/leetcode.com\/problems\/product-price-at-a-given-date","896":"https:\/\/leetcode.com\/problems\/invalid-transactions","897":"https:\/\/leetcode.com\/problems\/compare-strings-by-frequency-of-the-smallest-character","898":"https:\/\/leetcode.com\/problems\/remove-zero-sum-consecutive-nodes-from-linked-list","899":"https:\/\/leetcode.com\/problems\/prime-arrangements","900":"https:\/\/leetcode.com\/problems\/can-make-palindrome-from-substring","901":"https:\/\/leetcode.com\/problems\/number-of-valid-words-for-each-puzzle","902":"https:\/\/leetcode.com\/problems\/reformat-department-table","903":"https:\/\/leetcode.com\/problems\/distance-between-bus-stops","904":"https:\/\/leetcode.com\/problems\/day-of-the-week","905":"https:\/\/leetcode.com\/problems\/maximum-subarray-sum-with-one-deletion","906":"https:\/\/leetcode.com\/problems\/make-array-strictly-increasing","907":"https:\/\/leetcode.com\/problems\/maximum-number-of-balloons","908":"https:\/\/leetcode.com\/problems\/k-concatenation-maximum-sum","909":"https:\/\/leetcode.com\/problems\/monthly-transactions-i","910":"https:\/\/leetcode.com\/problems\/fizz-buzz-multithreaded","911":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference","912":"https:\/\/leetcode.com\/problems\/ugly-number-iii","913":"https:\/\/leetcode.com\/problems\/smallest-string-with-swaps","914":"https:\/\/leetcode.com\/problems\/sort-items-by-groups-respecting-dependencies","915":"https:\/\/leetcode.com\/problems\/last-person-to-fit-in-the-bus","916":"https:\/\/leetcode.com\/problems\/design-skiplist","917":"https:\/\/leetcode.com\/problems\/unique-number-of-occurrences","918":"https:\/\/leetcode.com\/problems\/get-equal-substrings-within-budget","919":"https:\/\/leetcode.com\/problems\/remove-all-adjacent-duplicates-in-string-ii","920":"https:\/\/leetcode.com\/problems\/minimum-moves-to-reach-target-with-rotations","921":"https:\/\/leetcode.com\/problems\/queries-quality-and-percentage","922":"https:\/\/leetcode.com\/problems\/minimum-cost-to-move-chips-to-the-same-position","923":"https:\/\/leetcode.com\/problems\/longest-arithmetic-subsequence-of-given-difference","924":"https:\/\/leetcode.com\/problems\/path-with-maximum-gold","925":"https:\/\/leetcode.com\/problems\/count-vowels-permutation","926":"https:\/\/leetcode.com\/problems\/split-a-string-in-balanced-strings","927":"https:\/\/leetcode.com\/problems\/queens-that-can-attack-the-king","928":"https:\/\/leetcode.com\/problems\/dice-roll-simulation","929":"https:\/\/leetcode.com\/problems\/maximum-equal-frequency","930":"https:\/\/leetcode.com\/problems\/the-dining-philosophers","931":"https:\/\/leetcode.com\/problems\/airplane-seat-assignment-probability","932":"https:\/\/leetcode.com\/problems\/check-if-it-is-a-straight-line","933":"https:\/\/leetcode.com\/problems\/remove-sub-folders-from-the-filesystem","934":"https:\/\/leetcode.com\/problems\/replace-the-substring-for-balanced-string","935":"https:\/\/leetcode.com\/problems\/find-positive-integer-solution-for-a-given-equation","936":"https:\/\/leetcode.com\/problems\/circular-permutation-in-binary-representation","937":"https:\/\/leetcode.com\/problems\/maximum-length-of-a-concatenated-string-with-unique-characters","938":"https:\/\/leetcode.com\/problems\/tiling-a-rectangle-with-the-fewest-squares","939":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-make-strings-equal","940":"https:\/\/leetcode.com\/problems\/count-number-of-nice-subarrays","941":"https:\/\/leetcode.com\/problems\/minimum-remove-to-make-valid-parentheses","942":"https:\/\/leetcode.com\/problems\/check-if-it-is-a-good-array","943":"https:\/\/leetcode.com\/problems\/average-selling-price","944":"https:\/\/leetcode.com\/problems\/cells-with-odd-values-in-a-matrix","945":"https:\/\/leetcode.com\/problems\/reconstruct-a-2-row-binary-matrix","946":"https:\/\/leetcode.com\/problems\/number-of-closed-islands","947":"https:\/\/leetcode.com\/problems\/maximum-score-words-formed-by-letters","948":"https:\/\/leetcode.com\/problems\/shift-2d-grid","949":"https:\/\/leetcode.com\/problems\/find-elements-in-a-contaminated-binary-tree","950":"https:\/\/leetcode.com\/problems\/greatest-sum-divisible-by-three","951":"https:\/\/leetcode.com\/problems\/minimum-moves-to-move-a-box-to-their-target-location","952":"https:\/\/leetcode.com\/problems\/minimum-time-visiting-all-points","953":"https:\/\/leetcode.com\/problems\/count-servers-that-communicate","954":"https:\/\/leetcode.com\/problems\/search-suggestions-system","955":"https:\/\/leetcode.com\/problems\/number-of-ways-to-stay-in-the-same-place-after-some-steps","956":"https:\/\/leetcode.com\/problems\/find-winner-on-a-tic-tac-toe-game","957":"https:\/\/leetcode.com\/problems\/count-square-submatrices-with-all-ones","958":"https:\/\/leetcode.com\/problems\/palindrome-partitioning-iii","959":"https:\/\/leetcode.com\/problems\/students-and-examinations","960":"https:\/\/leetcode.com\/problems\/subtract-the-product-and-sum-of-digits-of-an-integer","961":"https:\/\/leetcode.com\/problems\/group-the-people-given-the-group-size-they-belong-to","962":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix","963":"https:\/\/leetcode.com\/problems\/iterator-for-combination","964":"https:\/\/leetcode.com\/problems\/element-appearing-more-than-25-in-sorted-array","965":"https:\/\/leetcode.com\/problems\/remove-covered-intervals","966":"https:\/\/leetcode.com\/problems\/minimum-falling-path-sum-ii","967":"https:\/\/leetcode.com\/problems\/convert-binary-number-in-a-linked-list-to-integer","968":"https:\/\/leetcode.com\/problems\/sequential-digits","969":"https:\/\/leetcode.com\/problems\/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold","970":"https:\/\/leetcode.com\/problems\/shortest-path-in-a-grid-with-obstacles-elimination","971":"https:\/\/leetcode.com\/problems\/find-numbers-with-even-number-of-digits","972":"https:\/\/leetcode.com\/problems\/divide-array-in-sets-of-k-consecutive-numbers","973":"https:\/\/leetcode.com\/problems\/maximum-number-of-occurrences-of-a-substring","974":"https:\/\/leetcode.com\/problems\/maximum-candies-you-can-get-from-boxes","975":"https:\/\/leetcode.com\/problems\/replace-elements-with-greatest-element-on-right-side","976":"https:\/\/leetcode.com\/problems\/sum-of-mutated-array-closest-to-target","977":"https:\/\/leetcode.com\/problems\/number-of-paths-with-max-score","978":"https:\/\/leetcode.com\/problems\/deepest-leaves-sum","979":"https:\/\/leetcode.com\/problems\/find-n-unique-integers-sum-up-to-zero","980":"https:\/\/leetcode.com\/problems\/all-elements-in-two-binary-search-trees","981":"https:\/\/leetcode.com\/problems\/jump-game-iii","982":"https:\/\/leetcode.com\/problems\/verbal-arithmetic-puzzle","983":"https:\/\/leetcode.com\/problems\/decrypt-string-from-alphabet-to-integer-mapping","984":"https:\/\/leetcode.com\/problems\/xor-queries-of-a-subarray","985":"https:\/\/leetcode.com\/problems\/get-watched-videos-by-your-friends","986":"https:\/\/leetcode.com\/problems\/minimum-insertion-steps-to-make-a-string-palindrome","987":"https:\/\/leetcode.com\/problems\/decompress-run-length-encoded-list","988":"https:\/\/leetcode.com\/problems\/matrix-block-sum","989":"https:\/\/leetcode.com\/problems\/sum-of-nodes-with-even-valued-grandparent","990":"https:\/\/leetcode.com\/problems\/distinct-echo-substrings","991":"https:\/\/leetcode.com\/problems\/convert-integer-to-the-sum-of-two-no-zero-integers","992":"https:\/\/leetcode.com\/problems\/minimum-flips-to-make-a-or-b-equal-to-c","993":"https:\/\/leetcode.com\/problems\/number-of-operations-to-make-network-connected","994":"https:\/\/leetcode.com\/problems\/restaurant-growth","995":"https:\/\/leetcode.com\/problems\/maximum-69-number","996":"https:\/\/leetcode.com\/problems\/print-words-vertically","997":"https:\/\/leetcode.com\/problems\/delete-leaves-with-a-given-value","998":"https:\/\/leetcode.com\/problems\/minimum-number-of-taps-to-open-to-water-a-garden","999":"https:\/\/leetcode.com\/problems\/list-the-products-ordered-in-a-period","1000":"https:\/\/leetcode.com\/problems\/break-a-palindrome","1001":"https:\/\/leetcode.com\/problems\/sort-the-matrix-diagonally","1002":"https:\/\/leetcode.com\/problems\/reverse-subarray-to-maximize-array-value","1003":"https:\/\/leetcode.com\/problems\/rank-transform-of-an-array","1004":"https:\/\/leetcode.com\/problems\/remove-palindromic-subsequences","1005":"https:\/\/leetcode.com\/problems\/filter-restaurants-by-vegan-friendly-price-and-distance","1006":"https:\/\/leetcode.com\/problems\/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance","1007":"https:\/\/leetcode.com\/problems\/minimum-difficulty-of-a-job-schedule","1008":"https:\/\/leetcode.com\/problems\/the-k-weakest-rows-in-a-matrix","1009":"https:\/\/leetcode.com\/problems\/reduce-array-size-to-the-half","1010":"https:\/\/leetcode.com\/problems\/maximum-product-of-splitted-binary-tree","1011":"https:\/\/leetcode.com\/problems\/jump-game-v","1012":"https:\/\/leetcode.com\/problems\/movie-rating","1013":"https:\/\/leetcode.com\/problems\/number-of-steps-to-reduce-a-number-to-zero","1014":"https:\/\/leetcode.com\/problems\/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold","1015":"https:\/\/leetcode.com\/problems\/angle-between-hands-of-a-clock","1016":"https:\/\/leetcode.com\/problems\/jump-game-iv","1017":"https:\/\/leetcode.com\/problems\/check-if-n-and-its-double-exist","1018":"https:\/\/leetcode.com\/problems\/minimum-number-of-steps-to-make-two-strings-anagram","1019":"https:\/\/leetcode.com\/problems\/tweet-counts-per-frequency","1020":"https:\/\/leetcode.com\/problems\/maximum-students-taking-exam","1021":"https:\/\/leetcode.com\/problems\/count-negative-numbers-in-a-sorted-matrix","1022":"https:\/\/leetcode.com\/problems\/product-of-the-last-k-numbers","1023":"https:\/\/leetcode.com\/problems\/maximum-number-of-events-that-can-be-attended","1024":"https:\/\/leetcode.com\/problems\/construct-target-array-with-multiple-sums","1025":"https:\/\/leetcode.com\/problems\/sort-integers-by-the-number-of-1-bits","1026":"https:\/\/leetcode.com\/problems\/number-of-substrings-containing-all-three-characters","1027":"https:\/\/leetcode.com\/problems\/count-all-valid-pickup-and-delivery-options","1028":"https:\/\/leetcode.com\/problems\/number-of-days-between-two-dates","1029":"https:\/\/leetcode.com\/problems\/validate-binary-tree-nodes","1030":"https:\/\/leetcode.com\/problems\/closest-divisors","1031":"https:\/\/leetcode.com\/problems\/largest-multiple-of-three","1032":"https:\/\/leetcode.com\/problems\/rank-teams-by-votes","1033":"https:\/\/leetcode.com\/problems\/linked-list-in-binary-tree","1034":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-at-least-one-valid-path-in-a-grid","1035":"https:\/\/leetcode.com\/problems\/increasing-decreasing-string","1036":"https:\/\/leetcode.com\/problems\/find-the-longest-substring-containing-vowels-in-even-counts","1037":"https:\/\/leetcode.com\/problems\/longest-zigzag-path-in-a-binary-tree","1038":"https:\/\/leetcode.com\/problems\/maximum-sum-bst-in-binary-tree","1039":"https:\/\/leetcode.com\/problems\/generate-a-string-with-characters-that-have-odd-counts","1040":"https:\/\/leetcode.com\/problems\/number-of-times-binary-string-is-prefix-aligned","1041":"https:\/\/leetcode.com\/problems\/time-needed-to-inform-all-employees","1042":"https:\/\/leetcode.com\/problems\/frog-position-after-t-seconds","1043":"https:\/\/leetcode.com\/problems\/replace-employee-id-with-the-unique-identifier","1044":"https:\/\/leetcode.com\/problems\/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree","1045":"https:\/\/leetcode.com\/problems\/lucky-numbers-in-a-matrix","1046":"https:\/\/leetcode.com\/problems\/design-a-stack-with-increment-operation","1047":"https:\/\/leetcode.com\/problems\/find-the-distance-value-between-two-arrays","1048":"https:\/\/leetcode.com\/problems\/cinema-seat-allocation","1049":"https:\/\/leetcode.com\/problems\/sort-integers-by-the-power-value","1050":"https:\/\/leetcode.com\/problems\/pizza-with-3n-slices","1051":"https:\/\/leetcode.com\/problems\/create-target-array-in-the-given-order","1052":"https:\/\/leetcode.com\/problems\/four-divisors","1053":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-path-in-a-grid","1054":"https:\/\/leetcode.com\/problems\/longest-happy-prefix","1055":"https:\/\/leetcode.com\/problems\/capital-gainloss","1056":"https:\/\/leetcode.com\/problems\/find-lucky-integer-in-an-array","1057":"https:\/\/leetcode.com\/problems\/count-number-of-teams","1058":"https:\/\/leetcode.com\/problems\/design-underground-system","1059":"https:\/\/leetcode.com\/problems\/find-all-good-strings","1060":"https:\/\/leetcode.com\/problems\/circle-and-rectangle-overlapping","1061":"https:\/\/leetcode.com\/problems\/reducing-dishes","1062":"https:\/\/leetcode.com\/problems\/minimum-subsequence-in-non-increasing-order","1063":"https:\/\/leetcode.com\/problems\/longest-happy-string","1064":"https:\/\/leetcode.com\/problems\/stone-game-iii","1065":"https:\/\/leetcode.com\/problems\/top-travellers","1066":"https:\/\/leetcode.com\/problems\/string-matching-in-an-array","1067":"https:\/\/leetcode.com\/problems\/queries-on-a-permutation-with-key","1068":"https:\/\/leetcode.com\/problems\/number-of-ways-to-paint-n-3-grid","1069":"https:\/\/leetcode.com\/problems\/minimum-value-to-get-positive-step-by-step-sum","1070":"https:\/\/leetcode.com\/problems\/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k","1071":"https:\/\/leetcode.com\/problems\/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n","1072":"https:\/\/leetcode.com\/problems\/restore-the-array","1073":"https:\/\/leetcode.com\/problems\/reformat-the-string","1074":"https:\/\/leetcode.com\/problems\/display-table-of-food-orders-in-a-restaurant","1075":"https:\/\/leetcode.com\/problems\/minimum-number-of-frogs-croaking","1076":"https:\/\/leetcode.com\/problems\/build-array-where-you-can-find-the-maximum-exactly-k-comparisons","1077":"https:\/\/leetcode.com\/problems\/maximum-points-you-can-obtain-from-cards","1078":"https:\/\/leetcode.com\/problems\/diagonal-traverse-ii","1079":"https:\/\/leetcode.com\/problems\/constrained-subsequence-sum","1080":"https:\/\/leetcode.com\/problems\/kids-with-the-greatest-number-of-candies","1081":"https:\/\/leetcode.com\/problems\/max-difference-you-can-get-from-changing-an-integer","1082":"https:\/\/leetcode.com\/problems\/check-if-a-string-can-break-another-string","1083":"https:\/\/leetcode.com\/problems\/number-of-ways-to-wear-different-hats-to-each-other","1084":"https:\/\/leetcode.com\/problems\/destination-city","1085":"https:\/\/leetcode.com\/problems\/check-if-all-1s-are-at-least-length-k-places-away","1086":"https:\/\/leetcode.com\/problems\/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit","1087":"https:\/\/leetcode.com\/problems\/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows","1088":"https:\/\/leetcode.com\/problems\/build-an-array-with-stack-operations","1089":"https:\/\/leetcode.com\/problems\/count-triplets-that-can-form-two-arrays-of-equal-xor","1090":"https:\/\/leetcode.com\/problems\/minimum-time-to-collect-all-apples-in-a-tree","1091":"https:\/\/leetcode.com\/problems\/number-of-ways-of-cutting-a-pizza","1092":"https:\/\/leetcode.com\/problems\/simplified-fractions","1093":"https:\/\/leetcode.com\/problems\/count-good-nodes-in-binary-tree","1094":"https:\/\/leetcode.com\/problems\/form-largest-integer-with-digits-that-add-up-to-target","1095":"https:\/\/leetcode.com\/problems\/number-of-students-doing-homework-at-a-given-time","1096":"https:\/\/leetcode.com\/problems\/maximum-number-of-darts-inside-of-a-circular-dartboard","1097":"https:\/\/leetcode.com\/problems\/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence","1098":"https:\/\/leetcode.com\/problems\/maximum-number-of-vowels-in-a-substring-of-given-length","1099":"https:\/\/leetcode.com\/problems\/pseudo-palindromic-paths-in-a-binary-tree","1100":"https:\/\/leetcode.com\/problems\/max-dot-product-of-two-subsequences","1101":"https:\/\/leetcode.com\/problems\/make-two-arrays-equal-by-reversing-subarrays","1102":"https:\/\/leetcode.com\/problems\/check-if-a-string-contains-all-binary-codes-of-size-k","1103":"https:\/\/leetcode.com\/problems\/maximum-product-of-two-elements-in-an-array","1104":"https:\/\/leetcode.com\/problems\/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts","1105":"https:\/\/leetcode.com\/problems\/reorder-routes-to-make-all-paths-lead-to-the-city-zero","1106":"https:\/\/leetcode.com\/problems\/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls","1107":"https:\/\/leetcode.com\/problems\/shuffle-the-array","1108":"https:\/\/leetcode.com\/problems\/the-k-strongest-values-in-an-array","1109":"https:\/\/leetcode.com\/problems\/design-browser-history","1110":"https:\/\/leetcode.com\/problems\/paint-house-iii","1111":"https:\/\/leetcode.com\/problems\/final-prices-with-a-special-discount-in-a-shop","1112":"https:\/\/leetcode.com\/problems\/subrectangle-queries","1113":"https:\/\/leetcode.com\/problems\/find-two-non-overlapping-sub-arrays-each-with-target-sum","1114":"https:\/\/leetcode.com\/problems\/running-sum-of-1d-array","1115":"https:\/\/leetcode.com\/problems\/least-number-of-unique-integers-after-k-removals","1116":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-make-m-bouquets","1117":"https:\/\/leetcode.com\/problems\/kth-ancestor-of-a-tree-node","1118":"https:\/\/leetcode.com\/problems\/group-sold-products-by-the-date","1119":"https:\/\/leetcode.com\/problems\/xor-operation-in-an-array","1120":"https:\/\/leetcode.com\/problems\/making-file-names-unique","1121":"https:\/\/leetcode.com\/problems\/avoid-flood-in-the-city","1122":"https:\/\/leetcode.com\/problems\/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree","1123":"https:\/\/leetcode.com\/problems\/average-salary-excluding-the-minimum-and-maximum-salary","1124":"https:\/\/leetcode.com\/problems\/the-kth-factor-of-n","1125":"https:\/\/leetcode.com\/problems\/longest-subarray-of-1s-after-deleting-one-element","1126":"https:\/\/leetcode.com\/problems\/parallel-courses-ii","1127":"https:\/\/leetcode.com\/problems\/path-crossing","1128":"https:\/\/leetcode.com\/problems\/check-if-array-pairs-are-divisible-by-k","1129":"https:\/\/leetcode.com\/problems\/number-of-subsequences-that-satisfy-the-given-sum-condition","1130":"https:\/\/leetcode.com\/problems\/max-value-of-equation","1131":"https:\/\/leetcode.com\/problems\/last-moment-before-all-ants-fall-out-of-a-plank","1132":"https:\/\/leetcode.com\/problems\/count-submatrices-with-all-ones","1133":"https:\/\/leetcode.com\/problems\/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits","1134":"https:\/\/leetcode.com\/problems\/reformat-date","1135":"https:\/\/leetcode.com\/problems\/range-sum-of-sorted-subarray-sums","1136":"https:\/\/leetcode.com\/problems\/minimum-difference-between-largest-and-smallest-value-in-three-moves","1137":"https:\/\/leetcode.com\/problems\/stone-game-iv","1138":"https:\/\/leetcode.com\/problems\/number-of-good-pairs","1139":"https:\/\/leetcode.com\/problems\/number-of-substrings-with-only-1s","1140":"https:\/\/leetcode.com\/problems\/path-with-maximum-probability","1141":"https:\/\/leetcode.com\/problems\/best-position-for-a-service-centre","1142":"https:\/\/leetcode.com\/problems\/find-users-with-valid-e-mails","1143":"https:\/\/leetcode.com\/problems\/water-bottles","1144":"https:\/\/leetcode.com\/problems\/number-of-nodes-in-the-sub-tree-with-the-same-label","1145":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-substrings","1146":"https:\/\/leetcode.com\/problems\/find-a-value-of-a-mysterious-function-closest-to-target","1147":"https:\/\/leetcode.com\/problems\/count-odd-numbers-in-an-interval-range","1148":"https:\/\/leetcode.com\/problems\/number-of-sub-arrays-with-odd-sum","1149":"https:\/\/leetcode.com\/problems\/number-of-good-ways-to-split-a-string","1150":"https:\/\/leetcode.com\/problems\/minimum-number-of-increments-on-subarrays-to-form-a-target-array","1151":"https:\/\/leetcode.com\/problems\/patients-with-a-condition","1152":"https:\/\/leetcode.com\/problems\/shuffle-string","1153":"https:\/\/leetcode.com\/problems\/minimum-suffix-flips","1154":"https:\/\/leetcode.com\/problems\/number-of-good-leaf-nodes-pairs","1155":"https:\/\/leetcode.com\/problems\/string-compression-ii","1156":"https:\/\/leetcode.com\/problems\/count-good-triplets","1157":"https:\/\/leetcode.com\/problems\/find-the-winner-of-an-array-game","1158":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-arrange-a-binary-grid","1159":"https:\/\/leetcode.com\/problems\/get-the-maximum-score","1160":"https:\/\/leetcode.com\/problems\/kth-missing-positive-number","1161":"https:\/\/leetcode.com\/problems\/can-convert-string-in-k-moves","1162":"https:\/\/leetcode.com\/problems\/minimum-insertions-to-balance-a-parentheses-string","1163":"https:\/\/leetcode.com\/problems\/find-longest-awesome-substring","1164":"https:\/\/leetcode.com\/problems\/make-the-string-great","1165":"https:\/\/leetcode.com\/problems\/find-kth-bit-in-nth-binary-string","1166":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target","1167":"https:\/\/leetcode.com\/problems\/minimum-cost-to-cut-a-stick","1168":"https:\/\/leetcode.com\/problems\/three-consecutive-odds","1169":"https:\/\/leetcode.com\/problems\/magnetic-force-between-two-balls","1170":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-eat-n-oranges","1171":"https:\/\/leetcode.com\/problems\/minimum-number-of-vertices-to-reach-all-nodes","1172":"https:\/\/leetcode.com\/problems\/detect-cycles-in-2d-grid","1173":"https:\/\/leetcode.com\/problems\/most-visited-sector-in-a-circular-track","1174":"https:\/\/leetcode.com\/problems\/maximum-number-of-coins-you-can-get","1175":"https:\/\/leetcode.com\/problems\/find-latest-group-of-size-m","1176":"https:\/\/leetcode.com\/problems\/stone-game-v","1177":"https:\/\/leetcode.com\/problems\/detect-pattern-of-length-m-repeated-k-or-more-times","1178":"https:\/\/leetcode.com\/problems\/maximum-length-of-subarray-with-positive-product","1179":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-disconnect-island","1180":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reorder-array-to-get-same-bst","1181":"https:\/\/leetcode.com\/problems\/matrix-diagonal-sum","1182":"https:\/\/leetcode.com\/problems\/number-of-ways-to-split-a-string","1183":"https:\/\/leetcode.com\/problems\/shortest-subarray-to-be-removed-to-make-array-sorted","1184":"https:\/\/leetcode.com\/problems\/count-all-possible-routes","1185":"https:\/\/leetcode.com\/problems\/replace-all-s-to-avoid-consecutive-repeating-characters","1186":"https:\/\/leetcode.com\/problems\/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers","1187":"https:\/\/leetcode.com\/problems\/minimum-time-to-make-rope-colorful","1188":"https:\/\/leetcode.com\/problems\/remove-max-number-of-edges-to-keep-graph-fully-traversable","1189":"https:\/\/leetcode.com\/problems\/customer-who-visited-but-did-not-make-any-transactions","1190":"https:\/\/leetcode.com\/problems\/special-positions-in-a-binary-matrix","1191":"https:\/\/leetcode.com\/problems\/count-unhappy-friends","1192":"https:\/\/leetcode.com\/problems\/min-cost-to-connect-all-points","1193":"https:\/\/leetcode.com\/problems\/bank-account-summary-ii","1194":"https:\/\/leetcode.com\/problems\/sum-of-all-odd-length-subarrays","1195":"https:\/\/leetcode.com\/problems\/maximum-sum-obtained-of-any-permutation","1196":"https:\/\/leetcode.com\/problems\/make-sum-divisible-by-p","1197":"https:\/\/leetcode.com\/problems\/strange-printer-ii","1198":"https:\/\/leetcode.com\/problems\/rearrange-spaces-between-words","1199":"https:\/\/leetcode.com\/problems\/split-a-string-into-the-max-number-of-unique-substrings","1200":"https:\/\/leetcode.com\/problems\/maximum-non-negative-product-in-a-matrix","1201":"https:\/\/leetcode.com\/problems\/minimum-cost-to-connect-two-groups-of-points","1202":"https:\/\/leetcode.com\/problems\/crawler-log-folder","1203":"https:\/\/leetcode.com\/problems\/maximum-profit-of-operating-a-centennial-wheel","1204":"https:\/\/leetcode.com\/problems\/throne-inheritance","1205":"https:\/\/leetcode.com\/problems\/maximum-number-of-achievable-transfer-requests","1206":"https:\/\/leetcode.com\/problems\/design-parking-system","1207":"https:\/\/leetcode.com\/problems\/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period","1208":"https:\/\/leetcode.com\/problems\/find-valid-matrix-given-row-and-column-sums","1209":"https:\/\/leetcode.com\/problems\/find-servers-that-handled-most-number-of-requests","1210":"https:\/\/leetcode.com\/problems\/special-array-with-x-elements-greater-than-or-equal-x","1211":"https:\/\/leetcode.com\/problems\/even-odd-tree","1212":"https:\/\/leetcode.com\/problems\/maximum-number-of-visible-points","1213":"https:\/\/leetcode.com\/problems\/minimum-one-bit-operations-to-make-integers-zero","1214":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-the-parentheses","1215":"https:\/\/leetcode.com\/problems\/maximal-network-rank","1216":"https:\/\/leetcode.com\/problems\/split-two-strings-to-make-palindrome","1217":"https:\/\/leetcode.com\/problems\/count-subtrees-with-max-distance-between-cities","1218":"https:\/\/leetcode.com\/problems\/mean-of-array-after-removing-some-elements","1219":"https:\/\/leetcode.com\/problems\/coordinate-with-maximum-network-quality","1220":"https:\/\/leetcode.com\/problems\/number-of-sets-of-k-non-overlapping-line-segments","1221":"https:\/\/leetcode.com\/problems\/fancy-sequence","1222":"https:\/\/leetcode.com\/problems\/largest-substring-between-two-equal-characters","1223":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-string-after-applying-operations","1224":"https:\/\/leetcode.com\/problems\/best-team-with-no-conflicts","1225":"https:\/\/leetcode.com\/problems\/slowest-key","1226":"https:\/\/leetcode.com\/problems\/arithmetic-subarrays","1227":"https:\/\/leetcode.com\/problems\/path-with-minimum-effort","1228":"https:\/\/leetcode.com\/problems\/rank-transform-of-a-matrix","1229":"https:\/\/leetcode.com\/problems\/percentage-of-users-attended-a-contest","1230":"https:\/\/leetcode.com\/problems\/sort-array-by-increasing-frequency","1231":"https:\/\/leetcode.com\/problems\/widest-vertical-area-between-two-points-containing-no-points","1232":"https:\/\/leetcode.com\/problems\/count-substrings-that-differ-by-one-character","1233":"https:\/\/leetcode.com\/problems\/check-array-formation-through-concatenation","1234":"https:\/\/leetcode.com\/problems\/count-sorted-vowel-strings","1235":"https:\/\/leetcode.com\/problems\/furthest-building-you-can-reach","1236":"https:\/\/leetcode.com\/problems\/kth-smallest-instructions","1237":"https:\/\/leetcode.com\/problems\/get-maximum-in-generated-array","1238":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-character-frequencies-unique","1239":"https:\/\/leetcode.com\/problems\/create-sorted-array-through-instructions","1240":"https:\/\/leetcode.com\/problems\/defuse-the-bomb","1241":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-string-balanced","1242":"https:\/\/leetcode.com\/problems\/minimum-jumps-to-reach-home","1243":"https:\/\/leetcode.com\/problems\/distribute-repeating-integers","1244":"https:\/\/leetcode.com\/problems\/design-an-ordered-stream","1245":"https:\/\/leetcode.com\/problems\/determine-if-two-strings-are-close","1246":"https:\/\/leetcode.com\/problems\/minimum-operations-to-reduce-x-to-zero","1247":"https:\/\/leetcode.com\/problems\/maximize-grid-happiness","1248":"https:\/\/leetcode.com\/problems\/average-time-of-process-per-machine","1249":"https:\/\/leetcode.com\/problems\/check-if-two-string-arrays-are-equivalent","1250":"https:\/\/leetcode.com\/problems\/smallest-string-with-a-given-numeric-value","1251":"https:\/\/leetcode.com\/problems\/ways-to-make-a-fair-array","1252":"https:\/\/leetcode.com\/problems\/minimum-initial-energy-to-finish-tasks","1253":"https:\/\/leetcode.com\/problems\/fix-names-in-a-table","1254":"https:\/\/leetcode.com\/problems\/maximum-repeating-substring","1255":"https:\/\/leetcode.com\/problems\/merge-in-between-linked-lists","1256":"https:\/\/leetcode.com\/problems\/design-front-middle-back-queue","1257":"https:\/\/leetcode.com\/problems\/minimum-number-of-removals-to-make-mountain-array","1258":"https:\/\/leetcode.com\/problems\/richest-customer-wealth","1259":"https:\/\/leetcode.com\/problems\/find-the-most-competitive-subsequence","1260":"https:\/\/leetcode.com\/problems\/minimum-moves-to-make-array-complementary","1261":"https:\/\/leetcode.com\/problems\/minimize-deviation-in-array","1262":"https:\/\/leetcode.com\/problems\/goal-parser-interpretation","1263":"https:\/\/leetcode.com\/problems\/max-number-of-k-sum-pairs","1264":"https:\/\/leetcode.com\/problems\/concatenation-of-consecutive-binary-numbers","1265":"https:\/\/leetcode.com\/problems\/minimum-incompatibility","1266":"https:\/\/leetcode.com\/problems\/invalid-tweets","1267":"https:\/\/leetcode.com\/problems\/count-the-number-of-consistent-strings","1268":"https:\/\/leetcode.com\/problems\/sum-of-absolute-differences-in-a-sorted-array","1269":"https:\/\/leetcode.com\/problems\/stone-game-vi","1270":"https:\/\/leetcode.com\/problems\/delivering-boxes-from-storage-to-ports","1271":"https:\/\/leetcode.com\/problems\/count-of-matches-in-tournament","1272":"https:\/\/leetcode.com\/problems\/partitioning-into-minimum-number-of-deci-binary-numbers","1273":"https:\/\/leetcode.com\/problems\/stone-game-vii","1274":"https:\/\/leetcode.com\/problems\/maximum-height-by-stacking-cuboids","1275":"https:\/\/leetcode.com\/problems\/daily-leads-and-partners","1276":"https:\/\/leetcode.com\/problems\/reformat-phone-number","1277":"https:\/\/leetcode.com\/problems\/maximum-erasure-value","1278":"https:\/\/leetcode.com\/problems\/jump-game-vi","1279":"https:\/\/leetcode.com\/problems\/number-of-students-unable-to-eat-lunch","1280":"https:\/\/leetcode.com\/problems\/average-waiting-time","1281":"https:\/\/leetcode.com\/problems\/maximum-binary-string-after-change","1282":"https:\/\/leetcode.com\/problems\/minimum-adjacent-swaps-for-k-consecutive-ones","1283":"https:\/\/leetcode.com\/problems\/determine-if-string-halves-are-alike","1284":"https:\/\/leetcode.com\/problems\/maximum-number-of-eaten-apples","1285":"https:\/\/leetcode.com\/problems\/where-will-the-ball-fall","1286":"https:\/\/leetcode.com\/problems\/maximum-xor-with-an-element-from-array","1287":"https:\/\/leetcode.com\/problems\/maximum-units-on-a-truck","1288":"https:\/\/leetcode.com\/problems\/count-good-meals","1289":"https:\/\/leetcode.com\/problems\/ways-to-split-array-into-three-subarrays","1290":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-a-subsequence","1291":"https:\/\/leetcode.com\/problems\/calculate-money-in-leetcode-bank","1292":"https:\/\/leetcode.com\/problems\/maximum-score-from-removing-substrings","1293":"https:\/\/leetcode.com\/problems\/construct-the-lexicographically-largest-valid-sequence","1294":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reconstruct-a-tree","1295":"https:\/\/leetcode.com\/problems\/swapping-nodes-in-a-linked-list","1296":"https:\/\/leetcode.com\/problems\/minimize-hamming-distance-after-swap-operations","1297":"https:\/\/leetcode.com\/problems\/find-minimum-time-to-finish-all-jobs","1298":"https:\/\/leetcode.com\/problems\/number-of-rectangles-that-can-form-the-largest-square","1299":"https:\/\/leetcode.com\/problems\/tuple-with-same-product","1300":"https:\/\/leetcode.com\/problems\/largest-submatrix-with-rearrangements","1301":"https:\/\/leetcode.com\/problems\/cat-and-mouse-ii","1302":"https:\/\/leetcode.com\/problems\/find-followers-count","1303":"https:\/\/leetcode.com\/problems\/the-number-of-employees-which-report-to-each-employee","1304":"https:\/\/leetcode.com\/problems\/find-the-highest-altitude","1305":"https:\/\/leetcode.com\/problems\/minimum-number-of-people-to-teach","1306":"https:\/\/leetcode.com\/problems\/decode-xored-permutation","1307":"https:\/\/leetcode.com\/problems\/count-ways-to-make-array-with-product","1308":"https:\/\/leetcode.com\/problems\/latest-time-by-replacing-hidden-digits","1309":"https:\/\/leetcode.com\/problems\/change-minimum-characters-to-satisfy-one-of-three-conditions","1310":"https:\/\/leetcode.com\/problems\/find-kth-largest-xor-coordinate-value","1311":"https:\/\/leetcode.com\/problems\/building-boxes","1312":"https:\/\/leetcode.com\/problems\/find-total-time-spent-by-each-employee","1313":"https:\/\/leetcode.com\/problems\/maximum-number-of-balls-in-a-box","1314":"https:\/\/leetcode.com\/problems\/restore-the-array-from-adjacent-pairs","1315":"https:\/\/leetcode.com\/problems\/can-you-eat-your-favorite-candy-on-your-favorite-day","1316":"https:\/\/leetcode.com\/problems\/palindrome-partitioning-iv","1317":"https:\/\/leetcode.com\/problems\/sum-of-unique-elements","1318":"https:\/\/leetcode.com\/problems\/maximum-absolute-sum-of-any-subarray","1319":"https:\/\/leetcode.com\/problems\/minimum-length-of-string-after-deleting-similar-ends","1320":"https:\/\/leetcode.com\/problems\/check-if-array-is-sorted-and-rotated","1321":"https:\/\/leetcode.com\/problems\/maximum-score-from-removing-stones","1322":"https:\/\/leetcode.com\/problems\/largest-merge-of-two-strings","1323":"https:\/\/leetcode.com\/problems\/closest-subsequence-sum","1324":"https:\/\/leetcode.com\/problems\/recyclable-and-low-fat-products","1325":"https:\/\/leetcode.com\/problems\/minimum-changes-to-make-alternating-binary-string","1326":"https:\/\/leetcode.com\/problems\/count-number-of-homogenous-substrings","1327":"https:\/\/leetcode.com\/problems\/minimum-degree-of-a-connected-trio-in-a-graph","1328":"https:\/\/leetcode.com\/problems\/longest-nice-substring","1329":"https:\/\/leetcode.com\/problems\/form-array-by-concatenating-subarrays-of-another-array","1330":"https:\/\/leetcode.com\/problems\/map-of-highest-peak","1331":"https:\/\/leetcode.com\/problems\/tree-of-coprimes","1332":"https:\/\/leetcode.com\/problems\/merge-strings-alternately","1333":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-move-all-balls-to-each-box","1334":"https:\/\/leetcode.com\/problems\/maximum-score-from-performing-multiplication-operations","1335":"https:\/\/leetcode.com\/problems\/maximize-palindrome-length-from-subsequences","1336":"https:\/\/leetcode.com\/problems\/count-items-matching-a-rule","1337":"https:\/\/leetcode.com\/problems\/closest-dessert-cost","1338":"https:\/\/leetcode.com\/problems\/equal-sum-arrays-with-minimum-number-of-operations","1339":"https:\/\/leetcode.com\/problems\/car-fleet-ii","1340":"https:\/\/leetcode.com\/problems\/find-nearest-point-that-has-the-same-x-or-y-coordinate","1341":"https:\/\/leetcode.com\/problems\/check-if-number-is-a-sum-of-powers-of-three","1342":"https:\/\/leetcode.com\/problems\/count-pairs-of-nodes","1343":"https:\/\/leetcode.com\/problems\/minimum-elements-to-add-to-form-a-given-sum","1344":"https:\/\/leetcode.com\/problems\/number-of-restricted-paths-from-first-to-last-node","1345":"https:\/\/leetcode.com\/problems\/make-the-xor-of-all-segments-equal-to-zero","1346":"https:\/\/leetcode.com\/problems\/primary-department-for-each-employee","1347":"https:\/\/leetcode.com\/problems\/check-if-one-string-swap-can-make-strings-equal","1348":"https:\/\/leetcode.com\/problems\/find-center-of-star-graph","1349":"https:\/\/leetcode.com\/problems\/maximum-average-pass-ratio","1350":"https:\/\/leetcode.com\/problems\/maximum-score-of-a-good-subarray","1351":"https:\/\/leetcode.com\/problems\/rearrange-products-table","1352":"https:\/\/leetcode.com\/problems\/second-largest-digit-in-a-string","1353":"https:\/\/leetcode.com\/problems\/design-authentication-manager","1354":"https:\/\/leetcode.com\/problems\/maximum-number-of-consecutive-values-you-can-make","1355":"https:\/\/leetcode.com\/problems\/maximize-score-after-n-operations","1356":"https:\/\/leetcode.com\/problems\/maximum-ascending-subarray-sum","1357":"https:\/\/leetcode.com\/problems\/maximum-value-at-a-given-index-in-a-bounded-array","1358":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-reinitialize-a-permutation","1359":"https:\/\/leetcode.com\/problems\/evaluate-the-bracket-pairs-of-a-string","1360":"https:\/\/leetcode.com\/problems\/maximize-number-of-nice-divisors","1361":"https:\/\/leetcode.com\/problems\/determine-color-of-a-chessboard-square","1362":"https:\/\/leetcode.com\/problems\/sentence-similarity-iii","1363":"https:\/\/leetcode.com\/problems\/count-nice-pairs-in-an-array","1364":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-getting-fresh-donuts","1365":"https:\/\/leetcode.com\/problems\/truncate-sentence","1366":"https:\/\/leetcode.com\/problems\/finding-the-users-active-minutes","1367":"https:\/\/leetcode.com\/problems\/minimum-absolute-sum-difference","1368":"https:\/\/leetcode.com\/problems\/number-of-different-subsequences-gcds","1369":"https:\/\/leetcode.com\/problems\/sign-of-the-product-of-an-array","1370":"https:\/\/leetcode.com\/problems\/find-the-winner-of-the-circular-game","1371":"https:\/\/leetcode.com\/problems\/minimum-sideway-jumps","1372":"https:\/\/leetcode.com\/problems\/finding-mk-average","1373":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-increasing","1374":"https:\/\/leetcode.com\/problems\/queries-on-number-of-points-inside-a-circle","1375":"https:\/\/leetcode.com\/problems\/maximum-xor-for-each-query","1376":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-string-sorted","1377":"https:\/\/leetcode.com\/problems\/check-if-the-sentence-is-pangram","1378":"https:\/\/leetcode.com\/problems\/maximum-ice-cream-bars","1379":"https:\/\/leetcode.com\/problems\/single-threaded-cpu","1380":"https:\/\/leetcode.com\/problems\/find-xor-sum-of-all-pairs-bitwise-and","1381":"https:\/\/leetcode.com\/problems\/sum-of-digits-in-base-k","1382":"https:\/\/leetcode.com\/problems\/frequency-of-the-most-frequent-element","1383":"https:\/\/leetcode.com\/problems\/longest-substring-of-all-vowels-in-order","1384":"https:\/\/leetcode.com\/problems\/maximum-building-height","1385":"https:\/\/leetcode.com\/problems\/replace-all-digits-with-characters","1386":"https:\/\/leetcode.com\/problems\/seat-reservation-manager","1387":"https:\/\/leetcode.com\/problems\/maximum-element-after-decreasing-and-rearranging","1388":"https:\/\/leetcode.com\/problems\/closest-room","1389":"https:\/\/leetcode.com\/problems\/minimum-distance-to-the-target-element","1390":"https:\/\/leetcode.com\/problems\/splitting-a-string-into-descending-consecutive-values","1391":"https:\/\/leetcode.com\/problems\/minimum-adjacent-swaps-to-reach-the-kth-smallest-number","1392":"https:\/\/leetcode.com\/problems\/minimum-interval-to-include-each-query","1393":"https:\/\/leetcode.com\/problems\/maximum-population-year","1394":"https:\/\/leetcode.com\/problems\/maximum-distance-between-a-pair-of-values","1395":"https:\/\/leetcode.com\/problems\/maximum-subarray-min-product","1396":"https:\/\/leetcode.com\/problems\/largest-color-value-in-a-directed-graph","1397":"https:\/\/leetcode.com\/problems\/sorting-the-sentence","1398":"https:\/\/leetcode.com\/problems\/incremental-memory-leak","1399":"https:\/\/leetcode.com\/problems\/sum-of-floored-pairs","1400":"https:\/\/leetcode.com\/problems\/sum-of-all-subset-xor-totals","1401":"https:\/\/leetcode.com\/problems\/minimum-number-of-swaps-to-make-the-binary-string-alternating","1402":"https:\/\/leetcode.com\/problems\/finding-pairs-with-a-certain-sum","1403":"https:\/\/leetcode.com\/problems\/number-of-ways-to-rearrange-sticks-with-k-sticks-visible","1404":"https:\/\/leetcode.com\/problems\/longer-contiguous-segments-of-ones-than-zeros","1405":"https:\/\/leetcode.com\/problems\/minimum-speed-to-arrive-on-time","1406":"https:\/\/leetcode.com\/problems\/jump-game-vii","1407":"https:\/\/leetcode.com\/problems\/stone-game-viii","1408":"https:\/\/leetcode.com\/problems\/calculate-special-bonus","1409":"https:\/\/leetcode.com\/problems\/substrings-of-size-three-with-distinct-characters","1410":"https:\/\/leetcode.com\/problems\/minimize-maximum-pair-sum-in-array","1411":"https:\/\/leetcode.com\/problems\/get-biggest-three-rhombus-sums-in-a-grid","1412":"https:\/\/leetcode.com\/problems\/minimum-xor-sum-of-two-arrays","1413":"https:\/\/leetcode.com\/problems\/check-if-word-equals-summation-of-two-words","1414":"https:\/\/leetcode.com\/problems\/maximum-value-after-insertion","1415":"https:\/\/leetcode.com\/problems\/process-tasks-using-servers","1416":"https:\/\/leetcode.com\/problems\/minimum-skips-to-arrive-at-meeting-on-time","1417":"https:\/\/leetcode.com\/problems\/egg-drop-with-2-eggs-and-n-floors","1418":"https:\/\/leetcode.com\/problems\/determine-whether-matrix-can-be-obtained-by-rotation","1419":"https:\/\/leetcode.com\/problems\/reduction-operations-to-make-the-array-elements-equal","1420":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-make-the-binary-string-alternating","1421":"https:\/\/leetcode.com\/problems\/minimum-space-wasted-from-packaging","1422":"https:\/\/leetcode.com\/problems\/check-if-all-the-integers-in-a-range-are-covered","1423":"https:\/\/leetcode.com\/problems\/find-the-student-that-will-replace-the-chalk","1424":"https:\/\/leetcode.com\/problems\/largest-magic-square","1425":"https:\/\/leetcode.com\/problems\/minimum-cost-to-change-the-final-value-of-expression","1426":"https:\/\/leetcode.com\/problems\/redistribute-characters-to-make-all-strings-equal","1427":"https:\/\/leetcode.com\/problems\/merge-triplets-to-form-target-triplet","1428":"https:\/\/leetcode.com\/problems\/the-earliest-and-latest-rounds-where-players-compete","1429":"https:\/\/leetcode.com\/problems\/find-a-peak-element-ii","1430":"https:\/\/leetcode.com\/problems\/largest-odd-number-in-string","1431":"https:\/\/leetcode.com\/problems\/the-number-of-full-rounds-you-have-played","1432":"https:\/\/leetcode.com\/problems\/count-sub-islands","1433":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-queries","1434":"https:\/\/leetcode.com\/problems\/count-salary-categories","1435":"https:\/\/leetcode.com\/problems\/remove-one-element-to-make-the-array-strictly-increasing","1436":"https:\/\/leetcode.com\/problems\/remove-all-occurrences-of-a-substring","1437":"https:\/\/leetcode.com\/problems\/maximum-alternating-subsequence-sum","1438":"https:\/\/leetcode.com\/problems\/design-movie-rental-system","1439":"https:\/\/leetcode.com\/problems\/maximum-product-difference-between-two-pairs","1440":"https:\/\/leetcode.com\/problems\/cyclically-rotating-a-grid","1441":"https:\/\/leetcode.com\/problems\/count-ways-to-build-rooms-in-an-ant-colony","1442":"https:\/\/leetcode.com\/problems\/build-array-from-permutation","1443":"https:\/\/leetcode.com\/problems\/eliminate-maximum-number-of-monsters","1444":"https:\/\/leetcode.com\/problems\/count-good-numbers","1445":"https:\/\/leetcode.com\/problems\/longest-common-subpath","1446":"https:\/\/leetcode.com\/problems\/count-square-sum-triples","1447":"https:\/\/leetcode.com\/problems\/nearest-exit-from-entrance-in-maze","1448":"https:\/\/leetcode.com\/problems\/minimum-cost-to-reach-destination-in-time","1449":"https:\/\/leetcode.com\/problems\/concatenation-of-array","1450":"https:\/\/leetcode.com\/problems\/unique-length-3-palindromic-subsequences","1451":"https:\/\/leetcode.com\/problems\/painting-a-grid-with-three-different-colors","1452":"https:\/\/leetcode.com\/problems\/confirmation-rate","1453":"https:\/\/leetcode.com\/problems\/maximum-number-of-words-you-can-type","1454":"https:\/\/leetcode.com\/problems\/add-minimum-number-of-rungs","1455":"https:\/\/leetcode.com\/problems\/maximum-number-of-points-with-cost","1456":"https:\/\/leetcode.com\/problems\/maximum-genetic-difference-query","1457":"https:\/\/leetcode.com\/problems\/check-if-all-characters-have-equal-number-of-occurrences","1458":"https:\/\/leetcode.com\/problems\/the-number-of-the-smallest-unoccupied-chair","1459":"https:\/\/leetcode.com\/problems\/describe-the-painting","1460":"https:\/\/leetcode.com\/problems\/number-of-visible-people-in-a-queue","1461":"https:\/\/leetcode.com\/problems\/sum-of-digits-of-string-after-convert","1462":"https:\/\/leetcode.com\/problems\/largest-number-after-mutating-substring","1463":"https:\/\/leetcode.com\/problems\/maximum-compatibility-score-sum","1464":"https:\/\/leetcode.com\/problems\/delete-duplicate-folders-in-system","1465":"https:\/\/leetcode.com\/problems\/minimum-garden-perimeter-to-collect-enough-apples","1466":"https:\/\/leetcode.com\/problems\/count-number-of-special-subsequences","1467":"https:\/\/leetcode.com\/problems\/delete-characters-to-make-fancy-string","1468":"https:\/\/leetcode.com\/problems\/check-if-move-is-legal","1469":"https:\/\/leetcode.com\/problems\/minimum-total-space-wasted-with-k-resizing-operations","1470":"https:\/\/leetcode.com\/problems\/maximum-product-of-the-length-of-two-palindromic-substrings","1471":"https:\/\/leetcode.com\/problems\/check-if-string-is-a-prefix-of-array","1472":"https:\/\/leetcode.com\/problems\/remove-stones-to-minimize-the-total","1473":"https:\/\/leetcode.com\/problems\/minimum-number-of-swaps-to-make-the-string-balanced","1474":"https:\/\/leetcode.com\/problems\/find-the-longest-valid-obstacle-course-at-each-position","1475":"https:\/\/leetcode.com\/problems\/employees-with-missing-information","1476":"https:\/\/leetcode.com\/problems\/number-of-strings-that-appear-as-substrings-in-word","1477":"https:\/\/leetcode.com\/problems\/array-with-elements-not-equal-to-average-of-neighbors","1478":"https:\/\/leetcode.com\/problems\/minimum-non-zero-product-of-the-array-elements","1479":"https:\/\/leetcode.com\/problems\/last-day-where-you-can-still-cross","1480":"https:\/\/leetcode.com\/problems\/find-if-path-exists-in-graph","1481":"https:\/\/leetcode.com\/problems\/minimum-time-to-type-word-using-special-typewriter","1482":"https:\/\/leetcode.com\/problems\/number-of-ways-to-arrive-at-destination","1483":"https:\/\/leetcode.com\/problems\/number-of-ways-to-separate-numbers","1484":"https:\/\/leetcode.com\/problems\/employees-whose-manager-left-the-company","1485":"https:\/\/leetcode.com\/problems\/find-greatest-common-divisor-of-array","1486":"https:\/\/leetcode.com\/problems\/find-unique-binary-string","1487":"https:\/\/leetcode.com\/problems\/minimize-the-difference-between-target-and-chosen-elements","1488":"https:\/\/leetcode.com\/problems\/find-array-given-subset-sums","1489":"https:\/\/leetcode.com\/problems\/minimum-difference-between-highest-and-lowest-of-k-scores","1490":"https:\/\/leetcode.com\/problems\/find-the-kth-largest-integer-in-the-array","1491":"https:\/\/leetcode.com\/problems\/minimum-number-of-work-sessions-to-finish-the-tasks","1492":"https:\/\/leetcode.com\/problems\/number-of-unique-good-subsequences","1493":"https:\/\/leetcode.com\/problems\/find-the-middle-index-in-array","1494":"https:\/\/leetcode.com\/problems\/find-all-groups-of-farmland","1495":"https:\/\/leetcode.com\/problems\/operations-on-tree","1496":"https:\/\/leetcode.com\/problems\/the-number-of-good-subsets","1497":"https:\/\/leetcode.com\/problems\/count-special-quadruplets","1498":"https:\/\/leetcode.com\/problems\/the-number-of-weak-characters-in-the-game","1499":"https:\/\/leetcode.com\/problems\/first-day-where-you-have-been-in-all-the-rooms","1500":"https:\/\/leetcode.com\/problems\/gcd-sort-of-an-array","1501":"https:\/\/leetcode.com\/problems\/reverse-prefix-of-word","1502":"https:\/\/leetcode.com\/problems\/maximum-product-of-the-length-of-two-palindromic-subsequences","1503":"https:\/\/leetcode.com\/problems\/smallest-missing-genetic-value-in-each-subtree","1504":"https:\/\/leetcode.com\/problems\/count-number-of-pairs-with-absolute-difference-k","1505":"https:\/\/leetcode.com\/problems\/find-original-array-from-doubled-array","1506":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-array-continuous","1507":"https:\/\/leetcode.com\/problems\/final-value-of-variable-after-performing-operations","1508":"https:\/\/leetcode.com\/problems\/sum-of-beauty-in-the-array","1509":"https:\/\/leetcode.com\/problems\/detect-squares","1510":"https:\/\/leetcode.com\/problems\/longest-subsequence-repeated-k-times","1511":"https:\/\/leetcode.com\/problems\/maximum-difference-between-increasing-elements","1512":"https:\/\/leetcode.com\/problems\/grid-game","1513":"https:\/\/leetcode.com\/problems\/check-if-word-can-be-placed-in-crossword","1514":"https:\/\/leetcode.com\/problems\/the-score-of-students-solving-math-expression","1515":"https:\/\/leetcode.com\/problems\/number-of-pairs-of-strings-with-concatenation-equal-to-target","1516":"https:\/\/leetcode.com\/problems\/maximize-the-confusion-of-an-exam","1517":"https:\/\/leetcode.com\/problems\/maximum-number-of-ways-to-partition-an-array","1518":"https:\/\/leetcode.com\/problems\/minimum-moves-to-convert-string","1519":"https:\/\/leetcode.com\/problems\/find-missing-observations","1520":"https:\/\/leetcode.com\/problems\/stone-game-ix","1521":"https:\/\/leetcode.com\/problems\/smallest-k-length-subsequence-with-occurrences-of-a-letter","1522":"https:\/\/leetcode.com\/problems\/two-out-of-three","1523":"https:\/\/leetcode.com\/problems\/stock-price-fluctuation","1524":"https:\/\/leetcode.com\/problems\/minimum-number-of-moves-to-seat-everyone","1525":"https:\/\/leetcode.com\/problems\/remove-colored-pieces-if-both-neighbors-are-the-same-color","1526":"https:\/\/leetcode.com\/problems\/the-time-when-the-network-becomes-idle","1527":"https:\/\/leetcode.com\/problems\/kth-smallest-product-of-two-sorted-arrays","1528":"https:\/\/leetcode.com\/problems\/check-if-numbers-are-ascending-in-a-sentence","1529":"https:\/\/leetcode.com\/problems\/simple-bank-system","1530":"https:\/\/leetcode.com\/problems\/count-number-of-maximum-bitwise-or-subsets","1531":"https:\/\/leetcode.com\/problems\/second-minimum-time-to-reach-destination","1532":"https:\/\/leetcode.com\/problems\/number-of-valid-words-in-a-sentence","1533":"https:\/\/leetcode.com\/problems\/next-greater-numerically-balanced-number","1534":"https:\/\/leetcode.com\/problems\/count-nodes-with-the-highest-score","1535":"https:\/\/leetcode.com\/problems\/parallel-courses-iii","1536":"https:\/\/leetcode.com\/problems\/kth-distinct-string-in-an-array","1537":"https:\/\/leetcode.com\/problems\/two-best-non-overlapping-events","1538":"https:\/\/leetcode.com\/problems\/plates-between-candles","1539":"https:\/\/leetcode.com\/problems\/number-of-valid-move-combinations-on-chessboard","1540":"https:\/\/leetcode.com\/problems\/smallest-index-with-equal-value","1541":"https:\/\/leetcode.com\/problems\/find-the-minimum-and-maximum-number-of-nodes-between-critical-points","1542":"https:\/\/leetcode.com\/problems\/minimum-operations-to-convert-number","1543":"https:\/\/leetcode.com\/problems\/check-if-an-original-string-exists-given-two-encoded-strings","1544":"https:\/\/leetcode.com\/problems\/count-vowel-substrings-of-a-string","1545":"https:\/\/leetcode.com\/problems\/vowels-of-all-substrings","1546":"https:\/\/leetcode.com\/problems\/minimized-maximum-of-products-distributed-to-any-store","1547":"https:\/\/leetcode.com\/problems\/maximum-path-quality-of-a-graph","1548":"https:\/\/leetcode.com\/problems\/check-whether-two-strings-are-almost-equivalent","1549":"https:\/\/leetcode.com\/problems\/walking-robot-simulation-ii","1550":"https:\/\/leetcode.com\/problems\/most-beautiful-item-for-each-query","1551":"https:\/\/leetcode.com\/problems\/maximum-number-of-tasks-you-can-assign","1552":"https:\/\/leetcode.com\/problems\/time-needed-to-buy-tickets","1553":"https:\/\/leetcode.com\/problems\/reverse-nodes-in-even-length-groups","1554":"https:\/\/leetcode.com\/problems\/decode-the-slanted-ciphertext","1555":"https:\/\/leetcode.com\/problems\/process-restricted-friend-requests","1556":"https:\/\/leetcode.com\/problems\/two-furthest-houses-with-different-colors","1557":"https:\/\/leetcode.com\/problems\/watering-plants","1558":"https:\/\/leetcode.com\/problems\/range-frequency-queries","1559":"https:\/\/leetcode.com\/problems\/sum-of-k-mirror-numbers","1560":"https:\/\/leetcode.com\/problems\/count-common-words-with-one-occurrence","1561":"https:\/\/leetcode.com\/problems\/minimum-number-of-food-buckets-to-feed-the-hamsters","1562":"https:\/\/leetcode.com\/problems\/minimum-cost-homecoming-of-a-robot-in-a-grid","1563":"https:\/\/leetcode.com\/problems\/count-fertile-pyramids-in-a-land","1564":"https:\/\/leetcode.com\/problems\/find-target-indices-after-sorting-array","1565":"https:\/\/leetcode.com\/problems\/removing-minimum-and-maximum-from-array","1566":"https:\/\/leetcode.com\/problems\/find-all-people-with-secret","1567":"https:\/\/leetcode.com\/problems\/finding-3-digit-even-numbers","1568":"https:\/\/leetcode.com\/problems\/delete-the-middle-node-of-a-linked-list","1569":"https:\/\/leetcode.com\/problems\/step-by-step-directions-from-a-binary-tree-node-to-another","1570":"https:\/\/leetcode.com\/problems\/valid-arrangement-of-pairs","1571":"https:\/\/leetcode.com\/problems\/find-subsequence-of-length-k-with-the-largest-sum","1572":"https:\/\/leetcode.com\/problems\/find-good-days-to-rob-the-bank","1573":"https:\/\/leetcode.com\/problems\/detonate-the-maximum-bombs","1574":"https:\/\/leetcode.com\/problems\/sequentially-ordinal-rank-tracker","1575":"https:\/\/leetcode.com\/problems\/rings-and-rods","1576":"https:\/\/leetcode.com\/problems\/sum-of-subarray-ranges","1577":"https:\/\/leetcode.com\/problems\/watering-plants-ii","1578":"https:\/\/leetcode.com\/problems\/maximum-fruits-harvested-after-at-most-k-steps","1579":"https:\/\/leetcode.com\/problems\/find-first-palindromic-string-in-the-array","1580":"https:\/\/leetcode.com\/problems\/adding-spaces-to-a-string","1581":"https:\/\/leetcode.com\/problems\/number-of-smooth-descent-periods-of-a-stock","1582":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-k-increasing","1583":"https:\/\/leetcode.com\/problems\/maximum-number-of-words-found-in-sentences","1584":"https:\/\/leetcode.com\/problems\/find-all-possible-recipes-from-given-supplies","1585":"https:\/\/leetcode.com\/problems\/check-if-a-parentheses-string-can-be-valid","1586":"https:\/\/leetcode.com\/problems\/abbreviating-the-product-of-a-range","1587":"https:\/\/leetcode.com\/problems\/a-number-after-a-double-reversal","1588":"https:\/\/leetcode.com\/problems\/execution-of-all-suffix-instructions-staying-in-a-grid","1589":"https:\/\/leetcode.com\/problems\/intervals-between-identical-elements","1590":"https:\/\/leetcode.com\/problems\/recover-the-original-array","1591":"https:\/\/leetcode.com\/problems\/check-if-all-as-appears-before-all-bs","1592":"https:\/\/leetcode.com\/problems\/number-of-laser-beams-in-a-bank","1593":"https:\/\/leetcode.com\/problems\/destroying-asteroids","1594":"https:\/\/leetcode.com\/problems\/maximum-employees-to-be-invited-to-a-meeting","1595":"https:\/\/leetcode.com\/problems\/capitalize-the-title","1596":"https:\/\/leetcode.com\/problems\/maximum-twin-sum-of-a-linked-list","1597":"https:\/\/leetcode.com\/problems\/longest-palindrome-by-concatenating-two-letter-words","1598":"https:\/\/leetcode.com\/problems\/stamping-the-grid","1599":"https:\/\/leetcode.com\/problems\/check-if-every-row-and-column-contains-all-numbers","1600":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-group-all-1s-together-ii","1601":"https:\/\/leetcode.com\/problems\/count-words-obtained-after-adding-a-letter","1602":"https:\/\/leetcode.com\/problems\/divide-a-string-into-groups-of-size-k","1603":"https:\/\/leetcode.com\/problems\/minimum-moves-to-reach-target-score","1604":"https:\/\/leetcode.com\/problems\/maximum-running-time-of-n-computers","1605":"https:\/\/leetcode.com\/problems\/minimum-cost-of-buying-candies-with-discount","1606":"https:\/\/leetcode.com\/problems\/count-the-hidden-sequences","1607":"https:\/\/leetcode.com\/problems\/k-highest-ranked-items-within-a-price-range","1608":"https:\/\/leetcode.com\/problems\/number-of-ways-to-divide-a-long-corridor","1609":"https:\/\/leetcode.com\/problems\/count-elements-with-strictly-smaller-and-greater-elements","1610":"https:\/\/leetcode.com\/problems\/rearrange-array-elements-by-sign","1611":"https:\/\/leetcode.com\/problems\/find-all-lonely-numbers-in-the-array","1612":"https:\/\/leetcode.com\/problems\/keep-multiplying-found-values-by-two","1613":"https:\/\/leetcode.com\/problems\/all-divisions-with-the-highest-score-of-a-binary-array","1614":"https:\/\/leetcode.com\/problems\/find-substring-with-given-hash-value","1615":"https:\/\/leetcode.com\/problems\/groups-of-strings","1616":"https:\/\/leetcode.com\/problems\/minimum-sum-of-four-digit-number-after-splitting-digits","1617":"https:\/\/leetcode.com\/problems\/partition-array-according-to-given-pivot","1618":"https:\/\/leetcode.com\/problems\/minimum-cost-to-set-cooking-time","1619":"https:\/\/leetcode.com\/problems\/minimum-difference-in-sums-after-removal-of-elements","1620":"https:\/\/leetcode.com\/problems\/sort-even-and-odd-indices-independently","1621":"https:\/\/leetcode.com\/problems\/smallest-value-of-the-rearranged-number","1622":"https:\/\/leetcode.com\/problems\/design-bitset","1623":"https:\/\/leetcode.com\/problems\/minimum-time-to-remove-all-cars-containing-illegal-goods","1624":"https:\/\/leetcode.com\/problems\/count-operations-to-obtain-zero","1625":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-alternating","1626":"https:\/\/leetcode.com\/problems\/removing-minimum-number-of-magic-beans","1627":"https:\/\/leetcode.com\/problems\/count-equal-and-divisible-pairs-in-an-array","1628":"https:\/\/leetcode.com\/problems\/find-three-consecutive-integers-that-sum-to-a-given-number","1629":"https:\/\/leetcode.com\/problems\/maximum-split-of-positive-even-integers","1630":"https:\/\/leetcode.com\/problems\/count-good-triplets-in-an-array","1631":"https:\/\/leetcode.com\/problems\/count-integers-with-even-digit-sum","1632":"https:\/\/leetcode.com\/problems\/merge-nodes-in-between-zeros","1633":"https:\/\/leetcode.com\/problems\/construct-string-with-repeat-limit","1634":"https:\/\/leetcode.com\/problems\/count-array-pairs-divisible-by-k","1635":"https:\/\/leetcode.com\/problems\/counting-words-with-a-given-prefix","1636":"https:\/\/leetcode.com\/problems\/minimum-number-of-steps-to-make-two-strings-anagram-ii","1637":"https:\/\/leetcode.com\/problems\/minimum-time-to-complete-trips","1638":"https:\/\/leetcode.com\/problems\/minimum-time-to-finish-the-race","1639":"https:\/\/leetcode.com\/problems\/most-frequent-number-following-key-in-an-array","1640":"https:\/\/leetcode.com\/problems\/sort-the-jumbled-numbers","1641":"https:\/\/leetcode.com\/problems\/all-ancestors-of-a-node-in-a-directed-acyclic-graph","1642":"https:\/\/leetcode.com\/problems\/minimum-number-of-moves-to-make-palindrome","1643":"https:\/\/leetcode.com\/problems\/cells-in-a-range-on-an-excel-sheet","1644":"https:\/\/leetcode.com\/problems\/create-binary-tree-from-descriptions","1645":"https:\/\/leetcode.com\/problems\/replace-non-coprime-numbers-in-array","1646":"https:\/\/leetcode.com\/problems\/find-all-k-distant-indices-in-an-array","1647":"https:\/\/leetcode.com\/problems\/count-artifacts-that-can-be-extracted","1648":"https:\/\/leetcode.com\/problems\/maximize-the-topmost-element-after-k-moves","1649":"https:\/\/leetcode.com\/problems\/minimum-weighted-subgraph-with-the-required-paths","1650":"https:\/\/leetcode.com\/problems\/divide-array-into-equal-pairs","1651":"https:\/\/leetcode.com\/problems\/maximize-number-of-subsequences-in-a-string","1652":"https:\/\/leetcode.com\/problems\/minimum-operations-to-halve-array-sum","1653":"https:\/\/leetcode.com\/problems\/minimum-white-tiles-after-covering-with-carpets","1654":"https:\/\/leetcode.com\/problems\/count-hills-and-valleys-in-an-array","1655":"https:\/\/leetcode.com\/problems\/count-collisions-on-a-road","1656":"https:\/\/leetcode.com\/problems\/maximum-points-in-an-archery-competition","1657":"https:\/\/leetcode.com\/problems\/longest-substring-of-one-repeating-character","1658":"https:\/\/leetcode.com\/problems\/find-the-difference-of-two-arrays","1659":"https:\/\/leetcode.com\/problems\/find-palindrome-with-fixed-length","1660":"https:\/\/leetcode.com\/problems\/maximum-value-of-k-coins-from-piles","1661":"https:\/\/leetcode.com\/problems\/minimum-bit-flips-to-convert-number","1662":"https:\/\/leetcode.com\/problems\/number-of-ways-to-select-buildings","1663":"https:\/\/leetcode.com\/problems\/sum-of-scores-of-built-strings","1664":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-convert-time","1665":"https:\/\/leetcode.com\/problems\/find-players-with-zero-or-one-losses","1666":"https:\/\/leetcode.com\/problems\/maximum-candies-allocated-to-k-children","1667":"https:\/\/leetcode.com\/problems\/encrypt-and-decrypt-strings","1668":"https:\/\/leetcode.com\/problems\/largest-number-after-digit-swaps-by-parity","1669":"https:\/\/leetcode.com\/problems\/minimize-result-by-adding-parentheses-to-expression","1670":"https:\/\/leetcode.com\/problems\/maximum-product-after-k-increments","1671":"https:\/\/leetcode.com\/problems\/maximum-total-beauty-of-the-gardens","1672":"https:\/\/leetcode.com\/problems\/add-two-integers","1673":"https:\/\/leetcode.com\/problems\/root-equals-sum-of-children","1674":"https:\/\/leetcode.com\/problems\/find-closest-number-to-zero","1675":"https:\/\/leetcode.com\/problems\/number-of-ways-to-buy-pens-and-pencils","1676":"https:\/\/leetcode.com\/problems\/design-an-atm-machine","1677":"https:\/\/leetcode.com\/problems\/maximum-score-of-a-node-sequence","1678":"https:\/\/leetcode.com\/problems\/calculate-digit-sum-of-a-string","1679":"https:\/\/leetcode.com\/problems\/minimum-rounds-to-complete-all-tasks","1680":"https:\/\/leetcode.com\/problems\/maximum-trailing-zeros-in-a-cornered-path","1681":"https:\/\/leetcode.com\/problems\/longest-path-with-different-adjacent-characters","1682":"https:\/\/leetcode.com\/problems\/intersection-of-multiple-arrays","1683":"https:\/\/leetcode.com\/problems\/count-lattice-points-inside-a-circle","1684":"https:\/\/leetcode.com\/problems\/count-number-of-rectangles-containing-each-point","1685":"https:\/\/leetcode.com\/problems\/number-of-flowers-in-full-bloom","1686":"https:\/\/leetcode.com\/problems\/count-prefixes-of-a-given-string","1687":"https:\/\/leetcode.com\/problems\/minimum-average-difference","1688":"https:\/\/leetcode.com\/problems\/count-unguarded-cells-in-the-grid","1689":"https:\/\/leetcode.com\/problems\/escape-the-spreading-fire","1690":"https:\/\/leetcode.com\/problems\/remove-digit-from-number-to-maximize-result","1691":"https:\/\/leetcode.com\/problems\/minimum-consecutive-cards-to-pick-up","1692":"https:\/\/leetcode.com\/problems\/k-divisible-elements-subarrays","1693":"https:\/\/leetcode.com\/problems\/total-appeal-of-a-string","1694":"https:\/\/leetcode.com\/problems\/largest-3-same-digit-number-in-string","1695":"https:\/\/leetcode.com\/problems\/count-number-of-texts","1696":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-parentheses-string-path","1697":"https:\/\/leetcode.com\/problems\/find-the-k-beauty-of-a-number","1698":"https:\/\/leetcode.com\/problems\/maximum-white-tiles-covered-by-a-carpet","1699":"https:\/\/leetcode.com\/problems\/substring-with-largest-variance","1700":"https:\/\/leetcode.com\/problems\/find-resultant-array-after-removing-anagrams","1701":"https:\/\/leetcode.com\/problems\/maximum-consecutive-floors-without-special-floors","1702":"https:\/\/leetcode.com\/problems\/largest-combination-with-bitwise-and-greater-than-zero","1703":"https:\/\/leetcode.com\/problems\/count-integers-in-intervals","1704":"https:\/\/leetcode.com\/problems\/maximum-bags-with-full-capacity-of-rocks","1705":"https:\/\/leetcode.com\/problems\/minimum-lines-to-represent-a-line-chart","1706":"https:\/\/leetcode.com\/problems\/sum-of-total-strength-of-wizards","1707":"https:\/\/leetcode.com\/problems\/check-if-number-has-equal-digit-count-and-digit-value","1708":"https:\/\/leetcode.com\/problems\/sender-with-largest-word-count","1709":"https:\/\/leetcode.com\/problems\/maximum-total-importance-of-roads","1710":"https:\/\/leetcode.com\/problems\/booking-concert-tickets-in-groups","1711":"https:\/\/leetcode.com\/problems\/rearrange-characters-to-make-target-string","1712":"https:\/\/leetcode.com\/problems\/apply-discount-to-prices","1713":"https:\/\/leetcode.com\/problems\/steps-to-make-array-non-decreasing","1714":"https:\/\/leetcode.com\/problems\/minimum-obstacle-removal-to-reach-corner","1715":"https:\/\/leetcode.com\/problems\/partition-array-such-that-maximum-difference-is-k","1716":"https:\/\/leetcode.com\/problems\/replace-elements-in-an-array","1717":"https:\/\/leetcode.com\/problems\/design-a-text-editor","1718":"https:\/\/leetcode.com\/problems\/strong-password-checker-ii","1719":"https:\/\/leetcode.com\/problems\/successful-pairs-of-spells-and-potions","1720":"https:\/\/leetcode.com\/problems\/count-subarrays-with-score-less-than-k","1721":"https:\/\/leetcode.com\/problems\/calculate-amount-paid-in-taxes","1722":"https:\/\/leetcode.com\/problems\/minimum-path-cost-in-a-grid","1723":"https:\/\/leetcode.com\/problems\/fair-distribution-of-cookies","1724":"https:\/\/leetcode.com\/problems\/naming-a-company","1725":"https:\/\/leetcode.com\/problems\/sum-of-numbers-with-units-digit-k","1726":"https:\/\/leetcode.com\/problems\/longest-binary-subsequence-less-than-or-equal-to-k","1727":"https:\/\/leetcode.com\/problems\/selling-pieces-of-wood","1728":"https:\/\/leetcode.com\/problems\/count-asterisks","1729":"https:\/\/leetcode.com\/problems\/maximum-xor-after-operations","1730":"https:\/\/leetcode.com\/problems\/number-of-distinct-roll-sequences","1731":"https:\/\/leetcode.com\/problems\/check-if-matrix-is-x-matrix","1732":"https:\/\/leetcode.com\/problems\/count-number-of-ways-to-place-houses","1733":"https:\/\/leetcode.com\/problems\/maximum-score-of-spliced-array","1734":"https:\/\/leetcode.com\/problems\/minimum-score-after-removals-on-a-tree","1735":"https:\/\/leetcode.com\/problems\/decode-the-message","1736":"https:\/\/leetcode.com\/problems\/number-of-people-aware-of-a-secret","1737":"https:\/\/leetcode.com\/problems\/number-of-increasing-paths-in-a-grid","1738":"https:\/\/leetcode.com\/problems\/evaluate-boolean-binary-tree","1739":"https:\/\/leetcode.com\/problems\/the-latest-time-to-catch-a-bus","1740":"https:\/\/leetcode.com\/problems\/minimum-sum-of-squared-difference","1741":"https:\/\/leetcode.com\/problems\/subarray-with-elements-greater-than-varying-threshold","1742":"https:\/\/leetcode.com\/problems\/minimum-amount-of-time-to-fill-cups","1743":"https:\/\/leetcode.com\/problems\/smallest-number-in-infinite-set","1744":"https:\/\/leetcode.com\/problems\/move-pieces-to-obtain-a-string","1745":"https:\/\/leetcode.com\/problems\/count-the-number-of-ideal-arrays","1746":"https:\/\/leetcode.com\/problems\/maximum-number-of-pairs-in-array","1747":"https:\/\/leetcode.com\/problems\/max-sum-of-a-pair-with-equal-sum-of-digits","1748":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-array-divisible","1749":"https:\/\/leetcode.com\/problems\/best-poker-hand","1750":"https:\/\/leetcode.com\/problems\/number-of-zero-filled-subarrays","1751":"https:\/\/leetcode.com\/problems\/design-a-number-container-system","1752":"https:\/\/leetcode.com\/problems\/shortest-impossible-sequence-of-rolls","1753":"https:\/\/leetcode.com\/problems\/equal-row-and-column-pairs","1754":"https:\/\/leetcode.com\/problems\/design-a-food-rating-system","1755":"https:\/\/leetcode.com\/problems\/number-of-excellent-pairs","1756":"https:\/\/leetcode.com\/problems\/number-of-unique-subjects-taught-by-each-teacher","1757":"https:\/\/leetcode.com\/problems\/make-array-zero-by-subtracting-equal-amounts","1758":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-entering-a-competition","1759":"https:\/\/leetcode.com\/problems\/find-closest-node-to-given-two-nodes","1760":"https:\/\/leetcode.com\/problems\/longest-cycle-in-a-graph","1761":"https:\/\/leetcode.com\/problems\/merge-similar-items","1762":"https:\/\/leetcode.com\/problems\/count-number-of-bad-pairs","1763":"https:\/\/leetcode.com\/problems\/task-scheduler-ii","1764":"https:\/\/leetcode.com\/problems\/number-of-arithmetic-triplets","1765":"https:\/\/leetcode.com\/problems\/reachable-nodes-with-restrictions","1766":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-partition-for-the-array","1767":"https:\/\/leetcode.com\/problems\/longest-ideal-subsequence","1768":"https:\/\/leetcode.com\/problems\/largest-local-values-in-a-matrix","1769":"https:\/\/leetcode.com\/problems\/node-with-highest-edge-score","1770":"https:\/\/leetcode.com\/problems\/construct-smallest-number-from-di-string","1771":"https:\/\/leetcode.com\/problems\/count-special-integers","1772":"https:\/\/leetcode.com\/problems\/minimum-recolors-to-get-k-consecutive-black-blocks","1773":"https:\/\/leetcode.com\/problems\/time-needed-to-rearrange-a-binary-string","1774":"https:\/\/leetcode.com\/problems\/shifting-letters-ii","1775":"https:\/\/leetcode.com\/problems\/minimum-hours-of-training-to-win-a-competition","1776":"https:\/\/leetcode.com\/problems\/largest-palindromic-number","1777":"https:\/\/leetcode.com\/problems\/amount-of-time-for-binary-tree-to-be-infected","1778":"https:\/\/leetcode.com\/problems\/find-the-k-sum-of-an-array","1779":"https:\/\/leetcode.com\/problems\/longest-subsequence-with-limited-sum","1780":"https:\/\/leetcode.com\/problems\/removing-stars-from-a-string","1781":"https:\/\/leetcode.com\/problems\/minimum-amount-of-time-to-collect-garbage","1782":"https:\/\/leetcode.com\/problems\/build-a-matrix-with-conditions","1783":"https:\/\/leetcode.com\/problems\/find-subarrays-with-equal-sum","1784":"https:\/\/leetcode.com\/problems\/strictly-palindromic-number","1785":"https:\/\/leetcode.com\/problems\/maximum-rows-covered-by-columns","1786":"https:\/\/leetcode.com\/problems\/maximum-number-of-robots-within-budget","1787":"https:\/\/leetcode.com\/problems\/check-distances-between-same-letters","1788":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reach-a-position-after-exactly-k-steps","1789":"https:\/\/leetcode.com\/problems\/meeting-rooms-iii","1790":"https:\/\/leetcode.com\/problems\/optimal-partition-of-string","1791":"https:\/\/leetcode.com\/problems\/divide-intervals-into-minimum-number-of-groups","1792":"https:\/\/leetcode.com\/problems\/longest-increasing-subsequence-ii","1793":"https:\/\/leetcode.com\/problems\/count-days-spent-together","1794":"https:\/\/leetcode.com\/problems\/maximum-matching-of-players-with-trainers","1795":"https:\/\/leetcode.com\/problems\/smallest-subarrays-with-maximum-bitwise-or","1796":"https:\/\/leetcode.com\/problems\/minimum-money-required-before-transactions","1797":"https:\/\/leetcode.com\/problems\/smallest-even-multiple","1798":"https:\/\/leetcode.com\/problems\/length-of-the-longest-alphabetical-continuous-substring","1799":"https:\/\/leetcode.com\/problems\/reverse-odd-levels-of-binary-tree","1800":"https:\/\/leetcode.com\/problems\/sum-of-prefix-scores-of-strings","1801":"https:\/\/leetcode.com\/problems\/sort-the-people","1802":"https:\/\/leetcode.com\/problems\/longest-subarray-with-maximum-bitwise-and","1803":"https:\/\/leetcode.com\/problems\/find-all-good-indices","1804":"https:\/\/leetcode.com\/problems\/number-of-good-paths","1805":"https:\/\/leetcode.com\/problems\/remove-letter-to-equalize-frequency","1806":"https:\/\/leetcode.com\/problems\/longest-uploaded-prefix","1807":"https:\/\/leetcode.com\/problems\/bitwise-xor-of-all-pairings","1808":"https:\/\/leetcode.com\/problems\/number-of-pairs-satisfying-inequality","1809":"https:\/\/leetcode.com\/problems\/number-of-common-factors","1810":"https:\/\/leetcode.com\/problems\/maximum-sum-of-an-hourglass","1811":"https:\/\/leetcode.com\/problems\/minimize-xor","1812":"https:\/\/leetcode.com\/problems\/maximum-deletions-on-a-string","1813":"https:\/\/leetcode.com\/problems\/the-employee-that-worked-on-the-longest-task","1814":"https:\/\/leetcode.com\/problems\/find-the-original-array-of-prefix-xor","1815":"https:\/\/leetcode.com\/problems\/using-a-robot-to-print-the-lexicographically-smallest-string","1816":"https:\/\/leetcode.com\/problems\/paths-in-matrix-whose-sum-is-divisible-by-k","1817":"https:\/\/leetcode.com\/problems\/range-product-queries-of-powers","1818":"https:\/\/leetcode.com\/problems\/minimize-maximum-of-array","1819":"https:\/\/leetcode.com\/problems\/create-components-with-same-value","1820":"https:\/\/leetcode.com\/problems\/largest-positive-integer-that-exists-with-its-negative","1821":"https:\/\/leetcode.com\/problems\/count-number-of-distinct-integers-after-reverse-operations","1822":"https:\/\/leetcode.com\/problems\/sum-of-number-and-its-reverse","1823":"https:\/\/leetcode.com\/problems\/count-subarrays-with-fixed-bounds","1824":"https:\/\/leetcode.com\/problems\/determine-if-two-events-have-conflict","1825":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-gcd-equal-to-k","1826":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-array-equal","1827":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-arrays-similar","1828":"https:\/\/leetcode.com\/problems\/odd-string-difference","1829":"https:\/\/leetcode.com\/problems\/words-within-two-edits-of-dictionary","1830":"https:\/\/leetcode.com\/problems\/destroy-sequential-targets","1831":"https:\/\/leetcode.com\/problems\/next-greater-element-iv","1832":"https:\/\/leetcode.com\/problems\/average-value-of-even-numbers-that-are-divisible-by-three","1833":"https:\/\/leetcode.com\/problems\/most-popular-video-creator","1834":"https:\/\/leetcode.com\/problems\/minimum-addition-to-make-integer-beautiful","1835":"https:\/\/leetcode.com\/problems\/height-of-binary-tree-after-subtree-removal-queries","1836":"https:\/\/leetcode.com\/problems\/apply-operations-to-an-array","1837":"https:\/\/leetcode.com\/problems\/maximum-sum-of-distinct-subarrays-with-length-k","1838":"https:\/\/leetcode.com\/problems\/total-cost-to-hire-k-workers","1839":"https:\/\/leetcode.com\/problems\/minimum-total-distance-traveled","1840":"https:\/\/leetcode.com\/problems\/number-of-distinct-averages","1841":"https:\/\/leetcode.com\/problems\/count-ways-to-build-good-strings","1842":"https:\/\/leetcode.com\/problems\/most-profitable-path-in-a-tree","1843":"https:\/\/leetcode.com\/problems\/convert-the-temperature","1844":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-lcm-equal-to-k","1845":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-sort-a-binary-tree-by-level","1846":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-palindrome-substrings","1847":"https:\/\/leetcode.com\/problems\/number-of-unequal-triplets-in-array","1848":"https:\/\/leetcode.com\/problems\/closest-nodes-queries-in-a-binary-search-tree","1849":"https:\/\/leetcode.com\/problems\/minimum-fuel-cost-to-report-to-the-capital","1850":"https:\/\/leetcode.com\/problems\/number-of-beautiful-partitions","1851":"https:\/\/leetcode.com\/problems\/minimum-cuts-to-divide-a-circle","1852":"https:\/\/leetcode.com\/problems\/difference-between-ones-and-zeros-in-row-and-column","1853":"https:\/\/leetcode.com\/problems\/count-palindromic-subsequences","1854":"https:\/\/leetcode.com\/problems\/find-the-pivot-integer","1855":"https:\/\/leetcode.com\/problems\/append-characters-to-string-to-make-subsequence","1856":"https:\/\/leetcode.com\/problems\/remove-nodes-from-linked-list","1857":"https:\/\/leetcode.com\/problems\/count-subarrays-with-median-k","1858":"https:\/\/leetcode.com\/problems\/circular-sentence","1859":"https:\/\/leetcode.com\/problems\/divide-players-into-teams-of-equal-skill","1860":"https:\/\/leetcode.com\/problems\/divide-nodes-into-the-maximum-number-of-groups","1861":"https:\/\/leetcode.com\/problems\/maximum-value-of-a-string-in-an-array","1862":"https:\/\/leetcode.com\/problems\/maximum-star-sum-of-a-graph","1863":"https:\/\/leetcode.com\/problems\/frog-jump-ii","1864":"https:\/\/leetcode.com\/problems\/minimum-total-cost-to-make-arrays-unequal","1865":"https:\/\/leetcode.com\/problems\/delete-greatest-value-in-each-row","1866":"https:\/\/leetcode.com\/problems\/longest-square-streak-in-an-array","1867":"https:\/\/leetcode.com\/problems\/design-memory-allocator","1868":"https:\/\/leetcode.com\/problems\/maximum-number-of-points-from-grid-queries","1869":"https:\/\/leetcode.com\/problems\/count-pairs-of-similar-strings","1870":"https:\/\/leetcode.com\/problems\/smallest-value-after-replacing-with-sum-of-prime-factors","1871":"https:\/\/leetcode.com\/problems\/add-edges-to-make-degrees-of-all-nodes-even","1872":"https:\/\/leetcode.com\/problems\/cycle-length-queries-in-a-tree","1873":"https:\/\/leetcode.com\/problems\/maximum-enemy-forts-that-can-be-captured","1874":"https:\/\/leetcode.com\/problems\/reward-top-k-students","1875":"https:\/\/leetcode.com\/problems\/minimize-the-maximum-of-two-arrays","1876":"https:\/\/leetcode.com\/problems\/count-anagrams","1877":"https:\/\/leetcode.com\/problems\/shortest-distance-to-target-string-in-a-circular-array","1878":"https:\/\/leetcode.com\/problems\/take-k-of-each-character-from-left-and-right","1879":"https:\/\/leetcode.com\/problems\/maximum-tastiness-of-candy-basket","1880":"https:\/\/leetcode.com\/problems\/number-of-great-partitions","1881":"https:\/\/leetcode.com\/problems\/count-the-digits-that-divide-a-number","1882":"https:\/\/leetcode.com\/problems\/distinct-prime-factors-of-product-of-array","1883":"https:\/\/leetcode.com\/problems\/partition-string-into-substrings-with-values-at-most-k","1884":"https:\/\/leetcode.com\/problems\/closest-prime-numbers-in-range","1885":"https:\/\/leetcode.com\/problems\/categorize-box-according-to-criteria","1886":"https:\/\/leetcode.com\/problems\/find-consecutive-integers-from-a-data-stream","1887":"https:\/\/leetcode.com\/problems\/find-xor-beauty-of-array","1888":"https:\/\/leetcode.com\/problems\/maximize-the-minimum-powered-city","1889":"https:\/\/leetcode.com\/problems\/maximum-count-of-positive-integer-and-negative-integer","1890":"https:\/\/leetcode.com\/problems\/maximal-score-after-applying-k-operations","1891":"https:\/\/leetcode.com\/problems\/make-number-of-distinct-characters-equal","1892":"https:\/\/leetcode.com\/problems\/time-to-cross-a-bridge","1893":"https:\/\/leetcode.com\/problems\/difference-between-element-sum-and-digit-sum-of-an-array","1894":"https:\/\/leetcode.com\/problems\/increment-submatrices-by-one","1895":"https:\/\/leetcode.com\/problems\/count-the-number-of-good-subarrays","1896":"https:\/\/leetcode.com\/problems\/difference-between-maximum-and-minimum-price-sum","1897":"https:\/\/leetcode.com\/problems\/minimum-common-value","1898":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-array-equal-ii","1899":"https:\/\/leetcode.com\/problems\/maximum-subsequence-score","1900":"https:\/\/leetcode.com\/problems\/check-if-point-is-reachable","1901":"https:\/\/leetcode.com\/problems\/alternating-digit-sum","1902":"https:\/\/leetcode.com\/problems\/sort-the-students-by-their-kth-score","1903":"https:\/\/leetcode.com\/problems\/apply-bitwise-operations-to-make-strings-equal","1904":"https:\/\/leetcode.com\/problems\/minimum-cost-to-split-an-array","1905":"https:\/\/leetcode.com\/problems\/count-distinct-numbers-on-board","1906":"https:\/\/leetcode.com\/problems\/count-collisions-of-monkeys-on-a-polygon","1907":"https:\/\/leetcode.com\/problems\/put-marbles-in-bags","1908":"https:\/\/leetcode.com\/problems\/count-increasing-quadruplets","1909":"https:\/\/leetcode.com\/problems\/separate-the-digits-in-an-array","1910":"https:\/\/leetcode.com\/problems\/maximum-number-of-integers-to-choose-from-a-range-i","1911":"https:\/\/leetcode.com\/problems\/maximize-win-from-two-segments","1912":"https:\/\/leetcode.com\/problems\/disconnect-path-in-a-binary-matrix-by-at-most-one-flip","1913":"https:\/\/leetcode.com\/problems\/take-gifts-from-the-richest-pile","1914":"https:\/\/leetcode.com\/problems\/count-vowel-strings-in-ranges","1915":"https:\/\/leetcode.com\/problems\/house-robber-iv","1916":"https:\/\/leetcode.com\/problems\/rearranging-fruits","1917":"https:\/\/leetcode.com\/problems\/find-the-array-concatenation-value","1918":"https:\/\/leetcode.com\/problems\/count-the-number-of-fair-pairs","1919":"https:\/\/leetcode.com\/problems\/substring-xor-queries","1920":"https:\/\/leetcode.com\/problems\/subsequence-with-the-minimum-score","1921":"https:\/\/leetcode.com\/problems\/maximum-difference-by-remapping-a-digit","1922":"https:\/\/leetcode.com\/problems\/minimum-score-by-changing-two-elements","1923":"https:\/\/leetcode.com\/problems\/minimum-impossible-or","1924":"https:\/\/leetcode.com\/problems\/handling-sum-queries-after-update","1925":"https:\/\/leetcode.com\/problems\/merge-two-2d-arrays-by-summing-values","1926":"https:\/\/leetcode.com\/problems\/minimum-operations-to-reduce-an-integer-to-0","1927":"https:\/\/leetcode.com\/problems\/count-the-number-of-square-free-subsets","1928":"https:\/\/leetcode.com\/problems\/find-the-string-with-lcp","1929":"https:\/\/leetcode.com\/problems\/left-and-right-sum-differences","1930":"https:\/\/leetcode.com\/problems\/find-the-divisibility-array-of-a-string","1931":"https:\/\/leetcode.com\/problems\/find-the-maximum-number-of-marked-indices","1932":"https:\/\/leetcode.com\/problems\/minimum-time-to-visit-a-cell-in-a-grid","1933":"https:\/\/leetcode.com\/problems\/split-with-minimum-sum","1934":"https:\/\/leetcode.com\/problems\/count-total-number-of-colored-cells","1935":"https:\/\/leetcode.com\/problems\/count-ways-to-group-overlapping-ranges","1936":"https:\/\/leetcode.com\/problems\/count-number-of-possible-root-nodes","1937":"https:\/\/leetcode.com\/problems\/pass-the-pillow","1938":"https:\/\/leetcode.com\/problems\/kth-largest-sum-in-a-binary-tree","1939":"https:\/\/leetcode.com\/problems\/split-the-array-to-make-coprime-products","1940":"https:\/\/leetcode.com\/problems\/number-of-ways-to-earn-points","1941":"https:\/\/leetcode.com\/problems\/count-the-number-of-vowel-strings-in-range","1942":"https:\/\/leetcode.com\/problems\/rearrange-array-to-maximize-prefix-score","1943":"https:\/\/leetcode.com\/problems\/count-the-number-of-beautiful-subarrays","1944":"https:\/\/leetcode.com\/problems\/minimum-time-to-complete-all-tasks","1945":"https:\/\/leetcode.com\/problems\/distribute-money-to-maximum-children","1946":"https:\/\/leetcode.com\/problems\/maximize-greatness-of-an-array","1947":"https:\/\/leetcode.com\/problems\/find-score-of-an-array-after-marking-all-elements","1948":"https:\/\/leetcode.com\/problems\/minimum-time-to-repair-cars","1949":"https:\/\/leetcode.com\/problems\/number-of-even-and-odd-bits","1950":"https:\/\/leetcode.com\/problems\/check-knight-tour-configuration","1951":"https:\/\/leetcode.com\/problems\/the-number-of-beautiful-subsets","1952":"https:\/\/leetcode.com\/problems\/k-items-with-the-maximum-sum","1953":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-all-array-elements-equal","1954":"https:\/\/leetcode.com\/problems\/collect-coins-in-a-tree","1955":"https:\/\/leetcode.com\/problems\/form-smallest-number-from-two-digit-arrays","1956":"https:\/\/leetcode.com\/problems\/shortest-cycle-in-a-graph","1957":"https:\/\/leetcode.com\/problems\/find-the-longest-balanced-substring-of-a-binary-string","1958":"https:\/\/leetcode.com\/problems\/convert-an-array-into-a-2d-array-with-conditions","1959":"https:\/\/leetcode.com\/problems\/mice-and-cheese","1960":"https:\/\/leetcode.com\/problems\/minimum-reverse-operations","1961":"https:\/\/leetcode.com\/problems\/sum-of-distances","1962":"https:\/\/leetcode.com\/problems\/minimum-number-of-visited-cells-in-a-grid","1963":"https:\/\/leetcode.com\/problems\/check-if-object-instance-of-class","1964":"https:\/\/leetcode.com\/problems\/array-prototype-last","1965":"https:\/\/leetcode.com\/problems\/counter","1966":"https:\/\/leetcode.com\/problems\/sleep","1967":"https:\/\/leetcode.com\/problems\/cache-with-time-limit","1968":"https:\/\/leetcode.com\/problems\/memoize","1969":"https:\/\/leetcode.com\/problems\/snail-traversal","1970":"https:\/\/leetcode.com\/problems\/flatten-deeply-nested-array","1971":"https:\/\/leetcode.com\/problems\/array-reduce-transformation","1972":"https:\/\/leetcode.com\/problems\/debounce","1973":"https:\/\/leetcode.com\/problems\/function-composition","1974":"https:\/\/leetcode.com\/problems\/memoize-ii","1975":"https:\/\/leetcode.com\/problems\/group-by","1976":"https:\/\/leetcode.com\/problems\/filter-elements-from-array","1977":"https:\/\/leetcode.com\/problems\/apply-transform-over-each-element-in-array","1978":"https:\/\/leetcode.com\/problems\/promise-time-limit","1979":"https:\/\/leetcode.com\/problems\/find-the-width-of-columns-of-a-grid","1980":"https:\/\/leetcode.com\/problems\/find-the-score-of-all-prefixes-of-an-array","1981":"https:\/\/leetcode.com\/problems\/cousins-in-binary-tree-ii","1982":"https:\/\/leetcode.com\/problems\/design-graph-with-shortest-path-calculator","1983":"https:\/\/leetcode.com\/problems\/row-with-maximum-ones","1984":"https:\/\/leetcode.com\/problems\/find-the-maximum-divisibility-score","1985":"https:\/\/leetcode.com\/problems\/minimum-additions-to-make-valid-string","1986":"https:\/\/leetcode.com\/problems\/minimize-the-total-price-of-the-trips","1987":"https:\/\/leetcode.com\/problems\/generate-fibonacci-sequence","1988":"https:\/\/leetcode.com\/problems\/design-cancellable-function","1989":"https:\/\/leetcode.com\/problems\/calculate-delayed-arrival-time","1990":"https:\/\/leetcode.com\/problems\/sum-multiples","1991":"https:\/\/leetcode.com\/problems\/sliding-subarray-beauty","1992":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-all-array-elements-equal-to-1","1993":"https:\/\/leetcode.com\/problems\/maximum-sum-with-exactly-k-elements","1994":"https:\/\/leetcode.com\/problems\/find-the-prefix-common-array-of-two-arrays","1995":"https:\/\/leetcode.com\/problems\/maximum-number-of-fish-in-a-grid","1996":"https:\/\/leetcode.com\/problems\/make-array-empty","1997":"https:\/\/leetcode.com\/problems\/determine-the-winner-of-a-bowling-game","1998":"https:\/\/leetcode.com\/problems\/first-completely-painted-row-or-column","1999":"https:\/\/leetcode.com\/problems\/minimum-cost-of-a-path-with-special-roads","2000":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-beautiful-string","2001":"https:\/\/leetcode.com\/problems\/counter-ii","2002":"https:\/\/leetcode.com\/problems\/allow-one-function-call","2003":"https:\/\/leetcode.com\/problems\/create-hello-world-function","2004":"https:\/\/leetcode.com\/problems\/find-the-distinct-difference-array","2005":"https:\/\/leetcode.com\/problems\/frequency-tracker","2006":"https:\/\/leetcode.com\/problems\/number-of-adjacent-elements-with-the-same-color","2007":"https:\/\/leetcode.com\/problems\/make-costs-of-paths-equal-in-a-binary-tree","2008":"https:\/\/leetcode.com\/problems\/number-of-senior-citizens","2009":"https:\/\/leetcode.com\/problems\/sum-in-a-matrix","2010":"https:\/\/leetcode.com\/problems\/maximum-or","2011":"https:\/\/leetcode.com\/problems\/power-of-heroes","2012":"https:\/\/leetcode.com\/problems\/find-the-losers-of-the-circular-game","2013":"https:\/\/leetcode.com\/problems\/neighboring-bitwise-xor","2014":"https:\/\/leetcode.com\/problems\/maximum-number-of-moves-in-a-grid","2015":"https:\/\/leetcode.com\/problems\/count-the-number-of-complete-components","2016":"https:\/\/leetcode.com\/problems\/call-function-with-custom-context","2017":"https:\/\/leetcode.com\/problems\/event-emitter","2018":"https:\/\/leetcode.com\/problems\/array-wrapper","2019":"https:\/\/leetcode.com\/problems\/minimum-string-length-after-removing-substrings","2020":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-palindrome","2021":"https:\/\/leetcode.com\/problems\/find-the-punishment-number-of-an-integer","2022":"https:\/\/leetcode.com\/problems\/modify-graph-edge-weights","2023":"https:\/\/leetcode.com\/problems\/return-length-of-arguments-passed","2024":"https:\/\/leetcode.com\/problems\/to-be-or-not-to-be","2025":"https:\/\/leetcode.com\/problems\/compact-object","2026":"https:\/\/leetcode.com\/problems\/buy-two-chocolates","2027":"https:\/\/leetcode.com\/problems\/extra-characters-in-a-string","2028":"https:\/\/leetcode.com\/problems\/maximum-strength-of-a-group","2029":"https:\/\/leetcode.com\/problems\/remove-trailing-zeros-from-a-string","2030":"https:\/\/leetcode.com\/problems\/difference-of-number-of-distinct-values-on-diagonals","2031":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-all-characters-equal","2032":"https:\/\/leetcode.com\/problems\/maximum-strictly-increasing-cells-in-a-matrix","2033":"https:\/\/leetcode.com\/problems\/timeout-cancellation","2034":"https:\/\/leetcode.com\/problems\/minimize-string-length","2035":"https:\/\/leetcode.com\/problems\/semi-ordered-permutation","2036":"https:\/\/leetcode.com\/problems\/sum-of-matrix-after-queries","2037":"https:\/\/leetcode.com\/problems\/count-of-integers","2038":"https:\/\/leetcode.com\/problems\/execute-asynchronous-functions-in-parallel","2039":"https:\/\/leetcode.com\/problems\/join-two-arrays-by-id","2040":"https:\/\/leetcode.com\/problems\/add-two-promises","2041":"https:\/\/leetcode.com\/problems\/sort-by","2042":"https:\/\/leetcode.com\/problems\/interval-cancellation","2043":"https:\/\/leetcode.com\/problems\/calculator-with-method-chaining","2044":"https:\/\/leetcode.com\/problems\/is-object-empty","2045":"https:\/\/leetcode.com\/problems\/check-if-the-number-is-fascinating","2046":"https:\/\/leetcode.com\/problems\/find-the-longest-semi-repetitive-substring","2047":"https:\/\/leetcode.com\/problems\/movement-of-robots","2048":"https:\/\/leetcode.com\/problems\/find-a-good-subset-of-the-matrix","2049":"https:\/\/leetcode.com\/problems\/neither-minimum-nor-maximum","2050":"https:\/\/leetcode.com\/problems\/collecting-chocolates","2051":"https:\/\/leetcode.com\/problems\/maximum-sum-queries","2052":"https:\/\/leetcode.com\/problems\/total-distance-traveled","2053":"https:\/\/leetcode.com\/problems\/find-the-value-of-the-partition","2054":"https:\/\/leetcode.com\/problems\/special-permutations","2055":"https:\/\/leetcode.com\/problems\/find-maximum-number-of-string-pairs","2056":"https:\/\/leetcode.com\/problems\/construct-the-longest-new-string","2057":"https:\/\/leetcode.com\/problems\/decremental-string-concatenation","2058":"https:\/\/leetcode.com\/problems\/count-zero-request-servers","2059":"https:\/\/leetcode.com\/problems\/number-of-beautiful-pairs","2060":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-integer-zero","2061":"https:\/\/leetcode.com\/problems\/ways-to-split-array-into-good-subarrays","2062":"https:\/\/leetcode.com\/problems\/robot-collisions","2063":"https:\/\/leetcode.com\/problems\/longest-even-odd-subarray-with-threshold","2064":"https:\/\/leetcode.com\/problems\/prime-pairs-with-target-sum","2065":"https:\/\/leetcode.com\/problems\/continuous-subarrays","2066":"https:\/\/leetcode.com\/problems\/longest-alternating-subarray","2067":"https:\/\/leetcode.com\/problems\/relocate-marbles","2068":"https:\/\/leetcode.com\/problems\/partition-string-into-minimum-beautiful-substrings","2069":"https:\/\/leetcode.com\/problems\/number-of-black-blocks","2070":"https:\/\/leetcode.com\/problems\/find-the-maximum-achievable-number","2071":"https:\/\/leetcode.com\/problems\/maximum-number-of-jumps-to-reach-the-last-index","2072":"https:\/\/leetcode.com\/problems\/longest-non-decreasing-subarray-from-two-arrays","2073":"https:\/\/leetcode.com\/problems\/sum-of-squares-of-special-elements","2074":"https:\/\/leetcode.com\/problems\/maximum-beauty-of-an-array-after-applying-operation","2075":"https:\/\/leetcode.com\/problems\/minimum-index-of-a-valid-split","2076":"https:\/\/leetcode.com\/problems\/length-of-the-longest-valid-substring","2077":"https:\/\/leetcode.com\/problems\/check-if-array-is-good","2078":"https:\/\/leetcode.com\/problems\/sort-vowels-in-a-string","2079":"https:\/\/leetcode.com\/problems\/visit-array-positions-to-maximize-score","2080":"https:\/\/leetcode.com\/problems\/ways-to-express-an-integer-as-sum-of-powers","2081":"https:\/\/leetcode.com\/problems\/split-strings-by-separator","2082":"https:\/\/leetcode.com\/problems\/largest-element-in-an-array-after-merge-operations","2083":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-with-increasing-length","2084":"https:\/\/leetcode.com\/problems\/count-paths-that-can-form-a-palindrome-in-a-tree","2085":"https:\/\/leetcode.com\/problems\/number-of-employees-who-met-the-target","2086":"https:\/\/leetcode.com\/problems\/count-complete-subarrays-in-an-array","2087":"https:\/\/leetcode.com\/problems\/shortest-string-that-contains-three-strings","2088":"https:\/\/leetcode.com\/problems\/count-stepping-numbers-in-range","2089":"https:\/\/leetcode.com\/problems\/account-balance-after-rounded-purchase","2090":"https:\/\/leetcode.com\/problems\/insert-greatest-common-divisors-in-linked-list","2091":"https:\/\/leetcode.com\/problems\/minimum-seconds-to-equalize-a-circular-array","2092":"https:\/\/leetcode.com\/problems\/minimum-time-to-make-array-sum-at-most-x","2093":"https:\/\/leetcode.com\/problems\/faulty-keyboard","2094":"https:\/\/leetcode.com\/problems\/check-if-it-is-possible-to-split-array","2095":"https:\/\/leetcode.com\/problems\/find-the-safest-path-in-a-grid","2096":"https:\/\/leetcode.com\/problems\/maximum-elegance-of-a-k-length-subsequence","2097":"https:\/\/leetcode.com\/problems\/max-pair-sum-in-an-array","2098":"https:\/\/leetcode.com\/problems\/double-a-number-represented-as-a-linked-list","2099":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-between-elements-with-constraint","2100":"https:\/\/leetcode.com\/problems\/apply-operations-to-maximize-score","2101":"https:\/\/leetcode.com\/problems\/count-pairs-whose-sum-is-less-than-target","2102":"https:\/\/leetcode.com\/problems\/make-string-a-subsequence-using-cyclic-increments","2103":"https:\/\/leetcode.com\/problems\/sorting-three-groups","2104":"https:\/\/leetcode.com\/problems\/number-of-beautiful-integers-in-the-range","2105":"https:\/\/leetcode.com\/problems\/check-if-a-string-is-an-acronym-of-words","2106":"https:\/\/leetcode.com\/problems\/determine-the-minimum-sum-of-a-k-avoiding-array","2107":"https:\/\/leetcode.com\/problems\/maximize-the-profit-as-the-salesman","2108":"https:\/\/leetcode.com\/problems\/find-the-longest-equal-subarray","2109":"https:\/\/leetcode.com\/problems\/furthest-point-from-origin","2110":"https:\/\/leetcode.com\/problems\/find-the-minimum-possible-sum-of-a-beautiful-array","2111":"https:\/\/leetcode.com\/problems\/minimum-operations-to-form-subsequence-with-target-sum","2112":"https:\/\/leetcode.com\/problems\/maximize-value-of-function-in-a-ball-passing-game","2113":"https:\/\/leetcode.com\/problems\/check-if-strings-can-be-made-equal-with-operations-i","2114":"https:\/\/leetcode.com\/problems\/check-if-strings-can-be-made-equal-with-operations-ii","2115":"https:\/\/leetcode.com\/problems\/maximum-sum-of-almost-unique-subarray","2116":"https:\/\/leetcode.com\/problems\/count-k-subsequences-of-a-string-with-maximum-beauty","2117":"https:\/\/leetcode.com\/problems\/count-symmetric-integers","2118":"https:\/\/leetcode.com\/problems\/count-of-interesting-subarrays","2119":"https:\/\/leetcode.com\/problems\/minimum-edge-weight-equilibrium-queries-in-a-tree","2120":"https:\/\/leetcode.com\/problems\/points-that-intersect-with-cars","2121":"https:\/\/leetcode.com\/problems\/determine-if-a-cell-is-reachable-at-a-given-time","2122":"https:\/\/leetcode.com\/problems\/minimum-moves-to-spread-stones-over-grid","2123":"https:\/\/leetcode.com\/problems\/string-transformation","2124":"https:\/\/leetcode.com\/problems\/minimum-right-shifts-to-sort-the-array","2125":"https:\/\/leetcode.com\/problems\/minimum-array-length-after-pair-removals","2126":"https:\/\/leetcode.com\/problems\/count-pairs-of-points-with-distance-k","2127":"https:\/\/leetcode.com\/problems\/happy-students","2128":"https:\/\/leetcode.com\/problems\/maximum-number-of-alloys","2129":"https:\/\/leetcode.com\/problems\/maximum-element-sum-of-a-complete-subset-of-indices","2130":"https:\/\/leetcode.com\/problems\/maximum-odd-binary-number","2131":"https:\/\/leetcode.com\/problems\/beautiful-towers-i","2132":"https:\/\/leetcode.com\/problems\/beautiful-towers-ii","2133":"https:\/\/leetcode.com\/problems\/count-valid-paths-in-a-tree","2134":"https:\/\/leetcode.com\/problems\/minimum-operations-to-collect-elements","2135":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-array-empty","2136":"https:\/\/leetcode.com\/problems\/split-array-into-maximum-number-of-subarrays","2137":"https:\/\/leetcode.com\/problems\/maximum-number-of-k-divisible-components","2138":"https:\/\/leetcode.com\/problems\/maximum-value-of-an-ordered-triplet-i","2139":"https:\/\/leetcode.com\/problems\/maximum-value-of-an-ordered-triplet-ii","2140":"https:\/\/leetcode.com\/problems\/minimum-size-subarray-in-infinite-array","2141":"https:\/\/leetcode.com\/problems\/count-visited-nodes-in-a-directed-graph","2142":"https:\/\/leetcode.com\/problems\/create-a-dataframe-from-list","2143":"https:\/\/leetcode.com\/problems\/get-the-size-of-a-dataframe","2144":"https:\/\/leetcode.com\/problems\/display-the-first-three-rows","2145":"https:\/\/leetcode.com\/problems\/select-data","2146":"https:\/\/leetcode.com\/problems\/create-a-new-column","2147":"https:\/\/leetcode.com\/problems\/drop-duplicate-rows","2148":"https:\/\/leetcode.com\/problems\/drop-missing-data","2149":"https:\/\/leetcode.com\/problems\/modify-columns","2150":"https:\/\/leetcode.com\/problems\/rename-columns","2151":"https:\/\/leetcode.com\/problems\/change-data-type","2152":"https:\/\/leetcode.com\/problems\/fill-missing-data","2153":"https:\/\/leetcode.com\/problems\/reshape-data-concatenate","2154":"https:\/\/leetcode.com\/problems\/reshape-data-pivot","2155":"https:\/\/leetcode.com\/problems\/reshape-data-melt","2156":"https:\/\/leetcode.com\/problems\/method-chaining","2157":"https:\/\/leetcode.com\/problems\/divisible-and-non-divisible-sums-difference","2158":"https:\/\/leetcode.com\/problems\/minimum-processing-time","2159":"https:\/\/leetcode.com\/problems\/apply-operations-on-array-to-maximize-sum-of-squares","2160":"https:\/\/leetcode.com\/problems\/last-visited-integers","2161":"https:\/\/leetcode.com\/problems\/longest-unequal-adjacent-groups-subsequence-i","2162":"https:\/\/leetcode.com\/problems\/longest-unequal-adjacent-groups-subsequence-ii","2163":"https:\/\/leetcode.com\/problems\/count-of-sub-multisets-with-bounded-sum","2164":"https:\/\/leetcode.com\/problems\/find-indices-with-index-and-value-difference-i","2165":"https:\/\/leetcode.com\/problems\/shortest-and-lexicographically-smallest-beautiful-string","2166":"https:\/\/leetcode.com\/problems\/find-indices-with-index-and-value-difference-ii","2167":"https:\/\/leetcode.com\/problems\/construct-product-matrix","2168":"https:\/\/leetcode.com\/problems\/minimum-sum-of-mountain-triplets-i","2169":"https:\/\/leetcode.com\/problems\/minimum-number-of-groups-to-create-a-valid-assignment","2170":"https:\/\/leetcode.com\/problems\/minimum-changes-to-make-k-semi-palindromes","2171":"https:\/\/leetcode.com\/problems\/subarrays-distinct-element-sum-of-squares-i","2172":"https:\/\/leetcode.com\/problems\/minimum-number-of-changes-to-make-binary-string-beautiful","2173":"https:\/\/leetcode.com\/problems\/length-of-the-longest-subsequence-that-sums-to-target","2174":"https:\/\/leetcode.com\/problems\/subarrays-distinct-element-sum-of-squares-ii","2175":"https:\/\/leetcode.com\/problems\/minimum-increment-operations-to-make-array-beautiful","2176":"https:\/\/leetcode.com\/problems\/maximum-points-after-collecting-coins-from-all-nodes","2177":"https:\/\/leetcode.com\/problems\/find-champion-i","2178":"https:\/\/leetcode.com\/problems\/find-champion-ii","2179":"https:\/\/leetcode.com\/problems\/maximum-score-after-applying-operations-on-a-tree","2180":"https:\/\/leetcode.com\/problems\/maximum-balanced-subsequence-sum","2181":"https:\/\/leetcode.com\/problems\/distribute-candies-among-children-i","2182":"https:\/\/leetcode.com\/problems\/distribute-candies-among-children-ii","2183":"https:\/\/leetcode.com\/problems\/number-of-strings-which-can-be-rearranged-to-contain-substring","2184":"https:\/\/leetcode.com\/problems\/maximum-spending-after-buying-items","2185":"https:\/\/leetcode.com\/problems\/maximum-strong-pair-xor-i","2186":"https:\/\/leetcode.com\/problems\/high-access-employees","2187":"https:\/\/leetcode.com\/problems\/minimum-operations-to-maximize-last-elements-in-arrays","2188":"https:\/\/leetcode.com\/problems\/maximum-strong-pair-xor-ii","2189":"https:\/\/leetcode.com\/problems\/make-three-strings-equal","2190":"https:\/\/leetcode.com\/problems\/separate-black-and-white-balls","2191":"https:\/\/leetcode.com\/problems\/maximum-xor-product","2192":"https:\/\/leetcode.com\/problems\/find-building-where-alice-and-bob-can-meet","2193":"https:\/\/leetcode.com\/problems\/find-words-containing-character","2194":"https:\/\/leetcode.com\/problems\/maximize-area-of-square-hole-in-grid","2195":"https:\/\/leetcode.com\/problems\/minimum-number-of-coins-for-fruits","2196":"https:\/\/leetcode.com\/problems\/find-maximum-non-decreasing-array-length","2197":"https:\/\/leetcode.com\/problems\/matrix-similarity-after-cyclic-shifts","2198":"https:\/\/leetcode.com\/problems\/count-beautiful-substrings-i","2199":"https:\/\/leetcode.com\/problems\/make-lexicographically-smallest-array-by-swapping-elements","2200":"https:\/\/leetcode.com\/problems\/count-beautiful-substrings-ii","2201":"https:\/\/leetcode.com\/problems\/find-the-peaks","2202":"https:\/\/leetcode.com\/problems\/minimum-number-of-coins-to-be-added","2203":"https:\/\/leetcode.com\/problems\/count-complete-substrings","2204":"https:\/\/leetcode.com\/problems\/count-the-number-of-infection-sequences","2205":"https:\/\/leetcode.com\/problems\/find-common-elements-between-two-arrays","2206":"https:\/\/leetcode.com\/problems\/remove-adjacent-almost-equal-characters","2207":"https:\/\/leetcode.com\/problems\/length-of-longest-subarray-with-at-most-k-frequency","2208":"https:\/\/leetcode.com\/problems\/number-of-possible-sets-of-closing-branches","2209":"https:\/\/leetcode.com\/problems\/count-tested-devices-after-test-operations","2210":"https:\/\/leetcode.com\/problems\/double-modular-exponentiation","2211":"https:\/\/leetcode.com\/problems\/count-subarrays-where-max-element-appears-at-least-k-times","2212":"https:\/\/leetcode.com\/problems\/count-the-number-of-good-partitions","2213":"https:\/\/leetcode.com\/problems\/find-missing-and-repeated-values","2214":"https:\/\/leetcode.com\/problems\/divide-array-into-arrays-with-max-difference","2215":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-array-equalindromic","2216":"https:\/\/leetcode.com\/problems\/count-the-number-of-incremovable-subarrays-i","2217":"https:\/\/leetcode.com\/problems\/find-polygon-with-the-largest-perimeter","2218":"https:\/\/leetcode.com\/problems\/count-the-number-of-incremovable-subarrays-ii","2219":"https:\/\/leetcode.com\/problems\/find-number-of-coins-to-place-in-tree-nodes","2220":"https:\/\/leetcode.com\/problems\/maximum-square-area-by-removing-fences-from-a-field","2221":"https:\/\/leetcode.com\/problems\/minimum-cost-to-convert-string-i","2222":"https:\/\/leetcode.com\/problems\/minimum-cost-to-convert-string-ii","2223":"https:\/\/leetcode.com\/problems\/check-if-bitwise-or-has-trailing-zeros","2224":"https:\/\/leetcode.com\/problems\/find-longest-special-substring-that-occurs-thrice-i","2225":"https:\/\/leetcode.com\/problems\/find-longest-special-substring-that-occurs-thrice-ii","2226":"https:\/\/leetcode.com\/problems\/palindrome-rearrangement-queries","2227":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-array-xor-equal-to-k","2228":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-x-and-y-equal","2229":"https:\/\/leetcode.com\/problems\/count-the-number-of-powerful-integers","2230":"https:\/\/leetcode.com\/problems\/maximum-area-of-longest-diagonal-rectangle","2231":"https:\/\/leetcode.com\/problems\/minimum-moves-to-capture-the-queen","2232":"https:\/\/leetcode.com\/problems\/maximum-size-of-a-set-after-removals","2233":"https:\/\/leetcode.com\/problems\/maximize-the-number-of-partitions-after-operations","2234":"https:\/\/leetcode.com\/problems\/count-elements-with-maximum-frequency","2235":"https:\/\/leetcode.com\/problems\/find-beautiful-indices-in-the-given-array-i","2236":"https:\/\/leetcode.com\/problems\/maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k","2237":"https:\/\/leetcode.com\/problems\/find-beautiful-indices-in-the-given-array-ii","2238":"https:\/\/leetcode.com\/problems\/divide-an-array-into-subarrays-with-minimum-cost-i","2239":"https:\/\/leetcode.com\/problems\/find-if-array-can-be-sorted","2240":"https:\/\/leetcode.com\/problems\/minimize-length-of-array-using-operations","2241":"https:\/\/leetcode.com\/problems\/divide-an-array-into-subarrays-with-minimum-cost-ii","2242":"https:\/\/leetcode.com\/problems\/minimum-number-of-pushes-to-type-word-i","2243":"https:\/\/leetcode.com\/problems\/count-the-number-of-houses-at-a-certain-distance-i","2244":"https:\/\/leetcode.com\/problems\/minimum-number-of-pushes-to-type-word-ii","2245":"https:\/\/leetcode.com\/problems\/count-the-number-of-houses-at-a-certain-distance-ii","2246":"https:\/\/leetcode.com\/problems\/number-of-changing-keys","2247":"https:\/\/leetcode.com\/problems\/alice-and-bob-playing-flower-game","2248":"https:\/\/leetcode.com\/problems\/minimize-or-of-remaining-elements-using-operations","2249":"https:\/\/leetcode.com\/problems\/type-of-triangle","2250":"https:\/\/leetcode.com\/problems\/find-the-number-of-ways-to-place-people-i","2251":"https:\/\/leetcode.com\/problems\/maximum-good-subarray-sum","2252":"https:\/\/leetcode.com\/problems\/find-the-number-of-ways-to-place-people-ii","2253":"https:\/\/leetcode.com\/problems\/ant-on-the-boundary","2254":"https:\/\/leetcode.com\/problems\/minimum-time-to-revert-word-to-initial-state-i","2255":"https:\/\/leetcode.com\/problems\/find-the-grid-of-region-average","2256":"https:\/\/leetcode.com\/problems\/modify-the-matrix","2257":"https:\/\/leetcode.com\/problems\/number-of-subarrays-that-match-a-pattern-i","2258":"https:\/\/leetcode.com\/problems\/maximum-palindromes-after-operations","2259":"https:\/\/leetcode.com\/problems\/maximum-number-of-operations-with-the-same-score-i","2260":"https:\/\/leetcode.com\/problems\/apply-operations-to-make-string-empty","2261":"https:\/\/leetcode.com\/problems\/maximum-number-of-operations-with-the-same-score-ii","2262":"https:\/\/leetcode.com\/problems\/maximize-consecutive-elements-in-an-array-after-modification","2263":"https:\/\/leetcode.com\/problems\/count-prefix-and-suffix-pairs-i","2264":"https:\/\/leetcode.com\/problems\/find-the-length-of-the-longest-common-prefix","2265":"https:\/\/leetcode.com\/problems\/most-frequent-prime","2266":"https:\/\/leetcode.com\/problems\/split-the-array","2267":"https:\/\/leetcode.com\/problems\/find-the-largest-area-of-square-inside-two-rectangles","2268":"https:\/\/leetcode.com\/problems\/earliest-second-to-mark-indices-i","2269":"https:\/\/leetcode.com\/problems\/earliest-second-to-mark-indices-ii","2270":"https:\/\/leetcode.com\/problems\/minimum-operations-to-exceed-threshold-value-i","2271":"https:\/\/leetcode.com\/problems\/minimum-operations-to-exceed-threshold-value-ii","2272":"https:\/\/leetcode.com\/problems\/count-pairs-of-connectable-servers-in-a-weighted-tree-network","2273":"https:\/\/leetcode.com\/problems\/find-the-maximum-sum-of-node-values","2274":"https:\/\/leetcode.com\/problems\/distribute-elements-into-two-arrays-i","2275":"https:\/\/leetcode.com\/problems\/distribute-elements-into-two-arrays-ii","2276":"https:\/\/leetcode.com\/problems\/apple-redistribution-into-boxes","2277":"https:\/\/leetcode.com\/problems\/shortest-uncommon-substring-in-an-array","2278":"https:\/\/leetcode.com\/problems\/maximum-strength-of-k-disjoint-subarrays","2279":"https:\/\/leetcode.com\/problems\/find-the-sum-of-encrypted-integers","2280":"https:\/\/leetcode.com\/problems\/mark-elements-on-array-by-performing-queries","2281":"https:\/\/leetcode.com\/problems\/replace-question-marks-in-string-to-minimize-its-value","2282":"https:\/\/leetcode.com\/problems\/find-the-sum-of-the-power-of-all-subsequences","2283":"https:\/\/leetcode.com\/problems\/existence-of-a-substring-in-a-string-and-its-reverse","2284":"https:\/\/leetcode.com\/problems\/count-substrings-starting-and-ending-with-given-character","2285":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-string-k-special","2286":"https:\/\/leetcode.com\/problems\/minimum-moves-to-pick-k-ones","2287":"https:\/\/leetcode.com\/problems\/maximum-length-substring-with-two-occurrences","2288":"https:\/\/leetcode.com\/problems\/apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k","2289":"https:\/\/leetcode.com\/problems\/most-frequent-ids","2290":"https:\/\/leetcode.com\/problems\/longest-common-suffix-queries","2291":"https:\/\/leetcode.com\/problems\/shortest-subarray-with-or-at-least-k-i","2292":"https:\/\/leetcode.com\/problems\/minimum-levels-to-gain-more-points","2293":"https:\/\/leetcode.com\/problems\/shortest-subarray-with-or-at-least-k-ii","2294":"https:\/\/leetcode.com\/problems\/find-the-sum-of-subsequence-powers","2295":"https:\/\/leetcode.com\/problems\/harshad-number","2296":"https:\/\/leetcode.com\/problems\/water-bottles-ii","2297":"https:\/\/leetcode.com\/problems\/count-alternating-subarrays","2298":"https:\/\/leetcode.com\/problems\/minimize-manhattan-distances","2299":"https:\/\/leetcode.com\/problems\/longest-strictly-increasing-or-strictly-decreasing-subarray","2300":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-string-after-operations-with-constraint","2301":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-median-of-array-equal-to-k","2302":"https:\/\/leetcode.com\/problems\/minimum-cost-walk-in-weighted-graph","2303":"https:\/\/leetcode.com\/problems\/score-of-a-string","2304":"https:\/\/leetcode.com\/problems\/minimum-rectangles-to-cover-points","2305":"https:\/\/leetcode.com\/problems\/minimum-time-to-visit-disappearing-nodes","2306":"https:\/\/leetcode.com\/problems\/find-the-number-of-subarrays-where-boundary-elements-are-maximum","2307":"https:\/\/leetcode.com\/problems\/latest-time-you-can-obtain-after-replacing-characters","2308":"https:\/\/leetcode.com\/problems\/maximum-prime-difference","2309":"https:\/\/leetcode.com\/problems\/kth-smallest-amount-with-single-denomination-combination","2310":"https:\/\/leetcode.com\/problems\/minimum-sum-of-values-by-dividing-array","2311":"https:\/\/leetcode.com\/problems\/count-the-number-of-special-characters-i","2312":"https:\/\/leetcode.com\/problems\/count-the-number-of-special-characters-ii","2313":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-satisfy-conditions","2314":"https:\/\/leetcode.com\/problems\/find-edges-in-shortest-paths","2315":"https:\/\/leetcode.com\/problems\/make-a-square-with-the-same-color","2316":"https:\/\/leetcode.com\/problems\/right-triangles","2317":"https:\/\/leetcode.com\/problems\/find-all-possible-stable-binary-arrays-i","2318":"https:\/\/leetcode.com\/problems\/find-all-possible-stable-binary-arrays-ii","2319":"https:\/\/leetcode.com\/problems\/find-the-integer-added-to-array-i","2320":"https:\/\/leetcode.com\/problems\/find-the-integer-added-to-array-ii","2321":"https:\/\/leetcode.com\/problems\/minimum-array-end","2322":"https:\/\/leetcode.com\/problems\/find-the-median-of-the-uniqueness-array","2323":"https:\/\/leetcode.com\/problems\/valid-word","2324":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-word-k-periodic","2325":"https:\/\/leetcode.com\/problems\/minimum-length-of-anagram-concatenation","2326":"https:\/\/leetcode.com\/problems\/minimum-cost-to-equalize-array","2327":"https:\/\/leetcode.com\/problems\/check-if-grid-satisfies-conditions","2328":"https:\/\/leetcode.com\/problems\/maximum-points-inside-the-square","2329":"https:\/\/leetcode.com\/problems\/minimum-substring-partition-of-equal-character-frequency","2330":"https:\/\/leetcode.com\/problems\/find-products-of-elements-of-big-array","2331":"https:\/\/leetcode.com\/problems\/permutation-difference-between-two-strings","2332":"https:\/\/leetcode.com\/problems\/maximum-difference-score-in-a-grid","2333":"https:\/\/leetcode.com\/problems\/find-the-minimum-cost-array-permutation","2334":"https:\/\/leetcode.com\/problems\/special-array-i","2335":"https:\/\/leetcode.com\/problems\/special-array-ii","2336":"https:\/\/leetcode.com\/problems\/sum-of-digit-differences-of-all-pairs","2337":"https:\/\/leetcode.com\/problems\/find-number-of-ways-to-reach-the-k-th-stair","2338":"https:\/\/leetcode.com\/problems\/find-the-xor-of-numbers-which-appear-twice","2339":"https:\/\/leetcode.com\/problems\/find-occurrences-of-an-element-in-an-array","2340":"https:\/\/leetcode.com\/problems\/find-the-number-of-distinct-colors-among-the-balls","2341":"https:\/\/leetcode.com\/problems\/block-placement-queries","2342":"https:\/\/leetcode.com\/problems\/find-the-number-of-good-pairs-i","2343":"https:\/\/leetcode.com\/problems\/string-compression-iii","2344":"https:\/\/leetcode.com\/problems\/find-the-number-of-good-pairs-ii","2345":"https:\/\/leetcode.com\/problems\/maximum-sum-of-subsequence-with-non-adjacent-elements","2346":"https:\/\/leetcode.com\/problems\/minimum-number-of-chairs-in-a-waiting-room","2347":"https:\/\/leetcode.com\/problems\/count-days-without-meetings","2348":"https:\/\/leetcode.com\/problems\/lexicographically-minimum-string-after-removing-stars","2349":"https:\/\/leetcode.com\/problems\/clear-digits","2350":"https:\/\/leetcode.com\/problems\/find-the-first-player-to-win-k-games-in-a-row","2351":"https:\/\/leetcode.com\/problems\/find-the-maximum-length-of-a-good-subsequence-i","2352":"https:\/\/leetcode.com\/problems\/find-the-maximum-length-of-a-good-subsequence-ii","2353":"https:\/\/leetcode.com\/problems\/find-the-child-who-has-the-ball-after-k-seconds","2354":"https:\/\/leetcode.com\/problems\/find-the-n-th-value-after-k-seconds","2355":"https:\/\/leetcode.com\/problems\/maximum-total-reward-using-operations-i","2356":"https:\/\/leetcode.com\/problems\/maximum-total-reward-using-operations-ii","2357":"https:\/\/leetcode.com\/problems\/count-pairs-that-form-a-complete-day-i","2358":"https:\/\/leetcode.com\/problems\/count-pairs-that-form-a-complete-day-ii","2359":"https:\/\/leetcode.com\/problems\/maximum-total-damage-with-spell-casting","2360":"https:\/\/leetcode.com\/problems\/peaks-in-array","2361":"https:\/\/leetcode.com\/problems\/find-minimum-operations-to-make-all-elements-divisible-by-three","2362":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-binary-array-elements-equal-to-one-i","2363":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-binary-array-elements-equal-to-one-ii","2364":"https:\/\/leetcode.com\/problems\/count-the-number-of-inversions","2365":"https:\/\/leetcode.com\/problems\/minimum-average-of-smallest-and-largest-elements","2366":"https:\/\/leetcode.com\/problems\/find-the-minimum-area-to-cover-all-ones-i","2367":"https:\/\/leetcode.com\/problems\/maximize-total-cost-of-alternating-subarrays","2368":"https:\/\/leetcode.com\/problems\/find-the-minimum-area-to-cover-all-ones-ii","2369":"https:\/\/leetcode.com\/problems\/maximum-height-of-a-triangle","2370":"https:\/\/leetcode.com\/problems\/find-the-maximum-length-of-valid-subsequence-ii","2371":"https:\/\/leetcode.com\/problems\/alternating-groups-i","2372":"https:\/\/leetcode.com\/problems\/maximum-points-after-enemy-battles","2373":"https:\/\/leetcode.com\/problems\/alternating-groups-ii","2374":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-and-value-of-k","2375":"https:\/\/leetcode.com\/problems\/find-the-encrypted-string","2376":"https:\/\/leetcode.com\/problems\/generate-binary-strings-without-adjacent-zeros","2377":"https:\/\/leetcode.com\/problems\/count-submatrices-with-equal-frequency-of-x-and-y","2378":"https:\/\/leetcode.com\/problems\/construct-string-with-minimum-cost","2379":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-string-after-a-swap","2380":"https:\/\/leetcode.com\/problems\/delete-nodes-from-linked-list-present-in-array","2381":"https:\/\/leetcode.com\/problems\/minimum-cost-for-cutting-cake-i","2382":"https:\/\/leetcode.com\/problems\/minimum-cost-for-cutting-cake-ii","2383":"https:\/\/leetcode.com\/problems\/odd-and-even-transactions","2384":"https:\/\/leetcode.com\/problems\/find-the-winning-player-in-coin-game","2385":"https:\/\/leetcode.com\/problems\/minimum-array-changes-to-make-differences-equal","2386":"https:\/\/leetcode.com\/problems\/number-of-bit-changes-to-make-two-integers-equal","2387":"https:\/\/leetcode.com\/problems\/vowels-game-in-a-string","2388":"https:\/\/leetcode.com\/problems\/maximum-number-of-operations-to-move-ones-to-the-end","2389":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-array-equal-to-target","2390":"https:\/\/leetcode.com\/problems\/find-if-digit-game-can-be-won","2391":"https:\/\/leetcode.com\/problems\/find-the-count-of-numbers-which-are-not-special","2392":"https:\/\/leetcode.com\/problems\/count-the-number-of-substrings-with-dominant-ones","2393":"https:\/\/leetcode.com\/problems\/check-if-the-rectangle-corner-is-reachable","2394":"https:\/\/leetcode.com\/problems\/find-the-number-of-winning-players","2395":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-make-binary-grid-palindromic-i","2396":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-make-binary-grid-palindromic-ii","2397":"https:\/\/leetcode.com\/problems\/time-taken-to-mark-all-nodes","2398":"https:\/\/leetcode.com\/problems\/design-neighbor-sum-service","2399":"https:\/\/leetcode.com\/problems\/shortest-distance-after-road-addition-queries-i","2400":"https:\/\/leetcode.com\/problems\/shortest-distance-after-road-addition-queries-ii","2401":"https:\/\/leetcode.com\/problems\/alternating-groups-iii","2402":"https:\/\/leetcode.com\/problems\/snake-in-matrix","2403":"https:\/\/leetcode.com\/problems\/count-the-number-of-good-nodes","2404":"https:\/\/leetcode.com\/problems\/find-the-count-of-monotonic-pairs-i","2405":"https:\/\/leetcode.com\/problems\/find-the-count-of-monotonic-pairs-ii","2406":"https:\/\/leetcode.com\/problems\/find-the-power-of-k-size-subarrays-i","2407":"https:\/\/leetcode.com\/problems\/find-the-power-of-k-size-subarrays-ii","2408":"https:\/\/leetcode.com\/problems\/maximum-value-sum-by-placing-three-rooks-i","2409":"https:\/\/leetcode.com\/problems\/maximum-value-sum-by-placing-three-rooks-ii","2410":"https:\/\/leetcode.com\/problems\/count-substrings-that-satisfy-k-constraint-i","2411":"https:\/\/leetcode.com\/problems\/maximum-energy-boost-from-two-drinks","2412":"https:\/\/leetcode.com\/problems\/find-the-largest-palindrome-divisible-by-k","2413":"https:\/\/leetcode.com\/problems\/count-substrings-that-satisfy-k-constraint-ii","2414":"https:\/\/leetcode.com\/problems\/final-array-state-after-k-multiplication-operations-i","2415":"https:\/\/leetcode.com\/problems\/count-almost-equal-pairs-i","2416":"https:\/\/leetcode.com\/problems\/final-array-state-after-k-multiplication-operations-ii","2417":"https:\/\/leetcode.com\/problems\/count-almost-equal-pairs-ii","2418":"https:\/\/leetcode.com\/problems\/find-the-key-of-the-numbers","2419":"https:\/\/leetcode.com\/problems\/hash-divided-string","2420":"https:\/\/leetcode.com\/problems\/find-the-count-of-good-integers","2421":"https:\/\/leetcode.com\/problems\/minimum-amount-of-damage-dealt-to-bob","2422":"https:\/\/leetcode.com\/problems\/check-if-two-chessboard-squares-have-the-same-color","2423":"https:\/\/leetcode.com\/problems\/k-th-nearest-obstacle-queries","2424":"https:\/\/leetcode.com\/problems\/select-cells-in-grid-with-maximum-score","2425":"https:\/\/leetcode.com\/problems\/maximum-xor-score-subarray-queries","2426":"https:\/\/leetcode.com\/problems\/convert-date-to-binary"},"website":{"0":"leetcode","1":"leetcode","2":"leetcode","3":"leetcode","4":"leetcode","5":"leetcode","6":"leetcode","7":"leetcode","8":"leetcode","9":"leetcode","10":"leetcode","11":"leetcode","12":"leetcode","13":"leetcode","14":"leetcode","15":"leetcode","16":"leetcode","17":"leetcode","18":"leetcode","19":"leetcode","20":"leetcode","21":"leetcode","22":"leetcode","23":"leetcode","24":"leetcode","25":"leetcode","26":"leetcode","27":"leetcode","28":"leetcode","29":"leetcode","30":"leetcode","31":"leetcode","32":"leetcode","33":"leetcode","34":"leetcode","35":"leetcode","36":"leetcode","37":"leetcode","38":"leetcode","39":"leetcode","40":"leetcode","41":"leetcode","42":"leetcode","43":"leetcode","44":"leetcode","45":"leetcode","46":"leetcode","47":"leetcode","48":"leetcode","49":"leetcode","50":"leetcode","51":"leetcode","52":"leetcode","53":"leetcode","54":"leetcode","55":"leetcode","56":"leetcode","57":"leetcode","58":"leetcode","59":"leetcode","60":"leetcode","61":"leetcode","62":"leetcode","63":"leetcode","64":"leetcode","65":"leetcode","66":"leetcode","67":"leetcode","68":"leetcode","69":"leetcode","70":"leetcode","71":"leetcode","72":"leetcode","73":"leetcode","74":"leetcode","75":"leetcode","76":"leetcode","77":"leetcode","78":"leetcode","79":"leetcode","80":"leetcode","81":"leetcode","82":"leetcode","83":"leetcode","84":"leetcode","85":"leetcode","86":"leetcode","87":"leetcode","88":"leetcode","89":"leetcode","90":"leetcode","91":"leetcode","92":"leetcode","93":"leetcode","94":"leetcode","95":"leetcode","96":"leetcode","97":"leetcode","98":"leetcode","99":"leetcode","100":"leetcode","101":"leetcode","102":"leetcode","103":"leetcode","104":"leetcode","105":"leetcode","106":"leetcode","107":"leetcode","108":"leetcode","109":"leetcode","110":"leetcode","111":"leetcode","112":"leetcode","113":"leetcode","114":"leetcode","115":"leetcode","116":"leetcode","117":"leetcode","118":"leetcode","119":"leetcode","120":"leetcode","121":"leetcode","122":"leetcode","123":"leetcode","124":"leetcode","125":"leetcode","126":"leetcode","127":"leetcode","128":"leetcode","129":"leetcode","130":"leetcode","131":"leetcode","132":"leetcode","133":"leetcode","134":"leetcode","135":"leetcode","136":"leetcode","137":"leetcode","138":"leetcode","139":"leetcode","140":"leetcode","141":"leetcode","142":"leetcode","143":"leetcode","144":"leetcode","145":"leetcode","146":"leetcode","147":"leetcode","148":"leetcode","149":"leetcode","150":"leetcode","151":"leetcode","152":"leetcode","153":"leetcode","154":"leetcode","155":"leetcode","156":"leetcode","157":"leetcode","158":"leetcode","159":"leetcode","160":"leetcode","161":"leetcode","162":"leetcode","163":"leetcode","164":"leetcode","165":"leetcode","166":"leetcode","167":"leetcode","168":"leetcode","169":"leetcode","170":"leetcode","171":"leetcode","172":"leetcode","173":"leetcode","174":"leetcode","175":"leetcode","176":"leetcode","177":"leetcode","178":"leetcode","179":"leetcode","180":"leetcode","181":"leetcode","182":"leetcode","183":"leetcode","184":"leetcode","185":"leetcode","186":"leetcode","187":"leetcode","188":"leetcode","189":"leetcode","190":"leetcode","191":"leetcode","192":"leetcode","193":"leetcode","194":"leetcode","195":"leetcode","196":"leetcode","197":"leetcode","198":"leetcode","199":"leetcode","200":"leetcode","201":"leetcode","202":"leetcode","203":"leetcode","204":"leetcode","205":"leetcode","206":"leetcode","207":"leetcode","208":"leetcode","209":"leetcode","210":"leetcode","211":"leetcode","212":"leetcode","213":"leetcode","214":"leetcode","215":"leetcode","216":"leetcode","217":"leetcode","218":"leetcode","219":"leetcode","220":"leetcode","221":"leetcode","222":"leetcode","223":"leetcode","224":"leetcode","225":"leetcode","226":"leetcode","227":"leetcode","228":"leetcode","229":"leetcode","230":"leetcode","231":"leetcode","232":"leetcode","233":"leetcode","234":"leetcode","235":"leetcode","236":"leetcode","237":"leetcode","238":"leetcode","239":"leetcode","240":"leetcode","241":"leetcode","242":"leetcode","243":"leetcode","244":"leetcode","245":"leetcode","246":"leetcode","247":"leetcode","248":"leetcode","249":"leetcode","250":"leetcode","251":"leetcode","252":"leetcode","253":"leetcode","254":"leetcode","255":"leetcode","256":"leetcode","257":"leetcode","258":"leetcode","259":"leetcode","260":"leetcode","261":"leetcode","262":"leetcode","263":"leetcode","264":"leetcode","265":"leetcode","266":"leetcode","267":"leetcode","268":"leetcode","269":"leetcode","270":"leetcode","271":"leetcode","272":"leetcode","273":"leetcode","274":"leetcode","275":"leetcode","276":"leetcode","277":"leetcode","278":"leetcode","279":"leetcode","280":"leetcode","281":"leetcode","282":"leetcode","283":"leetcode","284":"leetcode","285":"leetcode","286":"leetcode","287":"leetcode","288":"leetcode","289":"leetcode","290":"leetcode","291":"leetcode","292":"leetcode","293":"leetcode","294":"leetcode","295":"leetcode","296":"leetcode","297":"leetcode","298":"leetcode","299":"leetcode","300":"leetcode","301":"leetcode","302":"leetcode","303":"leetcode","304":"leetcode","305":"leetcode","306":"leetcode","307":"leetcode","308":"leetcode","309":"leetcode","310":"leetcode","311":"leetcode","312":"leetcode","313":"leetcode","314":"leetcode","315":"leetcode","316":"leetcode","317":"leetcode","318":"leetcode","319":"leetcode","320":"leetcode","321":"leetcode","322":"leetcode","323":"leetcode","324":"leetcode","325":"leetcode","326":"leetcode","327":"leetcode","328":"leetcode","329":"leetcode","330":"leetcode","331":"leetcode","332":"leetcode","333":"leetcode","334":"leetcode","335":"leetcode","336":"leetcode","337":"leetcode","338":"leetcode","339":"leetcode","340":"leetcode","341":"leetcode","342":"leetcode","343":"leetcode","344":"leetcode","345":"leetcode","346":"leetcode","347":"leetcode","348":"leetcode","349":"leetcode","350":"leetcode","351":"leetcode","352":"leetcode","353":"leetcode","354":"leetcode","355":"leetcode","356":"leetcode","357":"leetcode","358":"leetcode","359":"leetcode","360":"leetcode","361":"leetcode","362":"leetcode","363":"leetcode","364":"leetcode","365":"leetcode","366":"leetcode","367":"leetcode","368":"leetcode","369":"leetcode","370":"leetcode","371":"leetcode","372":"leetcode","373":"leetcode","374":"leetcode","375":"leetcode","376":"leetcode","377":"leetcode","378":"leetcode","379":"leetcode","380":"leetcode","381":"leetcode","382":"leetcode","383":"leetcode","384":"leetcode","385":"leetcode","386":"leetcode","387":"leetcode","388":"leetcode","389":"leetcode","390":"leetcode","391":"leetcode","392":"leetcode","393":"leetcode","394":"leetcode","395":"leetcode","396":"leetcode","397":"leetcode","398":"leetcode","399":"leetcode","400":"leetcode","401":"leetcode","402":"leetcode","403":"leetcode","404":"leetcode","405":"leetcode","406":"leetcode","407":"leetcode","408":"leetcode","409":"leetcode","410":"leetcode","411":"leetcode","412":"leetcode","413":"leetcode","414":"leetcode","415":"leetcode","416":"leetcode","417":"leetcode","418":"leetcode","419":"leetcode","420":"leetcode","421":"leetcode","422":"leetcode","423":"leetcode","424":"leetcode","425":"leetcode","426":"leetcode","427":"leetcode","428":"leetcode","429":"leetcode","430":"leetcode","431":"leetcode","432":"leetcode","433":"leetcode","434":"leetcode","435":"leetcode","436":"leetcode","437":"leetcode","438":"leetcode","439":"leetcode","440":"leetcode","441":"leetcode","442":"leetcode","443":"leetcode","444":"leetcode","445":"leetcode","446":"leetcode","447":"leetcode","448":"leetcode","449":"leetcode","450":"leetcode","451":"leetcode","452":"leetcode","453":"leetcode","454":"leetcode","455":"leetcode","456":"leetcode","457":"leetcode","458":"leetcode","459":"leetcode","460":"leetcode","461":"leetcode","462":"leetcode","463":"leetcode","464":"leetcode","465":"leetcode","466":"leetcode","467":"leetcode","468":"leetcode","469":"leetcode","470":"leetcode","471":"leetcode","472":"leetcode","473":"leetcode","474":"leetcode","475":"leetcode","476":"leetcode","477":"leetcode","478":"leetcode","479":"leetcode","480":"leetcode","481":"leetcode","482":"leetcode","483":"leetcode","484":"leetcode","485":"leetcode","486":"leetcode","487":"leetcode","488":"leetcode","489":"leetcode","490":"leetcode","491":"leetcode","492":"leetcode","493":"leetcode","494":"leetcode","495":"leetcode","496":"leetcode","497":"leetcode","498":"leetcode","499":"leetcode","500":"leetcode","501":"leetcode","502":"leetcode","503":"leetcode","504":"leetcode","505":"leetcode","506":"leetcode","507":"leetcode","508":"leetcode","509":"leetcode","510":"leetcode","511":"leetcode","512":"leetcode","513":"leetcode","514":"leetcode","515":"leetcode","516":"leetcode","517":"leetcode","518":"leetcode","519":"leetcode","520":"leetcode","521":"leetcode","522":"leetcode","523":"leetcode","524":"leetcode","525":"leetcode","526":"leetcode","527":"leetcode","528":"leetcode","529":"leetcode","530":"leetcode","531":"leetcode","532":"leetcode","533":"leetcode","534":"leetcode","535":"leetcode","536":"leetcode","537":"leetcode","538":"leetcode","539":"leetcode","540":"leetcode","541":"leetcode","542":"leetcode","543":"leetcode","544":"leetcode","545":"leetcode","546":"leetcode","547":"leetcode","548":"leetcode","549":"leetcode","550":"leetcode","551":"leetcode","552":"leetcode","553":"leetcode","554":"leetcode","555":"leetcode","556":"leetcode","557":"leetcode","558":"leetcode","559":"leetcode","560":"leetcode","561":"leetcode","562":"leetcode","563":"leetcode","564":"leetcode","565":"leetcode","566":"leetcode","567":"leetcode","568":"leetcode","569":"leetcode","570":"leetcode","571":"leetcode","572":"leetcode","573":"leetcode","574":"leetcode","575":"leetcode","576":"leetcode","577":"leetcode","578":"leetcode","579":"leetcode","580":"leetcode","581":"leetcode","582":"leetcode","583":"leetcode","584":"leetcode","585":"leetcode","586":"leetcode","587":"leetcode","588":"leetcode","589":"leetcode","590":"leetcode","591":"leetcode","592":"leetcode","593":"leetcode","594":"leetcode","595":"leetcode","596":"leetcode","597":"leetcode","598":"leetcode","599":"leetcode","600":"leetcode","601":"leetcode","602":"leetcode","603":"leetcode","604":"leetcode","605":"leetcode","606":"leetcode","607":"leetcode","608":"leetcode","609":"leetcode","610":"leetcode","611":"leetcode","612":"leetcode","613":"leetcode","614":"leetcode","615":"leetcode","616":"leetcode","617":"leetcode","618":"leetcode","619":"leetcode","620":"leetcode","621":"leetcode","622":"leetcode","623":"leetcode","624":"leetcode","625":"leetcode","626":"leetcode","627":"leetcode","628":"leetcode","629":"leetcode","630":"leetcode","631":"leetcode","632":"leetcode","633":"leetcode","634":"leetcode","635":"leetcode","636":"leetcode","637":"leetcode","638":"leetcode","639":"leetcode","640":"leetcode","641":"leetcode","642":"leetcode","643":"leetcode","644":"leetcode","645":"leetcode","646":"leetcode","647":"leetcode","648":"leetcode","649":"leetcode","650":"leetcode","651":"leetcode","652":"leetcode","653":"leetcode","654":"leetcode","655":"leetcode","656":"leetcode","657":"leetcode","658":"leetcode","659":"leetcode","660":"leetcode","661":"leetcode","662":"leetcode","663":"leetcode","664":"leetcode","665":"leetcode","666":"leetcode","667":"leetcode","668":"leetcode","669":"leetcode","670":"leetcode","671":"leetcode","672":"leetcode","673":"leetcode","674":"leetcode","675":"leetcode","676":"leetcode","677":"leetcode","678":"leetcode","679":"leetcode","680":"leetcode","681":"leetcode","682":"leetcode","683":"leetcode","684":"leetcode","685":"leetcode","686":"leetcode","687":"leetcode","688":"leetcode","689":"leetcode","690":"leetcode","691":"leetcode","692":"leetcode","693":"leetcode","694":"leetcode","695":"leetcode","696":"leetcode","697":"leetcode","698":"leetcode","699":"leetcode","700":"leetcode","701":"leetcode","702":"leetcode","703":"leetcode","704":"leetcode","705":"leetcode","706":"leetcode","707":"leetcode","708":"leetcode","709":"leetcode","710":"leetcode","711":"leetcode","712":"leetcode","713":"leetcode","714":"leetcode","715":"leetcode","716":"leetcode","717":"leetcode","718":"leetcode","719":"leetcode","720":"leetcode","721":"leetcode","722":"leetcode","723":"leetcode","724":"leetcode","725":"leetcode","726":"leetcode","727":"leetcode","728":"leetcode","729":"leetcode","730":"leetcode","731":"leetcode","732":"leetcode","733":"leetcode","734":"leetcode","735":"leetcode","736":"leetcode","737":"leetcode","738":"leetcode","739":"leetcode","740":"leetcode","741":"leetcode","742":"leetcode","743":"leetcode","744":"leetcode","745":"leetcode","746":"leetcode","747":"leetcode","748":"leetcode","749":"leetcode","750":"leetcode","751":"leetcode","752":"leetcode","753":"leetcode","754":"leetcode","755":"leetcode","756":"leetcode","757":"leetcode","758":"leetcode","759":"leetcode","760":"leetcode","761":"leetcode","762":"leetcode","763":"leetcode","764":"leetcode","765":"leetcode","766":"leetcode","767":"leetcode","768":"leetcode","769":"leetcode","770":"leetcode","771":"leetcode","772":"leetcode","773":"leetcode","774":"leetcode","775":"leetcode","776":"leetcode","777":"leetcode","778":"leetcode","779":"leetcode","780":"leetcode","781":"leetcode","782":"leetcode","783":"leetcode","784":"leetcode","785":"leetcode","786":"leetcode","787":"leetcode","788":"leetcode","789":"leetcode","790":"leetcode","791":"leetcode","792":"leetcode","793":"leetcode","794":"leetcode","795":"leetcode","796":"leetcode","797":"leetcode","798":"leetcode","799":"leetcode","800":"leetcode","801":"leetcode","802":"leetcode","803":"leetcode","804":"leetcode","805":"leetcode","806":"leetcode","807":"leetcode","808":"leetcode","809":"leetcode","810":"leetcode","811":"leetcode","812":"leetcode","813":"leetcode","814":"leetcode","815":"leetcode","816":"leetcode","817":"leetcode","818":"leetcode","819":"leetcode","820":"leetcode","821":"leetcode","822":"leetcode","823":"leetcode","824":"leetcode","825":"leetcode","826":"leetcode","827":"leetcode","828":"leetcode","829":"leetcode","830":"leetcode","831":"leetcode","832":"leetcode","833":"leetcode","834":"leetcode","835":"leetcode","836":"leetcode","837":"leetcode","838":"leetcode","839":"leetcode","840":"leetcode","841":"leetcode","842":"leetcode","843":"leetcode","844":"leetcode","845":"leetcode","846":"leetcode","847":"leetcode","848":"leetcode","849":"leetcode","850":"leetcode","851":"leetcode","852":"leetcode","853":"leetcode","854":"leetcode","855":"leetcode","856":"leetcode","857":"leetcode","858":"leetcode","859":"leetcode","860":"leetcode","861":"leetcode","862":"leetcode","863":"leetcode","864":"leetcode","865":"leetcode","866":"leetcode","867":"leetcode","868":"leetcode","869":"leetcode","870":"leetcode","871":"leetcode","872":"leetcode","873":"leetcode","874":"leetcode","875":"leetcode","876":"leetcode","877":"leetcode","878":"leetcode","879":"leetcode","880":"leetcode","881":"leetcode","882":"leetcode","883":"leetcode","884":"leetcode","885":"leetcode","886":"leetcode","887":"leetcode","888":"leetcode","889":"leetcode","890":"leetcode","891":"leetcode","892":"leetcode","893":"leetcode","894":"leetcode","895":"leetcode","896":"leetcode","897":"leetcode","898":"leetcode","899":"leetcode","900":"leetcode","901":"leetcode","902":"leetcode","903":"leetcode","904":"leetcode","905":"leetcode","906":"leetcode","907":"leetcode","908":"leetcode","909":"leetcode","910":"leetcode","911":"leetcode","912":"leetcode","913":"leetcode","914":"leetcode","915":"leetcode","916":"leetcode","917":"leetcode","918":"leetcode","919":"leetcode","920":"leetcode","921":"leetcode","922":"leetcode","923":"leetcode","924":"leetcode","925":"leetcode","926":"leetcode","927":"leetcode","928":"leetcode","929":"leetcode","930":"leetcode","931":"leetcode","932":"leetcode","933":"leetcode","934":"leetcode","935":"leetcode","936":"leetcode","937":"leetcode","938":"leetcode","939":"leetcode","940":"leetcode","941":"leetcode","942":"leetcode","943":"leetcode","944":"leetcode","945":"leetcode","946":"leetcode","947":"leetcode","948":"leetcode","949":"leetcode","950":"leetcode","951":"leetcode","952":"leetcode","953":"leetcode","954":"leetcode","955":"leetcode","956":"leetcode","957":"leetcode","958":"leetcode","959":"leetcode","960":"leetcode","961":"leetcode","962":"leetcode","963":"leetcode","964":"leetcode","965":"leetcode","966":"leetcode","967":"leetcode","968":"leetcode","969":"leetcode","970":"leetcode","971":"leetcode","972":"leetcode","973":"leetcode","974":"leetcode","975":"leetcode","976":"leetcode","977":"leetcode","978":"leetcode","979":"leetcode","980":"leetcode","981":"leetcode","982":"leetcode","983":"leetcode","984":"leetcode","985":"leetcode","986":"leetcode","987":"leetcode","988":"leetcode","989":"leetcode","990":"leetcode","991":"leetcode","992":"leetcode","993":"leetcode","994":"leetcode","995":"leetcode","996":"leetcode","997":"leetcode","998":"leetcode","999":"leetcode","1000":"leetcode","1001":"leetcode","1002":"leetcode","1003":"leetcode","1004":"leetcode","1005":"leetcode","1006":"leetcode","1007":"leetcode","1008":"leetcode","1009":"leetcode","1010":"leetcode","1011":"leetcode","1012":"leetcode","1013":"leetcode","1014":"leetcode","1015":"leetcode","1016":"leetcode","1017":"leetcode","1018":"leetcode","1019":"leetcode","1020":"leetcode","1021":"leetcode","1022":"leetcode","1023":"leetcode","1024":"leetcode","1025":"leetcode","1026":"leetcode","1027":"leetcode","1028":"leetcode","1029":"leetcode","1030":"leetcode","1031":"leetcode","1032":"leetcode","1033":"leetcode","1034":"leetcode","1035":"leetcode","1036":"leetcode","1037":"leetcode","1038":"leetcode","1039":"leetcode","1040":"leetcode","1041":"leetcode","1042":"leetcode","1043":"leetcode","1044":"leetcode","1045":"leetcode","1046":"leetcode","1047":"leetcode","1048":"leetcode","1049":"leetcode","1050":"leetcode","1051":"leetcode","1052":"leetcode","1053":"leetcode","1054":"leetcode","1055":"leetcode","1056":"leetcode","1057":"leetcode","1058":"leetcode","1059":"leetcode","1060":"leetcode","1061":"leetcode","1062":"leetcode","1063":"leetcode","1064":"leetcode","1065":"leetcode","1066":"leetcode","1067":"leetcode","1068":"leetcode","1069":"leetcode","1070":"leetcode","1071":"leetcode","1072":"leetcode","1073":"leetcode","1074":"leetcode","1075":"leetcode","1076":"leetcode","1077":"leetcode","1078":"leetcode","1079":"leetcode","1080":"leetcode","1081":"leetcode","1082":"leetcode","1083":"leetcode","1084":"leetcode","1085":"leetcode","1086":"leetcode","1087":"leetcode","1088":"leetcode","1089":"leetcode","1090":"leetcode","1091":"leetcode","1092":"leetcode","1093":"leetcode","1094":"leetcode","1095":"leetcode","1096":"leetcode","1097":"leetcode","1098":"leetcode","1099":"leetcode","1100":"leetcode","1101":"leetcode","1102":"leetcode","1103":"leetcode","1104":"leetcode","1105":"leetcode","1106":"leetcode","1107":"leetcode","1108":"leetcode","1109":"leetcode","1110":"leetcode","1111":"leetcode","1112":"leetcode","1113":"leetcode","1114":"leetcode","1115":"leetcode","1116":"leetcode","1117":"leetcode","1118":"leetcode","1119":"leetcode","1120":"leetcode","1121":"leetcode","1122":"leetcode","1123":"leetcode","1124":"leetcode","1125":"leetcode","1126":"leetcode","1127":"leetcode","1128":"leetcode","1129":"leetcode","1130":"leetcode","1131":"leetcode","1132":"leetcode","1133":"leetcode","1134":"leetcode","1135":"leetcode","1136":"leetcode","1137":"leetcode","1138":"leetcode","1139":"leetcode","1140":"leetcode","1141":"leetcode","1142":"leetcode","1143":"leetcode","1144":"leetcode","1145":"leetcode","1146":"leetcode","1147":"leetcode","1148":"leetcode","1149":"leetcode","1150":"leetcode","1151":"leetcode","1152":"leetcode","1153":"leetcode","1154":"leetcode","1155":"leetcode","1156":"leetcode","1157":"leetcode","1158":"leetcode","1159":"leetcode","1160":"leetcode","1161":"leetcode","1162":"leetcode","1163":"leetcode","1164":"leetcode","1165":"leetcode","1166":"leetcode","1167":"leetcode","1168":"leetcode","1169":"leetcode","1170":"leetcode","1171":"leetcode","1172":"leetcode","1173":"leetcode","1174":"leetcode","1175":"leetcode","1176":"leetcode","1177":"leetcode","1178":"leetcode","1179":"leetcode","1180":"leetcode","1181":"leetcode","1182":"leetcode","1183":"leetcode","1184":"leetcode","1185":"leetcode","1186":"leetcode","1187":"leetcode","1188":"leetcode","1189":"leetcode","1190":"leetcode","1191":"leetcode","1192":"leetcode","1193":"leetcode","1194":"leetcode","1195":"leetcode","1196":"leetcode","1197":"leetcode","1198":"leetcode","1199":"leetcode","1200":"leetcode","1201":"leetcode","1202":"leetcode","1203":"leetcode","1204":"leetcode","1205":"leetcode","1206":"leetcode","1207":"leetcode","1208":"leetcode","1209":"leetcode","1210":"leetcode","1211":"leetcode","1212":"leetcode","1213":"leetcode","1214":"leetcode","1215":"leetcode","1216":"leetcode","1217":"leetcode","1218":"leetcode","1219":"leetcode","1220":"leetcode","1221":"leetcode","1222":"leetcode","1223":"leetcode","1224":"leetcode","1225":"leetcode","1226":"leetcode","1227":"leetcode","1228":"leetcode","1229":"leetcode","1230":"leetcode","1231":"leetcode","1232":"leetcode","1233":"leetcode","1234":"leetcode","1235":"leetcode","1236":"leetcode","1237":"leetcode","1238":"leetcode","1239":"leetcode","1240":"leetcode","1241":"leetcode","1242":"leetcode","1243":"leetcode","1244":"leetcode","1245":"leetcode","1246":"leetcode","1247":"leetcode","1248":"leetcode","1249":"leetcode","1250":"leetcode","1251":"leetcode","1252":"leetcode","1253":"leetcode","1254":"leetcode","1255":"leetcode","1256":"leetcode","1257":"leetcode","1258":"leetcode","1259":"leetcode","1260":"leetcode","1261":"leetcode","1262":"leetcode","1263":"leetcode","1264":"leetcode","1265":"leetcode","1266":"leetcode","1267":"leetcode","1268":"leetcode","1269":"leetcode","1270":"leetcode","1271":"leetcode","1272":"leetcode","1273":"leetcode","1274":"leetcode","1275":"leetcode","1276":"leetcode","1277":"leetcode","1278":"leetcode","1279":"leetcode","1280":"leetcode","1281":"leetcode","1282":"leetcode","1283":"leetcode","1284":"leetcode","1285":"leetcode","1286":"leetcode","1287":"leetcode","1288":"leetcode","1289":"leetcode","1290":"leetcode","1291":"leetcode","1292":"leetcode","1293":"leetcode","1294":"leetcode","1295":"leetcode","1296":"leetcode","1297":"leetcode","1298":"leetcode","1299":"leetcode","1300":"leetcode","1301":"leetcode","1302":"leetcode","1303":"leetcode","1304":"leetcode","1305":"leetcode","1306":"leetcode","1307":"leetcode","1308":"leetcode","1309":"leetcode","1310":"leetcode","1311":"leetcode","1312":"leetcode","1313":"leetcode","1314":"leetcode","1315":"leetcode","1316":"leetcode","1317":"leetcode","1318":"leetcode","1319":"leetcode","1320":"leetcode","1321":"leetcode","1322":"leetcode","1323":"leetcode","1324":"leetcode","1325":"leetcode","1326":"leetcode","1327":"leetcode","1328":"leetcode","1329":"leetcode","1330":"leetcode","1331":"leetcode","1332":"leetcode","1333":"leetcode","1334":"leetcode","1335":"leetcode","1336":"leetcode","1337":"leetcode","1338":"leetcode","1339":"leetcode","1340":"leetcode","1341":"leetcode","1342":"leetcode","1343":"leetcode","1344":"leetcode","1345":"leetcode","1346":"leetcode","1347":"leetcode","1348":"leetcode","1349":"leetcode","1350":"leetcode","1351":"leetcode","1352":"leetcode","1353":"leetcode","1354":"leetcode","1355":"leetcode","1356":"leetcode","1357":"leetcode","1358":"leetcode","1359":"leetcode","1360":"leetcode","1361":"leetcode","1362":"leetcode","1363":"leetcode","1364":"leetcode","1365":"leetcode","1366":"leetcode","1367":"leetcode","1368":"leetcode","1369":"leetcode","1370":"leetcode","1371":"leetcode","1372":"leetcode","1373":"leetcode","1374":"leetcode","1375":"leetcode","1376":"leetcode","1377":"leetcode","1378":"leetcode","1379":"leetcode","1380":"leetcode","1381":"leetcode","1382":"leetcode","1383":"leetcode","1384":"leetcode","1385":"leetcode","1386":"leetcode","1387":"leetcode","1388":"leetcode","1389":"leetcode","1390":"leetcode","1391":"leetcode","1392":"leetcode","1393":"leetcode","1394":"leetcode","1395":"leetcode","1396":"leetcode","1397":"leetcode","1398":"leetcode","1399":"leetcode","1400":"leetcode","1401":"leetcode","1402":"leetcode","1403":"leetcode","1404":"leetcode","1405":"leetcode","1406":"leetcode","1407":"leetcode","1408":"leetcode","1409":"leetcode","1410":"leetcode","1411":"leetcode","1412":"leetcode","1413":"leetcode","1414":"leetcode","1415":"leetcode","1416":"leetcode","1417":"leetcode","1418":"leetcode","1419":"leetcode","1420":"leetcode","1421":"leetcode","1422":"leetcode","1423":"leetcode","1424":"leetcode","1425":"leetcode","1426":"leetcode","1427":"leetcode","1428":"leetcode","1429":"leetcode","1430":"leetcode","1431":"leetcode","1432":"leetcode","1433":"leetcode","1434":"leetcode","1435":"leetcode","1436":"leetcode","1437":"leetcode","1438":"leetcode","1439":"leetcode","1440":"leetcode","1441":"leetcode","1442":"leetcode","1443":"leetcode","1444":"leetcode","1445":"leetcode","1446":"leetcode","1447":"leetcode","1448":"leetcode","1449":"leetcode","1450":"leetcode","1451":"leetcode","1452":"leetcode","1453":"leetcode","1454":"leetcode","1455":"leetcode","1456":"leetcode","1457":"leetcode","1458":"leetcode","1459":"leetcode","1460":"leetcode","1461":"leetcode","1462":"leetcode","1463":"leetcode","1464":"leetcode","1465":"leetcode","1466":"leetcode","1467":"leetcode","1468":"leetcode","1469":"leetcode","1470":"leetcode","1471":"leetcode","1472":"leetcode","1473":"leetcode","1474":"leetcode","1475":"leetcode","1476":"leetcode","1477":"leetcode","1478":"leetcode","1479":"leetcode","1480":"leetcode","1481":"leetcode","1482":"leetcode","1483":"leetcode","1484":"leetcode","1485":"leetcode","1486":"leetcode","1487":"leetcode","1488":"leetcode","1489":"leetcode","1490":"leetcode","1491":"leetcode","1492":"leetcode","1493":"leetcode","1494":"leetcode","1495":"leetcode","1496":"leetcode","1497":"leetcode","1498":"leetcode","1499":"leetcode","1500":"leetcode","1501":"leetcode","1502":"leetcode","1503":"leetcode","1504":"leetcode","1505":"leetcode","1506":"leetcode","1507":"leetcode","1508":"leetcode","1509":"leetcode","1510":"leetcode","1511":"leetcode","1512":"leetcode","1513":"leetcode","1514":"leetcode","1515":"leetcode","1516":"leetcode","1517":"leetcode","1518":"leetcode","1519":"leetcode","1520":"leetcode","1521":"leetcode","1522":"leetcode","1523":"leetcode","1524":"leetcode","1525":"leetcode","1526":"leetcode","1527":"leetcode","1528":"leetcode","1529":"leetcode","1530":"leetcode","1531":"leetcode","1532":"leetcode","1533":"leetcode","1534":"leetcode","1535":"leetcode","1536":"leetcode","1537":"leetcode","1538":"leetcode","1539":"leetcode","1540":"leetcode","1541":"leetcode","1542":"leetcode","1543":"leetcode","1544":"leetcode","1545":"leetcode","1546":"leetcode","1547":"leetcode","1548":"leetcode","1549":"leetcode","1550":"leetcode","1551":"leetcode","1552":"leetcode","1553":"leetcode","1554":"leetcode","1555":"leetcode","1556":"leetcode","1557":"leetcode","1558":"leetcode","1559":"leetcode","1560":"leetcode","1561":"leetcode","1562":"leetcode","1563":"leetcode","1564":"leetcode","1565":"leetcode","1566":"leetcode","1567":"leetcode","1568":"leetcode","1569":"leetcode","1570":"leetcode","1571":"leetcode","1572":"leetcode","1573":"leetcode","1574":"leetcode","1575":"leetcode","1576":"leetcode","1577":"leetcode","1578":"leetcode","1579":"leetcode","1580":"leetcode","1581":"leetcode","1582":"leetcode","1583":"leetcode","1584":"leetcode","1585":"leetcode","1586":"leetcode","1587":"leetcode","1588":"leetcode","1589":"leetcode","1590":"leetcode","1591":"leetcode","1592":"leetcode","1593":"leetcode","1594":"leetcode","1595":"leetcode","1596":"leetcode","1597":"leetcode","1598":"leetcode","1599":"leetcode","1600":"leetcode","1601":"leetcode","1602":"leetcode","1603":"leetcode","1604":"leetcode","1605":"leetcode","1606":"leetcode","1607":"leetcode","1608":"leetcode","1609":"leetcode","1610":"leetcode","1611":"leetcode","1612":"leetcode","1613":"leetcode","1614":"leetcode","1615":"leetcode","1616":"leetcode","1617":"leetcode","1618":"leetcode","1619":"leetcode","1620":"leetcode","1621":"leetcode","1622":"leetcode","1623":"leetcode","1624":"leetcode","1625":"leetcode","1626":"leetcode","1627":"leetcode","1628":"leetcode","1629":"leetcode","1630":"leetcode","1631":"leetcode","1632":"leetcode","1633":"leetcode","1634":"leetcode","1635":"leetcode","1636":"leetcode","1637":"leetcode","1638":"leetcode","1639":"leetcode","1640":"leetcode","1641":"leetcode","1642":"leetcode","1643":"leetcode","1644":"leetcode","1645":"leetcode","1646":"leetcode","1647":"leetcode","1648":"leetcode","1649":"leetcode","1650":"leetcode","1651":"leetcode","1652":"leetcode","1653":"leetcode","1654":"leetcode","1655":"leetcode","1656":"leetcode","1657":"leetcode","1658":"leetcode","1659":"leetcode","1660":"leetcode","1661":"leetcode","1662":"leetcode","1663":"leetcode","1664":"leetcode","1665":"leetcode","1666":"leetcode","1667":"leetcode","1668":"leetcode","1669":"leetcode","1670":"leetcode","1671":"leetcode","1672":"leetcode","1673":"leetcode","1674":"leetcode","1675":"leetcode","1676":"leetcode","1677":"leetcode","1678":"leetcode","1679":"leetcode","1680":"leetcode","1681":"leetcode","1682":"leetcode","1683":"leetcode","1684":"leetcode","1685":"leetcode","1686":"leetcode","1687":"leetcode","1688":"leetcode","1689":"leetcode","1690":"leetcode","1691":"leetcode","1692":"leetcode","1693":"leetcode","1694":"leetcode","1695":"leetcode","1696":"leetcode","1697":"leetcode","1698":"leetcode","1699":"leetcode","1700":"leetcode","1701":"leetcode","1702":"leetcode","1703":"leetcode","1704":"leetcode","1705":"leetcode","1706":"leetcode","1707":"leetcode","1708":"leetcode","1709":"leetcode","1710":"leetcode","1711":"leetcode","1712":"leetcode","1713":"leetcode","1714":"leetcode","1715":"leetcode","1716":"leetcode","1717":"leetcode","1718":"leetcode","1719":"leetcode","1720":"leetcode","1721":"leetcode","1722":"leetcode","1723":"leetcode","1724":"leetcode","1725":"leetcode","1726":"leetcode","1727":"leetcode","1728":"leetcode","1729":"leetcode","1730":"leetcode","1731":"leetcode","1732":"leetcode","1733":"leetcode","1734":"leetcode","1735":"leetcode","1736":"leetcode","1737":"leetcode","1738":"leetcode","1739":"leetcode","1740":"leetcode","1741":"leetcode","1742":"leetcode","1743":"leetcode","1744":"leetcode","1745":"leetcode","1746":"leetcode","1747":"leetcode","1748":"leetcode","1749":"leetcode","1750":"leetcode","1751":"leetcode","1752":"leetcode","1753":"leetcode","1754":"leetcode","1755":"leetcode","1756":"leetcode","1757":"leetcode","1758":"leetcode","1759":"leetcode","1760":"leetcode","1761":"leetcode","1762":"leetcode","1763":"leetcode","1764":"leetcode","1765":"leetcode","1766":"leetcode","1767":"leetcode","1768":"leetcode","1769":"leetcode","1770":"leetcode","1771":"leetcode","1772":"leetcode","1773":"leetcode","1774":"leetcode","1775":"leetcode","1776":"leetcode","1777":"leetcode","1778":"leetcode","1779":"leetcode","1780":"leetcode","1781":"leetcode","1782":"leetcode","1783":"leetcode","1784":"leetcode","1785":"leetcode","1786":"leetcode","1787":"leetcode","1788":"leetcode","1789":"leetcode","1790":"leetcode","1791":"leetcode","1792":"leetcode","1793":"leetcode","1794":"leetcode","1795":"leetcode","1796":"leetcode","1797":"leetcode","1798":"leetcode","1799":"leetcode","1800":"leetcode","1801":"leetcode","1802":"leetcode","1803":"leetcode","1804":"leetcode","1805":"leetcode","1806":"leetcode","1807":"leetcode","1808":"leetcode","1809":"leetcode","1810":"leetcode","1811":"leetcode","1812":"leetcode","1813":"leetcode","1814":"leetcode","1815":"leetcode","1816":"leetcode","1817":"leetcode","1818":"leetcode","1819":"leetcode","1820":"leetcode","1821":"leetcode","1822":"leetcode","1823":"leetcode","1824":"leetcode","1825":"leetcode","1826":"leetcode","1827":"leetcode","1828":"leetcode","1829":"leetcode","1830":"leetcode","1831":"leetcode","1832":"leetcode","1833":"leetcode","1834":"leetcode","1835":"leetcode","1836":"leetcode","1837":"leetcode","1838":"leetcode","1839":"leetcode","1840":"leetcode","1841":"leetcode","1842":"leetcode","1843":"leetcode","1844":"leetcode","1845":"leetcode","1846":"leetcode","1847":"leetcode","1848":"leetcode","1849":"leetcode","1850":"leetcode","1851":"leetcode","1852":"leetcode","1853":"leetcode","1854":"leetcode","1855":"leetcode","1856":"leetcode","1857":"leetcode","1858":"leetcode","1859":"leetcode","1860":"leetcode","1861":"leetcode","1862":"leetcode","1863":"leetcode","1864":"leetcode","1865":"leetcode","1866":"leetcode","1867":"leetcode","1868":"leetcode","1869":"leetcode","1870":"leetcode","1871":"leetcode","1872":"leetcode","1873":"leetcode","1874":"leetcode","1875":"leetcode","1876":"leetcode","1877":"leetcode","1878":"leetcode","1879":"leetcode","1880":"leetcode","1881":"leetcode","1882":"leetcode","1883":"leetcode","1884":"leetcode","1885":"leetcode","1886":"leetcode","1887":"leetcode","1888":"leetcode","1889":"leetcode","1890":"leetcode","1891":"leetcode","1892":"leetcode","1893":"leetcode","1894":"leetcode","1895":"leetcode","1896":"leetcode","1897":"leetcode","1898":"leetcode","1899":"leetcode","1900":"leetcode","1901":"leetcode","1902":"leetcode","1903":"leetcode","1904":"leetcode","1905":"leetcode","1906":"leetcode","1907":"leetcode","1908":"leetcode","1909":"leetcode","1910":"leetcode","1911":"leetcode","1912":"leetcode","1913":"leetcode","1914":"leetcode","1915":"leetcode","1916":"leetcode","1917":"leetcode","1918":"leetcode","1919":"leetcode","1920":"leetcode","1921":"leetcode","1922":"leetcode","1923":"leetcode","1924":"leetcode","1925":"leetcode","1926":"leetcode","1927":"leetcode","1928":"leetcode","1929":"leetcode","1930":"leetcode","1931":"leetcode","1932":"leetcode","1933":"leetcode","1934":"leetcode","1935":"leetcode","1936":"leetcode","1937":"leetcode","1938":"leetcode","1939":"leetcode","1940":"leetcode","1941":"leetcode","1942":"leetcode","1943":"leetcode","1944":"leetcode","1945":"leetcode","1946":"leetcode","1947":"leetcode","1948":"leetcode","1949":"leetcode","1950":"leetcode","1951":"leetcode","1952":"leetcode","1953":"leetcode","1954":"leetcode","1955":"leetcode","1956":"leetcode","1957":"leetcode","1958":"leetcode","1959":"leetcode","1960":"leetcode","1961":"leetcode","1962":"leetcode","1963":"leetcode","1964":"leetcode","1965":"leetcode","1966":"leetcode","1967":"leetcode","1968":"leetcode","1969":"leetcode","1970":"leetcode","1971":"leetcode","1972":"leetcode","1973":"leetcode","1974":"leetcode","1975":"leetcode","1976":"leetcode","1977":"leetcode","1978":"leetcode","1979":"leetcode","1980":"leetcode","1981":"leetcode","1982":"leetcode","1983":"leetcode","1984":"leetcode","1985":"leetcode","1986":"leetcode","1987":"leetcode","1988":"leetcode","1989":"leetcode","1990":"leetcode","1991":"leetcode","1992":"leetcode","1993":"leetcode","1994":"leetcode","1995":"leetcode","1996":"leetcode","1997":"leetcode","1998":"leetcode","1999":"leetcode","2000":"leetcode","2001":"leetcode","2002":"leetcode","2003":"leetcode","2004":"leetcode","2005":"leetcode","2006":"leetcode","2007":"leetcode","2008":"leetcode","2009":"leetcode","2010":"leetcode","2011":"leetcode","2012":"leetcode","2013":"leetcode","2014":"leetcode","2015":"leetcode","2016":"leetcode","2017":"leetcode","2018":"leetcode","2019":"leetcode","2020":"leetcode","2021":"leetcode","2022":"leetcode","2023":"leetcode","2024":"leetcode","2025":"leetcode","2026":"leetcode","2027":"leetcode","2028":"leetcode","2029":"leetcode","2030":"leetcode","2031":"leetcode","2032":"leetcode","2033":"leetcode","2034":"leetcode","2035":"leetcode","2036":"leetcode","2037":"leetcode","2038":"leetcode","2039":"leetcode","2040":"leetcode","2041":"leetcode","2042":"leetcode","2043":"leetcode","2044":"leetcode","2045":"leetcode","2046":"leetcode","2047":"leetcode","2048":"leetcode","2049":"leetcode","2050":"leetcode","2051":"leetcode","2052":"leetcode","2053":"leetcode","2054":"leetcode","2055":"leetcode","2056":"leetcode","2057":"leetcode","2058":"leetcode","2059":"leetcode","2060":"leetcode","2061":"leetcode","2062":"leetcode","2063":"leetcode","2064":"leetcode","2065":"leetcode","2066":"leetcode","2067":"leetcode","2068":"leetcode","2069":"leetcode","2070":"leetcode","2071":"leetcode","2072":"leetcode","2073":"leetcode","2074":"leetcode","2075":"leetcode","2076":"leetcode","2077":"leetcode","2078":"leetcode","2079":"leetcode","2080":"leetcode","2081":"leetcode","2082":"leetcode","2083":"leetcode","2084":"leetcode","2085":"leetcode","2086":"leetcode","2087":"leetcode","2088":"leetcode","2089":"leetcode","2090":"leetcode","2091":"leetcode","2092":"leetcode","2093":"leetcode","2094":"leetcode","2095":"leetcode","2096":"leetcode","2097":"leetcode","2098":"leetcode","2099":"leetcode","2100":"leetcode","2101":"leetcode","2102":"leetcode","2103":"leetcode","2104":"leetcode","2105":"leetcode","2106":"leetcode","2107":"leetcode","2108":"leetcode","2109":"leetcode","2110":"leetcode","2111":"leetcode","2112":"leetcode","2113":"leetcode","2114":"leetcode","2115":"leetcode","2116":"leetcode","2117":"leetcode","2118":"leetcode","2119":"leetcode","2120":"leetcode","2121":"leetcode","2122":"leetcode","2123":"leetcode","2124":"leetcode","2125":"leetcode","2126":"leetcode","2127":"leetcode","2128":"leetcode","2129":"leetcode","2130":"leetcode","2131":"leetcode","2132":"leetcode","2133":"leetcode","2134":"leetcode","2135":"leetcode","2136":"leetcode","2137":"leetcode","2138":"leetcode","2139":"leetcode","2140":"leetcode","2141":"leetcode","2142":"leetcode","2143":"leetcode","2144":"leetcode","2145":"leetcode","2146":"leetcode","2147":"leetcode","2148":"leetcode","2149":"leetcode","2150":"leetcode","2151":"leetcode","2152":"leetcode","2153":"leetcode","2154":"leetcode","2155":"leetcode","2156":"leetcode","2157":"leetcode","2158":"leetcode","2159":"leetcode","2160":"leetcode","2161":"leetcode","2162":"leetcode","2163":"leetcode","2164":"leetcode","2165":"leetcode","2166":"leetcode","2167":"leetcode","2168":"leetcode","2169":"leetcode","2170":"leetcode","2171":"leetcode","2172":"leetcode","2173":"leetcode","2174":"leetcode","2175":"leetcode","2176":"leetcode","2177":"leetcode","2178":"leetcode","2179":"leetcode","2180":"leetcode","2181":"leetcode","2182":"leetcode","2183":"leetcode","2184":"leetcode","2185":"leetcode","2186":"leetcode","2187":"leetcode","2188":"leetcode","2189":"leetcode","2190":"leetcode","2191":"leetcode","2192":"leetcode","2193":"leetcode","2194":"leetcode","2195":"leetcode","2196":"leetcode","2197":"leetcode","2198":"leetcode","2199":"leetcode","2200":"leetcode","2201":"leetcode","2202":"leetcode","2203":"leetcode","2204":"leetcode","2205":"leetcode","2206":"leetcode","2207":"leetcode","2208":"leetcode","2209":"leetcode","2210":"leetcode","2211":"leetcode","2212":"leetcode","2213":"leetcode","2214":"leetcode","2215":"leetcode","2216":"leetcode","2217":"leetcode","2218":"leetcode","2219":"leetcode","2220":"leetcode","2221":"leetcode","2222":"leetcode","2223":"leetcode","2224":"leetcode","2225":"leetcode","2226":"leetcode","2227":"leetcode","2228":"leetcode","2229":"leetcode","2230":"leetcode","2231":"leetcode","2232":"leetcode","2233":"leetcode","2234":"leetcode","2235":"leetcode","2236":"leetcode","2237":"leetcode","2238":"leetcode","2239":"leetcode","2240":"leetcode","2241":"leetcode","2242":"leetcode","2243":"leetcode","2244":"leetcode","2245":"leetcode","2246":"leetcode","2247":"leetcode","2248":"leetcode","2249":"leetcode","2250":"leetcode","2251":"leetcode","2252":"leetcode","2253":"leetcode","2254":"leetcode","2255":"leetcode","2256":"leetcode","2257":"leetcode","2258":"leetcode","2259":"leetcode","2260":"leetcode","2261":"leetcode","2262":"leetcode","2263":"leetcode","2264":"leetcode","2265":"leetcode","2266":"leetcode","2267":"leetcode","2268":"leetcode","2269":"leetcode","2270":"leetcode","2271":"leetcode","2272":"leetcode","2273":"leetcode","2274":"leetcode","2275":"leetcode","2276":"leetcode","2277":"leetcode","2278":"leetcode","2279":"leetcode","2280":"leetcode","2281":"leetcode","2282":"leetcode","2283":"leetcode","2284":"leetcode","2285":"leetcode","2286":"leetcode","2287":"leetcode","2288":"leetcode","2289":"leetcode","2290":"leetcode","2291":"leetcode","2292":"leetcode","2293":"leetcode","2294":"leetcode","2295":"leetcode","2296":"leetcode","2297":"leetcode","2298":"leetcode","2299":"leetcode","2300":"leetcode","2301":"leetcode","2302":"leetcode","2303":"leetcode","2304":"leetcode","2305":"leetcode","2306":"leetcode","2307":"leetcode","2308":"leetcode","2309":"leetcode","2310":"leetcode","2311":"leetcode","2312":"leetcode","2313":"leetcode","2314":"leetcode","2315":"leetcode","2316":"leetcode","2317":"leetcode","2318":"leetcode","2319":"leetcode","2320":"leetcode","2321":"leetcode","2322":"leetcode","2323":"leetcode","2324":"leetcode","2325":"leetcode","2326":"leetcode","2327":"leetcode","2328":"leetcode","2329":"leetcode","2330":"leetcode","2331":"leetcode","2332":"leetcode","2333":"leetcode","2334":"leetcode","2335":"leetcode","2336":"leetcode","2337":"leetcode","2338":"leetcode","2339":"leetcode","2340":"leetcode","2341":"leetcode","2342":"leetcode","2343":"leetcode","2344":"leetcode","2345":"leetcode","2346":"leetcode","2347":"leetcode","2348":"leetcode","2349":"leetcode","2350":"leetcode","2351":"leetcode","2352":"leetcode","2353":"leetcode","2354":"leetcode","2355":"leetcode","2356":"leetcode","2357":"leetcode","2358":"leetcode","2359":"leetcode","2360":"leetcode","2361":"leetcode","2362":"leetcode","2363":"leetcode","2364":"leetcode","2365":"leetcode","2366":"leetcode","2367":"leetcode","2368":"leetcode","2369":"leetcode","2370":"leetcode","2371":"leetcode","2372":"leetcode","2373":"leetcode","2374":"leetcode","2375":"leetcode","2376":"leetcode","2377":"leetcode","2378":"leetcode","2379":"leetcode","2380":"leetcode","2381":"leetcode","2382":"leetcode","2383":"leetcode","2384":"leetcode","2385":"leetcode","2386":"leetcode","2387":"leetcode","2388":"leetcode","2389":"leetcode","2390":"leetcode","2391":"leetcode","2392":"leetcode","2393":"leetcode","2394":"leetcode","2395":"leetcode","2396":"leetcode","2397":"leetcode","2398":"leetcode","2399":"leetcode","2400":"leetcode","2401":"leetcode","2402":"leetcode","2403":"leetcode","2404":"leetcode","2405":"leetcode","2406":"leetcode","2407":"leetcode","2408":"leetcode","2409":"leetcode","2410":"leetcode","2411":"leetcode","2412":"leetcode","2413":"leetcode","2414":"leetcode","2415":"leetcode","2416":"leetcode","2417":"leetcode","2418":"leetcode","2419":"leetcode","2420":"leetcode","2421":"leetcode","2422":"leetcode","2423":"leetcode","2424":"leetcode","2425":"leetcode","2426":"leetcode"},"upvotes":{"0":926,"1":58400,"2":31800,"3":28800,"4":7900,"5":13400,"6":13000,"7":12300,"8":29700,"9":7400,"10":14700,"11":18000,"12":31400,"13":10600,"14":18900,"15":11500,"16":19200,"17":24500,"18":22200,"19":21400,"20":19700,"21":12100,"22":14000,"23":15300,"24":3000,"25":6100,"26":5300,"27":2000,"28":18800,"29":12500,"30":26700,"31":20900,"32":16500,"33":10900,"34":9700,"35":4100,"36":19100,"37":11100,"38":17000,"39":32600,"40":7200,"41":8400,"42":14900,"43":19300,"44":8600,"45":17900,"46":19600,"47":10000,"48":12600,"49":3900,"50":34500,"51":15200,"52":19700,"53":22500,"54":10600,"55":5400,"56":6800,"57":9900,"58":16800,"59":8900,"60":12600,"61":1300,"62":9600,"63":3800,"64":8400,"65":22300,"66":5700,"67":15100,"68":16000,"69":18900,"70":18200,"71":8300,"72":17500,"73":16100,"74":7100,"75":8600,"76":8900,"77":8900,"78":17500,"79":10700,"80":7400,"81":3400,"82":15500,"83":2300,"84":9900,"85":12100,"86":11800,"87":13700,"88":7600,"89":10400,"90":8300,"91":17000,"92":8000,"93":11700,"94":15600,"95":11000,"96":13000,"97":15300,"98":8100,"99":11100,"100":7500,"101":10900,"102":7400,"103":9800,"104":8000,"105":12500,"106":6700,"107":9800,"108":5900,"109":13100,"110":4900,"111":9700,"112":31600,"113":13900,"114":9800,"115":16900,"116":9600,"117":6100,"118":12200,"119":20400,"120":8100,"121":8800,"122":13100,"123":9600,"124":12200,"125":8000,"126":16800,"127":8000,"128":14100,"129":17400,"130":7300,"131":15800,"132":13800,"133":11300,"134":8100,"135":7200,"136":21000,"137":3100,"138":11800,"139":4200,"140":7800,"141":8700,"142":18800,"143":13500,"144":4700,"145":14400,"146":15200,"147":12400,"148":3300,"149":2100,"150":11900,"151":5600,"152":19700,"153":4800,"154":3300,"155":5900,"156":3600,"157":3700,"158":2000,"159":2200,"160":8900,"161":2200,"162":2600,"163":2100,"164":2700,"165":2100,"166":2200,"167":3400,"168":7500,"169":18400,"170":6600,"171":546,"172":429,"173":150,"174":393,"175":1700,"176":3200,"177":21400,"178":12200,"179":23100,"180":4000,"181":10600,"182":8400,"183":8100,"184":9200,"185":21900,"186":16500,"187":11700,"188":12800,"189":10900,"190":7700,"191":9500,"192":10000,"193":4200,"194":17300,"195":6100,"196":12200,"197":5900,"198":6300,"199":1000,"200":10200,"201":8800,"202":6200,"203":14100,"204":6200,"205":4000,"206":9800,"207":11600,"208":6900,"209":7800,"210":1600,"211":16700,"212":23000,"213":12100,"214":6100,"215":12400,"216":6700,"217":4900,"218":6400,"219":1300,"220":6600,"221":12400,"222":3600,"223":1400,"224":370,"225":8500,"226":11300,"227":3400,"228":17000,"229":1900,"230":23600,"231":6400,"232":7400,"233":1800,"234":12100,"235":10300,"236":2500,"237":21100,"238":5900,"239":5000,"240":1200,"241":4800,"242":9500,"243":8300,"244":9100,"245":8900,"246":8700,"247":3500,"248":2700,"249":2000,"250":19200,"251":3100,"252":3100,"253":2300,"254":10200,"255":9000,"256":2300,"257":2400,"258":5900,"259":8200,"260":391,"261":4500,"262":8600,"263":11200,"264":4900,"265":4000,"266":5200,"267":8700,"268":4700,"269":6200,"270":7700,"271":1800,"272":6100,"273":4000,"274":1600,"275":3500,"276":1500,"277":4300,"278":6000,"279":4300,"280":957,"281":6400,"282":3800,"283":2200,"284":5200,"285":7400,"286":9300,"287":2300,"288":3100,"289":5100,"290":1400,"291":459,"292":2700,"293":9000,"294":1300,"295":5000,"296":1600,"297":888,"298":9800,"299":12900,"300":6300,"301":1600,"302":1300,"303":1300,"304":9400,"305":1100,"306":1400,"307":5600,"308":5500,"309":1300,"310":7100,"311":3800,"312":6000,"313":10000,"314":2800,"315":5400,"316":3100,"317":5100,"318":12500,"319":7500,"320":2300,"321":833,"322":11000,"323":1500,"324":3600,"325":2000,"326":3000,"327":800,"328":8300,"329":2200,"330":11100,"331":12500,"332":1300,"333":3900,"334":10500,"335":5200,"336":5900,"337":3400,"338":845,"339":9500,"340":9300,"341":8400,"342":7500,"343":2600,"344":4900,"345":7300,"346":702,"347":1800,"348":6500,"349":5800,"350":3900,"351":3400,"352":6900,"353":2700,"354":410,"355":1000,"356":1100,"357":3900,"358":3900,"359":5500,"360":2100,"361":3100,"362":2200,"363":457,"364":177,"365":3300,"366":324,"367":1100,"368":394,"369":5900,"370":5900,"371":458,"372":3700,"373":711,"374":6300,"375":11000,"376":1200,"377":8200,"378":484,"379":3500,"380":1600,"381":3800,"382":8100,"383":812,"384":1900,"385":1100,"386":2300,"387":8300,"388":876,"389":3800,"390":1500,"391":3600,"392":9700,"393":777,"394":9500,"395":433,"396":3400,"397":45,"398":519,"399":6300,"400":1800,"401":8000,"402":2000,"403":2000,"404":4400,"405":3900,"406":2000,"407":718,"408":5300,"409":2500,"410":2000,"411":9700,"412":14100,"413":2300,"414":9900,"415":988,"416":783,"417":2300,"418":384,"419":2500,"420":3700,"421":6000,"422":190,"423":2800,"424":22000,"425":2100,"426":2300,"427":1200,"428":3500,"429":11900,"430":1200,"431":8300,"432":1500,"433":3900,"434":1000,"435":7800,"436":5800,"437":2200,"438":617,"439":1000,"440":1500,"441":3200,"442":2700,"443":170,"444":862,"445":1100,"446":2200,"447":2800,"448":1100,"449":952,"450":2000,"451":1500,"452":698,"453":684,"454":6700,"455":86,"456":1200,"457":1300,"458":1500,"459":621,"460":3800,"461":8800,"462":678,"463":1200,"464":10600,"465":3600,"466":3600,"467":1400,"468":1500,"469":1700,"470":4300,"471":2700,"472":3800,"473":3500,"474":3200,"475":2000,"476":5300,"477":1500,"478":1600,"479":513,"480":1600,"481":3600,"482":4800,"483":4600,"484":10900,"485":3000,"486":2400,"487":4200,"488":6800,"489":5200,"490":501,"491":2400,"492":8300,"493":4500,"494":1100,"495":8900,"496":2700,"497":5700,"498":795,"499":2200,"500":5900,"501":1900,"502":170,"503":6900,"504":2400,"505":1200,"506":1400,"507":1700,"508":1500,"509":8300,"510":2900,"511":6300,"512":2400,"513":2600,"514":4300,"515":3900,"516":2000,"517":2100,"518":1200,"519":1400,"520":10000,"521":4000,"522":3100,"523":7200,"524":637,"525":6000,"526":5900,"527":5900,"528":12000,"529":3800,"530":5100,"531":2700,"532":1900,"533":869,"534":4000,"535":6900,"536":7200,"537":1500,"538":878,"539":6800,"540":3700,"541":2000,"542":6900,"543":722,"544":8500,"545":4400,"546":1900,"547":1800,"548":4600,"549":1900,"550":2100,"551":8500,"552":8200,"553":479,"554":1300,"555":13400,"556":7600,"557":4300,"558":7600,"559":4500,"560":1200,"561":560,"562":398,"563":4800,"564":577,"565":1800,"566":538,"567":719,"568":722,"569":10400,"570":1500,"571":2400,"572":3600,"573":8600,"574":1800,"575":2800,"576":172,"577":5100,"578":2000,"579":1800,"580":1200,"581":3800,"582":3800,"583":1500,"584":1400,"585":361,"586":3500,"587":4700,"588":8400,"589":2000,"590":10100,"591":753,"592":295,"593":3500,"594":3600,"595":5500,"596":441,"597":551,"598":2300,"599":3700,"600":7300,"601":547,"602":3700,"603":2800,"604":5900,"605":1100,"606":2500,"607":608,"608":2600,"609":998,"610":874,"611":229,"612":1600,"613":536,"614":2100,"615":4500,"616":4300,"617":324,"618":1100,"619":1900,"620":1700,"621":1800,"622":3200,"623":176,"624":3300,"625":921,"626":776,"627":4000,"628":2200,"629":1400,"630":882,"631":170,"632":3500,"633":1200,"634":5600,"635":1300,"636":2000,"637":2000,"638":3400,"639":813,"640":1100,"641":1600,"642":7600,"643":2800,"644":3300,"645":4300,"646":1400,"647":3200,"648":975,"649":1300,"650":7600,"651":3700,"652":1100,"653":1300,"654":5400,"655":2900,"656":1100,"657":3200,"658":2900,"659":2300,"660":4300,"661":11100,"662":2400,"663":2700,"664":445,"665":3800,"666":2100,"667":1600,"668":4200,"669":2000,"670":854,"671":11000,"672":11900,"673":3300,"674":1300,"675":1800,"676":2500,"677":6500,"678":819,"679":593,"680":1800,"681":1500,"682":4700,"683":2100,"684":2800,"685":3900,"686":716,"687":575,"688":538,"689":5100,"690":4700,"691":3100,"692":1500,"693":1800,"694":749,"695":6500,"696":1400,"697":726,"698":4800,"699":5400,"700":364,"701":8200,"702":720,"703":1700,"704":1000,"705":6500,"706":928,"707":1800,"708":1700,"709":2700,"710":2300,"711":6700,"712":2400,"713":4600,"714":2600,"715":2600,"716":1000,"717":2500,"718":4400,"719":837,"720":674,"721":2700,"722":4000,"723":6400,"724":1100,"725":591,"726":5400,"727":3100,"728":1500,"729":2100,"730":7000,"731":2000,"732":1700,"733":3000,"734":2500,"735":1500,"736":1700,"737":2700,"738":5900,"739":5900,"740":3300,"741":718,"742":3500,"743":2300,"744":4900,"745":2400,"746":1500,"747":4300,"748":3900,"749":1400,"750":2500,"751":389,"752":319,"753":1900,"754":427,"755":2800,"756":5400,"757":1500,"758":393,"759":958,"760":98,"761":8500,"762":7300,"763":2000,"764":9400,"765":2000,"766":5900,"767":5200,"768":4800,"769":446,"770":8000,"771":823,"772":2100,"773":2300,"774":3500,"775":3800,"776":2700,"777":6100,"778":4100,"779":13100,"780":1900,"781":992,"782":6700,"783":539,"784":2500,"785":616,"786":4300,"787":1000,"788":8800,"789":1600,"790":377,"791":2800,"792":6200,"793":2500,"794":4200,"795":9700,"796":783,"797":1700,"798":2600,"799":1100,"800":359,"801":521,"802":737,"803":3300,"804":4100,"805":3000,"806":3400,"807":921,"808":1800,"809":2200,"810":5000,"811":4700,"812":1600,"813":4700,"814":764,"815":2600,"816":1800,"817":229,"818":751,"819":3800,"820":675,"821":424,"822":4300,"823":1900,"824":377,"825":3800,"826":1500,"827":4800,"828":2200,"829":779,"830":6100,"831":6700,"832":7400,"833":3200,"834":669,"835":2500,"836":452,"837":1300,"838":2400,"839":983,"840":472,"841":5300,"842":748,"843":321,"844":3700,"845":498,"846":2500,"847":706,"848":2600,"849":740,"850":2600,"851":458,"852":6600,"853":5000,"854":158,"855":4500,"856":3300,"857":483,"858":986,"859":1500,"860":2600,"861":1200,"862":2200,"863":1700,"864":4600,"865":441,"866":1500,"867":495,"868":522,"869":3200,"870":2000,"871":1400,"872":2200,"873":692,"874":3500,"875":4300,"876":649,"877":4500,"878":911,"879":717,"880":3300,"881":716,"882":13700,"883":438,"884":1400,"885":3700,"886":676,"887":1600,"888":460,"889":5100,"890":637,"891":657,"892":2100,"893":3600,"894":595,"895":961,"896":553,"897":715,"898":3300,"899":412,"900":813,"901":1300,"902":749,"903":768,"904":408,"905":1800,"906":2300,"907":1700,"908":1500,"909":892,"910":613,"911":2400,"912":1200,"913":3700,"914":1800,"915":767,"916":672,"917":5100,"918":1800,"919":5800,"920":271,"921":692,"922":2300,"923":3200,"924":3300,"925":3300,"926":2800,"927":953,"928":948,"929":541,"930":357,"931":623,"932":2600,"933":822,"934":1200,"935":520,"936":423,"937":4400,"938":691,"939":1400,"940":4600,"941":7000,"942":520,"943":1300,"944":1200,"945":465,"946":4600,"947":1800,"948":1700,"949":996,"950":1800,"951":851,"952":2200,"953":1300,"954":4800,"955":1600,"956":1500,"957":4900,"958":1200,"959":1900,"960":2600,"961":3000,"962":974,"963":1400,"964":1700,"965":2200,"966":2300,"967":4200,"968":2900,"969":1100,"970":4600,"971":2400,"972":1900,"973":1100,"974":347,"975":2600,"976":1200,"977":519,"978":4700,"979":2000,"980":3100,"981":4200,"982":504,"983":1500,"984":2000,"985":412,"986":5100,"987":1300,"988":2400,"989":2800,"990":320,"991":415,"992":2000,"993":5100,"994":819,"995":2800,"996":792,"997":2800,"998":3400,"999":391,"1000":2300,"1001":3400,"1002":482,"1003":2200,"1004":1700,"1005":307,"1006":3200,"1007":3400,"1008":4200,"1009":3300,"1010":3000,"1011":1100,"1012":627,"1013":4000,"1014":1600,"1015":1300,"1016":3800,"1017":1900,"1018":2700,"1019":195,"1020":834,"1021":5000,"1022":1500,"1023":3100,"1024":2000,"1025":2500,"1026":3300,"1027":3000,"1028":379,"1029":2100,"1030":323,"1031":606,"1032":1500,"1033":2900,"1034":1800,"1035":788,"1036":2400,"1037":3500,"1038":2700,"1039":490,"1040":944,"1041":4100,"1042":798,"1043":1400,"1044":1800,"1045":2200,"1046":2200,"1047":924,"1048":912,"1049":1500,"1050":1100,"1051":2100,"1052":422,"1053":831,"1054":1400,"1055":832,"1056":1200,"1057":3400,"1058":3500,"1059":495,"1060":373,"1061":3300,"1062":587,"1063":2000,"1064":2200,"1065":646,"1066":909,"1067":494,"1068":1100,"1069":1600,"1070":1000,"1071":972,"1072":1600,"1073":594,"1074":397,"1075":1000,"1076":1400,"1077":6300,"1078":2200,"1079":2100,"1080":4500,"1081":235,"1082":763,"1083":905,"1084":2200,"1085":635,"1086":4100,"1087":1200,"1088":1000,"1089":1900,"1090":3700,"1091":1800,"1092":417,"1093":5900,"1094":699,"1095":883,"1096":148,"1097":832,"1098":3500,"1099":3300,"1100":1700,"1101":1500,"1102":2300,"1103":2500,"1104":2600,"1105":4200,"1106":286,"1107":5800,"1108":703,"1109":3900,"1110":2100,"1111":2100,"1112":637,"1113":1700,"1114":8000,"1115":2300,"1116":4700,"1117":1900,"1118":1500,"1119":1400,"1120":448,"1121":1500,"1122":1900,"1123":2200,"1124":1800,"1125":4000,"1126":1000,"1127":1500,"1128":2400,"1129":3900,"1130":1300,"1131":1500,"1132":2100,"1133":489,"1134":479,"1135":1500,"1136":2500,"1137":1600,"1138":5500,"1139":878,"1140":3700,"1141":237,"1142":490,"1143":1700,"1144":2300,"1145":829,"1146":389,"1147":2800,"1148":1400,"1149":2100,"1150":1500,"1151":677,"1152":2800,"1153":1000,"1154":2400,"1155":2400,"1156":773,"1157":1600,"1158":566,"1159":1000,"1160":6800,"1161":395,"1162":1100,"1163":824,"1164":3100,"1165":930,"1166":1100,"1167":4300,"1168":1100,"1169":2900,"1170":1000,"1171":3700,"1172":1200,"1173":320,"1174":1900,"1175":652,"1176":662,"1177":662,"1178":2400,"1179":1200,"1180":1800,"1181":3500,"1182":747,"1183":1600,"1184":1600,"1185":566,"1186":378,"1187":3800,"1188":2600,"1189":2300,"1190":1500,"1191":286,"1192":5100,"1193":483,"1194":3700,"1195":781,"1196":2300,"1197":639,"1198":463,"1199":847,"1200":843,"1201":476,"1202":1500,"1203":110,"1204":295,"1205":1400,"1206":2000,"1207":313,"1208":2100,"1209":615,"1210":2200,"1211":1800,"1212":585,"1213":937,"1214":2500,"1215":2400,"1216":737,"1217":548,"1218":505,"1219":81,"1220":465,"1221":371,"1222":1300,"1223":357,"1224":3000,"1225":767,"1226":1800,"1227":6000,"1228":884,"1229":748,"1230":3400,"1231":940,"1232":1200,"1233":909,"1234":3900,"1235":5900,"1236":554,"1237":760,"1238":4900,"1239":656,"1240":816,"1241":2100,"1242":1500,"1243":432,"1244":532,"1245":3700,"1246":5500,"1247":333,"1248":1500,"1249":3000,"1250":1900,"1251":1300,"1252":587,"1253":893,"1254":726,"1255":2100,"1256":760,"1257":1600,"1258":4400,"1259":2100,"1260":673,"1261":3000,"1262":1600,"1263":3200,"1264":1400,"1265":276,"1266":1100,"1267":2100,"1268":2100,"1269":847,"1270":381,"1271":1800,"1272":2400,"1273":1000,"1274":1200,"1275":563,"1276":359,"1277":2800,"1278":3400,"1279":2400,"1280":1200,"1281":499,"1282":718,"1283":2300,"1284":833,"1285":3100,"1286":1200,"1287":3800,"1288":1100,"1289":1400,"1290":722,"1291":1400,"1292":1400,"1293":570,"1294":219,"1295":5400,"1296":847,"1297":1100,"1298":597,"1299":630,"1300":1900,"1301":271,"1302":596,"1303":568,"1304":2900,"1305":216,"1306":770,"1307":291,"1308":374,"1309":324,"1310":509,"1311":306,"1312":722,"1313":610,"1314":2000,"1315":132,"1316":916,"1317":1600,"1318":1300,"1319":1200,"1320":3300,"1321":947,"1322":554,"1323":914,"1324":2500,"1325":1400,"1326":1500,"1327":324,"1328":1400,"1329":334,"1330":835,"1331":404,"1332":4000,"1333":2300,"1334":2500,"1335":543,"1336":1900,"1337":712,"1338":929,"1339":900,"1340":851,"1341":982,"1342":317,"1343":269,"1344":1100,"1345":403,"1346":544,"1347":1100,"1348":1800,"1349":730,"1350":1900,"1351":864,"1352":536,"1353":379,"1354":823,"1355":1600,"1356":734,"1357":2600,"1358":320,"1359":482,"1360":227,"1361":824,"1362":981,"1363":1800,"1364":343,"1365":1100,"1366":829,"1367":1000,"1368":415,"1369":2200,"1370":3800,"1371":1200,"1372":468,"1373":1200,"1374":1200,"1375":786,"1376":180,"1377":2800,"1378":2200,"1379":3200,"1380":610,"1381":513,"1382":4700,"1383":764,"1384":377,"1385":841,"1386":1400,"1387":1100,"1388":512,"1389":365,"1390":531,"1391":778,"1392":985,"1393":1300,"1394":1200,"1395":1500,"1396":2100,"1397":2200,"1398":224,"1399":445,"1400":2200,"1401":587,"1402":616,"1403":711,"1404":522,"1405":2300,"1406":1700,"1407":449,"1408":1100,"1409":1500,"1410":2000,"1411":211,"1412":680,"1413":580,"1414":387,"1415":935,"1416":336,"1417":1500,"1418":1500,"1419":1200,"1420":1200,"1421":405,"1422":605,"1423":1200,"1424":309,"1425":237,"1426":1100,"1427":815,"1428":229,"1429":2100,"1430":2100,"1431":217,"1432":2500,"1433":537,"1434":475,"1435":1300,"1436":1800,"1437":1300,"1438":245,"1439":1500,"1440":241,"1441":492,"1442":3400,"1443":1500,"1444":1500,"1445":479,"1446":428,"1447":2400,"1448":798,"1449":3400,"1450":1700,"1451":481,"1452":970,"1453":598,"1454":379,"1455":3100,"1456":387,"1457":902,"1458":947,"1459":481,"1460":1800,"1461":1100,"1462":218,"1463":794,"1464":323,"1465":388,"1466":521,"1467":443,"1468":163,"1469":570,"1470":245,"1471":493,"1472":1800,"1473":2400,"1474":1800,"1475":708,"1476":705,"1477":627,"1478":247,"1479":1900,"1480":3900,"1481":697,"1482":2900,"1483":519,"1484":391,"1485":1100,"1486":2000,"1487":966,"1488":590,"1489":1000,"1490":1300,"1491":1100,"1492":703,"1493":1400,"1494":1400,"1495":466,"1496":475,"1497":639,"1498":3000,"1499":492,"1500":499,"1501":1300,"1502":955,"1503":455,"1504":1700,"1505":2500,"1506":1900,"1507":1600,"1508":614,"1509":904,"1510":464,"1511":1000,"1512":922,"1513":301,"1514":275,"1515":711,"1516":2900,"1517":489,"1518":487,"1519":1100,"1520":243,"1521":489,"1522":764,"1523":1200,"1524":1300,"1525":1600,"1526":679,"1527":692,"1528":620,"1529":272,"1530":637,"1531":1200,"1532":308,"1533":199,"1534":1100,"1535":1500,"1536":1200,"1537":846,"1538":1200,"1539":59,"1540":424,"1541":1300,"1542":645,"1543":312,"1544":959,"1545":840,"1546":1100,"1547":652,"1548":532,"1549":178,"1550":593,"1551":542,"1552":1700,"1553":742,"1554":249,"1555":618,"1556":909,"1557":919,"1558":662,"1559":125,"1560":832,"1561":540,"1562":681,"1563":372,"1564":1800,"1565":962,"1566":1600,"1567":738,"1568":4300,"1569":3100,"1570":512,"1571":1300,"1572":895,"1573":3100,"1574":385,"1575":966,"1576":2500,"1577":277,"1578":558,"1579":1500,"1580":566,"1581":717,"1582":700,"1583":1800,"1584":1900,"1585":1200,"1586":90,"1587":685,"1588":542,"1589":917,"1590":375,"1591":746,"1592":1900,"1593":559,"1594":1000,"1595":743,"1596":3600,"1597":2400,"1598":389,"1599":976,"1600":2000,"1601":696,"1602":465,"1603":1000,"1604":2000,"1605":601,"1606":523,"1607":509,"1608":1100,"1609":654,"1610":3400,"1611":656,"1612":720,"1613":507,"1614":426,"1615":478,"1616":1400,"1617":1100,"1618":219,"1619":673,"1620":734,"1621":655,"1622":590,"1623":675,"1624":610,"1625":581,"1626":876,"1627":647,"1628":682,"1629":789,"1630":622,"1631":636,"1632":2300,"1633":670,"1634":871,"1635":702,"1636":576,"1637":2800,"1638":571,"1639":374,"1640":925,"1641":1600,"1642":987,"1643":612,"1644":1600,"1645":431,"1646":418,"1647":215,"1648":619,"1649":677,"1650":722,"1651":504,"1652":596,"1653":503,"1654":696,"1655":676,"1656":495,"1657":302,"1658":2400,"1659":627,"1660":2300,"1661":1300,"1662":985,"1663":269,"1664":459,"1665":2200,"1666":1100,"1667":338,"1668":624,"1669":215,"1670":741,"1671":436,"1672":1700,"1673":1300,"1674":622,"1675":455,"1676":267,"1677":528,"1678":550,"1679":2800,"1680":188,"1681":2400,"1682":727,"1683":236,"1684":510,"1685":1700,"1686":542,"1687":1500,"1688":425,"1689":743,"1690":847,"1691":973,"1692":676,"1693":1100,"1694":1000,"1695":877,"1696":518,"1697":668,"1698":779,"1699":1900,"1700":687,"1701":410,"1702":567,"1703":582,"1704":1700,"1705":341,"1706":1200,"1707":611,"1708":437,"1709":1300,"1710":335,"1711":478,"1712":203,"1713":1400,"1714":969,"1715":774,"1716":639,"1717":581,"1718":350,"1719":2600,"1720":1100,"1721":265,"1722":901,"1723":2600,"1724":1900,"1725":407,"1726":688,"1727":547,"1728":633,"1729":616,"1730":442,"1731":496,"1732":589,"1733":800,"1734":456,"1735":1000,"1736":856,"1737":2000,"1738":1400,"1739":471,"1740":632,"1741":568,"1742":700,"1743":1700,"1744":664,"1745":487,"1746":682,"1747":709,"1748":552,"1749":376,"1750":2300,"1751":403,"1752":645,"1753":2300,"1754":1500,"1755":594,"1756":487,"1757":1200,"1758":678,"1759":1700,"1760":2400,"1761":561,"1762":994,"1763":563,"1764":1300,"1765":715,"1766":2000,"1767":1500,"1768":1200,"1769":448,"1770":953,"1771":584,"1772":740,"1773":506,"1774":773,"1775":348,"1776":618,"1777":2800,"1778":570,"1779":1900,"1780":3000,"1781":1500,"1782":1400,"1783":548,"1784":643,"1785":270,"1786":816,"1787":489,"1788":798,"1789":1700,"1790":2600,"1791":798,"1792":890,"1793":258,"1794":514,"1795":578,"1796":402,"1797":914,"1798":514,"1799":1100,"1800":1100,"1801":1700,"1802":1000,"1803":633,"1804":2300,"1805":685,"1806":364,"1807":408,"1808":537,"1809":586,"1810":456,"1811":486,"1812":486,"1813":277,"1814":1400,"1815":654,"1816":909,"1817":297,"1818":2400,"1819":393,"1820":1000,"1821":632,"1822":261,"1823":3200,"1824":477,"1825":445,"1826":2400,"1827":428,"1828":400,"1829":299,"1830":573,"1831":667,"1832":337,"1833":275,"1834":527,"1835":858,"1836":564,"1837":1400,"1838":1900,"1839":470,"1840":376,"1841":1700,"1842":715,"1843":632,"1844":362,"1845":646,"1846":465,"1847":409,"1848":449,"1849":2200,"1850":349,"1851":229,"1852":1200,"1853":505,"1854":1300,"1855":1100,"1856":2100,"1857":582,"1858":366,"1859":1000,"1860":429,"1861":400,"1862":406,"1863":719,"1864":230,"1865":641,"1866":468,"1867":291,"1868":478,"1869":519,"1870":392,"1871":336,"1872":357,"1873":283,"1874":332,"1875":482,"1876":421,"1877":347,"1878":719,"1879":914,"1880":437,"1881":518,"1882":475,"1883":374,"1884":367,"1885":199,"1886":318,"1887":364,"1888":465,"1889":922,"1890":391,"1891":570,"1892":114,"1893":706,"1894":464,"1895":864,"1896":435,"1897":1100,"1898":414,"1899":2800,"1900":249,"1901":404,"1902":671,"1903":251,"1904":435,"1905":266,"1906":244,"1907":2000,"1908":377,"1909":494,"1910":340,"1911":555,"1912":595,"1913":381,"1914":451,"1915":927,"1916":381,"1917":356,"1918":814,"1919":371,"1920":380,"1921":232,"1922":245,"1923":355,"1924":177,"1925":335,"1926":539,"1927":463,"1928":190,"1929":1100,"1930":542,"1931":564,"1932":549,"1933":376,"1934":292,"1935":315,"1936":299,"1937":1000,"1938":560,"1939":306,"1940":471,"1941":345,"1942":290,"1943":504,"1944":425,"1945":306,"1946":444,"1947":366,"1948":600,"1949":326,"1950":398,"1951":1200,"1952":283,"1953":732,"1954":448,"1955":299,"1956":518,"1957":365,"1958":1600,"1959":629,"1960":242,"1961":741,"1962":381,"1963":265,"1964":509,"1965":1300,"1966":599,"1967":435,"1968":616,"1969":101,"1970":345,"1971":606,"1972":400,"1973":682,"1974":117,"1975":310,"1976":648,"1977":752,"1978":492,"1979":170,"1980":299,"1981":591,"1982":814,"1983":459,"1984":236,"1985":547,"1986":481,"1987":248,"1988":64,"1989":233,"1990":498,"1991":633,"1992":387,"1993":379,"1994":485,"1995":441,"1996":541,"1997":276,"1998":436,"1999":624,"2000":193,"2001":746,"2002":491,"2003":1300,"2004":335,"2005":325,"2006":346,"2007":606,"2008":724,"2009":360,"2010":392,"2011":318,"2012":247,"2013":272,"2014":437,"2015":681,"2016":139,"2017":244,"2018":233,"2019":926,"2020":356,"2021":481,"2022":692,"2023":322,"2024":680,"2025":182,"2026":997,"2027":2500,"2028":362,"2029":319,"2030":128,"2031":539,"2032":587,"2033":243,"2034":332,"2035":208,"2036":699,"2037":529,"2038":199,"2039":176,"2040":277,"2041":177,"2042":165,"2043":115,"2044":179,"2045":233,"2046":287,"2047":488,"2048":208,"2049":350,"2050":288,"2051":336,"2052":284,"2053":287,"2054":560,"2055":362,"2056":310,"2057":361,"2058":344,"2059":209,"2060":289,"2061":442,"2062":1100,"2063":296,"2064":369,"2065":710,"2066":216,"2067":197,"2068":362,"2069":229,"2070":362,"2071":431,"2072":595,"2073":281,"2074":617,"2075":338,"2076":563,"2077":277,"2078":1000,"2079":483,"2080":404,"2081":314,"2082":469,"2083":403,"2084":390,"2085":505,"2086":569,"2087":327,"2088":334,"2089":256,"2090":996,"2091":520,"2092":233,"2093":435,"2094":499,"2095":1600,"2096":307,"2097":382,"2098":1200,"2099":680,"2100":328,"2101":616,"2102":323,"2103":499,"2104":354,"2105":322,"2106":332,"2107":669,"2108":684,"2109":244,"2110":296,"2111":526,"2112":295,"2113":185,"2114":257,"2115":278,"2116":337,"2117":258,"2118":499,"2119":308,"2120":279,"2121":819,"2122":511,"2123":166,"2124":221,"2125":375,"2126":268,"2127":170,"2128":274,"2129":213,"2130":773,"2131":296,"2132":411,"2133":253,"2134":177,"2135":1400,"2136":225,"2137":191,"2138":168,"2139":280,"2140":372,"2141":323,"2142":198,"2143":100,"2144":85,"2145":86,"2146":76,"2147":92,"2148":68,"2149":69,"2150":57,"2151":62,"2152":61,"2153":64,"2154":92,"2155":77,"2156":73,"2157":224,"2158":259,"2159":183,"2160":157,"2161":186,"2162":195,"2163":150,"2164":142,"2165":184,"2166":264,"2167":223,"2168":161,"2169":372,"2170":123,"2171":151,"2172":142,"2173":230,"2174":144,"2175":323,"2176":200,"2177":144,"2178":156,"2179":324,"2180":199,"2181":107,"2182":92,"2183":169,"2184":96,"2185":150,"2186":193,"2187":184,"2188":184,"2189":300,"2190":196,"2191":206,"2192":236,"2193":355,"2194":228,"2195":260,"2196":173,"2197":175,"2198":144,"2199":268,"2200":183,"2201":163,"2202":364,"2203":206,"2204":118,"2205":225,"2206":169,"2207":1100,"2208":163,"2209":142,"2210":114,"2211":1200,"2212":246,"2213":211,"2214":837,"2215":228,"2216":154,"2217":789,"2218":204,"2219":180,"2220":140,"2221":870,"2222":100,"2223":108,"2224":181,"2225":256,"2226":88,"2227":586,"2228":254,"2229":107,"2230":107,"2231":158,"2232":289,"2233":136,"2234":651,"2235":159,"2236":297,"2237":168,"2238":96,"2239":126,"2240":167,"2241":117,"2242":163,"2243":157,"2244":740,"2245":82,"2246":118,"2247":92,"2248":91,"2249":98,"2250":85,"2251":353,"2252":98,"2253":115,"2254":144,"2255":77,"2256":114,"2257":97,"2258":212,"2259":79,"2260":135,"2261":160,"2262":152,"2263":113,"2264":704,"2265":88,"2266":114,"2267":104,"2268":174,"2269":75,"2270":91,"2271":89,"2272":197,"2273":646,"2274":83,"2275":133,"2276":91,"2277":134,"2278":139,"2279":103,"2280":112,"2281":162,"2282":136,"2283":91,"2284":114,"2285":206,"2286":53,"2287":174,"2288":161,"2289":226,"2290":139,"2291":88,"2292":78,"2293":197,"2294":128,"2295":130,"2296":137,"2297":209,"2298":167,"2299":118,"2300":148,"2301":137,"2302":189,"2303":605,"2304":92,"2305":166,"2306":210,"2307":95,"2308":105,"2309":218,"2310":116,"2311":133,"2312":150,"2313":222,"2314":239,"2315":70,"2316":106,"2317":113,"2318":62,"2319":131,"2320":155,"2321":206,"2322":146,"2323":106,"2324":114,"2325":174,"2326":120,"2327":71,"2328":148,"2329":135,"2330":56,"2331":131,"2332":228,"2333":106,"2334":100,"2335":190,"2336":182,"2337":142,"2338":100,"2339":122,"2340":109,"2341":105,"2342":106,"2343":115,"2344":219,"2345":114,"2346":112,"2347":203,"2348":196,"2349":90,"2350":116,"2351":136,"2352":113,"2353":138,"2354":99,"2355":165,"2356":115,"2357":114,"2358":167,"2359":234,"2360":115,"2361":144,"2362":146,"2363":118,"2364":98,"2365":116,"2366":106,"2367":163,"2368":68,"2369":134,"2370":183,"2371":88,"2372":99,"2373":143,"2374":142,"2375":88,"2376":156,"2377":135,"2378":147,"2379":78,"2380":606,"2381":164,"2382":101,"2383":24,"2384":86,"2385":205,"2386":86,"2387":131,"2388":157,"2389":201,"2390":108,"2391":170,"2392":233,"2393":98,"2394":72,"2395":60,"2396":117,"2397":89,"2398":81,"2399":106,"2400":154,"2401":53,"2402":112,"2403":148,"2404":123,"2405":81,"2406":73,"2407":114,"2408":94,"2409":47,"2410":95,"2411":139,"2412":86,"2413":113,"2414":96,"2415":138,"2416":142,"2417":68,"2418":67,"2419":67,"2420":80,"2421":140,"2422":88,"2423":86,"2424":195,"2425":90,"2426":79},"comments":{}}